<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title><![CDATA[Example.com - internet]]></title>
<description><![CDATA[Example.com - internet]]></description>
<link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI//tag-internet.html</link>
<lastBuildDate>Tue, 18 Mar 2025 21:04:11 +0100</lastBuildDate>
<item>
  <title><![CDATA[Configuración Mínima de Seguridad con Scripts Bash y Python]]></title>
  <description><![CDATA[
<p>
Por Qwen AI
</p>
<div id="outline-container-orgdba67ba" class="outline-2">
<h2 id="orgdba67ba"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
Este documento describe cómo configurar una seguridad mínima en un sistema Linux utilizando scripts escritos en <b><b>Bash</b></b> y <b><b>Python</b></b>. Las medidas incluyen:
</p>
<ul class="org-ul">
<li>Configuración básica de un <b><b>firewall</b></b> con IPTables.</li>
<li>Bloqueo de IPs sospechosas (anti-botnet).</li>
<li>Protección contra escaneos de puertos.</li>
<li>Configuración de políticas de red seguras.</li>
</ul>
</div>
</div>
<div id="outline-container-org4f45fda" class="outline-2">
<h2 id="org4f45fda"><span class="section-number-2">2.</span> Configuración Básica del Firewall con IPTables (Bash)</h2>
<div class="outline-text-2" id="text-2">
<p>
El siguiente script configura un firewall básico utilizando IPTables para permitir solo el tráfico necesario.
</p>

<p>
<b><b>Script Bash:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Limpiar todas las reglas existentes</span>
iptables -F
iptables -X

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Pol&#237;tica por defecto: Denegar todo el tr&#225;fico entrante y saliente</span>
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Permitir tr&#225;fico local (loopback)</span>
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Permitir conexiones establecidas o relacionadas</span>
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Permitir SSH (puerto 22) desde una IP espec&#237;fica (opcional)</span>
<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Reemplaza "TU_IP" con tu direcci&#243;n IP p&#250;blica</span>
iptables -A INPUT -p tcp --dport 22 -s TU_IP -j ACCEPT

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Permitir HTTP (puerto 80) y HTTPS (puerto 443)</span>
iptables -A INPUT -p tcp --dport 80 -j ACCEPT
iptables -A INPUT -p tcp --dport 443 -j ACCEPT

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Registrar intentos de acceso no autorizados</span>
iptables -A INPUT -j LOG --log-prefix <span style="color: #005F00;">"IPTables-Dropped: "</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Guardar las reglas de IPTables</span>
iptables-save &gt; /etc/iptables/rules.v4
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>Asegúrate de tener permisos de superusuario (`sudo`) para ejecutar este script.</li>
<li>Si bloqueas accidentalmente el acceso SSH, puedes perder el control remoto del servidor.</li>
</ul>
</div>
</div>
<div id="outline-container-org414e930" class="outline-2">
<h2 id="org414e930"><span class="section-number-2">3.</span> Bloqueo de IPs Sospechosas (Anti-Botnet)</h2>
<div class="outline-text-2" id="text-3">
<p>
El siguiente script bloquea IPs sospechosas utilizando una lista negra predefinida.
</p>

<p>
<b><b>Script Bash:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Descargar una lista negra de IPs conocidas (por ejemplo, Emerging Threats)</span>
wget -q https://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt -O /tmp/blocked_ips.txt

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Leer el archivo y bloquear cada IP</span>
<span style="color: #D70000;">while </span><span style="color: #1F55A0;">read</span> -r ip; <span style="color: #D70000;">do</span>
    <span style="color: #D70000;">if</span> [[ $<span style="color: #004651;">ip</span> =~ ^[0-9]+<span style="color: #005F00;">\.</span>[0-9]+<span style="color: #005F00;">\.</span>[0-9]+<span style="color: #005F00;">\.</span>[0-9]+$ ]]; <span style="color: #D70000;">then</span>
        iptables -A INPUT -s <span style="color: #005F00;">"$ip"</span> -j DROP
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Bloqueada IP: $ip"</span>
    <span style="color: #D70000;">fi</span>
<span style="color: #D70000;">done</span> &lt; /tmp/blocked_ips.txt

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Guardar las reglas de IPTables</span>
iptables-save &gt; /etc/iptables/rules.v4
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>La lista negra puede actualizarse periódicamente para mantenerse al día con nuevas amenazas.</li>
<li>Puedes personalizar la fuente de la lista negra según tus necesidades.</li>
</ul>
</div>
</div>
<div id="outline-container-org9ef1ace" class="outline-2">
<h2 id="org9ef1ace"><span class="section-number-2">4.</span> Protección Contra Escaneos de Puertos (Python)</h2>
<div class="outline-text-2" id="text-4">
<p>
El siguiente script utiliza Python para monitorear intentos de escaneo de puertos y bloquear IPs sospechosas.
</p>

<p>
<b><b>Script Python:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-python"><span style="color: #D70000;">import</span> os
<span style="color: #D70000;">import</span> time
<span style="color: #D70000;">from</span> collections <span style="color: #D70000;">import</span> defaultdict

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Diccionario para rastrear intentos de conexi&#243;n por IP</span>
<span style="color: #004651;">connection_attempts</span> = defaultdict(<span style="color: #1F55A0;">int</span>)

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Umbral de intentos sospechosos</span>
<span style="color: #004651;">THRESHOLD</span> = 5
<span style="color: #004651;">BLOCK_TIME</span> = 60  <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Tiempo en segundos para bloquear una IP</span>

<span style="color: #D70000;">def</span> <span style="color: #AF8700;">block_ip</span>(ip):
    <span style="color: #004700; font-style: italic;">"""Bloquea una IP usando IPTables."""</span>
    os.system(f<span style="color: #005F00;">"iptables -A INPUT -s </span>{ip}<span style="color: #005F00;"> -j DROP"</span>)
    <span style="color: #1F55A0;">print</span>(f<span style="color: #005F00;">"Bloqueada IP sospechosa: </span>{ip}<span style="color: #005F00;">"</span>)

<span style="color: #D70000;">def</span> <span style="color: #AF8700;">monitor_logs</span>():
    <span style="color: #004700; font-style: italic;">"""Monitorea los logs del sistema en busca de intentos de conexi&#243;n."""</span>
    <span style="color: #D70000;">with</span> <span style="color: #1F55A0;">open</span>(<span style="color: #005F00;">"/var/log/auth.log"</span>, <span style="color: #005F00;">"r"</span>) <span style="color: #D70000;">as</span> log_file:
        log_file.seek(0, 2)  <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Ir al final del archivo</span>
        <span style="color: #D70000;">while</span> <span style="color: #AF005F;">True</span>:
            <span style="color: #004651;">line</span> = log_file.readline()
            <span style="color: #D70000;">if</span> <span style="color: #005F00;">"Failed password"</span> <span style="color: #D70000;">in</span> line:
                <span style="color: #004651;">ip</span> = line.split(<span style="color: #005F00;">"from "</span>)[1].split(<span style="color: #005F00;">" port"</span>)[0]
                <span style="color: #004651;">connection_attempts</span>[ip] += 1
                <span style="color: #1F55A0;">print</span>(f<span style="color: #005F00;">"Intento de conexi&#243;n desde: </span>{ip}<span style="color: #005F00;"> (</span>{connection_attempts[ip]}<span style="color: #005F00;"> intentos)"</span>)

                <span style="color: #D70000;">if</span> connection_attempts[ip] &gt;= THRESHOLD:
                    block_ip(ip)
                    time.sleep(BLOCK_TIME)
                    <span style="color: #004651;">connection_attempts</span>[ip] = 0  <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Reiniciar contador</span>
            time.sleep(1)

<span style="color: #D70000;">if</span> <span style="color: #1F55A0;">__name__</span> == <span style="color: #005F00;">"__main__"</span>:
    monitor_logs()
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>Este script requiere acceso a los logs del sistema (`/var/log/auth.log`).</li>
<li>Asegúrate de tener instalado Python y permisos de superusuario.</li>
</ul>
</div>
</div>
<div id="outline-container-org4778546" class="outline-2">
<h2 id="org4778546"><span class="section-number-2">5.</span> Configuración de Políticas de Red Seguras (Bash)</h2>
<div class="outline-text-2" id="text-5">
<p>
El siguiente script configura políticas adicionales para mejorar la seguridad de la red.
</p>

<p>
<b><b>Script Bash:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Deshabilitar el redireccionamiento IP</span>
<span style="color: #1F55A0;">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/all/send_redirects
<span style="color: #1F55A0;">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Habilitar protecci&#243;n contra SYN Flood</span>
<span style="color: #1F55A0;">echo</span> 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Deshabilitar el reenv&#237;o de paquetes IPv4</span>
<span style="color: #1F55A0;">echo</span> 0 &gt; /proc/sys/net/ipv4/ip_forward

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Habilitar protecci&#243;n contra IP Spoofing</span>
<span style="color: #D70000;">for</span> interface<span style="color: #D70000;"> in</span> $(<span style="color: #1F55A0; font-weight: bold;">ls /sys/class/net | grep -v lo</span>); <span style="color: #D70000;">do</span>
    <span style="color: #1F55A0;">echo</span> 1 &gt; /proc/sys/net/ipv4/conf/$<span style="color: #004651;">interface</span>/rp_filter
<span style="color: #D70000;">done</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Guardar cambios en sysctl.conf</span>
cat &lt;&lt;EOF &gt;&gt; /etc/sysctl.conf
<span style="color: #005F00;">net.ipv4.conf.all.send_redirects = 0</span>
<span style="color: #005F00;">net.ipv4.conf.default.send_redirects = 0</span>
<span style="color: #005F00;">net.ipv4.tcp_syncookies = 1</span>
<span style="color: #005F00;">net.ipv4.ip_forward = 0</span>
<span style="color: #005F00;">EOF</span>

sysctl -p
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>Estas configuraciones mejoran la seguridad del sistema contra ataques comunes.</li>
<li>Asegúrate de probar los cambios en un entorno seguro antes de aplicarlos en producción.</li>
</ul>
</div>
</div>
<div id="outline-container-org2b7936c" class="outline-2">
<h2 id="org2b7936c"><span class="section-number-2">6.</span> Conclusión</h2>
<div class="outline-text-2" id="text-6">
<p>
Este documento proporciona scripts básicos en Bash y Python para configurar una seguridad mínima en sistemas Linux. Recuerda que estas medidas son solo un punto de partida y deben complementarse con auditorías regulares, actualizaciones de software y mejores prácticas de seguridad.
</p>

<p>
Para más información, consulta la documentación oficial de IPTables y las recomendaciones de seguridad para tu distribución de Linux.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-python.html">python</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-internet.html">internet</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[python]]></category>
  <category><![CDATA[internet]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-configuraci%C3%B3n-m%C3%ADnima-de-seguridad-con-scripts-bash-y-python.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-configuraci%C3%B3n-m%C3%ADnima-de-seguridad-con-scripts-bash-y-python.html</guid>
  <pubDate>Tue, 18 Mar 2025 16:25:00 +0100</pubDate>
</item>
</channel>
</rss>
