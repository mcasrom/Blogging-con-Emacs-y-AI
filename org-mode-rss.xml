<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title><![CDATA[Example.com - org-mode]]></title>
<description><![CDATA[Example.com - org-mode]]></description>
<link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI//tag-org-mode.html</link>
<lastBuildDate>Mon, 14 Apr 2025 07:56:41 +0200</lastBuildDate>
<item>
  <title><![CDATA[Tutorial Emacs: Cómo Configurar use-package para Gestionar Paquetes como un Profesional]]></title>
  <description><![CDATA[
<div id="outline-container-orgb6ba867" class="outline-2">
<h2 id="orgb6ba867">Introducción a use-package: Tu Mejor Amigo en Emacs</h2>
<div class="outline-text-2" id="text-orgb6ba867">
<p>
Si estás empezando con Emacs, probablemente te has dado cuenta de que es un editor <b>increíblemente</b> personalizable, pero también puede ser abrumador. Una de las primeras cosas que querrás dominar es cómo instalar y configurar paquetes (extensiones que añaden funcionalidades). Aquí es donde entra <b><b>use-package</b></b>, una herramienta poderosa que simplifica la gestión de paquetes, organiza tu configuración y hace que Emacs sea más rápido y eficiente.
</p>

<p>
En este tutorial, te guiaré paso a paso para:
</p>

<ul class="org-ul">
<li>Entender qué es `use-package` y por qué es útil.</li>
<li>Configurar `use-package` en tu archivo de configuración de Emacs (<code>init.el</code> o <code>early-init.el</code>).</li>
<li>Instalar paquetes populares con ejemplos prácticos.</li>
<li>Personalizar configuraciones con opciones avanzadas de `use-package`.</li>
<li>Evitar errores comunes para principiantes.</li>
</ul>

<p>
No necesitas ser un experto en Emacs ni saber programar en Lisp. Este tutorial está diseñado para principiantes, con explicaciones claras y ejemplos que puedes copiar y pegar. ¡Vamos a convertir tu Emacs en una máquina bien organizada!
</p>
</div>
</div>
<div id="outline-container-orgac0a603" class="outline-2">
<h2 id="orgac0a603">¿Qué es use-package?</h2>
<div class="outline-text-2" id="text-orgac0a603">
<p>
<b><b>use-package</b></b> es una macro (una especie de atajo en Emacs Lisp) que te permite instalar, configurar y gestionar paquetes de manera sencilla. En lugar de escribir largas líneas de código para cargar paquetes, `use-package` te ofrece una sintaxis clara y estructurada. Sus principales ventajas son:
</p>

<ul class="org-ul">
<li><b><b>Organización</b></b>: Agrupa toda la configuración de un paquete en un solo bloque.</li>
<li><b><b>Carga diferida</b></b>: Solo carga paquetes cuando los necesitas, haciendo que Emacs inicie más rápido.</li>
<li><b><b>Instalación automática</b></b>: Descarga e instala paquetes si no están presentes.</li>
<li><b><b>Flexibilidad</b></b>: Permite personalizar teclas, ajustes y comportamientos fácilmente.</li>
</ul>

<p>
Por ejemplo, sin `use-package`, instalar y configurar el paquete <code>ivy</code> (un sistema de autocompletado) podría requerir varias líneas de código dispersas. Con `use-package`, todo queda limpio y en un solo lugar.
</p>
</div>
</div>
<div id="outline-container-org18c6d6f" class="outline-2">
<h2 id="org18c6d6f">Prerrequisitos</h2>
<div class="outline-text-2" id="text-org18c6d6f">
<p>
Antes de empezar, asegúrate de tener lo siguiente:
</p>

<ol class="org-ol">
<li><b><b>Emacs instalado</b></b>: Este tutorial asume que tienes Emacs 26.1 o superior (puedes verificarlo con <code>M-x emacs-version</code>).</li>
<li><b><b>Acceso al archivo de configuración</b></b>: Normalmente es <code>~/.emacs.d/init.el</code> o <code>~/.config/emacs/init.el</code>. Si no existe, lo crearemos.</li>
<li><b><b>Conexión a internet</b></b>: Necesaria para descargar paquetes.</li>
<li><b><b>Conocimiento básico de Emacs</b></b>: Saber cómo abrir Emacs, guardar archivos (<code>C-x C-s</code>) y evaluar código (<code>M-x eval-buffer</code>) es suficiente.</li>
</ol>

<p>
Si no estás familiarizado con estos conceptos, no te preocupes: explicaré cada paso con detalle.
</p>
</div>
</div>
<div id="outline-container-orgcaeb76f" class="outline-2">
<h2 id="orgcaeb76f">Paso 1: Configurar el Sistema de Paquetes de Emacs</h2>
<div class="outline-text-2" id="text-orgcaeb76f">
<p>
Emacs usa repositorios de paquetes como MELPA, ELPA y Org para descargar extensiones. Antes de usar `use-package`, debemos asegurarnos de que Emacs pueda acceder a estos repositorios.
</p>

<p>
Abre tu archivo de configuración (<code>init.el</code>). Puedes hacerlo con:
</p>

<div class="org-src-container">
<pre class="src src-sh">emacs ~/.emacs.d/init.el
</pre>
</div>

<p>
Añade el siguiente código al principio de tu <code>init.el</code> para configurar los repositorios de paquetes:
</p>

<div class="org-src-container">
<pre class="src src-elisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configurar repositorios de paquetes</span>
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">package</span>)
(add-to-list 'package-archives '(<span style="color: #a44185;">"melpa"</span> . <span style="color: #a44185;">"https://melpa.org/packages/"</span>) t)
(add-to-list 'package-archives '(<span style="color: #a44185;">"org"</span> . <span style="color: #a44185;">"https://orgmode.org/elpa/"</span>) t)
(package-initialize)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Refrescar la lista de paquetes (solo necesario la primera vez)</span>
(<span style="color: #219fd5; font-style: italic;">unless</span> package-archive-contents
  (package-refresh-contents))
</pre>
</div>

<p>
<b><b>Explicación</b></b>:
</p>
<ul class="org-ul">
<li><code>require 'package</code>: Carga el sistema de paquetes de Emacs.</li>
<li><code>add-to-list 'package-archives</code>: Añade MELPA y Org como fuentes de paquetes. MELPA tiene miles de paquetes modernos.</li>
<li><code>package-initialize</code>: Inicia el sistema de paquetes.</li>
<li><code>package-refresh-contents</code>: Descarga la lista de paquetes disponibles si es la primera vez.</li>
</ul>

<p>
Guarda el archivo (<code>C-x C-s</code>) y evalúa el código con <code>M-x eval-buffer</code> (o reinicia Emacs). Esto prepara el terreno para instalar `use-package`.
</p>
</div>
</div>
<div id="outline-container-org8300882" class="outline-2">
<h2 id="org8300882">Paso 2: Instalar use-package</h2>
<div class="outline-text-2" id="text-org8300882">
<p>
Aunque `use-package` es una herramienta poderosa, no viene incluida en Emacs por defecto. Vamos a instalarla automáticamente.
</p>

<p>
Añade este código justo después del bloque anterior en tu <code>init.el</code>:
</p>

<div class="org-src-container">
<pre class="src src-elisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Instalar use-package si no est&#225; presente</span>
(<span style="color: #219fd5; font-style: italic;">unless</span> (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Cargar use-package</span>
(<span style="color: #219fd5; font-style: italic;">eval-when-compile</span>
  (<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">use-package</span>))
</pre>
</div>

<p>
<b><b>Explicación</b></b>:
</p>
<ul class="org-ul">
<li><code>package-installed-p</code>: Verifica si `use-package` ya está instalado.</li>
<li><code>package-install</code>: Lo instala desde MELPA si no está presente.</li>
<li><code>eval-when-compile</code>: Optimiza la carga de `use-package` para que sea eficiente.</li>
</ul>

<p>
Guarda el archivo y evalúa con <code>M-x eval-buffer</code>. Ahora tienes `use-package` listo para usar.
</p>
</div>
</div>
<div id="outline-container-orgb34f685" class="outline-2">
<h2 id="orgb34f685">Paso 3: Usar use-package para Instalar un Paquete</h2>
<div class="outline-text-2" id="text-orgb34f685">
<p>
Para probar `use-package`, vamos a instalar y configurar <b><b>ivy</b></b>, un paquete popular que mejora el autocompletado en Emacs. Añade este bloque a tu <code>init.el</code>:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">ivy</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:demand</span> t
  <span style="color: #dc3eb7;">:config</span>
  (ivy-mode 1)
  (<span style="color: #219fd5; font-style: italic;">setq</span> ivy-use-virtual-buffers t)
  (<span style="color: #219fd5; font-style: italic;">setq</span> enable-recursive-minibuffers t))
</pre>
</div>

<p>
<b><b>Explicación del bloque</b></b>:
</p>
<ul class="org-ul">
<li><code>use-package ivy</code>: Indica que vamos a configurar el paquete <code>ivy</code>.</li>
<li><code>:ensure t</code>: Descarga e instala <code>ivy</code> automáticamente si no está presente.</li>
<li><code>:demand t</code>: Fuerza la carga de <code>ivy</code> al iniciar Emacs (normalmente, `use-package` intenta cargar paquetes solo cuando se necesitan).</li>
<li><code>:config</code>: Contiene comandos que se ejecutan <b>después</b> de cargar el paquete.</li>
<li><code>ivy-mode 1</code>: Activa el modo Ivy para autocompletado.</li>
<li><code>setq</code>: Configura opciones de Ivy, como mostrar buffers recientes y permitir minibuffers anidados.</li>
</ul>

<p>
Guarda el archivo (<code>C-x C-s</code>) y evalúa con <code>M-x eval-buffer</code>. Ahora, cuando uses comandos como <code>M-x</code> o <code>C-x C-f</code>, notarás que el autocompletado es más rápido y visual gracias a Ivy.
</p>
</div>
</div>
<div id="outline-container-org01b79e6" class="outline-2">
<h2 id="org01b79e6">Paso 4: Ejemplo Práctico – Configurar Magit con use-package</h2>
<div class="outline-text-2" id="text-org01b79e6">
<p>
Vamos a configurar otro paquete útil: <b><b>Magit</b></b>, una interfaz para Git dentro de Emacs. Este ejemplo incluye teclas personalizadas y carga diferida para optimizar el inicio.
</p>

<p>
Añade este bloque a tu <code>init.el</code>:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">magit</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:bind</span> ((<span style="color: #a44185;">"C-x g"</span> . magit-status))
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> magit-display-buffer-function #'magit-display-buffer-fullframe-status-v1))
</pre>
</div>

<p>
<b><b>Explicación</b></b>:
</p>
<ul class="org-ul">
<li><code>:ensure t</code>: Instala <code>magit</code> si no está presente.</li>
<li><code>:bind</code>: Asigna la tecla <code>C-x g</code> para abrir <code>magit-status</code>, la ventana principal de Magit.</li>
<li><code>:config</code>: Personaliza cómo se muestran las ventanas de Magit (en este caso, ocupando toda la pantalla).</li>
<li><b>Carga diferida</b>: Por defecto, `use-package` no carga Magit hasta que uses <code>C-x g</code>, lo que acelera el inicio de Emacs.</li>
</ul>

<p>
Guarda, evalúa (<code>M-x eval-buffer</code>) y prueba presionando <code>C-x g</code> en un proyecto con Git. Verás una interfaz limpia para gestionar commits, ramas y más.
</p>
</div>
</div>
<div id="outline-container-org4bc1bbf" class="outline-2">
<h2 id="org4bc1bbf">Paso 5: Personalización Avanzada con use-package</h2>
<div class="outline-text-2" id="text-org4bc1bbf">
<p>
Ahora que entiendes lo básico, exploremos opciones avanzadas de `use-package` para hacer tu configuración más poderosa.
</p>

<p>
<b><b>Carga condicional</b></b>:
Supongamos que quieres cargar el paquete <code>org</code> (para Org-mode) solo si estás editando un archivo `.org`. Usa esto:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:mode</span> (<span style="color: #a44185;">"\\.org\\'"</span> . org-mode)
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-startup-folded t)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-hide-emphasis-markers t))
</pre>
</div>

<ul class="org-ul">
<li><code>:mode</code>: Activa <code>org-mode</code> automáticamente para archivos con extensión `.org`.</li>
<li><code>:config</code>: Personaliza Org-mode (por ejemplo, oculta marcadores de formato como * o /).</li>
</ul>

<p>
<b><b>Atajos globales</b></b>:
Para añadir teclas globales, usa <code>:bind</code> en un bloque vacío:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">general</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (global-set-key (kbd <span style="color: #a44185;">"C-c t"</span>) 'org-todo))
</pre>
</div>

<p>
<b><b>Carga diferida con comandos</b></b>:
Para paquetes que solo usas ocasionalmente, como <code>helm</code>, configura la carga al invocar un comando:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">helm</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:commands</span> helm-M-x
  <span style="color: #dc3eb7;">:bind</span> ((<span style="color: #a44185;">"M-x"</span> . helm-M-x)))
</pre>
</div>

<ul class="org-ul">
<li><code>:commands</code>: Solo carga <code>helm</code> cuando ejecutas <code>helm-M-x</code>.</li>
<li><code>:bind</code>: Reemplaza el <code>M-x</code> estándar con la versión de Helm.</li>
</ul>
</div>
</div>
<div id="outline-container-org0421550" class="outline-2">
<h2 id="org0421550">Consejos para Mantener tu Configuración Limpia</h2>
<div class="outline-text-2" id="text-org0421550">
<ol class="org-ol">
<li><p>
<b><b>Organiza tu init.el</b></b>:
Divide tu archivo en secciones con comentarios:
</p>

<div class="org-src-container">
<pre class="src src-elisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Paquetes de interfaz</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">ivy</span> ...)
<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Paquetes de productividad</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org</span> ...)
</pre>
</div></li>

<li><p>
<b><b>Usa :diminish o :delight</b></b>:
Algunos paquetes llenan la barra de modos. Oculta sus nombres:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">diminish</span>
  <span style="color: #dc3eb7;">:ensure</span> t)
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">ivy</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:diminish</span> ivy-mode)
</pre>
</div></li>

<li><b><b>Prueba tu configuración</b></b>:
Evalúa bloques individuales con <code>C-c C-c</code> (en Org-mode) o <code>M-x eval-region</code> para evitar errores.</li>

<li><b><b>Haz respaldo</b></b>:
Guarda tu <code>init.el</code> en un repositorio Git para no perder tu configuración.</li>
</ol>
</div>
</div>
<div id="outline-container-org3efc4b1" class="outline-2">
<h2 id="org3efc4b1">Errores Comunes y Cómo Solucionarlos</h2>
<div class="outline-text-2" id="text-org3efc4b1">
<ul class="org-ul">
<li><b><b>"Paquete no encontrado"</b></b>:
Asegúrate de que <code>package-refresh-contents</code> se ejecute al menos una vez (<code>M-x package-refresh-contents</code>).</li>
<li><b><b>Emacs inicia lento</b></b>:
Usa <code>:defer t</code> o <code>:commands</code> en paquetes pesados para retrasar su carga.</li>
<li><b><b>Configuraciones no aplicadas</b></b>:
Verifica que estás guardando (<code>C-x C-s</code>) y evaluando (<code>M-x eval-buffer</code>) tu <code>init.el</code>.</li>
<li><b><b>Errores de sintaxis</b></b>:
Usa <code>M-x check-parens</code> para encontrar paréntesis desbalanceados en tu código.</li>
</ul>
</div>
</div>
<div id="outline-container-orge9202f2" class="outline-2">
<h2 id="orge9202f2">Conclusión</h2>
<div class="outline-text-2" id="text-orge9202f2">
<p>
¡Felicidades! Ahora sabes cómo configurar `use-package` para gestionar paquetes en Emacs como un profesional. Hemos cubierto desde la instalación básica hasta ejemplos prácticos con Ivy, Magit y Org-mode, además de trucos avanzados para personalizar tu flujo de trabajo. Con `use-package`, tu configuración será más limpia, rápida y fácil de mantener.
</p>

<p>
Si quieres explorar más, prueba estos paquetes con `use-package`:
</p>
<ul class="org-ul">
<li><code>which-key</code>: Muestra sugerencias de teclas.</li>
<li><code>company</code>: Autocompletado para código.</li>
<li><code>org-roam</code>: Notas interconectadas al estilo Zettelkasten.</li>
</ul>

<p>
¿Tienes preguntas o quieres un tutorial sobre otro aspecto de Emacs? Déjame un comentario en el blog o prueba estos comandos en tu Emacs y comparte tu experiencia. ¡Que disfrutes personalizando tu Emacs con esteroides!
</p>
</div>
</div>
<div id="outline-container-org8c0a183" class="outline-2">
<h2 id="org8c0a183">Recursos Adicionales</h2>
<div class="outline-text-2" id="text-org8c0a183">
<ul class="org-ul">
<li>Documentación oficial de `use-package`: <a href="https://github.com/jwiegley/use-package">GitHub - use-package</a></li>
<li>Tutoriales de Emacs: <a href="https://www.gnu.org/software/emacs/manual/">Manual de Emacs</a></li>
<li>Comunidad: <a href="https://www.reddit.com/r/emacs/">r/emacs</a> y <a href="https://emacs.stackexchange.com/">Emacs StackExchange</a></li>
</ul>

<div class="org-src-container">
<pre class="src src-elisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">&#161;Sigue hackeando y que la fuerza de Emacs est&#233; contigo!</span>
</pre>
</div>

<p>
&lt;!&#x2013; SEO-TIPS &#x2013;&gt;
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutorial.html">tutorial</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-use-package.html">use-package</a> </div>]]></description>
  <category><![CDATA[tutorial]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[use-package]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-13-tutorial-emacs-c-mo-configurar-use-package-para-gestionar-paquetes-como-un-profesional.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-13-tutorial-emacs-c-mo-configurar-use-package-para-gestionar-paquetes-como-un-profesional.html</guid>
  <pubDate>Sun, 13 Apr 2025 00:00:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Analizando Vulnerabilidades como un Pro: Un Script Potenciado para Emacs Org-mode (ii)]]></title>
  <description><![CDATA[
<div id="outline-container-org5870351" class="outline-2">
<h2 id="org5870351">Introducción</h2>
<div class="outline-text-2" id="text-org5870351">
<p>
¿Alguna vez te has preguntado qué tan seguro está tu laptop? En este post, te llevo de la mano para transformar un script básico de detección de vulnerabilidades en una herramienta poderosa que no solo encuentra CVEs, sino que también evalúa amenazas y las presenta en el glorioso formato Org-mode de Emacs. ¡Prepárate para darle esteroides a tu análisis de seguridad!
</p>

<p>
El reto comenzó con un script que escaneaba paquetes en busca de vulnerabilidades usando la API de Vulners. Pero queríamos más: un reporte detallado con niveles de amenaza y estadísticas, todo listo para brillar en Emacs. Aquí te cuento cómo lo hice, cómo usarlo y qué resultados obtendrás.
</p>
</div>
</div>
<div id="outline-container-org5a48d84" class="outline-2">
<h2 id="org5a48d84">El Punto de Partida</h2>
<div class="outline-text-2" id="text-org5a48d84">
<p>
Primero, teníamos este script básico:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #219fd5; font-style: italic;">while</span> <span style="color: #1857a4;">IFS</span>= read -r line; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">nombre</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | awk '{print $1}'</span>)
    <span style="color: #1857a4;">version</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | awk '{print $2}'</span>)
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"[+] Buscando CVEs para: $nombre $version"</span>
    <span style="color: #1857a4;">query</span>=<span style="color: #a44185;">"${nombre}%20${version}"</span>
    <span style="color: #1857a4;">response</span>=$(<span style="color: #219fd5; font-weight: bold;">curl -s "https://vulners.com/api/v3/search/lucene/?query=$query&amp;size=3"</span>)
    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">... resto del script ...</span>
<span style="color: #219fd5; font-style: italic;">done</span> &lt; <span style="color: #a44185;">"$PACKAGE_LIST"</span>
</pre>
</div>

<p>
Este script lee una lista de paquetes, busca CVEs y genera un archivo con resultados. Funciona, pero le falta punch: no clasifica amenazas ni da detalles jugosos. ¡Hora de mejorarlo!
</p>
</div>
</div>
<div id="outline-container-org9083bb6" class="outline-2">
<h2 id="org9083bb6">Creación del Nuevo Script: Un Monstruo de Seguridad</h2>
<div class="outline-text-2" id="text-org9083bb6">
<p>
Tomé el output del script original y creé un nuevo beast que procesa los CVEs encontrados. Aquí está el resultado:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #1857a4;">OUTPUT</span>=<span style="color: #a44185;">"vulnerability_report.org"</span>
<span style="color: #1857a4;">INPUT_FILE</span>=<span style="color: #a44185;">"$1"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"#+TITLE: Reporte de Amenazas Actuales"</span> &gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"#+DATE: $(</span><span style="color: #219fd5; font-weight: bold;">date '+%Y-%m-%d %H:%M'</span><span style="color: #a44185;">)"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>

<span style="color: #219fd5; font-style: italic;">while</span> <span style="color: #1857a4;">IFS</span>= read -r line; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #219fd5; font-style: italic;">if</span> [[ <span style="color: #a44185;">"$line"</span> =~ ^<span style="color: #a44185;">\*\*</span> ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        <span style="color: #1857a4;">package_info</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | sed 's/\*\* //'</span>)
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** Paquete: $package_info"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"   :PROPERTIES:"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"   :ANALISIS: $(</span><span style="color: #219fd5; font-weight: bold;">date '+%Y-%m-%d'</span><span style="color: #a44185;">)"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"   :END:"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
    <span style="color: #219fd5; font-style: italic;">elif</span> [[ <span style="color: #a44185;">"$line"</span> =~ ^\s*-.*CVE-[0-9]{4}-[0-9]+ ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        <span style="color: #1857a4;">cve</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | grep -o 'CVE-[0-9]\{4\}-[0-9]\+'</span>)
        <span style="color: #1857a4;">response</span>=$(<span style="color: #219fd5; font-weight: bold;">curl -s "https://vulners.com/api/v3/search/id/?id=$cve"</span>)
        <span style="color: #1857a4;">severity</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$response" | grep -oP '"cvss_score":\s*"\K[0-9.]+' || echo "N/A"</span>)
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">... l&#243;gica de amenaza y detalles ...</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
    sleep 1
<span style="color: #219fd5; font-style: italic;">done</span> &lt; <span style="color: #a44185;">"$INPUT_FILE"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Estad&#237;sticas</span>
<span style="color: #1857a4;">critical</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "CR&#205;TICA" "$OUTPUT"</span>)
<span style="color: #1857a4;">medium</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "MEDIA" "$OUTPUT"</span>)
<span style="color: #1857a4;">low</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "BAJA" "$OUTPUT"</span>)
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"* Estad&#237;sticas"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Amenazas Cr&#237;ticas: $critical"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Amenazas Medias: $medium"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Amenazas Bajas: $low"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
</pre>
</div>
</div>
<div id="outline-container-org1138057" class="outline-3">
<h3 id="org1138057">¿Qué hace este script?**</h3>
<div class="outline-text-3" id="text-org1138057">
<ol class="org-ol">
<li>Toma el archivo generado por el script original como entrada.</li>
<li>Consulta detalles de cada CVE usando la API de Vulners.</li>
<li>Clasifica amenazas según el puntaje CVSS:
<ul class="org-ul">
<li>≥ 7.0: <b>CRÍTICA</b></li>
<li>≥ 4.0: <b>MEDIA</b></li>
<li>&lt; 4.0: <b>BAJA</b></li>
</ul></li>
<li>Genera un reporte en Org-mode con secciones, propiedades y estadísticas.</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-org514a1ad" class="outline-2">
<h2 id="org514a1ad">Cómo Usarlo</h2>
<div class="outline-text-2" id="text-org514a1ad">
<p>
Es tan fácil que hasta tu abuela podría ejecutarlo (si usa Emacs, claro):
</p>

<ol class="org-ol">
<li><p>
<b><b>Ejecuta el script original</b></b> para generar tu lista de vulnerabilidades:
</p>
<div class="org-src-container">
<pre class="src src-bash">./scan_vulnerabilities.sh &gt; vuln_output.txt
</pre>
</div></li>

<li><p>
<b><b>Lanza el nuevo script</b></b> pasándole el archivo generado:
</p>
<div class="org-src-container">
<pre class="src src-bash">./threat_analysis.sh vuln_output.txt
</pre>
</div></li>

<li><p>
<b><b>Abre el resultado en Emacs</b></b>:
</p>
<div class="org-src-container">
<pre class="src src-bash">emacs vulnerability_report.org
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-org945543c" class="outline-2">
<h2 id="org945543c">Características Estelares</h2>
<div class="outline-text-2" id="text-org945543c">
<ul class="org-ul">
<li><b><b>Formato Org-mode Nativo</b></b>: Listo para navegar con <code>C-c C-n</code> o exportar a HTML/PDF.</li>
<li><b><b>Clasificación de Amenazas</b></b>: Separa lo crítico de lo trivial.</li>
<li><b><b>Detalles Ricos</b></b>: Severidad, fechas, descripciones por CVE.</li>
<li><b><b>Estadísticas</b></b>: Resumen claro de cuántas amenazas enfrentas.</li>
<li><b><b>Personalizable</b></b>: Ajusta los umbrales de CVSS o añade más campos según necesites.</li>
</ul>
</div>
</div>
<div id="outline-container-org08709cc" class="outline-2">
<h2 id="org08709cc">Resultados que Obtendrás</h2>
<div class="outline-text-2" id="text-org08709cc">
<p>
El output es un archivo <code>vulnerability_report.org</code> que luce así:
</p>

<p>
#+BEGIN<sub>SRC</sub> org
</p>
</div>
</div>
<div id="outline-container-org9a0c987" class="outline-2">
<h2 id="org9a0c987">Resumen de Amenazas</h2>
<div class="outline-text-2" id="text-org9a0c987">
</div>
<div id="outline-container-org1389943" class="outline-3">
<h3 id="org1389943">Paquete: openssl 1.1.1</h3>
<div class="outline-text-3" id="text-org1389943">
<ul class="org-ul">
<li>CVE Analizado: CVE-2023-1234
<ul class="org-ul">
<li>Nivel de Amenaza: CRÍTICA</li>
<li>Severidad CVSS: 7.8</li>
<li>Publicado: 2023-05-01</li>
<li>Descripción: Remote code execution&#x2026;</li>
</ul></li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org1977b47" class="outline-2">
<h2 id="org1977b47">Estadísticas</h2>
<div class="outline-text-2" id="text-org1977b47">
<ul class="org-ul">
<li>Amenazas Críticas: 1</li>
<li>Amenazas Medias: 0</li>
<li>Amenazas Bajas: 0</li>
</ul>
<p>
#+END<sub>SRC</sub>
</p>

<p>
En Emacs, puedes colapsar secciones con <code>TAB</code>, buscar con <code>C-s</code>, o incluso ejecutar comandos desde el buffer con <code>org-babel</code>. ¡Es seguridad con estilo!
</p>
</div>
</div>
<div id="outline-container-org03f123b" class="outline-2">
<h2 id="org03f123b">Conclusión</h2>
<div class="outline-text-2" id="text-org03f123b">
<p>
Con este script, transformamos un escaneo básico en un análisis profesional que vive feliz en Emacs. Ya no solo sabes qué vulnerabilidades tienes, sino qué tan malas son y qué hacer al respecto. ¿Listo para poner tu laptop a prueba? Descarga el script, dale caña y comparte tus resultados en los comentarios.
</p>

<blockquote>
<p>
"La seguridad no es un destino, es un viaje&#x2026; con Org-mode" - Grok 3
</p>
</blockquote>
</div>
</div>
<div id="outline-container-org5b0b31e" class="outline-2">
<h2 id="org5b0b31e">Recursos</h2>
<div class="outline-text-2" id="text-org5b0b31e">
<ul class="org-ul">
<li>[API de Vulners](<a href="https://vulners.com/api/">https://vulners.com/api/</a>)</li>
<li>[Manual de Org-mode](<a href="https://orgmode.org/manual/">https://orgmode.org/manual/</a>)</li>
</ul>

<p>
<a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-08-detecci%C3%B3n-de-vulnerabilidades-en-linux-con-bash-y-org-mode">2025-04-08-detección-de-vulnerabilidades-en-linux-con-bash-y-org-mode</a>
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-script.html">script</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[script]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09-analizando-vulnerabilidades-como-un-pro:-un-script-potenciado-para-emacs-org-mode-(ii).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09-analizando-vulnerabilidades-como-un-pro:-un-script-potenciado-para-emacs-org-mode-(ii).html</guid>
  <pubDate>Wed, 09 Apr 2025 09:45:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Trump y la Guerra de Aranceles 2025: Ganadores, Perdedores y el Caos Global]]></title>
  <description><![CDATA[
<div id="outline-container-org0623482" class="outline-2">
<h2 id="org0623482">Introducción</h2>
<div class="outline-text-2" id="text-org0623482">
<p>
El 8 de abril de 2025, con apenas unas semanas en su segundo mandato como el 47º presidente de Estados Unidos, Donald Trump ha encendido la mecha de una guerra comercial global al imponer aranceles masivos: un 10% general a todas las importaciones, un 104% a China, y tarifas "recíprocas" que alcanzan hasta el 46% en países como Vietnam. ¿El objetivo? "Restaurar la grandeza americana" y equilibrar la balanza comercial. Pero, ¿quién sale ganando y quién perdiendo en este juego de alto riesgo? En este post, analizamos los detalles, respaldados por datos y referencias, y lo presentamos con el poder de Emacs Org-mode. ¡Prepárate para un viaje económico con esteroides!
</p>
</div>
</div>
<div id="outline-container-org2c07cb7" class="outline-2">
<h2 id="org2c07cb7">Contexto: La Decisión de Trump</h2>
<div class="outline-text-2" id="text-org2c07cb7">
<p>
Trump anunció su plan de aranceles el 2 de abril de 2025, en un evento en el Rose Garden, mostrando gráficos y prometiendo "Liberation Day" para la economía estadounidense. Según reportes de Reuters y AP News, el 5 de abril comenzaron a aplicarse los aranceles del 10%, con escaladas previstas: un 50% adicional a China a partir del 9 de abril si no retira sus retaliaciones del 34%. Esta política, más agresiva que la de su primer mandato, busca:
</p>
<ul class="org-ul">
<li>Reducir déficits comerciales históricos.</li>
<li>Revitalizar la industria manufacturera local.</li>
<li>Presionar a aliados y rivales para negociar "deals justos".</li>
</ul>

<p>
Sin embargo, los mercados globales han entrado en pánico, con el S&amp;P 500 cayendo a territorio bajista y protestas en las calles de Washington.
</p>
</div>
</div>
<div id="outline-container-orge9ab192" class="outline-2">
<h2 id="orge9ab192">Metodología del Análisis</h2>
<div class="outline-text-2" id="text-orge9ab192">
<ul class="org-ul">
<li><b><b>Fuentes</b></b>: Noticias recientes de Reuters, AP News, Forbes, y Al Jazeera (hasta el 8 de abril de 2025).</li>
<li><b><b>Criterios</b></b>: Impacto económico directo (costos, empleos), reacciones internacionales, y efectos a largo plazo.</li>
<li><b><b>Herramientas</b></b>: Emacs Org-mode para estructurar, con un gráfico ASCII para visualizar.</li>
</ul>
</div>
</div>
<div id="outline-container-org870cc4b" class="outline-2">
<h2 id="org870cc4b">Ganadores (Winners)</h2>
<div class="outline-text-2" id="text-org870cc4b">
<p>
Aquí están los beneficiados potenciales de esta guerra de aranceles:
</p>
</div>
<div id="outline-container-org5ee5a50" class="outline-3">
<h3 id="org5ee5a50">Trabajadores Manufactureros de EE.UU.</h3>
<div class="outline-text-3" id="text-org5ee5a50">
<ul class="org-ul">
<li><b>Por qué ganan</b>: Trump promete traer empleos de vuelta al Rust Belt (Ohio, Pensilvania) al encarecer importaciones y fomentar producción local.</li>
<li><b>Evidencia</b>: Fox News reporta que congresistas como Michael Rulli ya ven "revitalización" en comunidades industriales.</li>
<li><b>Riesgo</b>: Depende de que las empresas no trasladen costos a consumidores.</li>
</ul>
</div>
</div>
<div id="outline-container-org9f139b1" class="outline-3">
<h3 id="org9f139b1">Industrias del Carbón y Acero</h3>
<div class="outline-text-3" id="text-org9f139b1">
<ul class="org-ul">
<li><b>Por qué ganan</b>: Al Jazeera señala que Trump firmó una orden ejecutiva para duplicar la inversión en carbón, protegido por aranceles a energías extranjeras.</li>
<li><b>Evidencia</b>: Las tarifas del 25% a Canadá y México (por reglas de origen) favorecen el acero local.</li>
<li><b>Riesgo</b>: Competencia con energías renovables sigue siendo un desafío.</li>
</ul>
</div>
</div>
<div id="outline-container-org047ec90" class="outline-3">
<h3 id="org047ec90">Japón e India</h3>
<div class="outline-text-3" id="text-org047ec90">
<ul class="org-ul">
<li><b>Por qué ganan</b>: Fox News destaca que estos países podrían beneficiarse si China y Vietnam pierden mercado, llenando vacíos con productos no tarifados.</li>
<li><b>Evidencia</b>: Japón negocia con el Tesoro (Scott Bessent) para evitar aranceles, mientras India se mantiene al margen.</li>
<li><b>Riesgo</b>: Podrían enfrentar retaliaciones si escalan exportaciones a EE.UU.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org5ef54bf" class="outline-2">
<h2 id="org5ef54bf">Perdedores (Losers)</h2>
<div class="outline-text-2" id="text-org5ef54bf">
<p>
Los aranceles no perdonan, y estos son los más afectados:
</p>
</div>
<div id="outline-container-org40c5373" class="outline-3">
<h3 id="org40c5373">Consumidores Estadounidenses</h3>
<div class="outline-text-3" id="text-org40c5373">
<ul class="org-ul">
<li><b>Por qué pierden</b>: Reuters informa que empresas como Micron y minoristas de ropa ya suben precios o retrasan contrataciones por costos de aranceles.</li>
<li><b>Evidencia</b>: Un 104% a China encarecerá electrónicos y textiles; el 10% general afecta todo lo importado.</li>
<li><b>Impacto</b>: Inflación inminente y menor poder adquisitivo.</li>
</ul>
</div>
</div>
<div id="outline-container-orgeb0372b" class="outline-3">
<h3 id="orgeb0372b">China y Vietnam</h3>
<div class="outline-text-3" id="text-orgeb0372b">
<ul class="org-ul">
<li><b>Por qué pierden</b>: China enfrenta un 104% acumulado, y Vietnam un 46%, paralizando sus exportaciones a EE.UU.</li>
<li><b>Evidencia</b>: The Guardian y NPR reportan que China promete "luchar hasta el final", mientras Vietnam suplica negociaciones (carta de To Lam a Trump).</li>
<li><b>Impacto</b>: Pérdida de mercado y guerra de desgaste económica.</li>
</ul>
</div>
</div>
<div id="outline-container-orgea34521" class="outline-3">
<h3 id="orgea34521">Unión Europea</h3>
<div class="outline-text-3" id="text-orgea34521">
<ul class="org-ul">
<li><b>Por qué pierde</b>: Un 20% a bienes industriales y amenazas a bebidas alcohólicas (Reuters) golpean al bloque ya afectado por autos y metales.</li>
<li><b>Evidencia</b>: Ursula von der Leyen ofrece "cero por cero", pero Trump lo rechaza como insuficiente.</li>
<li><b>Impacto</b>: Tensiones diplomáticas y costos económicos.</li>
</ul>
</div>
</div>
<div id="outline-container-orgd1c8e55" class="outline-3">
<h3 id="orgd1c8e55">Mercados Globales</h3>
<div class="outline-text-3" id="text-orgd1c8e55">
<ul class="org-ul">
<li><b>Por qué pierden</b>: The New York Times y CNBC reportan caídas masivas en bolsas asiáticas (Hang Seng -9.8%) y temores de recesión global.</li>
<li><b>Evidencia</b>: Inversores huyen ante la incertidumbre; el S&amp;P 500 en bear market.</li>
<li><b>Impacto</b>: Volatilidad y desconfianza sistémica.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgdd231bb" class="outline-2">
<h2 id="orgdd231bb">Gráfico de Apoyo: Impacto de los Aranceles</h2>
<div class="outline-text-2" id="text-orgdd231bb">
<div class="org-src-container">
<pre class="src src-ascii">Impacto Econ&#243;mico por Regi&#243;n (Escala 1-10)
+----------------+-------+-------+-------+-------+
| Regi&#243;n         | Costo | Empleo| Mercado| Total |
+----------------+-------+-------+-------+-------+
| EE.UU. (Local) |   3   |   8   |   6   |   17  |
| China          |   9   |   4   |   2   |   15  |
| UE             |   7   |   3   |   4   |   14  |
| Vietnam        |   8   |   3   |   3   |   14  |
| Jap&#243;n/India    |   2   |   5   |   7   |   14  |
+----------------+-------+-------+-------+-------+
* Costo: Incremento de precios (mayor = peor)
* Empleo: Generaci&#243;n de trabajos (mayor = mejor)
* Mercado: Acceso a mercados (mayor = mejor)
</pre>
</div>
<ul class="org-ul">
<li><b>Interpretación</b>: EE.UU. gana en empleos pero paga costos moderados. China sufre alto costo y pérdida de mercado. Japón/India equilibran mejor.</li>
</ul>
</div>
</div>
<div id="outline-container-org1cf9806" class="outline-2">
<h2 id="org1cf9806">Análisis Crítico</h2>
<div class="outline-text-2" id="text-org1cf9806">
<ul class="org-ul">
<li><b><b>A Favor</b></b>: Trump podría lograr un reequilibrio comercial a corto plazo y fortalecer ciertas industrias internas, como promete su equipo (Lutnick, Navarro).</li>
<li><b><b>En Contra</b></b>: Economistas (NYT, CNBC) advierten que aranceles tan amplios recuerdan a Smoot-Hawley (1930), que agravó la Gran Depresión. La inflación y el caos global podrían superar los beneficios.</li>
<li><b><b>Incógnitas</b></b>: ¿Negociará Trump con aliados como Japón o Taiwán (que ofrece "cero aranceles")? ¿Resistirá China el desgaste?</li>
</ul>
</div>
</div>
<div id="outline-container-org3ba41f5" class="outline-2">
<h2 id="org3ba41f5">Referencias</h2>
<div class="outline-text-2" id="text-org3ba41f5">
<ul class="org-ul">
<li>Reuters: "US forges ahead with 104% tariffs on China" (8 abril 2025).</li>
<li>AP News: "Trump threatens more tariffs on China as markets shudder" (7 abril 2025).</li>
<li>Fox News: "The losers and winners of Trump's 'Liberation Day' tariff plan" (6 abril 2025).</li>
<li>The Guardian: "China vows to ‘fight to the end’ against latest Trump tariff threat" (7 abril 2025).</li>
<li>Forbes: "Will Trump Negotiate Tariffs?" (8 abril 2025).</li>
<li>Al Jazeera: "Trump tariffs live: US president vows to revive coal industry" (8 abril 2025).</li>
</ul>
</div>
</div>
<div id="outline-container-orge45b795" class="outline-2">
<h2 id="orge45b795">Conclusión</h2>
<div class="outline-text-2" id="text-orge45b795">
<p>
La guerra de aranceles de Trump es un experimento audaz que podría revitalizar sectores de EE.UU. mientras castiga a rivales como China. Sin embargo, los consumidores y los mercados globales pagan un precio alto, y el riesgo de recesión acecha. En Emacs Org-mode, este análisis se organiza para actuar: usa `C-c C-o` en las URLs de referencias para investigar más o `C-c C-t` para priorizar tareas como "actualizar sistemas ante inflación". ¿Ganará Trump esta apuesta? Solo el tiempo (y los datos) lo dirán.
</p>

<blockquote>
<p>
"Los aranceles son la medicina amarga que Trump receta al mundo, pero ¿curarán o enfermarán más?" - Grok 3
</p>
</blockquote>
</div>
</div>
<div id="outline-container-org175b84a" class="outline-2">
<h2 id="org175b84a">Llamado a la Acción</h2>
<div class="outline-text-2" id="text-org175b84a">
<p>
¿Tu laptop depende de paquetes afectados por esta guerra comercial? Revisa mi post anterior sobre vulnerabilidades y comparte tus pensamientos abajo. ¡Emacs nos une!
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-politica.html">politica</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-economia.html">economia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-trump.html">trump</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-aranceles.html">aranceles</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-opiniones.html">opiniones</a> </div>]]></description>
  <category><![CDATA[politica]]></category>
  <category><![CDATA[economia]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[trump]]></category>
  <category><![CDATA[aranceles]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[opiniones]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09--trump-y-la-guerra-de-aranceles-2025:-ganadores,-perdedores-y-el-caos-global.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09--trump-y-la-guerra-de-aranceles-2025:-ganadores,-perdedores-y-el-caos-global.html</guid>
  <pubDate>Wed, 09 Apr 2025 07:26:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Configurar Emacs para creación de Graficos]]></title>
  <description><![CDATA[
<div id="outline-container-org56d3dd3" class="outline-2">
<h2 id="org56d3dd3"><span class="section-number-2">1.</span> 📌 Configuración esencial</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-orgfad4b98" class="outline-3">
<h3 id="orgfad4b98"><span class="section-number-3">1.1.</span> 1. Instalación de dependencias</h3>
<div class="outline-text-3" id="text-1-1">
<p>
```
</p>

<p>
sudo apt install gnuplot plantuml graphviz ditaa
</p>

<p>
brew install gnuplot plantuml graphviz ditaa
```
</p>
</div>
</div>
<div id="outline-container-orgd981238" class="outline-3">
<h3 id="orgd981238"><span class="section-number-3">1.2.</span> 2. Configuración de Emacs (<code>/.emacs.d/init.el</code>)</h3>
<div class="outline-text-3" id="text-1-2">
<p>
```
;; Activar lenguajes de Org-babel
(org-babel-do-load-languages
 'org-babel-load-languages
 '((gnuplot . t)
   (plantuml . t)
   (dot . t)
   (ditaa . t)))
</p>

<p>
;; Rutas específicas para Java (necesario para PlantUML/Ditaa)
(setq org-plantuml-jar-path "/usr/share/plantuml/plantuml.jar")
(setq org-ditaa-jar-path "/usr/share/ditaa/ditaa.jar")
</p>

<p>
;; Configuración avanzada de Gnuplot
(setq org-plot/gnuplot-terminal "pngcairo enhanced font 'Verdana,10'")
```
</p>
</div>
</div>
</div>
<div id="outline-container-org6662877" class="outline-2">
<h2 id="org6662877"><span class="section-number-2">2.</span> 📊 Ejemplo 1: Gráfico estadístico con Gnuplot</h2>
<div class="outline-text-2" id="text-2">
</div>
<div id="outline-container-orgb7c971b" class="outline-3">
<h3 id="orgb7c971b"><span class="section-number-3">2.1.</span> Tabla de datos climáticos</h3>
<div class="outline-text-3" id="text-2-1">
<table id="orgc62d9f0">


<colgroup>
<col  class="org-left">

<col  class="org-right">

<col  class="org-right">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Mes</th>
<th scope="col" class="org-right">Temp (°C)</th>
<th scope="col" class="org-right">Lluvia (mm)</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Enero</td>
<td class="org-right">15.2</td>
<td class="org-right">82.4</td>
</tr>

<tr>
<td class="org-left">Febrero</td>
<td class="org-right">16.8</td>
<td class="org-right">45.1</td>
</tr>

<tr>
<td class="org-left">Marzo</td>
<td class="org-right">19.3</td>
<td class="org-right">30.6</td>
</tr>

<tr>
<td class="org-left">Abril</td>
<td class="org-right">22.1</td>
<td class="org-right">18.9</td>
</tr>
</tbody>
</table>


<figure id="orgd0ca3b9">
<img src="grafico-clima.png" alt="grafico-clima.png">

</figure>
</div>
</div>
</div>
<div id="outline-container-orgcfca41c" class="outline-2">
<h2 id="orgcfca41c"><span class="section-number-2">3.</span> 🌳 Ejemplo 2: Diagrama con PlantUML</h2>
<div class="outline-text-2" id="text-3">

<figure id="orgd9dc70a">
<img src="diagrama-clases.png" alt="diagrama-clases.png">

</figure>
</div>
</div>
<div id="outline-container-org7639084" class="outline-2">
<h2 id="org7639084"><span class="section-number-2">4.</span> 🛠 Personalización avanzada</h2>
<div class="outline-text-2" id="text-4">
</div>
<div id="outline-container-org086e090" class="outline-3">
<h3 id="org086e090"><span class="section-number-3">4.1.</span> Temas visuales para Gnuplot</h3>
<div class="outline-text-3" id="text-4-1">
<p>
```
</p>

<p>
set style line 1 lc rgb '#8b1a0e' pt 7 ps 1 lt 1 lw 2
set style line 2 lc rgb '#5e9c36' pt 5 ps 1 lt 1 lw 2
set style increment user
```
</p>
</div>
</div>
<div id="outline-container-org2af363c" class="outline-3">
<h3 id="org2af363c"><span class="section-number-3">4.2.</span> Configuración de tamaño para PlantUML</h3>
<div class="outline-text-3" id="text-4-2">
<p>
```
;; Tamaño predeterminado imágenes
(setq org-plantuml-args '("-pipe" "-tsvg" "-width 1920" "-height 1080"))
```
</p>
</div>
</div>
</div>
<div id="outline-container-org44131b9" class="outline-2">
<h2 id="org44131b9"><span class="section-number-2">5.</span> ⚡ Flujo de trabajo optimizado</h2>
<div class="outline-text-2" id="text-5">
<ol class="org-ol">
<li>Crear tabla de datos con <code>org-table-create</code></li>
<li>Insertar bloque de código (<code>C-c C-, g</code> para Gnuplot)</li>
<li>Ejecutar con <code>C-c C-c</code></li>
<li>Previsualizar con <code>C-c C-x C-v</code></li>
<li>Exportar a HTML/PDF (<code>C-c C-e</code>)</li>
</ol>
</div>
</div>
<div id="outline-container-org59e44a8" class="outline-2">
<h2 id="org59e44a8"><span class="section-number-2">6.</span> 🔍 Solución de problemas comunes</h2>
<div class="outline-text-2" id="text-6">
</div>
<div id="outline-container-orgeac742d" class="outline-3">
<h3 id="orgeac742d"><span class="section-number-3">6.1.</span> Error "Command not found"</h3>
<div class="outline-text-3" id="text-6-1">
<p>
```
;; Verificar rutas ejecutables
(executable-find "gnuplot")  ; Debe retornar ruta correcta
```
</p>
</div>
</div>
<div id="outline-container-orgdf5ae3c" class="outline-3">
<h3 id="orgdf5ae3c"><span class="section-number-3">6.2.</span> Gráficos no actualizados</h3>
<div class="outline-text-3" id="text-6-2">
<ul class="org-ul">
<li>Ejecutar <code>org-babel-execute-buffer</code> (C-c C-v b)</li>
<li>Borrar caché con <code>org-babel-remove-result</code></li>
</ul>
</div>
</div>
<div id="outline-container-orgd0585a7" class="outline-3">
<h3 id="orgd0585a7"><span class="section-number-3">6.3.</span> Configuración multi-plataforma</h3>
<div class="outline-text-3" id="text-6-3">
<p>
```
;; Ejemplo Windows
(when (eq system-type 'windows-nt)
  (setq org-plantuml-jar-path "C:/tools/plantuml.jar"))
```
</p>
</div>
</div>
</div>
<div id="outline-container-org6a5b4af" class="outline-2">
<h2 id="org6a5b4af"><span class="section-number-2">7.</span> 💡 Consejos profesionales</h2>
<div class="outline-text-2" id="text-7">
<ul class="org-ul">
<li>Usar <code>org-plot</code> para gráficos rápidos desde tablas</li>
<li>Combinar gráficos con <code>:results graphics file</code></li>
<li>Automatizar generación con <code>org-babel-tangle</code></li>
</ul>

<blockquote>
<p>
💻 "Org-mode transforma Emacs en un laboratorio de visualización de datos completo, manteniendo todo en texto plano y totalmente versionable" - Experto en Emacs
</p>
</blockquote>
<p>
```
</p>

<p>
Citations:
</p>
<ul class="org-ul">
<li>[1] <a href="https://lapipaplena.wordpress.com/2017/02/05/graficos-con-org-mode-ditaa-y-plantuml/">https://lapipaplena.wordpress.com/2017/02/05/graficos-con-org-mode-ditaa-y-plantuml/</a></li>
<li>[2] <a href="https://osiux.com/visualizando-org-mode-con-gnuplot.html">https://osiux.com/visualizando-org-mode-con-gnuplot.html</a></li>
<li>[3] <a href="https://www.blackhats.es/wordpress/?p=109">https://www.blackhats.es/wordpress/?p=109</a></li>
<li>[4] <a href="https://blog-antiguo.nueva-actitud.org/graficos-en-org-mode.html">https://blog-antiguo.nueva-actitud.org/graficos-en-org-mode.html</a></li>
<li>[5] <a href="https://gewhere.github.io/gnuplot-orgmode">https://gewhere.github.io/gnuplot-orgmode</a></li>
<li>[6] <a href="https://orgmode.org/manual/Org-Plot.html">https://orgmode.org/manual/Org-Plot.html</a></li>
<li>[7] <a href="https://www.medialab-matadero.es/actividades/organiza-tu-vida-con-emacs-y-org-mode">https://www.medialab-matadero.es/actividades/organiza-tu-vida-con-emacs-y-org-mode</a></li>
<li>[8] <a href="https://www.reddit.com/r/emacs/comments/vfldyd/issue_with_setting_up_plantuml/?tl=es-es">https://www.reddit.com/r/emacs/comments/vfldyd/issue_with_setting_up_plantuml/?tl=es-es</a></li>
<li>[9] <a href="https://www.reddit.com/r/emacs/comments/m0ysb5/how_do_you_organize_your_org_mode_files/?tl=es-es">https://www.reddit.com/r/emacs/comments/m0ysb5/how_do_you_organize_your_org_mode_files/?tl=es-es</a></li>
<li>[10] <a href="https://pdf.plantuml.net/1.2019.4/PlantUML_Language_Reference_Guide_es.pdf">https://pdf.plantuml.net/1.2019.4/PlantUML_Language_Reference_Guide_es.pdf</a></li>
<li>[11] <a href="https://traficantes.net/sites/default/files/pdfs/orgguide.es_.pdf">https://traficantes.net/sites/default/files/pdfs/orgguide.es_.pdf</a></li>
<li>[12] <a href="https://github.com/skuro/plantuml-mode">https://github.com/skuro/plantuml-mode</a></li>
<li>[13] <a href="https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-plantuml.html">https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-plantuml.html</a></li>
<li>[14] <a href="https://comacero.gitlab.io/notes_orgmode/">https://comacero.gitlab.io/notes_orgmode/</a></li>
<li>[15] <a href="https://pdf.plantuml.net/PlantUML_Language_Reference_Guide_es.pdf">https://pdf.plantuml.net/PlantUML_Language_Reference_Guide_es.pdf</a></li>
<li>[16] <a href="https://www.youtube.com/watch?v=OI4x5a_mxKA">https://www.youtube.com/watch?v=OI4x5a_mxKA</a></li>
<li>[17] <a href="https://elbauldelprogramador.com/chuleta-org-mode/">https://elbauldelprogramador.com/chuleta-org-mode/</a></li>
</ul>

<p>
&#x2014;
Answer from Perplexity: pplx.ai/share
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutorial.html">tutorial</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-gráficos.html">gráficos</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-gnuplot.html">gnuplot</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-plantuml.html">plantuml</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-draft.html">draft</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[tutorial]]></category>
  <category><![CDATA[gráficos]]></category>
  <category><![CDATA[gnuplot]]></category>
  <category><![CDATA[plantuml]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[draft]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-29-configurar-emacs-para-creaci%C3%B3n-de-graficos.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-29-configurar-emacs-para-creaci%C3%B3n-de-graficos.html</guid>
  <pubDate>Sat, 29 Mar 2025 18:56:00 +0100</pubDate>
</item>
</channel>
</rss>
