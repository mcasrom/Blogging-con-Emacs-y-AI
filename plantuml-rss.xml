<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title><![CDATA[Emacs con esteroides - plantuml]]></title>
<description><![CDATA[Emacs con esteroides - plantuml]]></description>
<link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI//tag-plantuml.html</link>
<lastBuildDate>Fri, 20 Jun 2025 17:41:30 +0200</lastBuildDate>
<item>
  <title><![CDATA[Explorando VPNs: Orígenes, Evolución, Beneficios y Configuración de una VPN Gratuita en Linux]]></title>
  <description><![CDATA[
<div id="outline-container-org5610a4a" class="outline-2">
<h2 id="org5610a4a">Introducción a las VPNs</h2>
<div class="outline-text-2" id="text-org5610a4a">
<p>
Las Redes Privadas Virtuales (VPNs, por sus siglas en inglés) se han convertido en herramientas esenciales para proteger la privacidad y la seguridad en línea en un mundo cada vez más conectado. Una VPN crea un túnel seguro y cifrado entre tu dispositivo y un servidor remoto, ocultando tu dirección IP y protegiendo tus datos de miradas indiscretas. Este artículo explora los orígenes, el desarrollo y las razones para usar VPNs, sus capacidades de protección y ofrece una guía práctica para configurar una VPN gratuita en Linux utilizando Emacs Org-mode para la documentación y PlantUML para visualizaciones. Ya seas un entusiasta de la privacidad o un usuario de Linux buscando mejorar tu seguridad, esta guía ofrece un enfoque detallado impulsado por Emacs para entender e implementar VPNs.
</p>
</div>
</div>
<div id="outline-container-orga8fc52a" class="outline-2">
<h2 id="orga8fc52a">Orígenes y Evolución de las VPNs</h2>
<div class="outline-text-2" id="text-orga8fc52a">
</div>
<div id="outline-container-org80bf0c7" class="outline-3">
<h3 id="org80bf0c7">Orígenes</h3>
<div class="outline-text-3" id="text-org80bf0c7">
<p>
El concepto de las VPNs surgió en la década de 1990, cuando las organizaciones buscaban formas seguras de conectar oficinas remotas y empleados a través de la internet pública. En 1996, Gurdeep Singh-Pall, un empleado de Microsoft, desarrolló el Protocolo de Túnel Punto a Punto (PPTP), uno de los primeros protocolos de VPN. El PPTP permitía la transmisión segura de datos a través de internet al encapsular paquetes de datos en un túnel seguro, marcando el nacimiento de las VPNs modernas.
</p>
</div>
</div>
<div id="outline-container-org8595bcd" class="outline-3">
<h3 id="org8595bcd">Desarrollo</h3>
<div class="outline-text-3" id="text-org8595bcd">
<p>
A lo largo de los años, la tecnología de las VPNs evolucionó significativamente:
</p>
<ul class="org-ul">
<li><b><b>1990s</b></b>: PPTP y el Protocolo de Túnel de Capa 2 (L2TP) sentaron las bases para el acceso remoto seguro.</li>
<li><b><b>2000s</b></b>: La introducción de OpenVPN, un protocolo de VPN de código abierto, ofreció un cifrado robusto y flexibilidad, ganando popularidad entre empresas e individuos.</li>
<li><b><b>2010s</b></b>: El auge de los servicios de VPN para consumidores, como NordVPN, ExpressVPN y Mullvad, abordó preocupaciones crecientes sobre privacidad en línea, vigilancia y restricciones geográficas.</li>
<li><b><b>2020s</b></b>: Protocolos modernos como WireGuard surgieron, ofreciendo un rendimiento más rápido y una seguridad más sólida. Las VPNs descentralizadas (dVPNs) también ganaron terreno, aprovechando blockchain para soluciones de privacidad entre pares [].</li>
</ul>

<p>
Hoy en día, millones de personas usan VPNs para proteger su privacidad, eludir la censura y acceder a contenido restringido. Las soluciones de código abierto y las VPNs gratuitas han hecho que esta tecnología sea accesible para los usuarios de Linux, alineándose con la ética de código abierto de la comunidad de Emacs.
</p>
</div>
</div>
</div>
<div id="outline-container-org5c74589" class="outline-2">
<h2 id="org5c74589">¿Por Qué Usar una VPN? Razones y Motivaciones Clave</h2>
<div class="outline-text-2" id="text-org5c74589">
<p>
Las VPNs cumplen múltiples propósitos, siendo valiosas para usuarios de Linux, desarrolladores y defensores de la privacidad. A continuación, se presenta una tabla que resume las principales razones para usar una VPN, con explicaciones detalladas:
</p>

<p>
<br>
</p>

<table border="2" rules="all" frame="box">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Razón</th>
<th scope="col" class="org-left">Descripción</th>
<th scope="col" class="org-left">Ejemplo de Caso de Uso</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Protección de Privacidad</td>
<td class="org-left">Oculta tu dirección IP, evitando que ISPs y sitios web rastreen tu ubicación o actividades.</td>
<td class="org-left">Ocultar hábitos de navegación de los ISPs.</td>
</tr>

<tr>
<td class="org-left">Seguridad de Datos</td>
<td class="org-left">Cifra los datos para protegerlos contra escuchas en redes Wi-Fi públicas o inseguras.</td>
<td class="org-left">Proteger datos en una red Wi-Fi de una cafetería.</td>
</tr>

<tr>
<td class="org-left">Elusión de Censura</td>
<td class="org-left">Supera restricciones gubernamentales o institucionales para acceder a contenido bloqueado.</td>
<td class="org-left">Acceder a sitios de noticias en regiones restringidas.</td>
</tr>

<tr>
<td class="org-left">Superar Restricciones Geográficas</td>
<td class="org-left">Desbloquea contenido bloqueado por región, como servicios de streaming o sitios web.</td>
<td class="org-left">Ver Netflix de EE.UU. desde el extranjero.</td>
</tr>

<tr>
<td class="org-left">Anonimato</td>
<td class="org-left">Reduce la trazabilidad, protegiendo contra anuncios dirigidos o perfiles.</td>
<td class="org-left">Investigación o activismo anónimo.</td>
</tr>
</tbody>
</table>

<p>
<br>
</p>

<p>
<b><b>Diagrama PlantUML: Casos de Uso de VPNs</b></b>
Para visualizar las relaciones entre los casos de uso de las VPNs, aquí hay un diagrama de componentes en PlantUML:
</p>


<figure id="orgc472623">
<img src="images/casos-uso-vpn.png" alt="casos-uso-vpn.png">

</figure>

<p>
<br>
</p>

<p>
Este diagrama ilustra cómo un usuario interactúa con varios servicios de VPN para lograr resultados específicos, renderizado sin problemas en Org-mode con PlantUML.
</p>
</div>
</div>
<div id="outline-container-orgc85a936" class="outline-2">
<h2 id="orgc85a936">¿Qué Protegen las VPNs?</h2>
<div class="outline-text-2" id="text-orgc85a936">
<p>
Las VPNs ofrecen múltiples capas de protección, cruciales para usuarios de Linux que manejan datos sensibles o trabajan en entornos de código abierto. La siguiente tabla detalla qué protegen las VPNs:
</p>

<p>
<br>
</p>

<table border="2" rules="all" frame="box">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Aspecto Protegido</th>
<th scope="col" class="org-left">Cómo lo Protegen las VPNs</th>
<th scope="col" class="org-left">Importancia para Usuarios de Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Dirección IP</td>
<td class="org-left">Oculta tu IP real con la IP del servidor VPN, escondiendo tu ubicación.</td>
<td class="org-left">Evita el rastreo durante contribuciones de código abierto.</td>
</tr>

<tr>
<td class="org-left">Transmisión de Datos</td>
<td class="org-left">Usa cifrado (e.g., AES-256, ChaCha20) para asegurar datos en tránsito.</td>
<td class="org-left">Protege código o datos enviados por redes públicas.</td>
</tr>

<tr>
<td class="org-left">Consultas DNS</td>
<td class="org-left">Enruta las solicitudes DNS a través de la VPN para evitar fugas a ISPs.</td>
<td class="org-left">Garantiza privacidad en búsquedas de dominios.</td>
</tr>

<tr>
<td class="org-left">Identidad en Línea</td>
<td class="org-left">Reduce la trazabilidad al anonimizar tu huella digital.</td>
<td class="org-left">Crucial para desarrolladores enfocados en privacidad.</td>
</tr>

<tr>
<td class="org-left">Fugas WebRTC e IPv6</td>
<td class="org-left">Bloquea WebRTC e IPv6 para evitar exposición de datos no intencional.</td>
<td class="org-left">Mejora la seguridad en sistemas Linux modernos.</td>
</tr>
</tbody>
</table>

<p>
<b><b>Diagrama PlantUML: Capas de Protección de VPN</b></b>
Aquí hay un diagrama de secuencia en PlantUML que muestra cómo una VPN protege el flujo de datos de un usuario de Linux:
</p>


<figure id="orga6793ce">
<img src="images/secuencia-proteccion-vpn.png" alt="secuencia-proteccion-vpn.png">

</figure>

<p>
<br>
</p>

<p>
Este diagrama muestra el flujo de datos seguro desde un cliente Linux a través de un servidor VPN hasta un sitio web objetivo, asegurando una comunicación cifrada.
</p>
</div>
</div>
<div id="outline-container-orgd9e5e0e" class="outline-2">
<h2 id="orgd9e5e0e">Estado Actual de las VPNs (2025)</h2>
<div class="outline-text-2" id="text-orgd9e5e0e">
<p>
A partir de 2025, las VPNs continúan evolucionando:
</p>
<ul class="org-ul">
<li><b><b>Protocolos</b></b>: WireGuard se ha convertido en un estándar por su velocidad y seguridad, superando a protocolos más antiguos como OpenVPN en muchos casos [].</li>
<li><b><b>VPNs Gratuitas</b></b>: Servicios como ProtonVPN y FreePN ofrecen niveles gratuitos con limitaciones, ideales para usuarios de Linux que buscan soluciones rentables [].</li>
<li><b><b>VPNs Descentralizadas</b></b>: Proyectos como ArgoVPN y Sentinel aprovechan redes entre pares para un acceso resistente a la censura [].</li>
<li><b><b>Soporte para Linux</b></b>: Aunque algunos proveedores tienen retrasos en el soporte para Linux (e.g., problemas con la GUI de ProtonVPN), herramientas de código abierto como OpenVPN y WireGuard son bien soportadas [].</li>
</ul>

<p>
Los usuarios de Emacs pueden aprovechar Org-mode para documentar configuraciones de VPN e integrar PlantUML para visualizar configuraciones de red, mejorando la productividad y la claridad.
</p>
</div>
</div>
<div id="outline-container-org9064cd0" class="outline-2">
<h2 id="org9064cd0">Instalación y Uso de una VPN Gratuita en Linux: Ejemplo con ProtonVPN</h2>
<div class="outline-text-2" id="text-org9064cd0">
<p>
ProtonVPN ofrece un nivel gratuito compatible con Linux, lo que lo convierte en una excelente opción para usuarios de Emacs. A continuación, se presenta una guía paso a paso para instalar y usar ProtonVPN en una distribución de Linux (e.g., Ubuntu/Debian), con Org-mode para documentación y PlantUML para visualización.
</p>

<p>
<b><b>Paso 1: Instalar ProtonVPN</b></b>
ProtonVPN proporciona un cliente CLI para Linux, que se integra bien con los flujos de trabajo de Emacs. Sigue estos pasos:
</p>

<ol class="org-ol">
<li><b><b>Descargar el Paquete CLI de ProtonVPN</b></b>:
<ul class="org-ul">
<li>Visita el sitio web oficial de ProtonVPN y descarga el paquete `.deb` para sistemas basados en Debian o sigue las instrucciones para otras distribuciones.</li>
<li><p>
Comando:
</p>
<div class="org-src-container">
<pre class="src src-sh"><code>wget https://repo.protonvpn.com/debian/dists/stable/main/binary-all/protonvpn-stable-release_1.0.3-3_all.deb
sudo dpkg -i protonvpn-stable-release_1.0.3-3_all.deb
sudo apt update
sudo apt install -y proton-vpn-gnome-desktop
</code></pre>
</div></li>
</ul></li>

<li><b><b>Instalar Dependencias</b></b>:
<ul class="org-ul">
<li><p>
Asegúrate de que OpenVPN y NetworkManager estén instalados:
</p>
<div class="org-src-container">
<pre class="src src-sh"><code>sudo apt install -y openvpn network-manager-openvpn
</code></pre>
</div></li>
</ul></li>

<li><b><b>Iniciar Sesión en ProtonVPN</b></b>:
<ul class="org-ul">
<li><p>
Inicializa el cliente CLI de ProtonVPN:
</p>
<div class="org-src-container">
<pre class="src src-sh"><code>protonvpn-cli login &lt;tu-usuario-de-protonvpn&gt;
</code></pre>
</div></li>
<li>Sigue las indicaciones para ingresar tu contraseña.</li>
</ul></li>

<li><b><b>Conectar a un Servidor VPN</b></b>:
<ul class="org-ul">
<li><p>
Conéctate al servidor gratuito más rápido:
</p>
<div class="org-src-container">
<pre class="src src-sh"><code>protonvpn-cli connect --fastest
</code></pre>
</div></li>
</ul></li>
</ol>

<p>
<b><b>Paso 2: Verificar la Conexión</b></b>
</p>
<ul class="org-ul">
<li><p>
Comprueba tu dirección IP para confirmar que la VPN está activa:
</p>
<div class="org-src-container">
<pre class="src src-sh"><code>curl https://api.ipify.org
</code></pre>
</div></li>
<li>La salida debe ser diferente a tu IP real, indicando que la VPN está funcionando.</li>
</ul>

<p>
<b><b>Paso 3: Documentar en Org-mode</b></b>
Los usuarios de Emacs pueden documentar la configuración en un archivo Org-mode para una referencia fácil y publicación en GitHub. Aquí hay un fragmento de ejemplo en Org-mode:
</p>

<p>
#+BEGIN<sub>SRC</sub> org
</p>
</div>
</div>
<div id="outline-container-org5f4a1bc" class="outline-2">
<h2 id="org5f4a1bc">Configuración de ProtonVPN en Linux</h2>
<div class="outline-text-2" id="text-org5f4a1bc">
</div>
<div id="outline-container-org2da52dc" class="outline-3">
<h3 id="org2da52dc">Instalación</h3>
<div class="outline-text-3" id="text-org2da52dc">
<div class="org-src-container">
<pre class="src src-sh"><code>sudo apt install -y proton-vpn-gnome-desktop openvpn network-manager-openvpn
protonvpn-cli login &lt;usuario&gt;
protonvpn-cli connect --fastest
</code></pre>
</div>
</div>
</div>
<div id="outline-container-org1a3ee6c" class="outline-3">
<h3 id="org1a3ee6c">Verificación</h3>
<div class="outline-text-3" id="text-org1a3ee6c">
<div class="org-src-container">
<pre class="src src-sh"><code>curl https://api.ipify.org
</code></pre>
</div>
<p>
#+END<sub>SRC</sub>
</p>

<p>
<b><b>Paso 4: Visualizar con PlantUML</b></b>
Para ilustrar el proceso de conexión de ProtonVPN, usa este diagrama de actividad en PlantUML:
</p>


<figure id="org8f51587">
<img src="images/flujo-protonvpn.png" alt="flujo-protonvpn.png">

</figure>

<p>
<br>
</p>

<p>
<b><b>Paso 5: Publicar en GitHub</b></b>
Para publicar este artículo en GitHub:
</p>
<ol class="org-ol">
<li>Guarda la configuración de ProtonVPN como `vpn-blog-post-es.org` en tu repositorio.</li>
<li>Usa un generador de sitios estáticos como Hugo o Jekyll con soporte para Org-mode (e.g., `ox-hugo`) para convertir el archivo Org a HTML.</li>
<li>Sube el repositorio a GitHub, asegurándote de que los diagramas PlantUML se rendericen usando una Acción de GitHub [].</li>
</ol>

<p>
<b><b>Flujo de Trabajo de GitHub para PlantUML</b></b>
</p>
<div class="org-src-container">
<pre class="src src-yaml"><code><span style="color: #004651;">name</span>: Renderizar Diagramas PlantUML
<span style="color: #AF005F;">on</span>: [push]
<span style="color: #004651;">jobs</span>:
  <span style="color: #004651;">build</span>:
    <span style="color: #004651;">runs-on</span>: ubuntu-latest
    <span style="color: #004651;">steps</span>:
    - <span style="color: #004651;">uses</span>: actions/checkout@v3
    - <span style="color: #004651;">name</span>: Renderizar PlantUML
      <span style="color: #004651;">uses</span>: docker://plantuml/plantuml
      <span style="color: #004651;">run</span>: |
        <span style="color: #005F00;">for file in *.org; do</span>
<span style="color: #005F00;">          java -jar /plantuml.jar -tpng $file</span>
<span style="color: #005F00;">        done</span>
    - <span style="color: #004651;">name</span>: Confirmar Diagramas
      <span style="color: #004651;">run</span>: |
        git config --global user.name <span style="color: #005F00;">"GitHub Action"</span>
        git config --global user.email <span style="color: #005F00;">"action@github.com"</span>
<span style="color: #005F00;">        git add *.png</span>
        git commit -m <span style="color: #005F00;">"Agregar diagramas PlantUML renderizados"</span>
<span style="color: #005F00;">        git push</span>
</code></pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org80c515c" class="outline-2">
<h2 id="org80c515c">Mejores Prácticas para el Uso de VPNs en Linux</h2>
<div class="outline-text-2" id="text-org80c515c">
<ul class="org-ul">
<li><b><b>Verificar Fugas</b></b>: Usa herramientas como `dnsleaktest.com` para asegurarte de que no haya fugas de DNS o IP [].</li>
<li><b><b>Activar Kill Switch</b></b>: Configura tu cliente VPN para bloquear el acceso a internet si la VPN se desconecta.</li>
<li><b><b>Usar Herramientas de Código Abierto</b></b>: Prefiere protocolos de VPN de código abierto como OpenVPN o WireGuard por su transparencia [].</li>
<li><b><b>Actualizaciones Regulares</b></b>: Mantén actualizados tu cliente VPN y tu sistema para corregir vulnerabilidades.</li>
<li><b><b>Integración con Emacs</b></b>: Usa Org-mode para crear scripts y automatizar conexiones VPN, e.g., con `org-babel` para ejecutar comandos de shell.</li>
</ul>
</div>
</div>
<div id="outline-container-org869cacf" class="outline-2">
<h2 id="org869cacf">Conclusión</h2>
<div class="outline-text-2" id="text-org869cacf">
<p>
Las VPNs son herramientas poderosas para mejorar la privacidad y la seguridad en Linux, con una rica historia y avances continuos. Al aprovechar VPNs gratuitas como ProtonVPN y documentar configuraciones con Emacs Org-mode y PlantUML, los usuarios de Linux pueden mantener flujos de trabajo seguros y bien documentados. Publicar en GitHub asegura que tu conocimiento se comparta con la comunidad de código abierto, alineándose con la filosofía de colaboración y transparencia de Emacs.
</p>
</div>
</div>
<div id="outline-container-org41d04a1" class="outline-2">
<h2 id="org41d04a1">Referencias</h2>
<div class="outline-text-2" id="text-org41d04a1">
<div class="org-src-container">
<pre class="src src-org"><code>- [Web:1] Publicaci&#243;n de Reddit sobre la hoja de ruta de ProtonVPN, <span style="color: #009B7C; font-weight: bold; text-decoration: underline;"><a href="https://www.reddit.com/r/ProtonVPN/comments/yn3m0y/the_proton_vpn_roadmap/">https://www.reddit.com/r/ProtonVPN/comments/yn3m0y/the_proton_vpn_roadmap/</a></span>
- [Web:6] Gu&#237;a de CNET sobre servicios VPN, <span style="color: #009B7C; font-weight: bold; text-decoration: underline;"><a href="https://www.cnet.com/tech/services-and-software/best-vpn/">https://www.cnet.com/tech/services-and-software/best-vpn/</a></span>
- [Web:14] Repositorio de GitHub sobre Awesome VPN Network, <span style="color: #009B7C; font-weight: bold; text-decoration: underline;"><a href="https://github.com/GNU-Linux-libre/Awesome-VPN-Network">https://github.com/GNU-Linux-libre/Awesome-VPN-Network</a></span>
- [Web:15] Repositorio de GitHub de OpenVPN, <span style="color: #009B7C; font-weight: bold; text-decoration: underline;"><a href="https://github.com/OpenVPN/openvpn">https://github.com/OpenVPN/openvpn</a></span>
- [Web:20] Gu&#237;a de Inicio R&#225;pido de PlantUML, <span style="color: #009B7C; font-weight: bold; text-decoration: underline;"><a href="https://plantuml.com">https://plantuml.com</a></span>
</code></pre>
</div>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-vpn.html">vpn</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-privacidad.html">privacidad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-software-libre.html">software-libre</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-plantuml.html">plantuml</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-github.html">github</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[vpn]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[privacidad]]></category>
  <category><![CDATA[software-libre]]></category>
  <category><![CDATA[plantuml]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[github]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-08-explorando-vpns-or-genes-evoluci-n-beneficios-y-configuraci-n-de-una-vpn-gratuita-en-linux.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-08-explorando-vpns-or-genes-evoluci-n-beneficios-y-configuraci-n-de-una-vpn-gratuita-en-linux.html</guid>
  <pubDate>Sun, 08 Jun 2025 23:16:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[🔥 UFW en acción: Controla tu firewall desde Emacs como un ninja (ii)]]></title>
  <description><![CDATA[
<div id="outline-container-org045583a" class="outline-2">
<h2 id="org045583a">Introducción</h2>
</div>

<div id="outline-container-org5eb8a0c" class="outline-2">
<h2 id="org5eb8a0c">🛡️ ¿Qué es UFW?</h2>
<div class="outline-text-2" id="text-org5eb8a0c">
<p>
UFW (Uncomplicated Firewall) es una interfaz sencilla para gestionar iptables, pensada para usuarios que quieren una configuración rápida y segura de su firewall.
</p>
</div>
</div>
<div id="outline-container-org2312006" class="outline-2">
<h2 id="org2312006">✅ ¿Está activado UFW?</h2>
<div class="outline-text-2" id="text-org2312006">
<p>
Puedes verificar su estado con:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo ufw status verbose
</pre>
</div>

<p>
Ejemplo de salida:
</p>

<pre class="example" id="org1e2de99">
Status: active
Logging: on (low)
Default: deny (incoming), allow (outgoing), disabled (routed)
New profiles: skip
To                         Action      From
--                         ------      ----
22/tcp                     ALLOW IN    Anywhere
443/tcp                    ALLOW IN    Anywhere
</pre>
</div>
</div>
<div id="outline-container-org48fbc5f" class="outline-2">
<h2 id="org48fbc5f">🔍 Monitoreo de actividad en tiempo real</h2>
<div class="outline-text-2" id="text-org48fbc5f">
<p>
UFW registra los eventos en `/var/log/ufw.log`. Puedes ver los accesos bloqueados más recientes con:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo grep <span style="color: #a44185;">'BLOCK'</span> /var/log/ufw.log | tail -n 10
</pre>
</div>

<p>
O visualizarlos de forma más clara:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo awk <span style="color: #a44185;">'/BLOCK/ {print $1, $2, $3, $NF}'</span> /var/log/ufw.log | tail -n 10
</pre>
</div>
</div>
</div>
<div id="outline-container-org1e91d93" class="outline-2">
<h2 id="org1e91d93">📊 Tabla de intentos bloqueados</h2>
<div class="outline-text-2" id="text-org1e91d93">
<table id="org4656c48">
<caption class="t-above"><span class="table-number">Table 1:</span> Últimos intentos bloqueados (simulado)</caption>

<colgroup>
<col  class="org-left">

<col  class="org-right">

<col  class="org-right">

<col  class="org-right">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Fecha</th>
<th scope="col" class="org-right">Hora</th>
<th scope="col" class="org-right">IP Origen</th>
<th scope="col" class="org-right">Puerto</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Apr 17</td>
<td class="org-right">08:12</td>
<td class="org-right">203.0.113.45</td>
<td class="org-right">445</td>
</tr>

<tr>
<td class="org-left">Apr 17</td>
<td class="org-right">08:14</td>
<td class="org-right">198.51.100.23</td>
<td class="org-right">22</td>
</tr>

<tr>
<td class="org-left">Apr 17</td>
<td class="org-right">08:20</td>
<td class="org-right">192.0.2.10</td>
<td class="org-right">3389</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org5936ab5" class="outline-2">
<h2 id="org5936ab5">🌐 Diagrama de flujo con PlantUML</h2>
<div class="outline-text-2" id="text-org5936ab5">

<figure id="org1ffaed5">
<img src="images/ufw-diagrama.png" alt="ufw-diagrama.png">

</figure>
</div>
</div>
<div id="outline-container-org9d3f2c9" class="outline-2">
<h2 id="org9d3f2c9">🔧 Comandos esenciales de UFW</h2>
<div class="outline-text-2" id="text-org9d3f2c9">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Acción</th>
<th scope="col" class="org-left">Comando</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Activar UFW</td>
<td class="org-left"><code>sudo ufw enable</code></td>
</tr>

<tr>
<td class="org-left">Ver reglas activas</td>
<td class="org-left"><code>sudo ufw status</code></td>
</tr>

<tr>
<td class="org-left">Permitir puerto 80 (HTTP)</td>
<td class="org-left"><code>sudo ufw allow 80/tcp</code></td>
</tr>

<tr>
<td class="org-left">Bloquear IP maliciosa</td>
<td class="org-left"><code>sudo ufw deny from 192.168.1.100</code></td>
</tr>

<tr>
<td class="org-left">Eliminar regla</td>
<td class="org-left"><code>sudo ufw delete allow 80/tcp</code></td>
</tr>

<tr>
<td class="org-left">Reiniciar configuración</td>
<td class="org-left"><code>sudo ufw reset</code></td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org610c562" class="outline-2">
<h2 id="org610c562">📦 Consejo extra: Instala Gufw (modo gráfico)</h2>
<div class="outline-text-2" id="text-org610c562">
<p>
Si prefieres una interfaz gráfica:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt install gufw
</pre>
</div>
</div>
</div>
<div id="outline-container-org5a589a6" class="outline-2">
<h2 id="org5a589a6">🚨 Consejo de seguridad</h2>
<div class="outline-text-2" id="text-org5a589a6">
<p>
Activa la <b>política por defecto restrictiva</b> si aún no lo has hecho:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo ufw default deny incoming
sudo ufw default allow outgoing
</pre>
</div>


<p>
Este post te da visibilidad completa del comportamiento de tu firewall desde tu entorno favorito: <b>Emacs + Org Mode + PlantUML</b> 🧠🔥.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ufw.html">ufw</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-firewall.html">firewall</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-plantuml.html">plantuml</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[ufw]]></category>
  <category><![CDATA[firewall]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[plantuml]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-17--ufw-en-acci-n-controla-tu-firewall-desde-emacs-como-un-ninja-ii-.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-17--ufw-en-acci-n-controla-tu-firewall-desde-emacs-como-un-ninja-ii-.html</guid>
  <pubDate>Thu, 17 Apr 2025 07:00:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Configurar Emacs para creación de Graficos]]></title>
  <description><![CDATA[
<div id="outline-container-org9a98fc1" class="outline-2">
<h2 id="org9a98fc1"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
Uno de los grandes poderes ocultos de Emacs y Org Mode es su capacidad para generar gráficos directamente desde el texto. Esta funcionalidad permite a los usuarios crear visualizaciones sofisticadas sin salir de su editor, manteniendo todo el contenido en archivos de texto plano que son fáciles de versionar y mantener.
</p>

<p>
En este tutorial, exploraremos cómo configurar Emacs para trabajar con diferentes tipos de gráficos directamente desde Org Mode, incluyendo:
</p>

<ul class="org-ul">
<li>Gnuplot para gráficos científicos y estadísticos</li>
<li>Ditaa para diagramas ASCII</li>
<li>Graphviz (DOT) para diagramas estructurales</li>
<li>PlantUML para diagramas UML</li>
</ul>

<p>
Al final de este tutorial, podrás integrar gráficos impresionantes en tus documentos de Org Mode que se exportarán perfectamente a HTML, PDF y otros formatos.
</p>
</div>
</div>
<div id="outline-container-org38a3adf" class="outline-2">
<h2 id="org38a3adf"><span class="section-number-2">2.</span> Requisitos previos</h2>
<div class="outline-text-2" id="text-2">
<p>
Antes de comenzar, asegúrate de tener instalado:
</p>

<ul class="org-ul">
<li>Emacs (versión 27.1 o superior recomendada)</li>
<li>Org Mode (versión 9.4 o superior)</li>
<li>Los programas externos correspondientes para cada tipo de gráfico</li>
</ul>
</div>
</div>
<div id="outline-container-orge24413d" class="outline-2">
<h2 id="orge24413d"><span class="section-number-2">3.</span> Configuración básica de Org Babel</h2>
<div class="outline-text-2" id="text-3">
<p>
Lo primero que necesitamos es configurar Org Babel para permitir la ejecución de bloques de código que generarán nuestros gráficos. Añade este código a tu <code>init.el</code> o <code>.emacs</code>:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Activar Org Babel para los lenguajes que usaremos</span>
(<span style="color: #D70000;">with-eval-after-load</span> 'org
  (org-babel-do-load-languages
   'org-babel-load-languages
   '((emacs-lisp . t)
     (gnuplot . t)
     (ditaa . t)
     (dot . t)
     (plantuml . t)
     (mermaid . t))))

<span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">No pedir confirmaci&#243;n al ejecutar bloques de c&#243;digo</span>
(<span style="color: #D70000;">setq</span> org-confirm-babel-evaluate nil)
</pre>
</div>
</div>
</div>
<div id="outline-container-org172b3d3" class="outline-2">
<h2 id="org172b3d3"><span class="section-number-2">4.</span> Configuración de Gnuplot</h2>
<div class="outline-text-2" id="text-4">
<p>
<a href="https://www.gnuplot.info/">Gnuplot</a> es una herramienta potente para generar gráficos científicos y estadísticos.
</p>
</div>
<div id="outline-container-org0bd11a7" class="outline-3">
<h3 id="org0bd11a7"><span class="section-number-3">4.1.</span> Instalación</h3>
<div class="outline-text-3" id="text-4-1">
<p>
En sistemas basados en Debian/Ubuntu:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt-get install gnuplot
</pre>
</div>

<p>
En macOS con Homebrew:
</p>

<div class="org-src-container">
<pre class="src src-bash">brew install gnuplot
</pre>
</div>
</div>
</div>
<div id="outline-container-org1a9590f" class="outline-3">
<h3 id="org1a9590f"><span class="section-number-3">4.2.</span> Configuración en Emacs</h3>
<div class="outline-text-3" id="text-4-2">
<p>
Instala el paquete <code>gnuplot-mode</code> usando <code>package.el</code>:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">use-package</span> <span style="color: #AF005F;">gnuplot</span>
  <span style="color: #1F55A0;">:ensure</span> t)
</pre>
</div>
</div>
</div>
<div id="outline-container-org8ab48f0" class="outline-3">
<h3 id="org8ab48f0"><span class="section-number-3">4.3.</span> Ejemplo de uso</h3>
<div class="outline-text-3" id="text-4-3">
<p>
Crea un bloque de código en tu archivo Org Mode:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC gnuplot :file ./images/seno-coseno.png :exports both</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> terminal pngcairo size 800,600 enhanced font </span><span style="color: #005F00; background-color: #E9E9F2;">"Arial,12"</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> </span><span style="color: #1F55A0; background-color: #E9E9F2;">title</span><span style="background-color: #E9E9F2;"> </span><span style="color: #005F00; background-color: #E9E9F2;">"Funciones seno y coseno"</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> xlabel </span><span style="color: #005F00; background-color: #E9E9F2;">"x"</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> ylabel </span><span style="color: #005F00; background-color: #E9E9F2;">"y"</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> grid</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> key right bottom</span>
<span style="color: #D70000; background-color: #E9E9F2;">plot</span><span style="background-color: #E9E9F2;"> </span><span style="color: #AF8700; background-color: #E9E9F2;">sin</span><span style="background-color: #E9E9F2;">(x) </span><span style="color: #1F55A0; background-color: #E9E9F2;">title</span><span style="background-color: #E9E9F2;"> </span><span style="color: #005F00; background-color: #E9E9F2;">"sin(x)"</span><span style="background-color: #E9E9F2;"> </span><span style="color: #1F55A0; background-color: #E9E9F2;">with</span><span style="background-color: #E9E9F2;"> </span><span style="color: #AF8700; background-color: #E9E9F2;">lines</span><span style="background-color: #E9E9F2;"> </span><span style="color: #1F55A0; background-color: #E9E9F2;">linewidth</span><span style="background-color: #E9E9F2;"> 2, \</span>
<span style="background-color: #E9E9F2;">     </span><span style="color: #AF8700; background-color: #E9E9F2;">cos</span><span style="background-color: #E9E9F2;">(x) </span><span style="color: #1F55A0; background-color: #E9E9F2;">title</span><span style="background-color: #E9E9F2;"> </span><span style="color: #005F00; background-color: #E9E9F2;">"cos(x)"</span><span style="background-color: #E9E9F2;"> </span><span style="color: #1F55A0; background-color: #E9E9F2;">with</span><span style="background-color: #E9E9F2;"> </span><span style="color: #AF8700; background-color: #E9E9F2;">lines</span><span style="background-color: #E9E9F2;"> </span><span style="color: #1F55A0; background-color: #E9E9F2;">linewidth</span><span style="background-color: #E9E9F2;"> 2 </span><span style="color: #1F55A0; background-color: #E9E9F2;">linecolor</span><span style="background-color: #E9E9F2;"> rgb </span><span style="color: #005F00; background-color: #E9E9F2;">"red"</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>

<p>
Al ejecutar este bloque (con <code>C-c C-c</code>), obtendrás una imagen como esta:
</p>


<figure id="org1d2fd35">
<img src="images/seno-coseno.png" alt="seno-coseno.png">

<figcaption><span class="figure-number">Figure 1: </span>Gráfico de las funciones seno y coseno</figcaption>
</figure>
</div>
</div>
</div>
<div id="outline-container-org56edb83" class="outline-2">
<h2 id="org56edb83"><span class="section-number-2">5.</span> Configuración de Ditaa</h2>
<div class="outline-text-2" id="text-5">
<p>
<a href="http://ditaa.sourceforge.net/">Ditaa</a> convierte diagramas ASCII en imágenes.
</p>
</div>
<div id="outline-container-org2b1868b" class="outline-3">
<h3 id="org2b1868b"><span class="section-number-3">5.1.</span> Instalación</h3>
<div class="outline-text-3" id="text-5-1">
<p>
En sistemas basados en Debian/Ubuntu:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt-get install ditaa
</pre>
</div>

<p>
En macOS con Homebrew:
</p>

<div class="org-src-container">
<pre class="src src-bash">brew install ditaa
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf30a3b5" class="outline-3">
<h3 id="orgf30a3b5"><span class="section-number-3">5.2.</span> Configuración en Emacs</h3>
<div class="outline-text-3" id="text-5-2">
<p>
Debes especificar la ruta al ejecutable de ditaa:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">setq</span> org-ditaa-jar-path <span style="color: #005F00;">"/usr/share/ditaa/ditaa.jar"</span>)  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Ajusta esta ruta seg&#250;n tu sistema</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org2d5ba50" class="outline-3">
<h3 id="org2d5ba50"><span class="section-number-3">5.3.</span> Ejemplo de uso</h3>
<div class="outline-text-3" id="text-5-3">
<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC ditaa :file ./images/diagrama-sistema.png :exports both</span>
<span style="background-color: #E9E9F2;">+---------------+        +---------------+</span>
<span style="background-color: #E9E9F2;">|               |        |               |</span>
<span style="background-color: #E9E9F2;">|  Frontend     +-------&gt;+  API Gateway  |</span>
<span style="background-color: #E9E9F2;">|  (React)      |        |  (Node.js)    |</span>
<span style="background-color: #E9E9F2;">|               |        |               |</span>
<span style="background-color: #E9E9F2;">+-------+-------+        +-------+-------+</span>
<span style="background-color: #E9E9F2;">        ^                        |</span>
<span style="background-color: #E9E9F2;">        |                        v</span>
<span style="background-color: #E9E9F2;">        |                +-------+-------+</span>
<span style="background-color: #E9E9F2;">        |                |               |</span>
<span style="background-color: #E9E9F2;">        +----------------+  Database     |</span>
<span style="background-color: #E9E9F2;">                         |  (PostgreSQL) |</span>
<span style="background-color: #E9E9F2;">                         |               |</span>
<span style="background-color: #E9E9F2;">                         +---------------+</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>

<p>
Esto generará un diagrama como:
</p>


<figure id="orgf5913ed">
<img src="images/diagrama-sistema.png" alt="diagrama-sistema.png">

</figure>
</div>
</div>
</div>
<div id="outline-container-orgbd65f89" class="outline-2">
<h2 id="orgbd65f89"><span class="section-number-2">6.</span> Configuración de Graphviz (DOT)</h2>
<div class="outline-text-2" id="text-6">
<p>
<a href="https://graphviz.org/">Graphviz</a> es excelente para crear diagramas estructurales, como árboles y grafos.
</p>
</div>
<div id="outline-container-org67e27f9" class="outline-3">
<h3 id="org67e27f9"><span class="section-number-3">6.1.</span> Instalación</h3>
<div class="outline-text-3" id="text-6-1">
<p>
En sistemas basados en Debian/Ubuntu:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt-get install graphviz
</pre>
</div>

<p>
En macOS con Homebrew:
</p>

<div class="org-src-container">
<pre class="src src-bash">brew install graphviz
</pre>
</div>
</div>
</div>
<div id="outline-container-org046cd18" class="outline-3">
<h3 id="org046cd18"><span class="section-number-3">6.2.</span> Configuración en Emacs</h3>
<div class="outline-text-3" id="text-6-2">
<p>
No se requiere configuración adicional si Graphviz está en tu PATH.
</p>
</div>
</div>
<div id="outline-container-org8aa5bf8" class="outline-3">
<h3 id="org8aa5bf8"><span class="section-number-3">6.3.</span> Ejemplo de uso</h3>
<div class="outline-text-3" id="text-6-3">
<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC dot :file ./images/arbol-decisiones.png :exports both</span>
<span style="background-color: #E9E9F2;">digraph G {</span>
<span style="background-color: #E9E9F2;">  node [shape=box, style="rounded,filled", fillcolor=lightblue];</span>

<span style="background-color: #E9E9F2;">  A [label="&#191;Llueve?"];</span>
<span style="background-color: #E9E9F2;">  B [label="Llevar paraguas"];</span>
<span style="background-color: #E9E9F2;">  C [label="&#191;Hace fr&#237;o?"];</span>
<span style="background-color: #E9E9F2;">  D [label="Llevar abrigo"];</span>
<span style="background-color: #E9E9F2;">  E [label="Llevar chaqueta ligera"];</span>

<span style="background-color: #E9E9F2;">  A -&gt; B [label="S&#237;"];</span>
<span style="background-color: #E9E9F2;">  A -&gt; C [label="No"];</span>
<span style="background-color: #E9E9F2;">  C -&gt; D [label="S&#237;"];</span>
<span style="background-color: #E9E9F2;">  C -&gt; E [label="No"];</span>
<span style="background-color: #E9E9F2;">}</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>

<p>
Generará:
</p>


<figure id="org0220360">
<img src="images/arbol-decisiones.png" alt="arbol-decisiones.png">

<figcaption><span class="figure-number">Figure 2: </span>Árbol de decisiones sobre el clima</figcaption>
</figure>
</div>
</div>
</div>
<div id="outline-container-org527e3ce" class="outline-2">
<h2 id="org527e3ce"><span class="section-number-2">7.</span> Configuración de PlantUML</h2>
<div class="outline-text-2" id="text-7">
<p>
<a href="https://plantuml.com/">PlantUML</a> es una herramienta para crear diagramas UML a partir de texto.
</p>
</div>
<div id="outline-container-org7b20f7d" class="outline-3">
<h3 id="org7b20f7d"><span class="section-number-3">7.1.</span> Instalación</h3>
<div class="outline-text-3" id="text-7-1">
<p>
PlantUML requiere Java y Graphviz:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Para Debian/Ubuntu</span>
sudo apt-get install default-jre graphviz

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Descargar PlantUML</span>
wget https://sourceforge.net/projects/plantuml/files/plantuml.jar
</pre>
</div>
</div>
</div>
<div id="outline-container-orge16c228" class="outline-3">
<h3 id="orge16c228"><span class="section-number-3">7.2.</span> Configuración en Emacs</h3>
<div class="outline-text-3" id="text-7-2">
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">setq</span> org-plantuml-jar-path <span style="color: #005F00;">"~/ruta/a/plantuml.jar"</span>)  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Ajusta esta ruta</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org2804a65" class="outline-3">
<h3 id="org2804a65"><span class="section-number-3">7.3.</span> Ejemplo de uso</h3>
<div class="outline-text-3" id="text-7-3">
<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC plantuml :file ./images/diagrama-clases.png :exports both</span>
<span style="background-color: #E9E9F2;">@startuml</span>
<span style="background-color: #E9E9F2;">class Usuario {</span>
<span style="background-color: #E9E9F2;">  -id: int</span>
<span style="background-color: #E9E9F2;">  -nombre: String</span>
<span style="background-color: #E9E9F2;">  -email: String</span>
<span style="background-color: #E9E9F2;">  +login(): boolean</span>
<span style="background-color: #E9E9F2;">  +logout(): void</span>
<span style="background-color: #E9E9F2;">}</span>

<span style="background-color: #E9E9F2;">class Producto {</span>
<span style="background-color: #E9E9F2;">  -id: int</span>
<span style="background-color: #E9E9F2;">  -nombre: String</span>
<span style="background-color: #E9E9F2;">  -precio: float</span>
<span style="background-color: #E9E9F2;">  +aplicarDescuento(porcentaje: float): void</span>
<span style="background-color: #E9E9F2;">}</span>

<span style="background-color: #E9E9F2;">class Carrito {</span>
<span style="background-color: #E9E9F2;">  -items: List&lt;Producto&gt;</span>
<span style="background-color: #E9E9F2;">  +agregarProducto(p: Producto): void</span>
<span style="background-color: #E9E9F2;">  +eliminarProducto(id: int): void</span>
<span style="background-color: #E9E9F2;">  +calcularTotal(): float</span>
<span style="background-color: #E9E9F2;">}</span>

<span style="background-color: #E9E9F2;">Usuario "1" -- "0..*" Carrito : tiene &gt;</span>
<span style="background-color: #E9E9F2;">Carrito "1" o-- "0..*" Producto : contiene &gt;</span>
<span style="background-color: #E9E9F2;">@enduml</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>

<p>
Generará:
</p>


<figure id="org2931953">
<img src="images/diagrama-clases.png" alt="diagrama-clases.png">

<figcaption><span class="figure-number">Figure 3: </span>Diagrama de clases para una tienda online</figcaption>
</figure>
</div>
</div>
</div>
<div id="outline-container-orgd5d9e80" class="outline-2">
<h2 id="orgd5d9e80"><span class="section-number-2">8.</span> Configuración de Mermaid</h2>
<div class="outline-text-2" id="text-8">
<p>
<a href="https://mermaid-js.github.io/mermaid/">Mermaid</a> es una herramienta moderna para crear diagramas de flujo, secuencia, Gantt y más.
</p>
</div>
<div id="outline-container-org7ea272d" class="outline-3">
<h3 id="org7ea272d"><span class="section-number-3">8.1.</span> Instalación</h3>
<div class="outline-text-3" id="text-8-1">
<p>
Mermaid requiere Node.js:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Instalar mermaid-cli globalmente</span>
npm install -g @mermaid-js/mermaid-cli
</pre>
</div>
</div>
</div>
<div id="outline-container-org1cf1136" class="outline-3">
<h3 id="org1cf1136"><span class="section-number-3">8.2.</span> Configuración en Emacs</h3>
<div class="outline-text-3" id="text-8-2">
<p>
Primero, instala el paquete <code>ob-mermaid</code>:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">use-package</span> <span style="color: #AF005F;">ob-mermaid</span>
  <span style="color: #1F55A0;">:ensure</span> t
  <span style="color: #1F55A0;">:config</span>
  (<span style="color: #D70000;">setq</span> ob-mermaid-cli-path <span style="color: #005F00;">"/usr/local/bin/mmdc"</span>))  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Ajusta seg&#250;n tu instalaci&#243;n</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org0c254fe" class="outline-3">
<h3 id="org0c254fe"><span class="section-number-3">8.3.</span> Ejemplo de uso</h3>
<div class="outline-text-3" id="text-8-3">
<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC mermaid :file ./images/flujo-trabajo.png :exports both</span>
<span style="color: #D70000; background-color: #E9E9F2;">flowchart</span><span style="background-color: #E9E9F2;"> </span><span style="color: #AF005F; background-color: #E9E9F2;">TD</span>
<span style="background-color: #E9E9F2;">    A[Inicio] </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> B{&#191;Es un bug?}</span>
<span style="background-color: #E9E9F2;">    B </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|S&#237;| C[Reportar en JIRA]</span>
<span style="background-color: #E9E9F2;">    B </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|No| D{&#191;Es una caracter&#237;stica nueva?}</span>
<span style="background-color: #E9E9F2;">    C </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> E[Asignar desarrollador]</span>
<span style="background-color: #E9E9F2;">    D </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|S&#237;| F[Crear propuesta]</span>
<span style="background-color: #E9E9F2;">    D </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|No| G[Documentar como mejora]</span>
<span style="background-color: #E9E9F2;">    F </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> H[Revisi&#243;n por el equipo]</span>
<span style="background-color: #E9E9F2;">    G </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> H</span>
<span style="background-color: #E9E9F2;">    E </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> I[Desarrollo]</span>
<span style="background-color: #E9E9F2;">    H </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> I</span>
<span style="background-color: #E9E9F2;">    I </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> J[Testing]</span>
<span style="background-color: #E9E9F2;">    J </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> K{&#191;Pasa todos los tests?}</span>
<span style="background-color: #E9E9F2;">    K </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|No| I</span>
<span style="background-color: #E9E9F2;">    K </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|S&#237;| L[Despliegue]</span>
<span style="background-color: #E9E9F2;">    L </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> M[Fin]</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org1609664" class="outline-2">
<h2 id="org1609664"><span class="section-number-2">9.</span> Integración con org-static-blog</h2>
<div class="outline-text-2" id="text-9">
<p>
Para utilizar estos gráficos en tu blog creado con <code>org-static-blog</code>, asegúrate de:
</p>

<ol class="org-ol">
<li>Crear una estructura de directorios adecuada para tus imágenes:</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash">mkdir -p ~/ruta/a/tu/blog/images/
</pre>
</div>

<ol class="org-ol">
<li>Configurar <code>org-static-blog</code> para copiar las imágenes al generar el sitio:</li>
</ol>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">use-package</span> <span style="color: #AF005F;">org-static-blog</span>
  <span style="color: #1F55A0;">:ensure</span> t
  <span style="color: #1F55A0;">:config</span>
  (<span style="color: #D70000;">setq</span> org-static-blog-publish-title <span style="color: #005F00;">"Emacs con Esteroides"</span>)
  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Otras configuraciones...</span>

  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Importante: configurar para que copie las im&#225;genes</span>
  (<span style="color: #D70000;">setq</span> org-static-blog-publish-url <span style="color: #005F00;">"https://tu-dominio.com/"</span>)
  (<span style="color: #D70000;">setq</span> org-static-blog-publish-directory <span style="color: #005F00;">"~/ruta/al/directorio/p&#250;blico/"</span>)
  (<span style="color: #D70000;">setq</span> org-static-blog-posts-directory <span style="color: #005F00;">"~/ruta/a/tus/posts/"</span>)
  (<span style="color: #D70000;">setq</span> org-static-blog-drafts-directory <span style="color: #005F00;">"~/ruta/a/tus/borradores/"</span>)
  (<span style="color: #D70000;">setq</span> org-static-blog-enable-tags t)

  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Copiar directorio de im&#225;genes al publicar</span>
  (<span style="color: #D70000;">defun</span> <span style="color: #AF8700;">copy-images-after-publish</span> ()
    (copy-directory <span style="color: #005F00;">"~/ruta/a/tu/blog/images/"</span>
                   (concat org-static-blog-publish-directory <span style="color: #005F00;">"/images/"</span>)
                   t t t))

  (add-hook 'org-static-blog-publish-after-hook 'copy-images-after-publish))
</pre>
</div>

<ol class="org-ol">
<li>Referencia las imágenes correctamente en tus posts de Org Mode:</li>
</ol>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #009B7C; font-weight: bold; text-decoration: underline;"><a href="../images/nombre-del-grafico.png">../images/nombre-del-grafico.png</a></span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org277bc3a" class="outline-2">
<h2 id="org277bc3a"><span class="section-number-2">10.</span> Consejos avanzados</h2>
<div class="outline-text-2" id="text-10">
</div>
<div id="outline-container-orge7a01a7" class="outline-3">
<h3 id="orge7a01a7"><span class="section-number-3">10.1.</span> Ejecutar bloques automáticamente al exportar</h3>
<div class="outline-text-3" id="text-10-1">
<p>
Para asegurarte de que los gráficos siempre estén actualizados al exportar:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">setq</span> org-export-babel-evaluate t)
</pre>
</div>
</div>
</div>
<div id="outline-container-org823235d" class="outline-3">
<h3 id="org823235d"><span class="section-number-3">10.2.</span> Caché de resultados</h3>
<div class="outline-text-3" id="text-10-2">
<p>
Para evitar regenerar gráficos que no han cambiado:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC gnuplot :file ./images/grafico.png :exports both :cache yes</span>
<span style="background-color: #E9E9F2;">;; C&#243;digo del gr&#225;fico</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org3a28adf" class="outline-3">
<h3 id="org3a28adf"><span class="section-number-3">10.3.</span> Personalización de estilos</h3>
<div class="outline-text-3" id="text-10-3">
<p>
Crea un archivo <code>.gnuplot</code> en tu directorio home para personalizar estilos globales:
</p>
</div>
</div>
</div>
<div id="outline-container-org97f66d0" class="outline-2">
<h2 id="org97f66d0"><span class="section-number-2">11.</span> Conclusión</h2>
<div class="outline-text-2" id="text-11">
<p>
Con estas configuraciones, has convertido tu Emacs en una potente herramienta para la creación de gráficos y diagramas integrados directamente en tus documentos de Org Mode. Esta capacidad es especialmente útil para blogs técnicos como "Emacs con Esteroides", permitiéndote mantener todo tu contenido, incluidos los gráficos, como texto plano versionable.
</p>

<p>
La combinación de Org Mode con herramientas como Gnuplot, Ditaa, Graphviz, PlantUML y Mermaid te da un control sin precedentes sobre tus visualizaciones, sin necesidad de recurrir a programas externos complejos o formatos binarios que dificultan el versionado.
</p>

<p>
¿Qué gráficos crearás para tu próximo artículo?
</p>
</div>
</div>
<div id="outline-container-org5698df7" class="outline-2">
<h2 id="org5698df7"><span class="section-number-2">12.</span> Referencias y recursos adicionales</h2>
<div class="outline-text-2" id="text-12">
<ul class="org-ul">
<li><a href="https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-gnuplot.html">Documentación oficial de Org Babel para Gnuplot</a></li>
<li><a href="https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-ditaa.html">Documentación de Org Babel para Ditaa</a></li>
<li><a href="https://graphviz.org/documentation/">Documentación oficial de Graphviz</a></li>
<li><a href="https://plantuml.com/es/">Sitio oficial de PlantUML (en español)</a></li>
<li><a href="https://mermaid-js.github.io/mermaid/#/">Documentación de Mermaid</a></li>
<li><a href="https://github.com/bastibe/org-static-blog">Repositorio de org-static-blog en GitHub</a></li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutorial.html">tutorial</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-gráficos.html">gráficos</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-gnuplot.html">gnuplot</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-plantuml.html">plantuml</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-draft.html">draft</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-gnuplot.html">gnuplot</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ditaa.html">ditaa</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-graphviz.html">graphviz</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-plantuml.html">plantUML</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[tutorial]]></category>
  <category><![CDATA[gráficos]]></category>
  <category><![CDATA[gnuplot]]></category>
  <category><![CDATA[plantuml]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[draft]]></category>
  <category><![CDATA[gnuplot]]></category>
  <category><![CDATA[ditaa]]></category>
  <category><![CDATA[graphviz]]></category>
  <category><![CDATA[plantUML]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-29-configurar-emacs-para-creaci%C3%B3n-de-graficos.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-29-configurar-emacs-para-creaci%C3%B3n-de-graficos.html</guid>
  <pubDate>Sat, 29 Mar 2025 18:56:00 +0100</pubDate>
</item>
</channel>
</rss>
