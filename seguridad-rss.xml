<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title><![CDATA[Example.com - seguridad]]></title>
<description><![CDATA[Example.com - seguridad]]></description>
<link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI//tag-seguridad.html</link>
<lastBuildDate>Fri, 18 Apr 2025 09:50:48 +0200</lastBuildDate>
<item>
  <title><![CDATA[Monitorizaci√≥n r√°pida de vulnerabilidades en Ubuntu desde Emacs (i)]]></title>
  <description><![CDATA[
<div id="outline-container-org58c6a89" class="outline-2">
<h2 id="org58c6a89">Introducci√≥n</h2>
<div class="outline-text-2" id="text-org58c6a89">
<p>
¬øQuieres una forma sencilla y r√°pida de hacer un chequeo de seguridad a tu sistema desde tu entorno Emacs? Aqu√≠ tienes un script en bash que podr√°s ejecutar desde la terminal o Emacs usando `shell-command`, y que adem√°s genera un log y un archivo `.org` con los resultados.
</p>
</div>
</div>
<div id="outline-container-orgf561e67" class="outline-2">
<h2 id="orgf561e67">PlantUML Diagram for "scan<sub>seguridad.sh</sub>" Workflow</h2>
<div class="outline-text-2" id="text-orgf561e67">
<p>
This diagram represents the sequence of operations performed by the `scan<sub>seguridad.sh</sub>` script to monitor system security and generate logs and Org Mode reports.
</p>


<figure id="org82693ad">
<img src="images/scan_seguridad_diagram.png" alt="scan_seguridad_diagram.png" width="500px" height="500px">

</figure>
</div>
</div>
<div id="outline-container-org0ea2fb0" class="outline-2">
<h2 id="org0ea2fb0">Herramientas necesarias</h2>
<div class="outline-text-2" id="text-org0ea2fb0">
<p>
Este script usar√°:
</p>

<ul class="org-ul">
<li>`nmap` (para escanear puertos locales)</li>
<li>`netstat` o `ss` (interfaces y conexiones)</li>
<li>`curl` (para detectar IP p√∫blica y posibles amenazas)</li>
<li>`whois`, `ip`, `free`, `top` o `ps`</li>
<li>`chkrootkit` o `rkhunter` (si los tienes instalados)</li>
<li>`fail2ban-client` (opcional)</li>
</ul>

<p>
Si alguna herramienta no est√° instalada, el script la sugerir√° autom√°ticamente.
</p>

<p>
Puedes instalar las b√°sicas con:
</p>

<div class="org-src-container">
<pre class="src src-shell">sudo apt update &amp;&amp; sudo apt install nmap curl whois net-tools chkrootkit -y
</pre>
</div>
</div>
</div>
<div id="outline-container-org6b259eb" class="outline-2">
<h2 id="org6b259eb">üöÄ Script de an√°lisis r√°pido</h2>
<div class="outline-text-2" id="text-org6b259eb">
<p>
Guarda este archivo como <code>scan_seguridad.sh</code> y ejec√∫talo como superusuario:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #1857a4;">LOGFILE</span>=<span style="color: #a44185;">"$HOME/seguridad/logs/seguridad_$(</span><span style="color: #219fd5; font-weight: bold;">date +%F_%H%M</span><span style="color: #a44185;">).log"</span>
<span style="color: #1857a4;">ORGFILE</span>=<span style="color: #a44185;">"$HOME/seguridad/reportes/seguridad_$(</span><span style="color: #219fd5; font-weight: bold;">date +%F_%H%M</span><span style="color: #a44185;">).org"</span>
mkdir -p <span style="color: #a44185;">"$(</span><span style="color: #219fd5; font-weight: bold;">dirname "$LOGFILE"</span><span style="color: #a44185;">)"</span>
mkdir -p <span style="color: #a44185;">"$(</span><span style="color: #219fd5; font-weight: bold;">dirname "$ORGFILE"</span><span style="color: #a44185;">)"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"* Informe de seguridad generado el $(</span><span style="color: #219fd5; font-weight: bold;">date</span><span style="color: #a44185;">)"</span> &gt; <span style="color: #a44185;">"$ORGFILE"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"------------------------------------------"</span> &gt; <span style="color: #a44185;">"$LOGFILE"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#129504; Memoria y carga del sistema"</span> | tee -a <span style="color: #a44185;">"$ORGFILE"</span> &gt;&gt; <span style="color: #a44185;">"$LOGFILE"</span>
free -h | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
uptime | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#127760; Interfaces de red activas"</span> | tee -a <span style="color: #a44185;">"$ORGFILE"</span> &gt;&gt; <span style="color: #a44185;">"$LOGFILE"</span>
ip addr show | grep inet | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#128272; Puertos abiertos (localhost)"</span> | tee -a <span style="color: #a44185;">"$ORGFILE"</span> &gt;&gt; <span style="color: #a44185;">"$LOGFILE"</span>
nmap -sT -p- 127.0.0.1 | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#128373;&#65039; Conexiones activas sospechosas"</span> | tee -a <span style="color: #a44185;">"$ORGFILE"</span> &gt;&gt; <span style="color: #a44185;">"$LOGFILE"</span>
ss -tunap | grep -v <span style="color: #a44185;">"127.0.0.1"</span> | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#128680; IP p&#250;blica y an&#225;lisis b&#225;sico"</span> | tee -a <span style="color: #a44185;">"$ORGFILE"</span> &gt;&gt; <span style="color: #a44185;">"$LOGFILE"</span>
<span style="color: #1857a4;">IP</span>=$(<span style="color: #219fd5; font-weight: bold;">curl -s ifconfig.me</span>)
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"IP p&#250;blica: $IP"</span> | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
whois <span style="color: #a44185;">"$IP"</span> | grep -iE <span style="color: #a44185;">"org|country|name"</span> | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#128269; An&#225;lisis rootkits (chkrootkit si disponible)"</span> | tee -a <span style="color: #a44185;">"$ORGFILE"</span> &gt;&gt; <span style="color: #a44185;">"$LOGFILE"</span>
<span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v chkrootkit &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    chkrootkit | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
<span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"chkrootkit no instalado. Inst&#225;lalo con: sudo apt install chkrootkit"</span> | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#128202; Procesos sospechosos (m&#225;s consumo CPU)"</span> | tee -a <span style="color: #a44185;">"$ORGFILE"</span> &gt;&gt; <span style="color: #a44185;">"$LOGFILE"</span>
ps aux --sort=-%cpu | head -n 10 | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#9989; Recomendaciones generales"</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Verifica puertos abiertos innecesarios"</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Usa firewalld o ufw para cerrar conexiones"</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Revisa procesos con consumo elevado"</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Instala y configura fail2ban si es un servidor expuesto"</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgbb93516" class="outline-2">
<h2 id="orgbb93516">‚úÖ C√≥mo usarlo desde Emacs</h2>
<div class="outline-text-2" id="text-orgbb93516">
<p>
Puedes ejecutar el script directamente desde Emacs con:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(shell-command <span style="color: #a44185;">"bash ~/scan_seguridad.sh"</span>)
</pre>
</div>

<p>
O tambi√©n a√±adirlo a una funci√≥n interactiva personalizada.
</p>
</div>
</div>
<div id="outline-container-org68d470d" class="outline-2">
<h2 id="org68d470d">üìÇ Logs generados</h2>
<div class="outline-text-2" id="text-org68d470d">
<ul class="org-ul">
<li>Archivo `.log` con todos los comandos ejecutados.</li>
<li>Archivo `.org` con formato limpio para visualizar y exportar desde Org Mode.</li>
</ul>
</div>
</div>
<div id="outline-container-org682b3cf" class="outline-2">
<h2 id="org682b3cf">üöß Futuras mejoras</h2>
<div class="outline-text-2" id="text-org682b3cf">
<ul class="org-ul">
<li>Clasificaci√≥n autom√°tica de amenazas</li>
<li>Exportaci√≥n a HTML para informe web</li>
<li>Env√≠o por correo o Telegram</li>
</ul>

<p>
¬°La seguridad tambi√©n se hace desde Emacs! üòâ
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categor√≠a</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-orgmode.html">orgmode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-script.html">script</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[orgmode]]></category>
  <category><![CDATA[script]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-17--monitorizaci-n-r-pida-de-vulnerabilidades-en-ubuntu-desde-emacs-i-.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-17--monitorizaci-n-r-pida-de-vulnerabilidades-en-ubuntu-desde-emacs-i-.html</guid>
  <pubDate>Thu, 17 Apr 2025 06:46:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Fortaleciendo la Seguridad Inform√°tica con Snort y AIDE: Gu√≠a Completa]]></title>
  <description><![CDATA[
<div id="outline-container-orgc52fbcf" class="outline-2">
<h2 id="orgc52fbcf">Introducci√≥n</h2>
<div class="outline-text-2" id="text-orgc52fbcf">
<p>
La seguridad inform√°tica es un aspecto fundamental para cualquier sistema, especialmente en la era digital actual donde las amenazas evolucionan constantemente. En esta gu√≠a detallada, exploraremos dos herramientas esenciales para complementar tu estrategia de seguridad: <b>Snort</b> y <b>AIDE</b>.
</p>

<ul class="org-ul">
<li><b>Snort</b>: Un sistema de detecci√≥n y prevenci√≥n de intrusiones (IDS/IPS) basado en red que analiza el tr√°fico en tiempo real para identificar patrones sospechosos.</li>
<li><b>AIDE</b> (Advanced Intrusion Detection Environment): Una herramienta de detecci√≥n de intrusiones basada en host que monitorea la integridad de los archivos del sistema.</li>
</ul>

<p>
La combinaci√≥n de estas herramientas proporciona una defensa en profundidad, permiti√©ndote detectar tanto intrusiones a nivel de red como modificaciones no autorizadas en tus archivos del sistema.
</p>


<figure id="org611842f">
<img src="images/arquitectura-seguridad.png" alt="arquitectura-seguridad.png">

</figure>
</div>
</div>
<div id="outline-container-org55d4434" class="outline-2">
<h2 id="org55d4434">Parte 1: Instalaci√≥n y Configuraci√≥n de Snort</h2>
<div class="outline-text-2" id="text-org55d4434">
</div>
<div id="outline-container-orge3efe91" class="outline-3">
<h3 id="orge3efe91">¬øQu√© es Snort?</h3>
<div class="outline-text-3" id="text-orge3efe91">
<p>
Snort es un sistema de detecci√≥n y prevenci√≥n de intrusiones (IDS/IPS) de c√≥digo abierto, creado por Martin Roesch en 1998. Esta poderosa herramienta analiza el tr√°fico de red en tiempo real, compar√°ndolo con una base de datos de reglas para identificar posibles ataques, escaneos, exploits y otras actividades maliciosas.
</p>

<p>
Snort puede funcionar en tres modos principales:
</p>
<ol class="org-ol">
<li><b>Modo Sniffer</b>: Simplemente lee los paquetes de la red y los muestra en pantalla.</li>
<li><b>Modo Registro de Paquetes</b>: Guarda los paquetes en el disco para an√°lisis posterior.</li>
<li><b>Modo NIDS</b> (Network Intrusion Detection System): Analiza el tr√°fico de red en busca de coincidencias con patrones predefinidos.</li>
<li><b>Modo NIPS</b> (Network Intrusion Prevention System): Adem√°s de detectar, puede bloquear activamente tr√°fico malicioso.</li>
</ol>
</div>
</div>
<div id="outline-container-org4a543f2" class="outline-3">
<h3 id="org4a543f2">Requisitos Previos</h3>
<div class="outline-text-3" id="text-org4a543f2">
<p>
Antes de instalar Snort, aseg√∫rate de contar con:
</p>

<ul class="org-ul">
<li>Sistema operativo Linux (esta gu√≠a usa Ubuntu/Debian, pero puede adaptarse)</li>
<li>Privilegios de administrador (sudo/root)</li>
<li>Conexi√≥n a Internet para descargar paquetes</li>
<li>Libpcap (biblioteca para captura de paquetes)</li>
<li>DAQ (Data Acquisition Library)</li>
</ul>
</div>
</div>
<div id="outline-container-org5fb90e7" class="outline-3">
<h3 id="org5fb90e7">Instalaci√≥n de Snort en Debian/Ubuntu</h3>
<div class="outline-text-3" id="text-org5fb90e7">
<p>
Primero, instalemos las dependencias necesarias:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt update
sudo apt install -y build-essential libpcap-dev libpcre3-dev libnet1-dev <span style="color: #a44185;">\</span>
zlib1g-dev luajit hwloc libdnet-dev libdumbnet-dev bison flex liblzma-dev <span style="color: #a44185;">\</span>
openssl libssl-dev libnghttp2-dev libluajit-5.1-dev pkg-config libhwloc-dev <span style="color: #a44185;">\</span>
cmake cpputest
</pre>
</div>

<p>
A continuaci√≥n, instalamos Snort desde los repositorios (aunque tambi√©n veremos c√≥mo compilarlo desde el c√≥digo fuente):
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt install -y snort
</pre>
</div>

<p>
Durante la instalaci√≥n, se te pedir√° configurar tu red local. Introduce el rango de direcciones de tu red (por ejemplo, 192.168.1.0/24).
</p>
</div>
</div>
<div id="outline-container-org671a1aa" class="outline-3">
<h3 id="org671a1aa">Instalaci√≥n desde el c√≥digo fuente (alternativa)</h3>
<div class="outline-text-3" id="text-org671a1aa">
<p>
Para tener la versi√≥n m√°s reciente, puedes compilar Snort desde el c√≥digo fuente:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Descargar y compilar DAQ</span>
<span style="color: #dc3eb7;">cd</span> ~/Downloads
wget https://github.com/snort3/libdaq/archive/refs/tags/v3.0.12.tar.gz
tar -xzvf v3.0.12.tar.gz
<span style="color: #dc3eb7;">cd</span> libdaq-3.0.12/
./bootstrap
./configure
make
sudo make install

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Descargar y compilar Snort</span>
<span style="color: #dc3eb7;">cd</span> ~/Downloads
wget https://github.com/snort3/snort3/archive/refs/tags/3.1.76.0.tar.gz
tar -xzvf 3.1.76.0.tar.gz
<span style="color: #dc3eb7;">cd</span> snort3-3.1.76.0/
./configure_cmake.sh --prefix=/usr/local --enable-tcmalloc
<span style="color: #dc3eb7;">cd</span> build
make
sudo make install
sudo ldconfig

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar la instalaci&#243;n</span>
snort -V
</pre>
</div>
</div>
</div>
<div id="outline-container-org22a5aac" class="outline-3">
<h3 id="org22a5aac">Configuraci√≥n B√°sica de Snort</h3>
<div class="outline-text-3" id="text-org22a5aac">
<p>
El archivo principal de configuraci√≥n se encuentra en `/etc/snort/snort.conf` (o en `/usr/local/etc/snort/snort.conf` si compilaste desde el c√≥digo fuente). Vamos a realizar algunas configuraciones b√°sicas:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo cp /etc/snort/snort.conf /etc/snort/snort.conf.bak  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear backup</span>
sudo nano /etc/snort/snort.conf
</pre>
</div>

<p>
Dentro del archivo, busca y modifica las siguientes secciones:
</p>

<p>
<b>Configuraci√≥n de red</b>: Define tu red local para que Snort pueda diferenciar entre tr√°fico interno y externo.
</p>
<div class="org-src-container">
<pre class="src src-bash">ipvar HOME_NET 192.168.1.0/24
ipvar EXTERNAL_NET !$<span style="color: #1857a4;">HOME_NET</span>
</pre>
</div>

<p>
<b>Rutas de reglas</b>: Aseg√∫rate de que las rutas a los archivos de reglas sean correctas.
</p>
<div class="org-src-container">
<pre class="src src-bash">var RULE_PATH /etc/snort/rules
var SO_RULE_PATH /etc/snort/so_rules
var PREPROC_RULE_PATH /etc/snort/preproc_rules
</pre>
</div>

<p>
<b>Preprocesadores</b>: Habilita los preprocesadores necesarios seg√∫n tus necesidades:
</p>
<div class="org-src-container">
<pre class="src src-bash">preprocessor frag3_global: max_frags 65536
preprocessor frag3_engine: policy windows detect_anomalies
preprocessor stream5_global: track_tcp yes, track_udp yes
</pre>
</div>

<p>
<b>Reglas</b>: Descomenta las reglas que deseas utilizar:
</p>
<div class="org-src-container">
<pre class="src src-bash">include $<span style="color: #1857a4;">RULE_PATH</span>/local.rules
include $<span style="color: #1857a4;">RULE_PATH</span>/bad-traffic.rules
include $<span style="color: #1857a4;">RULE_PATH</span>/exploit.rules
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">... otras reglas seg&#250;n necesidades ...</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org3ca258b" class="outline-3">
<h3 id="org3ca258b">Creaci√≥n de Reglas Personalizadas</h3>
<div class="outline-text-3" id="text-org3ca258b">
<p>
Las reglas de Snort son extremadamente poderosas y flexibles. Vamos a crear algunas reglas personalizadas en el archivo `/etc/snort/rules/local.rules`:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/snort/rules/local.rules
</pre>
</div>

<p>
A√±ade estas reglas de ejemplo:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Alerta por escaneo de puertos</span>
alert tcp any any -&gt; $<span style="color: #1857a4;">HOME_NET</span> any (msg:<span style="color: #a44185;">"Posible escaneo de puertos TCP"</span>; flags:S; threshold: type threshold, track by_src, count 50, seconds 60; sid:1000001; rev:1;)
</pre>
</div>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Alerta por intentos de acceso SSH m&#250;ltiples</span>
alert tcp any any -&gt; $<span style="color: #1857a4;">HOME_NET</span> 22 (msg:<span style="color: #a44185;">"Posible ataque de fuerza bruta SSH"</span>; flow:to_server; threshold: type threshold, track by_src, count 5, seconds 60; sid:1000002; rev:1;)
</pre>
</div>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Alerta por acceso a la p&#225;gina de administraci&#243;n</span>
alert tcp any any -&gt; $<span style="color: #1857a4;">HOME_NET</span> 80 (msg:<span style="color: #a44185;">"Acceso a panel de administraci&#243;n"</span>; content:<span style="color: #a44185;">"GET /admin"</span>; nocase; sid:1000003; rev:1;)
</pre>
</div>
</div>
</div>
<div id="outline-container-orgcb4c5a9" class="outline-3">
<h3 id="orgcb4c5a9">Verificaci√≥n de la Configuraci√≥n</h3>
<div class="outline-text-3" id="text-orgcb4c5a9">
<p>
Antes de iniciar Snort, verifica que tu configuraci√≥n no tenga errores:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo snort -T -c /etc/snort/snort.conf
</pre>
</div>

<p>
Si todo est√° correcto, deber√≠as ver "Snort successfully validated the configuration!"
</p>
</div>
</div>
<div id="outline-container-org92320c0" class="outline-3">
<h3 id="org92320c0">Ejecuci√≥n de Snort</h3>
<div class="outline-text-3" id="text-org92320c0">
<p>
Para ejecutar Snort en modo IDS:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo snort -A console -q -c /etc/snort/snort.conf -D
</pre>
</div>

<p>
Opciones comunes:
</p>
<ul class="org-ul">
<li>`-A console`: Muestra las alertas en la consola</li>
<li>`-q`: Modo silencioso</li>
<li>`-c`: Ruta al archivo de configuraci√≥n</li>
<li>`-D`: Ejecutar como demonio</li>
</ul>

<p>
Para ejecutar Snort en modo IPS (usando NFQ):
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo snort -c /etc/snort/snort.conf -Q --daq nfq --daq-var <span style="color: #1857a4;">queue</span>=1
</pre>
</div>
</div>
</div>
<div id="outline-container-orgdec95e9" class="outline-3">
<h3 id="orgdec95e9">Configuraci√≥n como Servicio</h3>
<div class="outline-text-3" id="text-orgdec95e9">
<p>
Para que Snort se inicie autom√°ticamente al arrancar el sistema:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/systemd/system/snort.service
</pre>
</div>

<p>
A√±ade el siguiente contenido:
</p>

<div class="org-src-container">
<pre class="src src-bash">[Unit]
<span style="color: #1857a4;">Description</span>=Snort NIDS Daemon
<span style="color: #1857a4;">After</span>=network.target

[Service]
<span style="color: #1857a4;">Type</span>=simple
<span style="color: #1857a4;">ExecStart</span>=/usr/sbin/snort -c /etc/snort/snort.conf -D
<span style="color: #1857a4;">Restart</span>=on-failure

[Install]
<span style="color: #1857a4;">WantedBy</span>=multi-user.target
</pre>
</div>


<p>
Habilita e inicia el servicio:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo systemctl enable snort.service
sudo systemctl start snort.service
sudo systemctl status snort.service
</pre>
</div>
</div>
</div>
<div id="outline-container-orgdbb5052" class="outline-3">
<h3 id="orgdbb5052">Visualizaci√≥n con diagrama PlantUML</h3>
<div class="outline-text-3" id="text-orgdbb5052">
<p>
El flujo de trabajo de Snort puede representarse visualmente:
</p>


<figure id="org02ef8d8">
<img src="images/flujo-snort.png" alt="flujo-snort.png">

</figure>
</div>
</div>
</div>
<div id="outline-container-orgb698de7" class="outline-2">
<h2 id="orgb698de7">Parte 2: Instalaci√≥n y Configuraci√≥n de AIDE</h2>
<div class="outline-text-2" id="text-orgb698de7">
</div>
<div id="outline-container-org8fbecb6" class="outline-3">
<h3 id="org8fbecb6">¬øQu√© es AIDE?</h3>
<div class="outline-text-3" id="text-org8fbecb6">
<p>
AIDE (Advanced Intrusion Detection Environment) es una herramienta de detecci√≥n de intrusiones basada en host que verifica la integridad de los archivos del sistema. Funciona creando una base de datos de los atributos de los archivos y directorios, como permisos, timestamps, checksums y contenido. Posteriormente, puede detectar cualquier cambio no autorizado en estos atributos.
</p>

<p>
AIDE es especialmente √∫til para:
</p>
<ul class="org-ul">
<li>Detectar modificaciones no autorizadas en archivos cr√≠ticos del sistema</li>
<li>Identificar instalaciones de rootkits o backdoors</li>
<li>Verificar la integridad del sistema tras un incidente de seguridad</li>
<li>Cumplir con requisitos de auditor√≠a y conformidad</li>
</ul>
</div>
</div>
<div id="outline-container-orgadf285a" class="outline-3">
<h3 id="orgadf285a">Instalaci√≥n de AIDE</h3>
<div class="outline-text-3" id="text-orgadf285a">
<p>
En sistemas Debian/Ubuntu:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt update
sudo apt install -y aide
</pre>
</div>

<p>
En sistemas basados en Red Hat (RHEL, CentOS, Fedora):
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo yum install -y aide
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">o con dnf</span>
sudo dnf install -y aide
</pre>
</div>
</div>
</div>
<div id="outline-container-org1e4fd00" class="outline-3">
<h3 id="org1e4fd00">Configuraci√≥n B√°sica de AIDE</h3>
<div class="outline-text-3" id="text-org1e4fd00">
<p>
El archivo principal de configuraci√≥n se encuentra en `/etc/aide/aide.conf`. Vamos a realizar una configuraci√≥n b√°sica:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo cp /etc/aide/aide.conf /etc/aide/aide.conf.bak  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear backup</span>
sudo nano /etc/aide/aide.conf
</pre>
</div>

<p>
El archivo contiene definiciones de grupos de reglas y los directorios/archivos a los que aplicarlas. Aqu√≠ hay algunos ejemplos importantes:
</p>

<div class="org-src-container">
<pre class="src src-bash">
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Definici&#243;n de grupos de reglas</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">NORMAL = checksums + atributos de archivo + permisos</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">DATAONLY = solo checksums</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">LOGS = como NORMAL pero permitiendo cambios en el tama&#241;o</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">...</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Directorios/archivos a monitorear</span>
/etc NORMAL
/bin NORMAL
/sbin NORMAL
/usr NORMAL
/boot NORMAL
/root NORMAL
<span style="color: #219fd5; font-weight: bold;">!</span>/var/log/.*  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Excluir logs - pueden cambiar frecuentemente</span>
<span style="color: #219fd5; font-weight: bold;">!</span>/var/spool/.* <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Excluir spool</span>
<span style="color: #219fd5; font-weight: bold;">!</span>/var/tmp/.* <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Excluir temporales</span>

</pre>
</div>
</div>
</div>
<div id="outline-container-orgf7d9ce6" class="outline-3">
<h3 id="orgf7d9ce6">Personalizaci√≥n de la Configuraci√≥n</h3>
<div class="outline-text-3" id="text-orgf7d9ce6">
<p>
Vamos a personalizar la configuraci√≥n para adaptarla a nuestras necesidades:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/aide/aide.conf
</pre>
</div>

<p>
A√±ade o modifica estas l√≠neas seg√∫n tus necesidades:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Definici&#243;n personalizada de grupos de reglas</span>
MyGroup = sha256+ftype+p+u+g+n+acl+xattrs

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Directorios espec&#237;ficos a monitorear con mayor atenci&#243;n</span>
/etc/ssh MyGroup
/etc/pam.d MyGroup
/etc/sudoers MyGroup
/etc/shadow MyGroup

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Archivos de configuraci&#243;n de Snort</span>
/etc/snort MyGroup

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Excluir directorios que cambian frecuentemente</span>
<span style="color: #219fd5; font-weight: bold;">!</span>/var/lib/mysql/.*
<span style="color: #219fd5; font-weight: bold;">!</span>/home/usuario/descargas/.*
</pre>
</div>
</div>
</div>
<div id="outline-container-org1c1ee8b" class="outline-3">
<h3 id="org1c1ee8b">Inicializaci√≥n de la Base de Datos de AIDE</h3>
<div class="outline-text-3" id="text-org1c1ee8b">
<p>
Antes de usar AIDE, necesitamos inicializar su base de datos:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo aideinit
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">o alternativamente</span>
sudo aide --init
</pre>
</div>

<p>
Esto puede tomar tiempo dependiendo del tama√±o de tu sistema. Una vez completado, la base de datos se crear√° en un archivo temporal (generalmente `/var/lib/aide/aide.db.new`). Necesitamos moverla al lugar correcto:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db
</pre>
</div>
</div>
</div>
<div id="outline-container-orgeec7e3a" class="outline-3">
<h3 id="orgeec7e3a">Ejecuci√≥n Manual de Verificaciones</h3>
<div class="outline-text-3" id="text-orgeec7e3a">
<p>
Para ejecutar una verificaci√≥n manualmente:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo aide --check
</pre>
</div>

<p>
Este comando comparar√° el estado actual del sistema con la base de datos almacenada y mostrar√° cualquier discrepancia.
</p>
</div>
</div>
<div id="outline-container-org0f8d893" class="outline-3">
<h3 id="org0f8d893">Actualizaci√≥n de la Base de Datos</h3>
<div class="outline-text-3" id="text-org0f8d893">
<p>
Despu√©s de realizar cambios leg√≠timos en el sistema (como actualizaciones de software), debemos actualizar la base de datos de AIDE:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo aide --update
sudo mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db
</pre>
</div>
</div>
</div>
<div id="outline-container-org154d214" class="outline-3">
<h3 id="org154d214">Automatizaci√≥n con Cron</h3>
<div class="outline-text-3" id="text-org154d214">
<p>
Para automatizar las verificaciones regulares, configuremos una tarea cron:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/cron.daily/aide-check
</pre>
</div>

<p>
A√±ade este contenido:
</p>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificaci&#243;n diaria con AIDE</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ruta para almacenar informes</span>
<span style="color: #1857a4;">REPORT_DIR</span>=<span style="color: #a44185;">"/var/log/aide"</span>
<span style="color: #1857a4;">REPORT_FILE</span>=<span style="color: #a44185;">"$REPORT_DIR/aide-$(</span><span style="color: #219fd5; font-weight: bold;">date +%Y%m%d-%H%M%S</span><span style="color: #a44185;">).log"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear directorio si no existe</span>
mkdir -p $<span style="color: #1857a4;">REPORT_DIR</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar verificaci&#243;n</span>
/usr/bin/aide --check &gt; $<span style="color: #1857a4;">REPORT_FILE</span> 2&gt;&amp;1

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Si hay cambios, enviar por correo (opcional)</span>
<span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">?</span> -ne 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Se detectaron cambios en el sistema. Ver $REPORT_FILE para detalles."</span> | <span style="color: #a44185;">\</span>
    mail -s <span style="color: #a44185;">"Alerta de AIDE: cambios detectados"</span> admin@example.com
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #219fd5; font-style: italic;">exit</span> 0
</pre>
</div>

<p>
Haz el script ejecutable:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/cron.daily/aide-check
</pre>
</div>

<p>
Tambi√©n es buena pr√°ctica actualizar la base de datos peri√≥dicamente:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/cron.weekly/aide-update
</pre>
</div>

<p>
A√±ade este contenido:
</p>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Actualizaci&#243;n semanal de la base de datos de AIDE</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar actualizaci&#243;n</span>
/usr/bin/aide --update

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Mover la nueva base de datos</span>
mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db

<span style="color: #219fd5; font-style: italic;">exit</span> 0
</pre>
</div>

<p>
Haz el script ejecutable:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/cron.weekly/aide-update
</pre>
</div>
</div>
</div>
<div id="outline-container-orgbd39a86" class="outline-3">
<h3 id="orgbd39a86">Visualizaci√≥n con diagrama PlantUML</h3>
<div class="outline-text-3" id="text-orgbd39a86">
<p>
El flujo de trabajo de AIDE puede representarse visualmente:
</p>


<figure id="orgf20e6b4">
<img src="images/flujo-aide.png" alt="flujo-aide.png">

</figure>
</div>
</div>
</div>
<div id="outline-container-org22551e4" class="outline-2">
<h2 id="org22551e4">Parte 3: Integraci√≥n de Snort y AIDE para una Defensa Completa</h2>
<div class="outline-text-2" id="text-org22551e4">
</div>
<div id="outline-container-orgc01f187" class="outline-3">
<h3 id="orgc01f187">Estrategia de Defensa en Profundidad</h3>
<div class="outline-text-3" id="text-orgc01f187">
<p>
La combinaci√≥n de Snort y AIDE proporciona una defensa en profundidad para tu sistema:
</p>

<ol class="org-ol">
<li><b>Snort</b> act√∫a como primera l√≠nea de defensa, monitoreando el tr√°fico de red y detectando posibles intentos de intrusi√≥n antes de que lleguen a comprometer el sistema.</li>

<li><b>AIDE</b> funciona como √∫ltima l√≠nea de defensa, verificando si alg√∫n archivo del sistema ha sido modificado, lo que indicar√≠a una posible intrusi√≥n exitosa.</li>
</ol>

<p>
Esta estrategia aplica el principio de defensa en profundidad: m√∫ltiples capas de seguridad que se complementan para proteger tus sistemas.
</p>
</div>
</div>
<div id="outline-container-orgf6e7931" class="outline-3">
<h3 id="orgf6e7931">Integraci√≥n a Nivel de Alertas</h3>
<div class="outline-text-3" id="text-orgf6e7931">
<p>
Podemos integrar las alertas de ambas herramientas para tener una vista unificada de posibles incidentes de seguridad:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/aide/aide.sh
</pre>
</div>

<p>
Crea un script que combine los resultados:
</p>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Script para integrar las alertas de Snort y AIDE</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Directorios de logs</span>
<span style="color: #1857a4;">SNORT_LOG</span>=<span style="color: #a44185;">"/var/log/snort/alert"</span>
<span style="color: #1857a4;">AIDE_LOG</span>=<span style="color: #a44185;">"/var/log/aide/aide-$(</span><span style="color: #219fd5; font-weight: bold;">date +%Y%m%d</span><span style="color: #a44185;">).log"</span>
<span style="color: #1857a4;">COMBINED_LOG</span>=<span style="color: #a44185;">"/var/log/security/combined-$(</span><span style="color: #219fd5; font-weight: bold;">date +%Y%m%d</span><span style="color: #a44185;">).log"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear directorio si no existe</span>
mkdir -p /var/log/security

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar verificaci&#243;n de AIDE</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Ejecutando verificaci&#243;n de AIDE..."</span> &gt; $<span style="color: #1857a4;">COMBINED_LOG</span>
/usr/bin/aide --check &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span> 2&gt;&amp;1
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">""</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">A&#241;adir &#250;ltimas alertas de Snort</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#218;ltimas alertas de Snort:"</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>
tail -n 50 $<span style="color: #1857a4;">SNORT_LOG</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">""</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Analizar para detectar correlaciones</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"An&#225;lisis de correlaci&#243;n:"</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>
grep -i <span style="color: #a44185;">"modified"</span> $<span style="color: #1857a4;">AIDE_LOG</span> &gt; /tmp/aide_modified.tmp
<span style="color: #219fd5; font-style: italic;">while </span><span style="color: #dc3eb7;">read</span> line; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">file</span>=$(<span style="color: #219fd5; font-weight: bold;">echo $line | awk '{print $2}'</span>)
    grep -i <span style="color: #a44185;">"$file"</span> $<span style="color: #1857a4;">SNORT_LOG</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>
<span style="color: #219fd5; font-style: italic;">done</span> &lt; /tmp/aide_modified.tmp

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Enviar informe (opcional)</span>
cat $<span style="color: #1857a4;">COMBINED_LOG</span> | mail -s <span style="color: #a44185;">"Informe de Seguridad Diario"</span> admin@example.com

<span style="color: #219fd5; font-style: italic;">exit</span> 0
</pre>
</div>

<p>
Haz el script ejecutable y config√∫ralo como tarea cron diaria:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/aide/aide.sh
sudo nano /etc/cron.daily/security-check
</pre>
</div>

<p>
A√±ade este contenido:
</p>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
/etc/aide/aide.sh
</pre>
</div>

<p>
Haz el script ejecutable:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/cron.daily/security-check
</pre>
</div>
</div>
</div>
<div id="outline-container-orgb0c877a" class="outline-3">
<h3 id="orgb0c877a">Visualizaci√≥n con diagrama PlantUML</h3>
<div class="outline-text-3" id="text-orgb0c877a">
<p>
La integraci√≥n entre Snort y AIDE puede representarse visualmente:
</p>


<figure id="orgdd0bbbe">
<img src="images/integracion-snort-aide.png" alt="integracion-snort-aide.png">

</figure>
</div>
</div>
</div>
<div id="outline-container-org8de54e5" class="outline-2">
<h2 id="org8de54e5">Parte 4: Mejores Pr√°cticas y Mantenimiento</h2>
<div class="outline-text-2" id="text-org8de54e5">
</div>
<div id="outline-container-org9885b7c" class="outline-3">
<h3 id="org9885b7c">Actualizaci√≥n de Reglas de Snort</h3>
<div class="outline-text-3" id="text-org9885b7c">
<p>
Las reglas de Snort deben actualizarse regularmente para detectar las √∫ltimas amenazas:
</p>

<ol class="org-ol">
<li><b>Suscripci√≥n a Reglas</b>: Considera una suscripci√≥n a Snort VRT para obtener las √∫ltimas reglas comerciales.</li>

<li><b>Reglas de la Comunidad</b>: Alternativamente, puedes usar reglas gratuitas de la comunidad.</li>

<li><b>Actualizaci√≥n Autom√°tica</b>: Configura un script para actualizar las reglas peri√≥dicamente:</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/cron.daily/update-snort-rules
</pre>
</div>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Actualizaci&#243;n diaria de reglas de Snort</span>

<span style="color: #dc3eb7;">cd</span> /etc/snort/rules
wget -q https://www.snort.org/rules/community -O community.tar.gz
tar -xzf community.tar.gz
rm community.tar.gz

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Reiniciar Snort para aplicar las nuevas reglas</span>
systemctl restart snort.service
</pre>
</div>

<p>
Haz el script ejecutable:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/cron.daily/update-snort-rules
</pre>
</div>
</div>
</div>
<div id="outline-container-org4971c25" class="outline-3">
<h3 id="org4971c25">Ajuste y Optimizaci√≥n de Rendimiento</h3>
<div class="outline-text-3" id="text-org4971c25">
<p>
Para optimizar el rendimiento de Snort:
</p>

<p>
<b>Ajusta los preprocesadores</b>: Habilita solo los preprocesadores necesarios para tu entorno.
</p>

<p>
<b>Optimiza la memoria</b>: Ajusta los par√°metros de memoria seg√∫n tus recursos disponibles.
</p>
<div class="org-src-container">
<pre class="src src-bash">config detection: search-method ac-bnfa
config detection: max_queue_events 5
</pre>
</div>

<p>
<b>Filtra tr√°fico irrelevante</b>: Usa BPF (Berkeley Packet Filter) para filtrar tr√°fico que no necesitas analizar:
</p>
<div class="org-src-container">
<pre class="src src-bash">config bpf_file: /etc/snort/bpf.conf


En <span style="color: #219fd5; font-weight: bold;">`/etc/snort/bpf.conf`</span>:

not port 53 and not port 80
</pre>
</div>
</div>
</div>
<div id="outline-container-org92e7f11" class="outline-3">
<h3 id="org92e7f11">Copia de Seguridad y Recuperaci√≥n</h3>
<div class="outline-text-3" id="text-org92e7f11">
<p>
Realizar copias de seguridad regulares de tus configuraciones:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/cron.weekly/security-backup
</pre>
</div>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Copia de seguridad semanal de configuraciones de seguridad</span>

<span style="color: #1857a4;">BACKUP_DIR</span>=<span style="color: #a44185;">"/backup/security/$(</span><span style="color: #219fd5; font-weight: bold;">date +%Y%m%d</span><span style="color: #a44185;">)"</span>
mkdir -p $<span style="color: #1857a4;">BACKUP_DIR</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Backup de configuraci&#243;n de Snort</span>
tar -czf $<span style="color: #1857a4;">BACKUP_DIR</span>/snort-config.tar.gz /etc/snort

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Backup de configuraci&#243;n de AIDE</span>
cp /etc/aide/aide.conf $<span style="color: #1857a4;">BACKUP_DIR</span>/
cp /var/lib/aide/aide.db $<span style="color: #1857a4;">BACKUP_DIR</span>/

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Backup de logs (opcional)</span>
tar -czf $<span style="color: #1857a4;">BACKUP_DIR</span>/security-logs.tar.gz /var/log/snort /var/log/aide

<span style="color: #219fd5; font-style: italic;">exit</span> 0
</pre>
</div>


<p>
Haz el script ejecutable:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/cron.weekly/security-backup
</pre>
</div>
</div>
</div>
<div id="outline-container-org2f92bbe" class="outline-3">
<h3 id="org2f92bbe">Pruebas de Efectividad</h3>
<div class="outline-text-3" id="text-org2f92bbe">
<p>
Es importante probar regularmente la efectividad de tu configuraci√≥n:
</p>

<ol class="org-ol">
<li><b>Para Snort</b>: Utiliza herramientas como `nmap` o `hping3` para generar tr√°fico sospechoso de forma controlada y verifica que Snort lo detecte.</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Desde otra m&#225;quina (&#161;NO desde producci&#243;n!)</span>
sudo nmap -sS -p 1-1000 [IP-objetivo]
</pre>
</div>

<ol class="org-ol">
<li><b>Para AIDE</b>: Realiza cambios controlados en archivos monitoreados y verifica que AIDE los detecte.</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Modificar un archivo monitoreado</span>
sudo touch /etc/test-file
sudo aide --check  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Deber&#237;a mostrar el cambio</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org2853484" class="outline-3">
<h3 id="org2853484">Plan de Respuesta a Incidentes</h3>
<div class="outline-text-3" id="text-org2853484">
<p>
Desarrolla un plan simple de respuesta a incidentes:
</p>

<ol class="org-ol">
<li><b>Detecci√≥n</b>: Monitoreo constante de logs y alertas.</li>
<li><b>Contenci√≥n</b>: Procedimientos para aislar sistemas comprometidos.</li>
<li><b>Erradicaci√≥n</b>: Eliminaci√≥n de amenazas identificadas.</li>
<li><b>Recuperaci√≥n</b>: Restauraci√≥n de sistemas a un estado seguro.</li>
<li><b>Lecciones aprendidas</b>: Documentaci√≥n y mejora continua.</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-org171b1d7" class="outline-2">
<h2 id="org171b1d7">Conclusi√≥n</h2>
<div class="outline-text-2" id="text-org171b1d7">
<p>
La combinaci√≥n de Snort (IDS/IPS basado en red) y AIDE (verificaci√≥n de integridad basada en host) proporciona una estrategia de defensa en profundidad para proteger tus sistemas inform√°ticos. Mientras Snort vigila el per√≠metro y detecta intentos de intrusi√≥n, AIDE verifica que ning√∫n archivo cr√≠tico haya sido modificado sin autorizaci√≥n.
</p>

<p>
La configuraci√≥n e integraci√≥n adecuada de estas herramientas, junto con un mantenimiento regular y pruebas peri√≥dicas, te permitir√° mantener un nivel de seguridad robusto frente a las constantes amenazas del entorno digital.
</p>

<p>
Recuerda que la seguridad inform√°tica es un proceso continuo, no un producto. Mantente actualizado sobre las √∫ltimas amenazas y t√©cnicas de protecci√≥n, y adapta tu estrategia de seguridad en consecuencia.
</p>
</div>
</div>
<div id="outline-container-orgd7376b9" class="outline-2">
<h2 id="orgd7376b9">Referencias y Recursos Adicionales</h2>
<div class="outline-text-2" id="text-orgd7376b9">
<ul class="org-ul">
<li><a href="https://www.snort.org/">Sitio oficial de Snort</a></li>
<li><a href="https://github.com/aide/aide">Repositorio de AIDE en GitHub</a></li>
<li><a href="https://www.snort.org/documents/snort-users-manual">Manual de usuario de Snort</a></li>
<li><a href="https://aide.github.io/">Documentaci√≥n de AIDE</a></li>
<li><a href="https://www.sans.org/security-resources/">Recursos de seguridad de SANS Institute</a></li>
</ul>
</div>
</div>
<div id="outline-container-org2b4e454" class="outline-2">
<h2 id="org2b4e454">Notas para el Editor de Emacs</h2>
<div class="outline-text-2" id="text-org2b4e454">
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categor√≠a</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-inform√°tica.html">inform√°tica</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-nort.html">nort</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-aide.html">AIDE</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ids.html">IDS</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ips.html">IPS</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-detecci√≥n.html">detecci√≥n</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-intrusiones.html">intrusiones</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-monitoreo.html">monitoreo</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-integridad.html">integridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[inform√°tica]]></category>
  <category><![CDATA[nort]]></category>
  <category><![CDATA[AIDE]]></category>
  <category><![CDATA[IDS]]></category>
  <category><![CDATA[IPS]]></category>
  <category><![CDATA[detecci√≥n]]></category>
  <category><![CDATA[intrusiones]]></category>
  <category><![CDATA[monitoreo]]></category>
  <category><![CDATA[integridad]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-16--fortaleciendo-la-seguridad-inform-tica-con-snort-y-aide-gu-a-completa.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-16--fortaleciendo-la-seguridad-inform-tica-con-snort-y-aide-gu-a-completa.html</guid>
  <pubDate>Wed, 16 Apr 2025 04:17:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Gu√≠a Pr√°ctica: Configuraci√≥n de UFW en Ubuntu con Scripts y Org Mode]]></title>
  <description><![CDATA[
<div id="outline-container-org43d23bd" class="outline-2">
<h2 id="org43d23bd">Introducci√≥n</h2>
<div class="outline-text-2" id="text-org43d23bd">
<p>
La seguridad es un aspecto cr√≠tico para cualquier servidor Linux. UFW (Uncomplicated Firewall) proporciona una interfaz simplificada para configurar un firewall robusto en sistemas Ubuntu. En este art√≠culo, nos centraremos en la parte pr√°ctica: c√≥mo crear, configurar y ejecutar un script de configuraci√≥n de UFW, todo gestionado desde Emacs con Org Mode.
</p>

<p>
Este enfoque pr√°ctico te permitir√°:
</p>
<ul class="org-ul">
<li>Documentar tu configuraci√≥n de seguridad</li>
<li>Automatizar la implementaci√≥n de reglas</li>
<li>Mantener un registro de los cambios realizados</li>
<li>Compartir f√°cilmente tu configuraci√≥n con otros administradores</li>
</ul>

<p>
Est√° dise√±ado para administradores de sistemas y entusiastas de Linux que utilizan Emacs como parte de su flujo de trabajo.
</p>


<figure id="org668b759">
<img src="images/ufw-components.png" alt="ufw-components.png">

</figure>
</div>
</div>
<div id="outline-container-orga6af4d7" class="outline-2">
<h2 id="orga6af4d7">Prerrequisitos</h2>
<div class="outline-text-2" id="text-orga6af4d7">
<p>
Antes de comenzar, aseg√∫rate de tener:
</p>

<ul class="org-ul">
<li>Ubuntu 22.04 LTS o superior</li>
<li>Emacs 27+ con Org Mode</li>
<li>Acceso root o privilegios sudo</li>
<li>UFW instalado (<code>sudo apt install ufw</code>)</li>
<li>Conexi√≥n SSH configurada (si trabajas remotamente)</li>
</ul>
</div>
</div>
<div id="outline-container-orgfe01919" class="outline-2">
<h2 id="orgfe01919">Creaci√≥n del Script en Org Mode</h2>
<div class="outline-text-2" id="text-orgfe01919">
<p>
Comenzaremos creando un archivo Org Mode que contendr√° nuestro script y documentaci√≥n. En Emacs:
</p>

<ol class="org-ol">
<li>Crea un nuevo archivo: <code>C-x C-f ~/firewall-config.org RET</code></li>
<li>A√±ade la estructura b√°sica del documento</li>
</ol>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #637c9d;">#+TITLE:</span> <span style="color: #dc3eb7; font-weight: bold;">Configuraci&#243;n de UFW para Servidores Ubuntu</span>
<span style="color: #637c9d;">#+AUTHOR:</span> <span style="color: #dc3eb7;">Tu Nombre</span>
<span style="color: #637c9d;">#+DATE:</span> <span style="color: #dc3eb7;">2025-04-15</span>
<span style="color: #60a8a1;">#+PROPERTY: header-args:bash :tangle ufw-secure-config.sh :comments both</span>

<span style="color: #2f86d2; font-weight: bold;">* Descripci&#243;n del Script</span>
Este script configura UFW en Ubuntu para proteger contra amenazas comunes,
incluyendo botnets, ataques de fuerza bruta y escaneos de puertos. Est&#225;
dise&#241;ado para servidores de producci&#243;n con exposici&#243;n a Internet.

<span style="color: #2f86d2; font-weight: bold;">* Script de Configuraci&#243;n</span>
<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Cabecera y verificaciones iniciales</span>
</pre>
</div>

<p>
El atributo <code>:tangle ufw-secure-config.sh</code> indica a Org Mode que extraiga (tangle) el c√≥digo en un archivo ejecutable cuando lo solicitemos.
</p>
</div>
</div>
<div id="outline-container-org024ee21" class="outline-2">
<h2 id="org024ee21">Desarrollo del Script de Configuraci√≥n UFW</h2>
<div class="outline-text-2" id="text-org024ee21">
<p>
Ahora desarrollaremos el script por secciones, a√±adiendo cada parte como un bloque de c√≥digo Org Babel. Esto nos permite tener el script documentado y listo para ejecutar.
</p>
</div>
<div id="outline-container-org4e7dc53" class="outline-3">
<h3 id="org4e7dc53">Secci√≥n 1: Cabecera y verificaciones</h3>
<div class="outline-text-3" id="text-org4e7dc53">
<p>
A√±ade este bloque despu√©s de la secci√≥n "Cabecera y verificaciones iniciales":
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">#</span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">!/bin/bash</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Script: ufw-secure-config.sh</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Descripci&#243;n: Configuraci&#243;n segura de UFW para servidores Ubuntu</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Autor: Tu Nombre</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Fecha: 2025-04-15</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Versi&#243;n: 1.0</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Colores para mejor legibilidad</span>
<span style="color: #1857a4; background-color: #9fafc4;">RED</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">'\033[0;31m'</span>
<span style="color: #1857a4; background-color: #9fafc4;">GREEN</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">'\033[0;32m'</span>
<span style="color: #1857a4; background-color: #9fafc4;">YELLOW</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">'\033[1;33m'</span>
<span style="color: #1857a4; background-color: #9fafc4;">NC</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">'\033[0m'</span><span style="background-color: #9fafc4;"> </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Sin Color</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}=== Script de Configuraci&#243;n Segura de UFW ===${NC}"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Iniciando configuraci&#243;n en $(</span><span style="color: #219fd5; background-color: #9fafc4; font-weight: bold;">date</span><span style="color: #a44185; background-color: #9fafc4;">)"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Verificar privilegios de root</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">if</span><span style="background-color: #9fafc4;"> <a href=" $EUID -ne 0 ">[[ $</a></span><span style="color: #1857a4; background-color: #9fafc4;"><a href=" $EUID -ne 0 ">EUID</a></span><span style="background-color: #9fafc4;"><a href=" $EUID -ne 0 "> -ne 0 ]]</a>; </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">then</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${RED}Este script requiere privilegios de root.${NC}"</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Por favor, ejecuta con sudo: sudo bash $0"</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">exit</span><span style="background-color: #9fafc4;"> 1</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">fi</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Verificar que UFW est&#233; instalado</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">if ! </span><span style="color: #dc3eb7; background-color: #9fafc4;">command</span><span style="background-color: #9fafc4;"> -v ufw &amp;&gt; /dev/null; </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">then</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${YELLOW}UFW no est&#225; instalado. Instalando...${NC}"</span>
<span style="background-color: #9fafc4;">    apt update &amp;&amp; apt install -y ufw</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">if</span><span style="background-color: #9fafc4;"> [ $</span><span style="color: #1857a4; background-color: #9fafc4;">?</span><span style="background-color: #9fafc4;"> -ne 0 ]; </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">then</span>
<span style="background-color: #9fafc4;">        </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${RED}Error instalando UFW. Abortando.${NC}"</span>
<span style="background-color: #9fafc4;">        </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">exit</span><span style="background-color: #9fafc4;"> 1</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">fi</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}UFW instalado correctamente.${NC}"</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">else</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}UFW ya est&#225; instalado.${NC}"</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">fi</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Crear directorio para backups si no existe</span>
<span style="color: #1857a4; background-color: #9fafc4;">BACKUP_DIR</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">"/root/ufw-backups"</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">if</span><span style="background-color: #9fafc4;"> [ </span><span style="color: #219fd5; background-color: #9fafc4; font-weight: bold;">!</span><span style="background-color: #9fafc4;"> -d </span><span style="color: #a44185; background-color: #9fafc4;">"$BACKUP_DIR"</span><span style="background-color: #9fafc4;"> ]; </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">then</span>
<span style="background-color: #9fafc4;">    mkdir -p </span><span style="color: #a44185; background-color: #9fafc4;">"$BACKUP_DIR"</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Directorio para backups creado: $BACKUP_DIR"</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">fi</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 2: Backup y reinicio de configuraci&#243;n</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf5da726" class="outline-3">
<h3 id="orgf5da726">Secci√≥n 2: Backup y reinicio de configuraci√≥n</h3>
<div class="outline-text-3" id="text-orgf5da726">
<p>
Continuamos con la siguiente secci√≥n:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Crear backup de reglas actuales</span>
<span style="color: #1857a4; background-color: #9fafc4;">TIMESTAMP</span><span style="background-color: #9fafc4;">=$(</span><span style="color: #219fd5; background-color: #9fafc4; font-weight: bold;">date +%F-%H%M%S</span><span style="background-color: #9fafc4;">)</span>
<span style="color: #1857a4; background-color: #9fafc4;">BACKUP_FILE</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">"$BACKUP_DIR/ufw-backup-$TIMESTAMP.rules"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${YELLOW}Creando backup de reglas actuales en:${NC} $BACKUP_FILE"</span>
<span style="background-color: #9fafc4;">ufw status verbose &gt; </span><span style="color: #a44185; background-color: #9fafc4;">"$BACKUP_FILE"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Guardar configuraci&#243;n actual de iptables para referencia</span>
<span style="background-color: #9fafc4;">iptables-save &gt; </span><span style="color: #a44185; background-color: #9fafc4;">"$BACKUP_DIR/iptables-backup-$TIMESTAMP.rules"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Backup de iptables guardado en: $BACKUP_DIR/iptables-backup-$TIMESTAMP.rules"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Reiniciar UFW para configuraci&#243;n limpia</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${YELLOW}Reiniciando UFW para iniciar configuraci&#243;n limpia...${NC}"</span>
<span style="background-color: #9fafc4;">ufw --force reset</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}UFW reiniciado correctamente.${NC}"</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 3: Configuraci&#243;n de pol&#237;ticas b&#225;sicas</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orga3e5d1f" class="outline-3">
<h3 id="orga3e5d1f">Secci√≥n 3: Configuraci√≥n de pol√≠ticas b√°sicas</h3>
<div class="outline-text-3" id="text-orga3e5d1f">
<p>
Configuramos las pol√≠ticas predeterminadas y activamos el logging:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Configurando pol&#237;ticas b&#225;sicas ===${NC}"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Establecer pol&#237;ticas predeterminadas</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando pol&#237;tica por defecto: denegar tr&#225;fico entrante"</span>
<span style="background-color: #9fafc4;">ufw default deny incoming</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando pol&#237;tica por defecto: permitir tr&#225;fico saliente"</span>
<span style="background-color: #9fafc4;">ufw default allow outgoing</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Configurar nivel de log</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando nivel de logging: medio"</span>
<span style="background-color: #9fafc4;">ufw logging medium</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}Pol&#237;ticas b&#225;sicas configuradas correctamente.${NC}"</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 4: Reglas para servicios esenciales</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org5c217f6" class="outline-3">
<h3 id="org5c217f6">Secci√≥n 4: Reglas para servicios esenciales</h3>
<div class="outline-text-3" id="text-org5c217f6">
<p>
Configuramos las reglas para los servicios principales:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Configurando reglas para servicios esenciales ===${NC}"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">SSH - Limitar intentos para prevenir ataques de fuerza bruta</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando SSH con l&#237;mite de conexiones..."</span>
<span style="background-color: #9fafc4;">ufw limit proto tcp from any to any port 22 comment </span><span style="color: #a44185; background-color: #9fafc4;">'SSH con l&#237;mite de conexiones'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">HTTP/HTTPS para servidores web</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando acceso web (HTTP/HTTPS)..."</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 80 comment </span><span style="color: #a44185; background-color: #9fafc4;">'HTTP'</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 443 comment </span><span style="color: #a44185; background-color: #9fafc4;">'HTTPS'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">DNS para resoluci&#243;n de nombres</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando acceso DNS..."</span>
<span style="background-color: #9fafc4;">ufw allow proto udp from any to any port 53 comment </span><span style="color: #a44185; background-color: #9fafc4;">'DNS'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">NTP para sincronizaci&#243;n horaria</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando acceso NTP..."</span>
<span style="background-color: #9fafc4;">ufw allow proto udp from any to any port 123 comment </span><span style="color: #a44185; background-color: #9fafc4;">'NTP'</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}Servicios esenciales configurados.${NC}"</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 5: Protecci&#243;n contra amenazas comunes</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgb425bf5" class="outline-3">
<h3 id="orgb425bf5">Secci√≥n 5: Protecci√≥n contra amenazas comunes</h3>
<div class="outline-text-3" id="text-orgb425bf5">
<p>
A√±adimos reglas para mitigar amenazas espec√≠ficas:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Configurando protecci&#243;n contra amenazas espec&#237;ficas ===${NC}"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Limitar intentos de conexi&#243;n para HTTP/HTTPS (protecci&#243;n b&#225;sica contra DDoS)</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando l&#237;mites de conexi&#243;n para servicios web..."</span>
<span style="background-color: #9fafc4;">ufw limit proto tcp from any to any port 80 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Limitar HTTP'</span>
<span style="background-color: #9fafc4;">ufw limit proto tcp from any to any port 443 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Limitar HTTPS'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Bloquear puertos com&#250;nmente explotados por botnets y malware</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Bloqueando puertos vulnerables com&#250;nmente usados por botnets..."</span>
<span style="background-color: #9fafc4;">ufw deny proto tcp from any to any port 23 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Telnet, usado por botnets'</span>
<span style="background-color: #9fafc4;">ufw deny proto tcp from any to any port 445 comment </span><span style="color: #a44185; background-color: #9fafc4;">'SMB, objetivo de ransomware'</span>
<span style="background-color: #9fafc4;">ufw deny proto tcp from any to any port 1433 comment </span><span style="color: #a44185; background-color: #9fafc4;">'MS-SQL, explotado por botnets'</span>
<span style="background-color: #9fafc4;">ufw deny proto tcp from any to any port 3389 comment </span><span style="color: #a44185; background-color: #9fafc4;">'RDP, objetivo com&#250;n'</span>
<span style="background-color: #9fafc4;">ufw deny proto udp from any to any port 1900 comment </span><span style="color: #a44185; background-color: #9fafc4;">'UPnP, usado en DDoS'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Bloquear rangos de puertos ef&#237;meros sospechosos</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Bloqueando rangos de puertos sospechosos..."</span>
<span style="background-color: #9fafc4;">ufw deny proto tcp from any to any port 49152:65535 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Puertos ef&#237;meros sospechosos'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Limitar ICMP para prevenir ataques de flood</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Limitando tr&#225;fico ICMP..."</span>
<span style="background-color: #9fafc4;">ufw limit proto icmp from any to any comment </span><span style="color: #a44185; background-color: #9fafc4;">'Limitar ping'</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}Protecci&#243;n contra amenazas comunes configurada.${NC}"</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 6: Bloqueo de IPs maliciosas</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org225637b" class="outline-3">
<h3 id="org225637b">Secci√≥n 6: Bloqueo de IPs maliciosas</h3>
<div class="outline-text-3" id="text-org225637b">
<p>
Bloqueamos rangos de IPs conocidos por actividades maliciosas:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Configurando bloqueo de IPs maliciosas ===${NC}"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Nota: Estas son IPs de ejemplo. En producci&#243;n, usa listas actualizadas.</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Bloqueando rangos de IPs conocidos por actividades maliciosas..."</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Ejemplos de rangos sospechosos (reemplazar con datos actualizados en producci&#243;n)</span>
<span style="background-color: #9fafc4;">ufw deny from 185.220.101.0/24 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Rango de IPs sospechosas - Tor exit nodes'</span>
<span style="background-color: #9fafc4;">ufw deny from 45.148.10.0/24 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Rango de IPs de botnets reportadas'</span>
<span style="background-color: #9fafc4;">ufw deny from 91.134.0.0/16 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Fuente conocida de ataques'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Opci&#243;n: Descomentar y modificar para actualizar desde fuente externa</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">echo "Descargando lista actualizada de IPs maliciosas..."</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">curl -s <a href="https://ejemplo.com/ip-blocklist.txt">https://ejemplo.com/ip-blocklist.txt</a> | while read ip; do</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">#   </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">ufw deny from $ip comment 'IP maliciosa - lista externa'</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">done</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${YELLOW}Nota: Considera actualizar regularmente la lista de IPs bloqueadas.${NC}"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}Bloqueo de IPs maliciosas configurado.${NC}"</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 7: Activaci&#243;n del firewall</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orga27208d" class="outline-3">
<h3 id="orga27208d">Secci√≥n 7: Activaci√≥n del firewall</h3>
<div class="outline-text-3" id="text-orga27208d">
<p>
Finalmente, activamos el firewall y mostramos el estado:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Activando UFW ===${NC}"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Habilitar UFW</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Activando firewall..."</span>
<span style="background-color: #9fafc4;">ufw --force enable</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Verificar estado</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Estado final de UFW ===${NC}"</span>
<span style="background-color: #9fafc4;">ufw status verbose</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Configuraci&#243;n completada exitosamente ===${NC}"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Fecha y hora: $(</span><span style="color: #219fd5; background-color: #9fafc4; font-weight: bold;">date</span><span style="color: #a44185; background-color: #9fafc4;">)"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${YELLOW}Recomendaciones:${NC}"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"1. Revisa peri&#243;dicamente /var/log/ufw.log para detectar actividad sospechosa"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"2. Considera implementar Fail2Ban como protecci&#243;n adicional"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"3. Actualiza las reglas regularmente seg&#250;n evolucionen las amenazas"</span>

<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">exit</span><span style="background-color: #9fafc4;"> 0</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #2f86d2; font-weight: bold;">* Utilizaci&#243;n del Script</span>
<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Generaci&#243;n del script ejecutable</span>
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orga45b6f8" class="outline-2">
<h2 id="orga45b6f8">Utilizaci√≥n del Script desde Org Mode</h2>
<div class="outline-text-2" id="text-orga45b6f8">
<p>
Ahora que tenemos nuestro script documentado en Org Mode, vamos a ver c√≥mo utilizarlo.
</p>
</div>
<div id="outline-container-org8121919" class="outline-3">
<h3 id="org8121919">Generaci√≥n del script ejecutable</h3>
<div class="outline-text-3" id="text-org8121919">
<p>
Para generar el archivo ejecutable a partir de nuestro documento Org:
</p>

<div class="org-src-container">
<pre class="src src-org">Para extraer (tangle) el script desde este documento Org Mode:

1. Posiciona el cursor en cualquier parte del documento
2. Ejecuta: <span style="color: #fa841d; background-color: #9fafc4;">~M-x org-babel-tangle~</span> (o usa el atajo <span style="color: #fa841d; background-color: #9fafc4;">~C-c C-v t~</span>)
3. Esto crear&#225; el archivo <span style="color: #fa841d; background-color: #9fafc4;">~ufw-secure-config.sh~</span> en el mismo directorio

Alternativamente, puedes ejecutar esto directamente como un bloque de c&#243;digo:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC emacs-lisp :results silent</span>
<span style="background-color: #9fafc4;">(org-babel-tangle)</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

Una vez extra&#237;do, hazlo ejecutable:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :dir .</span>
<span style="background-color: #9fafc4;">chmod +x ufw-secure-config.sh</span>
<span style="background-color: #9fafc4;">ls -la ufw-secure-config.sh</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orga05a8fa" class="outline-3">
<h3 id="orga05a8fa">Ejecuci√≥n del script</h3>
<div class="outline-text-3" id="text-orga05a8fa">
<p>
A√±ade esta secci√≥n para documentar la ejecuci√≥n:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Ejecuci&#243;n del script</span>

El script debe ejecutarse con privilegios de superusuario:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :dir . :results output :eval no</span>
<span style="background-color: #9fafc4;">sudo ./ufw-secure-config.sh</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

Nota: El script realizar&#225; las siguientes acciones:
1. Verificar&#225; los privilegios y la instalaci&#243;n de UFW
2. Crear&#225; un backup de las reglas existentes
3. Reiniciar&#225; la configuraci&#243;n de UFW
4. Establecer&#225; pol&#237;ticas predeterminadas seguras
5. Configurar&#225; reglas para servicios esenciales
6. Implementar&#225; protecciones contra amenazas comunes
7. Bloquear&#225; IPs maliciosas conocidas
8. Activar&#225; el firewall con la nueva configuraci&#243;n

<span style="color: #2f86d2; font-weight: bold;">* Personalizaci&#243;n del Script</span>

Puedes personalizar este script para adaptarlo a tus necesidades espec&#237;ficas:

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Servicios adicionales</span>

Para a&#241;adir reglas para otros servicios, agrega l&#237;neas como estas en la Secci&#243;n 4:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">FTP (si es necesario)</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 21 comment </span><span style="color: #a44185; background-color: #9fafc4;">'FTP'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Correo electr&#243;nico</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 25,465,587 comment </span><span style="color: #a44185; background-color: #9fafc4;">'SMTP'</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 110,995 comment </span><span style="color: #a44185; background-color: #9fafc4;">'POP3'</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 143,993 comment </span><span style="color: #a44185; background-color: #9fafc4;">'IMAP'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Base de datos (solo desde redes confiables)</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from 192.168.1.0/24 to any port 3306 comment </span><span style="color: #a44185; background-color: #9fafc4;">'MySQL desde LAN'</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Restricci&#243;n por origen</span>

Para permitir servicios solo desde ciertas IPs o redes:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Acceso SSH solo desde oficina</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from 203.0.113.0/24 to any port 22 comment </span><span style="color: #a44185; background-color: #9fafc4;">'SSH desde oficina'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Panel de administraci&#243;n solo desde IPs espec&#237;ficas</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from 203.0.113.10 to any port 8080 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Admin desde IP confiable'</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org8a9e92b" class="outline-2">
<h2 id="org8a9e92b">Monitoreo y Mantenimiento</h2>
<div class="outline-text-2" id="text-org8a9e92b">
<p>
A√±ade esta secci√≥n para completar el post:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #2f86d2; font-weight: bold;">* Monitoreo y Mantenimiento</span>

Una vez configurado el firewall, es importante monitorizarlo y mantenerlo:

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Verificaci&#243;n del estado</span>

Para verificar el estado actual del firewall:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="background-color: #9fafc4;">sudo ufw status verbose</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Monitoreo de logs</span>

Para monitorizar actividad sospechosa:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Ver &#250;ltimas entradas del log en tiempo real</span>
<span style="background-color: #9fafc4;">sudo tail -f /var/log/ufw.log</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Buscar intentos de conexi&#243;n bloqueados</span>
<span style="background-color: #9fafc4;">sudo grep </span><span style="color: #a44185; background-color: #9fafc4;">"BLOCK"</span><span style="background-color: #9fafc4;"> /var/log/ufw.log</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Contar intentos bloqueados por IP (TOP 10)</span>
<span style="background-color: #9fafc4;">sudo grep </span><span style="color: #a44185; background-color: #9fafc4;">"BLOCK"</span><span style="background-color: #9fafc4;"> /var/log/ufw.log | grep -oE </span><span style="color: #a44185; background-color: #9fafc4;">"SRC=[0-9.]+"</span><span style="background-color: #9fafc4;"> | sort | uniq -c | sort -nr | head -10</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Actualizaci&#243;n de reglas</span>

Cuando necesites actualizar las reglas:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Ver reglas numeradas</span>
<span style="background-color: #9fafc4;">sudo ufw status numbered</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Eliminar una regla espec&#237;fica</span>
<span style="background-color: #9fafc4;">sudo ufw delete 3  </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Elimina la regla n&#250;mero 3</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">A&#241;adir una nueva regla</span>
<span style="background-color: #9fafc4;">sudo ufw allow proto tcp from any to any port 8443 comment </span><span style="color: #a44185; background-color: #9fafc4;">'HTTPS alternativo'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Aplicar cambios</span>
<span style="background-color: #9fafc4;">sudo ufw reload</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #2f86d2; font-weight: bold;">* Integraci&#243;n con cron para Actualizaciones Autom&#225;ticas</span>

Para mantener tu lista de IPs bloqueadas actualizada, puedes crear un script separado y programarlo con cron:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC org</span>
<span style="background-color: #9fafc4;">#+BEGIN_SRC bash :tangle update-blocklist.sh :comments both</span>
<span style="background-color: #9fafc4;">#!/bin/bash</span>
<span style="background-color: #9fafc4;"># Script: update-blocklist.sh</span>
<span style="background-color: #9fafc4;"># Descripci&#243;n: Actualiza la lista de IPs bloqueadas en UFW</span>
<span style="background-color: #9fafc4;"># Autor: Tu Nombre</span>
<span style="background-color: #9fafc4;"># Fecha: 2025-04-15</span>

<span style="background-color: #9fafc4;"># Verificar privilegios</span>
<span style="background-color: #9fafc4;">if </span><span style="color: #2f86d2; background-color: #9fafc4; font-weight: bold; text-decoration: underline;"><a href=" $EUID -ne 0 ">[[ $EUID -ne 0 ]]</a></span><span style="background-color: #9fafc4;">; then</span>
<span style="background-color: #9fafc4;">    echo "Este script requiere privilegios de root."</span>
<span style="background-color: #9fafc4;">    exit 1</span>
<span style="background-color: #9fafc4;">fi</span>

<span style="background-color: #9fafc4;"># Directorio para logs</span>
<span style="background-color: #9fafc4;">LOG_DIR="/var/log/ufw-updates"</span>
<span style="background-color: #9fafc4;">mkdir -p "$LOG_DIR"</span>
<span style="background-color: #9fafc4;">LOG_FILE="$LOG_DIR/update-$(date +%F).log"</span>

<span style="background-color: #9fafc4;">echo "Iniciando actualizaci&#243;n de listas de bloqueo en $(date)" &gt;&gt; "$LOG_FILE"</span>

<span style="background-color: #9fafc4;"># Descargar lista actualizada (ejemplo)</span>
<span style="background-color: #9fafc4;">echo "Descargando lista actualizada..." &gt;&gt; "$LOG_FILE"</span>
<span style="background-color: #9fafc4;">curl -s </span><span style="color: #2f86d2; background-color: #9fafc4; font-weight: bold; text-decoration: underline;"><a href="https://ejemplo.com/ip-blocklist.txt">https://ejemplo.com/ip-blocklist.txt</a></span><span style="background-color: #9fafc4;"> &gt; /tmp/new-blocklist.txt</span>

<span style="background-color: #9fafc4;"># Eliminar reglas antiguas con comentario espec&#237;fico</span>
<span style="background-color: #9fafc4;">echo "Eliminando reglas antiguas..." &gt;&gt; "$LOG_FILE"</span>
<span style="background-color: #9fafc4;">for ip in $(ufw status | grep "lista externa" | awk '{print $3}'); do</span>
<span style="background-color: #9fafc4;">  ufw delete deny from $ip &gt;&gt; "$LOG_FILE" 2&gt;&amp;1</span>
<span style="background-color: #9fafc4;">done</span>

<span style="background-color: #9fafc4;"># A&#241;adir nuevas IPs</span>
<span style="background-color: #9fafc4;">echo "A&#241;adiendo nuevas IPs..." &gt;&gt; "$LOG_FILE"</span>
<span style="background-color: #9fafc4;">count=0</span>
<span style="background-color: #9fafc4;">while read ip; do</span>
<span style="background-color: #9fafc4;">  if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}(/[0-9]{1,2})?$ ]]; then</span>
<span style="background-color: #9fafc4;">    ufw deny from $ip comment 'IP maliciosa - lista externa' &gt;&gt; "$LOG_FILE" 2&gt;&amp;1</span>
<span style="background-color: #9fafc4;">    ((count++))</span>
<span style="background-color: #9fafc4;">  fi</span>
<span style="background-color: #9fafc4;">done &lt; /tmp/new-blocklist.txt</span>

<span style="background-color: #9fafc4;">echo "Actualizaci&#243;n completada. $count IPs bloqueadas." &gt;&gt; "$LOG_FILE"</span>
<span style="background-color: #9fafc4;">echo "Fecha y hora de finalizaci&#243;n: $(date)" &gt;&gt; "$LOG_FILE"</span>

<span style="background-color: #9fafc4;"># Limpiar archivos temporales</span>
<span style="background-color: #9fafc4;">rm /tmp/new-blocklist.txt</span>

<span style="background-color: #9fafc4;">exit 0</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>
<span style="color: #60a8a1;">#+END_SRC</span>

Programa la ejecuci&#243;n con cron:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Editar crontab</span>
<span style="background-color: #9fafc4;">sudo crontab -e</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">A&#241;adir l&#237;nea para ejecutar cada d&#237;a a las 3 AM</span>
<span style="background-color: #9fafc4;">0 3 * * * /ruta/a/update-blocklist.sh</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgdfe2fe9" class="outline-2">
<h2 id="orgdfe2fe9">Conclusi√≥n y Recursos Adicionales</h2>
<div class="outline-text-2" id="text-orgdfe2fe9">
<p>
Finalmente, a√±ade una conclusi√≥n y recursos adicionales:
</p>

<p>
#+BEGIN<sub>SRC</sub> org
,* Conclusi√≥n
</p>

<p>
Configurar UFW a trav√©s de scripts gestionados con Org Mode en Emacs ofrece varias ventajas:
</p>

<ol class="org-ol">
<li><b>Documentaci√≥n integrada</b>: El c√≥digo y su explicaci√≥n se mantienen juntos</li>
<li><b>Reproducibilidad</b>: Puedes recrear exactamente la misma configuraci√≥n en diferentes servidores</li>
<li><b>Control de versiones</b>: Puedes mantener tu configuraci√≥n en un sistema de control de versiones como Git</li>
<li><b>Adaptabilidad</b>: F√°cil de modificar para diferentes entornos (desarrollo, pruebas, producci√≥n)</li>
</ol>

<p>
Esta aproximaci√≥n combina la potencia de Emacs y Org Mode con las necesidades pr√°cticas de la administraci√≥n de sistemas, creando un flujo de trabajo eficiente y bien documentado para la gesti√≥n de la seguridad.
</p>

<p>
Recuerda que la seguridad es un proceso continuo, no un estado final. Mant√©n tus reglas de firewall actualizadas, revisa regularmente los logs y adapta tu configuraci√≥n seg√∫n evolucionen las amenazas.
</p>

<p>
,* Recursos Adicionales
</p>

<ul class="org-ul">
<li><a href="https://help.ubuntu.com/community/UFW">Documentaci√≥n oficial de UFW en Ubuntu</a></li>
<li><a href="https://wiki.archlinux.org/title/Uncomplicated_Firewall">Wiki de Arch Linux sobre UFW</a></li>
<li><a href="https://orgmode.org/worg/org-contrib/babel/">Documentaci√≥n de Org Babel</a></li>
<li><a href="https://www.abuseipdb.com/">AbuseIPDB</a> - Base de datos de IPs maliciosas</li>
</ul>

<p>
,* Notas de la versi√≥n
</p>

<ul class="org-ul">
<li><b>Versi√≥n 1.0 (2025-04-15)</b>: Publicaci√≥n inicial</li>
<li><b>Pr√≥ximas mejoras planificadas</b>: Integraci√≥n con Fail2Ban, reglas para Docker, configuraci√≥n para IPv6</li>
</ul>
</div>
</div>
<div id="outline-container-org602bbf5" class="outline-2">
<h2 id="org602bbf5">Diagrama de Componentes de la Configuraci√≥n</h2>
<div class="outline-text-2" id="text-org602bbf5">
<p>
Este diagrama muestra los componentes principales que conforman la configuraci√≥n de seguridad con UFW:
</p>


<figure id="orgb3074ff">
<img src="images/ufw-components.png" alt="ufw-components.png">

</figure>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categor√≠a</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ubuntu.html">ubuntu</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-firewall.html">firewall</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ufw.html">ufw</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-orgmode.html">orgmode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[ubuntu]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[firewall]]></category>
  <category><![CDATA[ufw]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[orgmode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15-gu-a-pr-ctica-configuraci-n-de-ufw-en-ubuntu-con-scripts-y-org-mode.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15-gu-a-pr-ctica-configuraci-n-de-ufw-en-ubuntu-con-scripts-y-org-mode.html</guid>
  <pubDate>Tue, 15 Apr 2025 23:09:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Detectando actividad maliciosa en nuestro sistema Linux: ¬øSomos parte de una botnet?]]></title>
  <description><![CDATA[
<div id="outline-container-org4d90630" class="outline-2">
<h2 id="org4d90630">Introducci√≥n</h2>
<div class="outline-text-2" id="text-org4d90630">
<p>
En la era actual de amenazas cibern√©ticas cada vez m√°s sofisticadas, uno de los riesgos m√°s preocupantes es que nuestros sistemas sean comprometidos y utilizados como parte de una botnet sin nuestro conocimiento. Estas redes de equipos infectados pueden ser utilizadas para realizar ataques DDoS, miner√≠a de criptomonedas, env√≠o de spam, o robo de datos, entre otras actividades maliciosas.
</p>

<p>
En este art√≠culo del blog <b>Emacs con Esteroides</b>, presentaremos un script en Bash para detectar posibles se√±ales de que nuestro sistema Linux est√° siendo utilizado como parte de una botnet o est√° bajo ataque. El script realiza comprobaciones exhaustivas del sistema y genera un informe detallado que podemos analizar para determinar si hay actividad sospechosa.
</p>
</div>
</div>
<div id="outline-container-org3d0771d" class="outline-2">
<h2 id="org3d0771d">¬øQu√© es una botnet?</h2>
<div class="outline-text-2" id="text-org3d0771d">
<p>
Una botnet es una red de equipos infectados con malware que son controlados remotamente por un atacante, conocido como "botmaster". Los equipos comprometidos, llamados "zombies" o "bots", ejecutan comandos sin el conocimiento de sus propietarios.
</p>

<p>
Se√±ales comunes de que un sistema puede formar parte de una botnet:
</p>

<ul class="org-ul">
<li>Conexiones de red inusuales o no autorizadas</li>
<li>Procesos desconocidos con alto consumo de recursos</li>
<li>Tr√°fico de red an√≥malo</li>
<li>Servicios o puertos abiertos inesperados</li>
<li>Modificaciones en archivos cr√≠ticos del sistema</li>
<li>Entradas sospechosas en la tabla de rutas</li>
<li>Tareas programadas desconocidas</li>
</ul>
</div>
</div>
<div id="outline-container-orgfd116dd" class="outline-2">
<h2 id="orgfd116dd">El script de detecci√≥n de botnets</h2>
<div class="outline-text-2" id="text-orgfd116dd">
<p>
Nuestro script realiza m√∫ltiples comprobaciones para identificar posibles indicios de compromiso:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">botnet_detector.sh - Script para detectar posibles indicios de botnet en sistemas Linux</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Blog: Emacs con Esteroides</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Autor: Emacs con Esteroides</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Fecha: 15/04/2025</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Licencia: GPL v3</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Colores para mejor visualizaci&#243;n</span>
<span style="color: #1857a4;">RED</span>=<span style="color: #a44185;">'\033[0;31m'</span>
<span style="color: #1857a4;">GREEN</span>=<span style="color: #a44185;">'\033[0;32m'</span>
<span style="color: #1857a4;">YELLOW</span>=<span style="color: #a44185;">'\033[0;33m'</span>
<span style="color: #1857a4;">BLUE</span>=<span style="color: #a44185;">'\033[0;34m'</span>
<span style="color: #1857a4;">PURPLE</span>=<span style="color: #a44185;">'\033[0;35m'</span>
<span style="color: #1857a4;">CYAN</span>=<span style="color: #a44185;">'\033[0;36m'</span>
<span style="color: #1857a4;">NC</span>=<span style="color: #a44185;">'\033[0m'</span> <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">No Color</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para imprimir encabezados</span>
<span style="color: #dc3eb7;">print_header</span>() {
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${BLUE}====================================${NC}"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${BLUE}$1${NC}"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${BLUE}====================================${NC}\n"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para imprimir mensajes de alerta</span>
<span style="color: #dc3eb7;">print_alert</span>() {
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}[ALERTA] $1${NC}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para imprimir mensajes de advertencia</span>
<span style="color: #dc3eb7;">print_warning</span>() {
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}[ADVERTENCIA] $1${NC}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para imprimir mensajes informativos</span>
<span style="color: #dc3eb7;">print_info</span>() {
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}[INFO] $1${NC}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar si se est&#225; ejecutando como root</span>
<span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$(</span><span style="color: #219fd5; font-weight: bold;">id -u</span><span style="color: #a44185;">)"</span> != <span style="color: #a44185;">"0"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}Este script debe ejecutarse como root${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">exit</span> 1
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear directorio para informes si no existe</span>
<span style="color: #1857a4;">REPORT_DIR</span>=<span style="color: #a44185;">"/var/log/security_checks"</span>
<span style="color: #1857a4;">TIMESTAMP</span>=$(<span style="color: #219fd5; font-weight: bold;">date +"%Y%m%d_%H%M%S"</span>)
<span style="color: #1857a4;">REPORT_FILE</span>=<span style="color: #a44185;">"${REPORT_DIR}/botnet_check_${TIMESTAMP}.log"</span>

<span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #219fd5; font-weight: bold;">!</span> -d <span style="color: #a44185;">"$REPORT_DIR"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
  mkdir -p <span style="color: #a44185;">"$REPORT_DIR"</span>
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para registrar en el archivo de informe</span>
<span style="color: #dc3eb7;">log</span>() {
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"$1"</span> &gt;&gt; <span style="color: #a44185;">"$REPORT_FILE"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"$1"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Redireccionar la salida al archivo de registro y a la consola</span>
<span style="color: #219fd5; font-style: italic;">exec</span> &gt; &gt;(tee -a <span style="color: #a44185;">"$REPORT_FILE"</span>) 2&gt;&amp;1

print_header <span style="color: #a44185;">"DETECTOR DE BOTNETS Y ACTIVIDAD MALICIOSA"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Iniciando an&#225;lisis: $(</span><span style="color: #219fd5; font-weight: bold;">date</span><span style="color: #a44185;">)"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Sistema: $(</span><span style="color: #219fd5; font-weight: bold;">uname -a</span><span style="color: #a44185;">)"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Usuario: $(</span><span style="color: #219fd5; font-weight: bold;">whoami</span><span style="color: #a44185;">)"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Informe guardado en: $REPORT_FILE"</span>
<span style="color: #dc3eb7;">echo</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar herramientas necesarias e instalarlas si faltan</span>
<span style="color: #dc3eb7;">check_tools</span>() {
  print_header <span style="color: #a44185;">"Verificando herramientas necesarias"</span>

  <span style="color: #1857a4;">TOOLS</span>=(<span style="color: #a44185;">"lsof"</span> <span style="color: #a44185;">"netstat"</span> <span style="color: #a44185;">"tcpdump"</span> <span style="color: #a44185;">"htop"</span> <span style="color: #a44185;">"iftop"</span> <span style="color: #a44185;">"rkhunter"</span> <span style="color: #a44185;">"chkrootkit"</span> <span style="color: #a44185;">"lynis"</span> <span style="color: #a44185;">"clamav"</span> <span style="color: #a44185;">"sysstat"</span>)
  <span style="color: #1857a4;">PACKAGES</span>=(<span style="color: #a44185;">"lsof"</span> <span style="color: #a44185;">"net-tools"</span> <span style="color: #a44185;">"tcpdump"</span> <span style="color: #a44185;">"htop"</span> <span style="color: #a44185;">"iftop"</span> <span style="color: #a44185;">"rkhunter"</span> <span style="color: #a44185;">"chkrootkit"</span> <span style="color: #a44185;">"lynis"</span> <span style="color: #a44185;">"clamav"</span> <span style="color: #a44185;">"sysstat"</span>)

  <span style="color: #1857a4;">MISSING</span>=()

  <span style="color: #219fd5; font-style: italic;">for</span> i<span style="color: #219fd5; font-style: italic;"> in</span> <span style="color: #a44185;">"${!TOOLS[@]}"</span>; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #219fd5; font-style: italic;">if ! </span><span style="color: #dc3eb7;">command</span> -v <span style="color: #a44185;">"${TOOLS[$i]}"</span> &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
      <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}Herramienta ${TOOLS[$i]} no encontrada${NC}"</span>
      <span style="color: #1857a4;">MISSING</span>+=(<span style="color: #a44185;">"${PACKAGES[$i]}"</span>)
    <span style="color: #219fd5; font-style: italic;">else</span>
      <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}&#10003; ${TOOLS[$i]} instalado${NC}"</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #219fd5; font-style: italic;">if</span> [ ${#<span style="color: #1857a4;">MISSING</span>[@]} -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${YELLOW}Instalando herramientas faltantes...${NC}"</span>
    apt-get update
    apt-get install -y <span style="color: #a44185;">"${MISSING[@]}"</span>

    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar si hubo alg&#250;n error en la instalaci&#243;n</span>
    <span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">?</span> -ne 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
      <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}Error al instalar algunas herramientas. El script puede no funcionar correctamente.${NC}"</span>
    <span style="color: #219fd5; font-style: italic;">else</span>
      <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}Todas las herramientas necesarias han sido instaladas.${NC}"</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}Todas las herramientas necesarias est&#225;n instaladas.${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">1. Comprobar procesos sospechosos (alto uso de CPU/memoria)</span>
<span style="color: #dc3eb7;">check_suspicious_processes</span>() {
  print_header <span style="color: #a44185;">"Comprobando procesos sospechosos"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Procesos con mayor consumo de CPU</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Procesos con mayor consumo de CPU:${NC}"</span>
  ps aux --sort=-%cpu | head -11

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Procesos con mayor consumo de memoria</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Procesos con mayor consumo de memoria:${NC}"</span>
  ps aux --sort=-%mem | head -11

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar nombres de procesos sospechosos (mineros comunes, etc.)</span>
  <span style="color: #1857a4;">SUSPICIOUS_PROCESS_NAMES</span>=(<span style="color: #a44185;">"miner"</span> <span style="color: #a44185;">"xmr"</span> <span style="color: #a44185;">"monero"</span> <span style="color: #a44185;">"cryptonight"</span> <span style="color: #a44185;">"stratum"</span> <span style="color: #a44185;">"coinhive"</span> <span style="color: #a44185;">"xmrig"</span> <span style="color: #a44185;">"cpuminer"</span> <span style="color: #a44185;">"nanopool"</span> <span style="color: #a44185;">"minergate"</span>)

  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Buscando procesos con nombres sospechosos:${NC}"</span>
  <span style="color: #1857a4;">FOUND</span>=0
  <span style="color: #219fd5; font-style: italic;">for</span> name<span style="color: #219fd5; font-style: italic;"> in</span> <span style="color: #a44185;">"${SUSPICIOUS_PROCESS_NAMES[@]}"</span>; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">RESULT</span>=$(<span style="color: #219fd5; font-weight: bold;">pgrep -l -f "$name"</span>)
    <span style="color: #219fd5; font-style: italic;">if</span> [ -n <span style="color: #a44185;">"$RESULT"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
      print_alert <span style="color: #a44185;">"Posible proceso de miner&#237;a detectado: $RESULT"</span>
      <span style="color: #1857a4;">FOUND</span>=1
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">FOUND</span> -eq 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_info <span style="color: #a44185;">"No se encontraron procesos con nombres sospechosos."</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar procesos ocultos (con caracteres especiales o espacios en blanco)</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Buscando procesos con nombres ocultos o sospechosos:${NC}"</span>
  ps aux | grep -E <span style="color: #a44185;">'[ ]{2,}[^ ]+$|[.][^ ]|^ '</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Procesos sin binarios en disco (posible indicaci&#243;n de malware en memoria)</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Procesos sin binarios en disco (posible malware en memoria):${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">for</span> pid<span style="color: #219fd5; font-style: italic;"> in</span> $(<span style="color: #219fd5; font-weight: bold;">ls /proc/ | grep -E '^[0-9]+$'</span>); <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #219fd5; font-style: italic;">if</span> [ -d <span style="color: #a44185;">"/proc/$pid"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
      <span style="color: #1857a4;">BINARY</span>=$(<span style="color: #219fd5; font-weight: bold;">ls -l /proc/$pid/exe 2&gt;/dev/null | awk '{print $NF}'</span>)
      <span style="color: #219fd5; font-style: italic;">if</span> [[ <span style="color: #a44185;">"$BINARY"</span> == *<span style="color: #a44185;">"(deleted)"</span>* || -z <span style="color: #a44185;">"$BINARY"</span> ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        <span style="color: #1857a4;">PROCESS_NAME</span>=$(<span style="color: #219fd5; font-weight: bold;">cat /proc/$pid/comm 2&gt;/dev/null</span>)
        <span style="color: #1857a4;">CMDLINE</span>=$(<span style="color: #219fd5; font-weight: bold;">cat /proc/$pid/cmdline 2&gt;/dev/null | tr '\0' ' '</span>)
        <span style="color: #219fd5; font-style: italic;">if</span> [ -n <span style="color: #a44185;">"$PROCESS_NAME"</span> ] &amp;&amp; [ <span style="color: #a44185;">"$PROCESS_NAME"</span> != <span style="color: #a44185;">"ps"</span> ] &amp;&amp; [ <span style="color: #a44185;">"$PROCESS_NAME"</span> != <span style="color: #a44185;">"grep"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
          print_warning <span style="color: #a44185;">"Proceso sin binario en disco: PID=$pid NOMBRE=$PROCESS_NAME CMDLINE=$CMDLINE"</span>
        <span style="color: #219fd5; font-style: italic;">fi</span>
      <span style="color: #219fd5; font-style: italic;">fi</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">2. Comprobar conexiones de red sospechosas</span>
<span style="color: #dc3eb7;">check_suspicious_connections</span>() {
  print_header <span style="color: #a44185;">"Comprobando conexiones de red sospechosas"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Listar todas las conexiones</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Todas las conexiones activas:${NC}"</span>
  netstat -tunapl

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Conexiones establecidas</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Conexiones establecidas:${NC}"</span>
  netstat -tunapl | grep ESTABLISHED

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Puertos en escucha</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Puertos en escucha:${NC}"</span>
  netstat -tunapl | grep LISTEN

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Puertos com&#250;nmente asociados con botnets y malware</span>
  <span style="color: #1857a4;">SUSPICIOUS_PORTS</span>=(4444 5555 6666 6667 6697 8080 9999 1080 11111 1337 31337 34567 65535)

  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Buscando puertos sospechosos:${NC}"</span>
  <span style="color: #1857a4;">FOUND</span>=0
  <span style="color: #219fd5; font-style: italic;">for</span> port<span style="color: #219fd5; font-style: italic;"> in</span> <span style="color: #a44185;">"${SUSPICIOUS_PORTS[@]}"</span>; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">RESULT</span>=$(<span style="color: #219fd5; font-weight: bold;">netstat -tunapl | grep ":$port "</span>)
    <span style="color: #219fd5; font-style: italic;">if</span> [ -n <span style="color: #a44185;">"$RESULT"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
      print_alert <span style="color: #a44185;">"Puerto sospechoso $port en uso: $RESULT"</span>
      <span style="color: #1857a4;">FOUND</span>=1
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">FOUND</span> -eq 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_info <span style="color: #a44185;">"No se encontraron puertos sospechosos comunes en uso."</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar conexiones a IPs sospechosas (servidores C&amp;C conocidos)</span>
  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Esta lista deber&#237;a ser actualizada peri&#243;dicamente con IPs conocidas de C&amp;C</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Comprobando conexiones a posibles servidores C&amp;C:${NC}"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejemplo simple - en una implementaci&#243;n real, esta lista deber&#237;a ser m&#225;s extensa</span>
  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">y actualizada desde una fuente confiable</span>
  <span style="color: #1857a4;">SUSPICIOUS_IPS</span>=(<span style="color: #a44185;">"185.26.205."</span> <span style="color: #a44185;">"91.121."</span> <span style="color: #a44185;">"212.83."</span> <span style="color: #a44185;">"88.208."</span>)

  <span style="color: #1857a4;">FOUND</span>=0
  <span style="color: #219fd5; font-style: italic;">for</span> ip_pattern<span style="color: #219fd5; font-style: italic;"> in</span> <span style="color: #a44185;">"${SUSPICIOUS_IPS[@]}"</span>; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">RESULT</span>=$(<span style="color: #219fd5; font-weight: bold;">netstat -tunapl | grep "$ip_pattern"</span>)
    <span style="color: #219fd5; font-style: italic;">if</span> [ -n <span style="color: #a44185;">"$RESULT"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
      print_alert <span style="color: #a44185;">"Conexi&#243;n a posible servidor C&amp;C detectada: $RESULT"</span>
      <span style="color: #1857a4;">FOUND</span>=1
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">FOUND</span> -eq 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_info <span style="color: #a44185;">"No se encontraron conexiones a servidores C&amp;C conocidos."</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Analizar cantidad de conexiones por IP</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}IPs con m&#250;ltiples conexiones (posible comunicaci&#243;n con C&amp;C):${NC}"</span>
  netstat -ntu | awk <span style="color: #a44185;">'{print $5}'</span> | cut -d: -f1 | sort | uniq -c | sort -nr | head -n 10

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar conexiones salientes inusuales</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Conexiones salientes posiblemente sospechosas:${NC}"</span>
  <span style="color: #1857a4;">OUTBOUND</span>=$(<span style="color: #219fd5; font-weight: bold;">netstat -tun | grep -v "127.0.0.1" | grep -v "LISTEN" | grep "ESTABLISHED"</span>)
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"$OUTBOUND"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">An&#225;lisis de tr&#225;fico en tiempo real (muestra limitada)</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Captura de tr&#225;fico en tiempo real (10 segundos):${NC}"</span>
  timeout 10 tcpdump -nn -c 100 2&gt;/dev/null || print_warning <span style="color: #a44185;">"No se pudo ejecutar tcpdump"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">3. Comprobar archivos y directorios sospechosos</span>
<span style="color: #dc3eb7;">check_suspicious_files</span>() {
  print_header <span style="color: #a44185;">"Comprobando archivos y directorios sospechosos"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Archivos modificados recientemente</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Archivos del sistema modificados en las &#250;ltimas 24 horas:${NC}"</span>
  find /bin /usr/bin /sbin /usr/sbin -type f -mtime -1 -ls | grep -v <span style="color: #a44185;">"\.git"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar archivos setuid/setgid (potencialmente peligrosos)</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Archivos con permisos SUID/SGID (verificar si son leg&#237;timos):${NC}"</span>
  find / -type f <span style="color: #a44185;">\(</span> -perm -4000 -o -perm -2000 <span style="color: #a44185;">\)</span> -ls 2&gt;/dev/null | grep -v -E <span style="color: #a44185;">"/snap/|/var/lib/snapd/"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar archivos ejecutables en /tmp y /var/tmp</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Archivos ejecutables en directorios temporales:${NC}"</span>
  find /tmp /var/tmp /dev/shm -type f -perm -100 -ls 2&gt;/dev/null

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar scripts de inicio sospechosos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Scripts de inicio potencialmente sospechosos:${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">for</span> dir<span style="color: #219fd5; font-style: italic;"> in</span> /etc/init.d /etc/init /etc/rc*.d /etc/systemd/system /usr/lib/systemd/system; <span style="color: #219fd5; font-style: italic;">do</span>
    find <span style="color: #a44185;">"$dir"</span> -type f -mtime -7 -ls 2&gt;/dev/null
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar archivos ocultos en el directorio home</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Archivos ocultos recientes en directorios home:${NC}"</span>
  find /home -type f -name <span style="color: #a44185;">".*"</span> -mtime -7 -ls 2&gt;/dev/null | grep -v -E <span style="color: #a44185;">"\.cache|\.config|\.local|\.dbus|\.mozilla|\.bash_history"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar archivos con nombres sospechosos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Archivos con nombres potencialmente sospechosos:${NC}"</span>
  find / -type f -name <span style="color: #a44185;">"*backdoor*"</span> -o -name <span style="color: #a44185;">"*rootkit*"</span> -o -name <span style="color: #a44185;">"*trojan*"</span> -o -name <span style="color: #a44185;">"*miner*"</span> -o -name <span style="color: #a44185;">"*xmr*"</span> -o -name <span style="color: #a44185;">"*monero*"</span> 2&gt;/dev/null
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">4. Comprobar tareas programadas</span>
<span style="color: #dc3eb7;">check_scheduled_tasks</span>() {
  print_header <span style="color: #a44185;">"Comprobando tareas programadas"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crontabs del sistema</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Crontabs del sistema:${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">for</span> user<span style="color: #219fd5; font-style: italic;"> in</span> $(<span style="color: #219fd5; font-weight: bold;">cut -f1 -d: /etc/passwd</span>); <span style="color: #219fd5; font-style: italic;">do</span>
    crontab -l -u <span style="color: #a44185;">"$user"</span> 2&gt;/dev/null
    <span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">?</span> -eq 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
      <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"Crontab del usuario $user:"</span>
      crontab -l -u <span style="color: #a44185;">"$user"</span>
      <span style="color: #dc3eb7;">echo</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Otros archivos cron</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Otros archivos cron:${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">for</span> dir<span style="color: #219fd5; font-style: italic;"> in</span> /etc/cron.d /etc/cron.daily /etc/cron.hourly /etc/cron.monthly /etc/cron.weekly; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"Contenido de $dir:"</span>
    ls -la <span style="color: #a44185;">"$dir"</span> 2&gt;/dev/null
    <span style="color: #dc3eb7;">echo</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar /etc/crontab</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Contenido de /etc/crontab:${NC}"</span>
  cat /etc/crontab

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar systemd timers</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Systemd timers:${NC}"</span>
  systemctl list-timers --all
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">5. Comprobar usuarios y permisos</span>
<span style="color: #dc3eb7;">check_users_and_permissions</span>() {
  print_header <span style="color: #a44185;">"Comprobando usuarios y permisos"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Listar usuarios</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Lista de usuarios en el sistema:${NC}"</span>
  cut -d: -f1,3,7 /etc/passwd | sort

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Usuarios con UID 0 (root)</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Usuarios con privilegios de root (UID 0):${NC}"</span>
  grep <span style="color: #a44185;">":0:"</span> /etc/passwd

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Usuarios que pueden usar sudo</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Usuarios que pueden usar sudo:${NC}"</span>
  grep -Po <span style="color: #a44185;">'^sudo.+:\K.*$'</span> /etc/group
  cat /etc/sudoers.d/* /etc/sudoers 2&gt;/dev/null | grep -v <span style="color: #a44185;">"^#"</span> | grep -v <span style="color: #a44185;">"^$"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">&#218;ltimos inicios de sesi&#243;n</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}&#218;ltimos inicios de sesi&#243;n:${NC}"</span>
  last | head -20

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Sesiones activas</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Sesiones activas:${NC}"</span>
  w
  who

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar usuarios conectados por SSH</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Usuarios conectados por SSH:${NC}"</span>
  netstat -tnpa | grep <span style="color: #a44185;">"ESTABLISHED.*sshd"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Archivos de autorizaci&#243;n SSH</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Archivos authorized_keys (verificar claves no autorizadas):${NC}"</span>
  find /home -name <span style="color: #a44185;">"authorized_keys"</span> -exec ls -la {} <span style="color: #a44185;">\;</span> -exec cat {} <span style="color: #a44185;">\;</span> 2&gt;/dev/null
  find /root -name <span style="color: #a44185;">"authorized_keys"</span> -exec ls -la {} <span style="color: #a44185;">\;</span> -exec cat {} <span style="color: #a44185;">\;</span> 2&gt;/dev/null
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">6. Comprobar servicios y daemons</span>
<span style="color: #dc3eb7;">check_services</span>() {
  print_header <span style="color: #a44185;">"Comprobando servicios y daemons"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Servicios activos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Servicios systemd activos:${NC}"</span>
  systemctl list-units --type=service --state=running

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Todos los servicios</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Todos los servicios systemd:${NC}"</span>
  systemctl list-unit-files --type=service

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Servicios iniciados recientemente</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Servicios iniciados en los &#250;ltimos 3 d&#237;as:${NC}"</span>
  find /etc/systemd/system /usr/lib/systemd/system -type f -name <span style="color: #a44185;">"*.service"</span> -mtime -3 -ls

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Servicios no est&#225;ndar</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Servicios potencialmente no est&#225;ndar:${NC}"</span>
  systemctl list-units --type=service | grep -v -E <span style="color: #a44185;">"systemd|dbus|getty|ssh|network|ifup|rpc|nfs|syslog|cron|anacron|atd|udev|acpid|rsyslog|logind|getty|apache|nginx|mariadb|mysql|postgresql"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">7. Realizar escaneos con herramientas de seguridad</span>
<span style="color: #dc3eb7;">security_scans</span>() {
  print_header <span style="color: #a44185;">"Ejecutando escaneos de seguridad"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar rkhunter para buscar rootkits</span>
  <span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v rkhunter &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Ejecutando rkhunter (escaneo de rootkits):${NC}"</span>
    rkhunter --check --sk || print_warning <span style="color: #a44185;">"rkhunter fall&#243; o encontr&#243; problemas"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_warning <span style="color: #a44185;">"rkhunter no est&#225; instalado"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar chkrootkit</span>
  <span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v chkrootkit &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Ejecutando chkrootkit:${NC}"</span>
    chkrootkit -q || print_warning <span style="color: #a44185;">"chkrootkit fall&#243; o encontr&#243; problemas"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_warning <span style="color: #a44185;">"chkrootkit no est&#225; instalado"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar lynis para auditor&#237;a de seguridad</span>
  <span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v lynis &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Ejecutando lynis (auditor&#237;a b&#225;sica):${NC}"</span>
    lynis audit system --quick || print_warning <span style="color: #a44185;">"lynis fall&#243; o encontr&#243; problemas"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_warning <span style="color: #a44185;">"lynis no est&#225; instalado"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar ClamAV para buscar malware</span>
  <span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v clamscan &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Ejecutando ClamAV en directorios cr&#237;ticos:${NC}"</span>
    clamscan --recursive --suppress-ok-results /etc /tmp /var/tmp /home/*/.ssh /root || print_warning <span style="color: #a44185;">"clamscan fall&#243; o encontr&#243; problemas"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_warning <span style="color: #a44185;">"ClamAV no est&#225; instalado"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">8. Comprobar registros del sistema</span>
<span style="color: #dc3eb7;">check_logs</span>() {
  print_header <span style="color: #a44185;">"Analizando registros del sistema"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar intentos de inicio de sesi&#243;n fallidos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Intentos de inicio de sesi&#243;n fallidos:${NC}"</span>
  grep <span style="color: #a44185;">"Failed password"</span> /var/log/auth.log* | tail -n 20

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobaci&#243;n de conexiones rechazadas</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Conexiones rechazadas:${NC}"</span>
  grep -i <span style="color: #a44185;">"connection refused\|failed to connect"</span> /var/log/syslog* | tail -n 20

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Mensajes de error cr&#237;ticos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Mensajes de error cr&#237;ticos:${NC}"</span>
  grep -i <span style="color: #a44185;">"error\|critical\|warning\|fail"</span> /var/log/syslog* | tail -n 50

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar IPs que intentan m&#250;ltiples inicios de sesi&#243;n</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}IPs con m&#250;ltiples intentos de inicio de sesi&#243;n:${NC}"</span>
  grep <span style="color: #a44185;">"Failed password"</span> /var/log/auth.log* | grep -E -o <span style="color: #a44185;">"([0-9]{1,3}[\.]){3}[0-9]{1,3}"</span> | sort | uniq -c | sort -nr | head -n 10
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">9. Comprobar volumen de tr&#225;fico de red</span>
<span style="color: #dc3eb7;">check_network_traffic</span>() {
  print_header <span style="color: #a44185;">"Analizando tr&#225;fico de red"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Estad&#237;sticas de uso de red</span>
  <span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v vnstat &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Estad&#237;sticas de tr&#225;fico de red:${NC}"</span>
    vnstat
  <span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Estad&#237;sticas de interfaces de red:${NC}"</span>
    ip -s link
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Mostrar tabla de rutas</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Tabla de rutas:${NC}"</span>
  ip route

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Mostrar puertos abiertos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Puertos abiertos:${NC}"</span>
  ss -tuln

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Capturar y analizar una muestra de tr&#225;fico</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}An&#225;lisis de muestra de tr&#225;fico (5 segundos):${NC}"</span>
  timeout 5 tcpdump -nn -q -i any 2&gt;/dev/null || print_warning <span style="color: #a44185;">"No se pudo ejecutar tcpdump"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">10. Comprobaci&#243;n del rendimiento del sistema</span>
<span style="color: #dc3eb7;">check_system_performance</span>() {
  print_header <span style="color: #a44185;">"Analizando rendimiento del sistema"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Uso de CPU y memoria</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Uso de CPU y memoria:${NC}"</span>
  top -bn 1 | head -20

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobaci&#243;n de la carga del sistema</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Carga del sistema:${NC}"</span>
  uptime

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Uso de disco</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Uso de disco:${NC}"</span>
  df -h

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Directorios que ocupan m&#225;s espacio</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Directorios que ocupan m&#225;s espacio:${NC}"</span>
  du -sh /* 2&gt;/dev/null | sort -hr | head -10

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar swap</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Uso de swap:${NC}"</span>
  free -h
  swapon --show

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar si hay procesos zombies</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Procesos zombie:${NC}"</span>
  ps aux | awk <span style="color: #a44185;">'$8=="Z"'</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">11. Generar resumen e informe final</span>
<span style="color: #dc3eb7;">generate_summary</span>() {
  print_header <span style="color: #a44185;">"RESUMEN DE LA DETECCI&#211;N"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar indicadores clave de compromiso</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Indicadores clave revisados:${NC}"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">1. Procesos sospechosos</span>
  <span style="color: #1857a4;">SUSPICIOUS_PROCS</span>=$(<span style="color: #219fd5; font-weight: bold;">ps aux | grep -E 'miner|xmr|monero|cryptonight|stratum' | grep -v grep | wc -l</span>)
  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$SUSPICIOUS_PROCS"</span> -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_alert <span style="color: #a44185;">"&#9888;&#65039; Se encontraron $SUSPICIOUS_PROCS procesos con nombres sospechosos"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_info <span style="color: #a44185;">"&#10003; No se encontraron procesos con nombres asociados a miner&#237;a/botnet"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">2. Puertos sospechosos</span>
  <span style="color: #1857a4;">SUSPICIOUS_PORTS_COUNT</span>=$(<span style="color: #219fd5; font-weight: bold;">netstat -tunapl 2&gt;/dev/null | grep -E ':(4444|5555|6666|6667|8080|9999|1080|1337|31337</span><span style="color: #a44185;">)'</span> | grep -v <span style="color: #a44185;">"127.0.0.1"</span> | wc -l)
  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$SUSPICIOUS_PORTS_COUNT"</span> -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_alert <span style="color: #a44185;">"&#9888;&#65039; Se encontraron $SUSPICIOUS_PORTS_COUNT puertos sospechosos en uso"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_info <span style="color: #a44185;">"&#10003; No se encontraron puertos com&#250;nmente asociados con malware"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">3. Archivos sospechosos</span>
  <span style="color: #1857a4;">SUSPICIOUS_FILES</span>=$(<span style="color: #219fd5; font-weight: bold;">find /tmp /var/tmp /dev/shm -type f -perm -100 2&gt;/dev/null | wc -l</span>)
  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$SUSPICIOUS_FILES"</span> -gt 3 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_warning <span style="color: #a44185;">"&#9888;&#65039; Se encontraron $SUSPICIOUS_FILES archivos ejecutables en directorios temporales"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_info <span style="color: #a44185;">"&#10003; N&#250;mero normal de ejecutables en directorios temporales"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">4. Tareas cron sospechosas</span>
  <span style="color: #1857a4;">SUSPICIOUS_CRON</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -r "curl\|wget\|nc\|netcat\|bash -i\|python -c\|perl -e" /etc/cron* /var/spool/cron/ 2&gt;/dev/null | wc -l</span>)
  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$SUSPICIOUS_CRON"</span> -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_alert <span style="color: #a44185;">"&#9888;&#65039; Se encontraron $SUSPICIOUS_CRON tareas cron potencialmente sospechosas"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_info <span style="color: #a44185;">"&#10003; No se encontraron tareas cron sospechosas"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">5. Usuarios con UID 0 distintos de root</span>
  <span style="color: #1857a4;">ROOT_USERS</span>=$(<span style="color: #219fd5; font-weight: bold;">grep ":0:" /etc/passwd | grep -v "^root:" | wc -l</span>)
  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$ROOT_USERS"</span> -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_alert <span style="color: #a44185;">"&#9888;&#65039; Se encontraron $ROOT_USERS usuarios adicionales con privilegios de root (UID 0)"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_info <span style="color: #a44185;">"&#10003; Solo el usuario root tiene UID 0"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Evaluaci&#243;n final</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${BLUE}EVALUACI&#211;N FINAL:${NC}"</span>

  <span style="color: #1857a4;">TOTAL_ALERTS</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "\[ALERTA\]" "$REPORT_FILE"</span>)
  <span style="color: #1857a4;">TOTAL_WARNINGS</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "\[ADVERTENCIA\]" "$REPORT_FILE"</span>)

  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$TOTAL_ALERTS"</span> -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}&#9888;&#65039; Se encontraron $TOTAL_ALERTS alertas y $TOTAL_WARNINGS advertencias que requieren investigaci&#243;n inmediata.${NC}"</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}El sistema podr&#237;a estar comprometido. Revise el informe completo y tome medidas.${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">elif</span> [ <span style="color: #a44185;">"$TOTAL_WARNINGS"</span> -gt 3 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}&#9888;&#65039; Se encontraron $TOTAL_WARNINGS advertencias que requieren atenci&#243;n.${NC}"</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}El sistema podr&#237;a tener actividad sospechosa. Revise el informe completo.${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}&#10003; No se encontraron indicios claros de compromiso en el sistema.${NC}"</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}Contin&#250;e monitoreando regularmente.${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Recomendaciones</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}RECOMENDACIONES:${NC}"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"1. Ejecute este script peri&#243;dicamente para monitorear cambios"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"2. Configure un sistema de monitoreo de integridad (como AIDE o Tripwire)"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"3. Actualice regularmente el sistema y las aplicaciones"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"4. Configure correctamente el firewall"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"5. Implemente detecci&#243;n de intrusiones con herramientas como Snort o Suricata"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"6. Siga las pr&#225;cticas recomendadas de seguridad para servidores Linux"</span>

  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${BLUE}Informe completo guardado en: $REPORT_FILE${NC}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar todas las comprobaciones</span>
<span style="color: #dc3eb7;">main</span>() {
  check_tools
  check_suspicious_processes
  check_suspicious_connections
  check_suspicious_files
  check_scheduled_tasks
  check_users_and_permissions
  check_services
  security_scans
  check_logs
  check_network_traffic
  check_system_performance
  generate_summary

  print_header <span style="color: #a44185;">"FINALIZADO"</span>
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"An&#225;lisis completado: $(</span><span style="color: #219fd5; font-weight: bold;">date</span><span style="color: #a44185;">)"</span>
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Informe guardado en: $REPORT_FILE"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar el script principal</span>
main
</pre>
</div>
</div>
</div>
<div id="outline-container-org809f40b" class="outline-2">
<h2 id="org809f40b">¬øC√≥mo funciona el script?</h2>
<div class="outline-text-2" id="text-org809f40b">
<p>
El script realiza una serie de verificaciones exhaustivas para detectar posibles signos de compromiso en el sistema:
</p>


<figure id="org3d97007">
<img src="images/botnet_detection_flow.png" alt="botnet_detection_flow.png">

</figure>

<p>
<a href="images/botnet_detection_flow.png">botnet<sub>detection</sub><sub>flow.png</sub></a>
</p>
</div>
<div id="outline-container-org86a7253" class="outline-3">
<h3 id="org86a7253">Descripci√≥n de los m√≥dulos principales</h3>
<div class="outline-text-3" id="text-org86a7253">
</div>
<div id="outline-container-orgd5586e7" class="outline-4">
<h4 id="orgd5586e7">1. Verificaci√≥n de procesos sospechosos</h4>
<div class="outline-text-4" id="text-orgd5586e7">
<p>
Este m√≥dulo examina los procesos en ejecuci√≥n para detectar:
</p>
<ul class="org-ul">
<li>Procesos con alto consumo de CPU o memoria</li>
<li>Procesos con nombres asociados a miner√≠a de criptomonedas o malware</li>
<li>Procesos sin archivos binarios en disco (posible indicaci√≥n de malware en memoria)</li>
<li>Procesos con nombres ocultos o irreconocibles</li>
</ul>
</div>
</div>
<div id="outline-container-orgdcf512d" class="outline-4">
<h4 id="orgdcf512d">2. An√°lisis de conexiones de red</h4>
<div class="outline-text-4" id="text-orgdcf512d">
<p>
Esta secci√≥n examina las conexiones de red para identificar:
</p>
<ul class="org-ul">
<li>Puertos conocidos por ser utilizados por botnets y malware</li>
<li>Conexiones a direcciones IP asociadas con servidores de comando y control (C&amp;C)</li>
<li>Patrones de tr√°fico inusuales o sospechosos</li>
<li>Comunicaciones no autorizadas con el exterior</li>
</ul>
</div>
</div>
<div id="outline-container-org99de2e1" class="outline-4">
<h4 id="org99de2e1">3. Verificaci√≥n de archivos y directorios</h4>
<div class="outline-text-4" id="text-org99de2e1">
<p>
El script busca:
</p>
<ul class="org-ul">
<li>Archivos ejecutables en ubicaciones temporales</li>
<li>Archivos del sistema modificados recientemente</li>
<li>Archivos con permisos SUID/SGID sospechosos</li>
<li>Archivos ocultos con nombres o comportamientos inusuales</li>
</ul>
</div>
</div>
<div id="outline-container-org8f7335d" class="outline-4">
<h4 id="org8f7335d">4. An√°lisis de tareas programadas</h4>
<div class="outline-text-4" id="text-org8f7335d">
<p>
Se examinan:
</p>
<ul class="org-ul">
<li>Tareas cron para todos los usuarios</li>
<li>Archivos cron del sistema</li>
<li>Timers de systemd</li>
<li>Scripts de inicio modificados recientemente</li>
</ul>
</div>
</div>
<div id="outline-container-orgec5c79c" class="outline-4">
<h4 id="orgec5c79c">5. Verificaci√≥n de usuarios y permisos</h4>
<div class="outline-text-4" id="text-orgec5c79c">
<p>
El script revisa:
</p>
<ul class="org-ul">
<li>Usuarios con privilegios elevados (UID 0)</li>
<li>Usuarios que pueden ejecutar comandos con sudo</li>
<li>Sesiones SSH activas y recientes</li>
<li>Claves de autorizaci√≥n SSH no autorizadas</li>
</ul>
</div>
</div>
<div id="outline-container-org10d55d8" class="outline-4">
<h4 id="org10d55d8">6. An√°lisis de servicios</h4>
<div class="outline-text-4" id="text-org10d55d8">
<p>
Esta secci√≥n examina:
</p>
<ul class="org-ul">
<li>Servicios activos en el sistema</li>
<li>Servicios configurados para iniciar autom√°ticamente</li>
<li>Servicios no est√°ndar o sospechosos</li>
<li>Servicios a√±adidos o modificados recientemente</li>
</ul>
</div>
</div>
<div id="outline-container-orge7b98b4" class="outline-4">
<h4 id="orge7b98b4">7. Escaneos de seguridad</h4>
<div class="outline-text-4" id="text-orge7b98b4">
<p>
El script utiliza herramientas especializadas:
</p>
<ul class="org-ul">
<li>RKHunter para detectar rootkits</li>
<li>ChkRootkit como m√©todo adicional de detecci√≥n</li>
<li>Lynis para auditor√≠a de seguridad general</li>
<li>ClamAV para escaneo de malware</li>
</ul>
</div>
</div>
<div id="outline-container-orgf2337f8" class="outline-4">
<h4 id="orgf2337f8">8. An√°lisis de logs</h4>
<div class="outline-text-4" id="text-orgf2337f8">
<p>
Se analizan los registros del sistema para identificar:
</p>
<ul class="org-ul">
<li>Intentos de inicio de sesi√≥n fallidos</li>
<li>Conexiones rechazadas</li>
<li>Mensajes de error cr√≠ticos</li>
<li>Patrones de actividad sospechosa</li>
</ul>
</div>
</div>
<div id="outline-container-org587a9f4" class="outline-4">
<h4 id="org587a9f4">9. An√°lisis de tr√°fico de red</h4>
<div class="outline-text-4" id="text-org587a9f4">
<p>
El script examina:
</p>
<ul class="org-ul">
<li>Estad√≠sticas de uso de red</li>
<li>Tabla de rutas para identificar redirecciones sospechosas</li>
<li>Puertos abiertos y servicios escuchando</li>
<li>Muestras de tr√°fico de red en tiempo real</li>
</ul>
</div>
</div>
<div id="outline-container-org36b4d21" class="outline-4">
<h4 id="org36b4d21">10. Verificaci√≥n del rendimiento</h4>
<div class="outline-text-4" id="text-org36b4d21">
<p>
Se analiza:
</p>
<ul class="org-ul">
<li>Uso de CPU y memoria</li>
<li>Carga del sistema</li>
<li>Uso de disco</li>
<li>Procesos zombie y otros indicadores de actividad an√≥mala</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org4280415" class="outline-3">
<h3 id="org4280415">Informe y resumen final</h3>
<div class="outline-text-3" id="text-org4280415">
<p>
Al finalizar todas las verificaciones, el script genera un informe detallado y un resumen que clasifica el estado del sistema en tres categor√≠as:
</p>

<ol class="org-ol">
<li><b>Sistema comprometido</b>: Se detectaron alertas graves que indican alta probabilidad de infecci√≥n.</li>
<li><b>Actividad sospechosa</b>: Se encontraron advertencias que requieren investigaci√≥n adicional.</li>
<li><b>Sistema limpio</b>: No se detectaron indicios claros de compromiso.</li>
</ol>

<p>
El informe completo se guarda en el directorio <code>/var/log/security_checks/</code> con una marca de tiempo para referencia futura y an√°lisis comparativo.
</p>
</div>
</div>
</div>
<div id="outline-container-orge5ca4b9" class="outline-2">
<h2 id="orge5ca4b9">Uso pr√°ctico del script</h2>
<div class="outline-text-2" id="text-orge5ca4b9">
</div>
<div id="outline-container-org0822fa2" class="outline-3">
<h3 id="org0822fa2">Requisitos previos</h3>
<div class="outline-text-3" id="text-org0822fa2">
<p>
Antes de ejecutar el script, aseg√∫rate de tener:
</p>

<ul class="org-ul">
<li>Un sistema Linux (preferiblemente Ubuntu o una distribuci√≥n basada en Debian)</li>
<li>Acceso root o permisos de sudo</li>
<li>Conexi√≥n a Internet (para instalar las herramientas faltantes)</li>
</ul>
</div>
</div>
<div id="outline-container-orgf2a779e" class="outline-3">
<h3 id="orgf2a779e">Instalaci√≥n y ejecuci√≥n</h3>
<div class="outline-text-3" id="text-orgf2a779e">
<ol class="org-ol">
<li>Copia el script completo en un archivo llamado <code>botnet_detector.sh</code></li>
<li>Dale permisos de ejecuci√≥n:</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash">chmod +x botnet_detector.sh
</pre>
</div>

<ol class="org-ol">
<li>Ejecuta el script como root:</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash">sudo ./botnet_detector.sh
</pre>
</div>

<ol class="org-ol">
<li>El script autom√°ticamente instalar√° las herramientas necesarias si no est√°n presentes.</li>
</ol>
</div>
</div>
<div id="outline-container-org44bf35d" class="outline-3">
<h3 id="org44bf35d">Automatizaci√≥n</h3>
<div class="outline-text-3" id="text-org44bf35d">
<p>
Para monitorear regularmente tu sistema, puedes configurar el script como una tarea programada:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Editar crontab</span>
sudo crontab -e

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">A&#241;adir una l&#237;nea para ejecutar el script semanalmente (por ejemplo, cada domingo a las 3:00 AM)</span>
0 3 * * 0 /ruta/al/botnet_detector.sh
</pre>
</div>

<p>
El informe se guardar√° con la fecha y hora de ejecuci√≥n, permiti√©ndote comparar resultados a lo largo del tiempo.
</p>
</div>
</div>
</div>
<div id="outline-container-orgf1658e2" class="outline-2">
<h2 id="orgf1658e2">Signos comunes de infecci√≥n por botnet</h2>
<div class="outline-text-2" id="text-orgf1658e2">
<p>
Adem√°s de las verificaciones realizadas por el script, estos son signos adicionales que podr√≠an indicar que tu sistema est√° comprometido:
</p>
</div>
<div id="outline-container-orgbda72d6" class="outline-3">
<h3 id="orgbda72d6">Signos a nivel de sistema</h3>
<div class="outline-text-3" id="text-orgbda72d6">
<ul class="org-ul">
<li>Tiempos de arranque o apagado inusualmente largos</li>
<li>El sistema se vuelve significativamente m√°s lento sin raz√≥n aparente</li>
<li>Crasheos frecuentes o pantallas azules (en Windows)</li>
<li>Programas que se cierran o abren solos</li>
<li>Cambios en la p√°gina de inicio del navegador o redirecciones web</li>
</ul>
</div>
</div>
<div id="outline-container-orgd5a4509" class="outline-3">
<h3 id="orgd5a4509">Signos a nivel de red</h3>
<div class="outline-text-3" id="text-orgd5a4509">
<ul class="org-ul">
<li>Uso de red elevado incluso cuando no est√°s utilizando activamente Internet</li>
<li>Quejas de tu proveedor de Internet sobre tr√°fico sospechoso</li>
<li>Tu direcci√≥n IP aparece en listas negras de spam</li>
<li>Tu router tiene configuraciones que no recuerdas haber cambiado</li>
</ul>
</div>
</div>
<div id="outline-container-org39bebc1" class="outline-3">
<h3 id="org39bebc1">Signos a nivel de usuario</h3>
<div class="outline-text-3" id="text-org39bebc1">
<ul class="org-ul">
<li>Cuentas de correo electr√≥nico enviando spam sin tu conocimiento</li>
<li>Actividad en tus cuentas que no reconoces</li>
<li>Nuevos programas o extensiones del navegador que no instalaste</li>
<li>Antivirus o firewalls desactivados sin tu intervenci√≥n</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgc7e6089" class="outline-2">
<h2 id="orgc7e6089">Mejores pr√°cticas para prevenir infecciones</h2>
<div class="outline-text-2" id="text-orgc7e6089">
<p>
La prevenci√≥n es siempre la mejor estrategia. Estas son algunas recomendaciones para mantener tu sistema seguro:
</p>

<ol class="org-ol">
<li><b>Mant√©n tu sistema actualizado</b>
<ul class="org-ul">
<li>Aplica parches de seguridad tan pronto como est√©n disponibles</li>
<li>Actualiza regularmente todas las aplicaciones</li>
</ul></li>

<li><b>Configura un firewall robusto</b>
<ul class="org-ul">
<li><p>
Utiliza UFW (Uncomplicated Firewall) en Ubuntu:
</p>
<div class="org-src-container">
<pre class="src src-bash">sudo ufw enable
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow ssh
</pre>
</div></li>
</ul></li>

<li><b>Implementa un sistema de detecci√≥n de intrusiones</b>
<ul class="org-ul">
<li>Considera herramientas como Snort, Suricata o OSSEC</li>
</ul></li>

<li><b>Monitorea la integridad del sistema</b>
<ul class="org-ul">
<li><p>
Instala AIDE (Advanced Intrusion Detection Environment):
</p>
<div class="org-src-container">
<pre class="src src-bash">sudo apt install aide
sudo aideinit
</pre>
</div></li>
</ul></li>

<li><b>Refuerza la seguridad SSH</b>
<ul class="org-ul">
<li>Desactiva el login como root</li>
<li>Utiliza autenticaci√≥n por clave en lugar de contrase√±as</li>
<li>Cambia el puerto por defecto</li>
</ul></li>

<li><b>Implementa el principio de m√≠nimo privilegio</b>
<ul class="org-ul">
<li>Crea usuarios con los permisos m√≠nimos necesarios</li>
<li>Utiliza sudo para tareas espec√≠ficas en lugar de login como root</li>
</ul></li>

<li><b>Realiza backups regularmente</b>
<ul class="org-ul">
<li>Mant√©n copias de seguridad offline o en ubicaciones aisladas</li>
<li>Verifica peri√≥dicamente que los backups funcionen correctamente</li>
</ul></li>
</ol>
</div>
</div>
<div id="outline-container-org6629fa8" class="outline-2">
<h2 id="org6629fa8">Qu√© hacer si encuentras un sistema comprometido</h2>
<div class="outline-text-2" id="text-org6629fa8">
<p>
Si el script detecta signos de compromiso o tienes razones para creer que tu sistema es parte de una botnet:
</p>

<ol class="org-ol">
<li><b>No apagues el sistema inmediatamente</b>
<ul class="org-ul">
<li>El an√°lisis forense podr√≠a requerir informaci√≥n vol√°til en memoria</li>
</ul></li>

<li><b>A√≠sla el sistema de la red</b>
<ul class="org-ul">
<li>Desconecta f√≠sicamente el cable de red o desactiva la wifi</li>
</ul></li>

<li><b>Documenta todo</b>
<ul class="org-ul">
<li>Toma notas detalladas de lo que observas</li>
<li>Guarda los informes generados por el script</li>
</ul></li>

<li><b>Preserva evidencia</b>
<ul class="org-ul">
<li>Crea una imagen forense si es posible</li>
<li>Guarda logs y archivos relevantes</li>
</ul></li>

<li><b>Eval√∫a el impacto</b>
<ul class="org-ul">
<li>Determina qu√© datos o sistemas podr√≠an estar comprometidos</li>
<li>Verifica cuentas y servicios cr√≠ticos</li>
</ul></li>

<li><b>Reconstruye desde cero</b>
<ul class="org-ul">
<li>La reinstalaci√≥n completa es generalmente m√°s segura que intentar limpiar</li>
<li>Restaura datos desde backups verificados como limpios</li>
</ul></li>

<li><b>Aprende y mejora</b>
<ul class="org-ul">
<li>Analiza c√≥mo ocurri√≥ la intrusi√≥n</li>
<li>Implementa medidas adicionales para prevenir futuros incidentes</li>
</ul></li>
</ol>
</div>
</div>
<div id="outline-container-org67c2ae6" class="outline-2">
<h2 id="org67c2ae6">Conclusi√≥n</h2>
<div class="outline-text-2" id="text-org67c2ae6">
<p>
La seguridad inform√°tica es un proceso continuo, no un estado final. Este script puede ayudarte a detectar posibles compromisos en tu sistema Linux, pero debe ser parte de una estrategia de seguridad m√°s amplia que incluya buenas pr√°cticas preventivas, monitoreo regular, y planes de respuesta a incidentes.
</p>

<p>
Utilizando Emacs y org-mode, puedes adaptar y mejorar este script seg√∫n tus necesidades espec√≠ficas, programar su ejecuci√≥n regular, y documentar y analizar sus resultados de manera organizada.
</p>

<p>
Recuerda que ninguna herramienta automatizada puede reemplazar el conocimiento y la vigilancia humana. Mantente informado sobre nuevas amenazas y t√©cnicas de ataque, y adapta tus defensas en consecuencia.
</p>


<p>
<a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15-gu-a-pr-ctica-configuraci-n-de-ufw-en-ubuntu-con-scripts-y-org-mode">2025-04-15-gu-a-pr-ctica-configuraci-n-de-ufw-en-ubuntu-con-scripts-y-org-mode</a> <br>
</p>

<p>
<a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-16--fortaleciendo-la-seguridad-inform-tica-con-snort-y-aide-gu-a-completa">2025-04-16&#x2013;fortaleciendo-la-seguridad-inform-tica-con-snort-y-aide-gu-a-completa</a>
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categor√≠a</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-botnet.html">botnet</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-malware.html">malware</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-scripting.html">scripting</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[botnet]]></category>
  <category><![CDATA[malware]]></category>
  <category><![CDATA[scripting]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15--detectando-actividad-maliciosa-en-nuestro-sistema-linux-somos-parte-de-una-botnet-.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15--detectando-actividad-maliciosa-en-nuestro-sistema-linux-somos-parte-de-una-botnet-.html</guid>
  <pubDate>Tue, 15 Apr 2025 08:20:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Analizando Vulnerabilidades como un Pro: Un Script Potenciado para Emacs Org-mode (ii)]]></title>
  <description><![CDATA[
<div id="outline-container-org5870351" class="outline-2">
<h2 id="org5870351">Introducci√≥n</h2>
<div class="outline-text-2" id="text-org5870351">
<p>
¬øAlguna vez te has preguntado qu√© tan seguro est√° tu laptop? En este post, te llevo de la mano para transformar un script b√°sico de detecci√≥n de vulnerabilidades en una herramienta poderosa que no solo encuentra CVEs, sino que tambi√©n eval√∫a amenazas y las presenta en el glorioso formato Org-mode de Emacs. ¬°Prep√°rate para darle esteroides a tu an√°lisis de seguridad!
</p>

<p>
El reto comenz√≥ con un script que escaneaba paquetes en busca de vulnerabilidades usando la API de Vulners. Pero quer√≠amos m√°s: un reporte detallado con niveles de amenaza y estad√≠sticas, todo listo para brillar en Emacs. Aqu√≠ te cuento c√≥mo lo hice, c√≥mo usarlo y qu√© resultados obtendr√°s.
</p>
</div>
</div>
<div id="outline-container-org5a48d84" class="outline-2">
<h2 id="org5a48d84">El Punto de Partida</h2>
<div class="outline-text-2" id="text-org5a48d84">
<p>
Primero, ten√≠amos este script b√°sico:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #219fd5; font-style: italic;">while</span> <span style="color: #1857a4;">IFS</span>= read -r line; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">nombre</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | awk '{print $1}'</span>)
    <span style="color: #1857a4;">version</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | awk '{print $2}'</span>)
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"[+] Buscando CVEs para: $nombre $version"</span>
    <span style="color: #1857a4;">query</span>=<span style="color: #a44185;">"${nombre}%20${version}"</span>
    <span style="color: #1857a4;">response</span>=$(<span style="color: #219fd5; font-weight: bold;">curl -s "https://vulners.com/api/v3/search/lucene/?query=$query&amp;size=3"</span>)
    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">... resto del script ...</span>
<span style="color: #219fd5; font-style: italic;">done</span> &lt; <span style="color: #a44185;">"$PACKAGE_LIST"</span>
</pre>
</div>

<p>
Este script lee una lista de paquetes, busca CVEs y genera un archivo con resultados. Funciona, pero le falta punch: no clasifica amenazas ni da detalles jugosos. ¬°Hora de mejorarlo!
</p>
</div>
</div>
<div id="outline-container-org9083bb6" class="outline-2">
<h2 id="org9083bb6">Creaci√≥n del Nuevo Script: Un Monstruo de Seguridad</h2>
<div class="outline-text-2" id="text-org9083bb6">
<p>
Tom√© el output del script original y cre√© un nuevo beast que procesa los CVEs encontrados. Aqu√≠ est√° el resultado:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #1857a4;">OUTPUT</span>=<span style="color: #a44185;">"vulnerability_report.org"</span>
<span style="color: #1857a4;">INPUT_FILE</span>=<span style="color: #a44185;">"$1"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"#+TITLE: Reporte de Amenazas Actuales"</span> &gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"#+DATE: $(</span><span style="color: #219fd5; font-weight: bold;">date '+%Y-%m-%d %H:%M'</span><span style="color: #a44185;">)"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>

<span style="color: #219fd5; font-style: italic;">while</span> <span style="color: #1857a4;">IFS</span>= read -r line; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #219fd5; font-style: italic;">if</span> [[ <span style="color: #a44185;">"$line"</span> =~ ^<span style="color: #a44185;">\*\*</span> ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        <span style="color: #1857a4;">package_info</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | sed 's/\*\* //'</span>)
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** Paquete: $package_info"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"   :PROPERTIES:"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"   :ANALISIS: $(</span><span style="color: #219fd5; font-weight: bold;">date '+%Y-%m-%d'</span><span style="color: #a44185;">)"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"   :END:"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
    <span style="color: #219fd5; font-style: italic;">elif</span> [[ <span style="color: #a44185;">"$line"</span> =~ ^\s*-.*CVE-[0-9]{4}-[0-9]+ ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        <span style="color: #1857a4;">cve</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | grep -o 'CVE-[0-9]\{4\}-[0-9]\+'</span>)
        <span style="color: #1857a4;">response</span>=$(<span style="color: #219fd5; font-weight: bold;">curl -s "https://vulners.com/api/v3/search/id/?id=$cve"</span>)
        <span style="color: #1857a4;">severity</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$response" | grep -oP '"cvss_score":\s*"\K[0-9.]+' || echo "N/A"</span>)
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">... l&#243;gica de amenaza y detalles ...</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
    sleep 1
<span style="color: #219fd5; font-style: italic;">done</span> &lt; <span style="color: #a44185;">"$INPUT_FILE"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Estad&#237;sticas</span>
<span style="color: #1857a4;">critical</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "CR&#205;TICA" "$OUTPUT"</span>)
<span style="color: #1857a4;">medium</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "MEDIA" "$OUTPUT"</span>)
<span style="color: #1857a4;">low</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "BAJA" "$OUTPUT"</span>)
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"* Estad&#237;sticas"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Amenazas Cr&#237;ticas: $critical"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Amenazas Medias: $medium"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Amenazas Bajas: $low"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
</pre>
</div>
</div>
<div id="outline-container-org1138057" class="outline-3">
<h3 id="org1138057">¬øQu√© hace este script?**</h3>
<div class="outline-text-3" id="text-org1138057">
<ol class="org-ol">
<li>Toma el archivo generado por el script original como entrada.</li>
<li>Consulta detalles de cada CVE usando la API de Vulners.</li>
<li>Clasifica amenazas seg√∫n el puntaje CVSS:
<ul class="org-ul">
<li>‚â• 7.0: <b>CR√çTICA</b></li>
<li>‚â• 4.0: <b>MEDIA</b></li>
<li>&lt; 4.0: <b>BAJA</b></li>
</ul></li>
<li>Genera un reporte en Org-mode con secciones, propiedades y estad√≠sticas.</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-org514a1ad" class="outline-2">
<h2 id="org514a1ad">C√≥mo Usarlo</h2>
<div class="outline-text-2" id="text-org514a1ad">
<p>
Es tan f√°cil que hasta tu abuela podr√≠a ejecutarlo (si usa Emacs, claro):
</p>

<ol class="org-ol">
<li><p>
<b><b>Ejecuta el script original</b></b> para generar tu lista de vulnerabilidades:
</p>
<div class="org-src-container">
<pre class="src src-bash">./scan_vulnerabilities.sh &gt; vuln_output.txt
</pre>
</div></li>

<li><p>
<b><b>Lanza el nuevo script</b></b> pas√°ndole el archivo generado:
</p>
<div class="org-src-container">
<pre class="src src-bash">./threat_analysis.sh vuln_output.txt
</pre>
</div></li>

<li><p>
<b><b>Abre el resultado en Emacs</b></b>:
</p>
<div class="org-src-container">
<pre class="src src-bash">emacs vulnerability_report.org
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-org945543c" class="outline-2">
<h2 id="org945543c">Caracter√≠sticas Estelares</h2>
<div class="outline-text-2" id="text-org945543c">
<ul class="org-ul">
<li><b><b>Formato Org-mode Nativo</b></b>: Listo para navegar con <code>C-c C-n</code> o exportar a HTML/PDF.</li>
<li><b><b>Clasificaci√≥n de Amenazas</b></b>: Separa lo cr√≠tico de lo trivial.</li>
<li><b><b>Detalles Ricos</b></b>: Severidad, fechas, descripciones por CVE.</li>
<li><b><b>Estad√≠sticas</b></b>: Resumen claro de cu√°ntas amenazas enfrentas.</li>
<li><b><b>Personalizable</b></b>: Ajusta los umbrales de CVSS o a√±ade m√°s campos seg√∫n necesites.</li>
</ul>
</div>
</div>
<div id="outline-container-org08709cc" class="outline-2">
<h2 id="org08709cc">Resultados que Obtendr√°s</h2>
<div class="outline-text-2" id="text-org08709cc">
<p>
El output es un archivo <code>vulnerability_report.org</code> que luce as√≠:
</p>

<p>
#+BEGIN<sub>SRC</sub> org
</p>
</div>
</div>
<div id="outline-container-org9a0c987" class="outline-2">
<h2 id="org9a0c987">Resumen de Amenazas</h2>
<div class="outline-text-2" id="text-org9a0c987">
</div>
<div id="outline-container-org1389943" class="outline-3">
<h3 id="org1389943">Paquete: openssl 1.1.1</h3>
<div class="outline-text-3" id="text-org1389943">
<ul class="org-ul">
<li>CVE Analizado: CVE-2023-1234
<ul class="org-ul">
<li>Nivel de Amenaza: CR√çTICA</li>
<li>Severidad CVSS: 7.8</li>
<li>Publicado: 2023-05-01</li>
<li>Descripci√≥n: Remote code execution&#x2026;</li>
</ul></li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org1977b47" class="outline-2">
<h2 id="org1977b47">Estad√≠sticas</h2>
<div class="outline-text-2" id="text-org1977b47">
<ul class="org-ul">
<li>Amenazas Cr√≠ticas: 1</li>
<li>Amenazas Medias: 0</li>
<li>Amenazas Bajas: 0</li>
</ul>
<p>
#+END<sub>SRC</sub>
</p>

<p>
En Emacs, puedes colapsar secciones con <code>TAB</code>, buscar con <code>C-s</code>, o incluso ejecutar comandos desde el buffer con <code>org-babel</code>. ¬°Es seguridad con estilo!
</p>
</div>
</div>
<div id="outline-container-org03f123b" class="outline-2">
<h2 id="org03f123b">Conclusi√≥n</h2>
<div class="outline-text-2" id="text-org03f123b">
<p>
Con este script, transformamos un escaneo b√°sico en un an√°lisis profesional que vive feliz en Emacs. Ya no solo sabes qu√© vulnerabilidades tienes, sino qu√© tan malas son y qu√© hacer al respecto. ¬øListo para poner tu laptop a prueba? Descarga el script, dale ca√±a y comparte tus resultados en los comentarios.
</p>

<blockquote>
<p>
"La seguridad no es un destino, es un viaje&#x2026; con Org-mode" - Grok 3
</p>
</blockquote>
</div>
</div>
<div id="outline-container-org5b0b31e" class="outline-2">
<h2 id="org5b0b31e">Recursos</h2>
<div class="outline-text-2" id="text-org5b0b31e">
<ul class="org-ul">
<li>[API de Vulners](<a href="https://vulners.com/api/">https://vulners.com/api/</a>)</li>
<li>[Manual de Org-mode](<a href="https://orgmode.org/manual/">https://orgmode.org/manual/</a>)</li>
</ul>

<p>
<a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-08-detecci%C3%B3n-de-vulnerabilidades-en-linux-con-bash-y-org-mode">2025-04-08-detecci√≥n-de-vulnerabilidades-en-linux-con-bash-y-org-mode</a>
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categor√≠a</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-script.html">script</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[script]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09-analizando-vulnerabilidades-como-un-pro:-un-script-potenciado-para-emacs-org-mode-(ii).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09-analizando-vulnerabilidades-como-un-pro:-un-script-potenciado-para-emacs-org-mode-(ii).html</guid>
  <pubDate>Wed, 09 Apr 2025 09:45:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Detecci√≥n de Vulnerabilidades en Linux con Bash y Org Mode]]></title>
  <description><![CDATA[
<div id="outline-container-org9ce4c31" class="outline-2">
<h2 id="org9ce4c31">Introducci√≥n</h2>
<div class="outline-text-2" id="text-org9ce4c31">
<p>
En la administraci√≥n de sistemas Linux, una de las tareas m√°s cr√≠ticas es mantener actualizado el sistema y mitigar cualquier <b>vulnerabilidad</b> presente. Una vulnerabilidad es una debilidad en el sistema que puede ser explotada para ganar acceso no autorizado, ejecutar c√≥digo malicioso o afectar la disponibilidad y confidencialidad del sistema.
</p>

<p>
Este art√≠culo documenta un m√©todo simple pero efectivo para identificar vulnerabilidades conocidas (CVE) en paquetes instalados en una distribuci√≥n basada en Debian/Ubuntu, utilizando:
</p>

<ul class="org-ul">
<li>Herramientas de l√≠nea de comandos (Bash, `dpkg`, `curl`)</li>
<li>Consulta a la API de Vulners.com</li>
<li>Documentaci√≥n autom√°tica en formato Org Mode para su exportaci√≥n a PDF o HTML</li>
</ul>
</div>
</div>
<div id="outline-container-org57862a5" class="outline-2">
<h2 id="org57862a5">Herramientas necesarias</h2>
<div class="outline-text-2" id="text-org57862a5">
<p>
Antes de comenzar, aseg√∫rate de tener instaladas las siguientes utilidades:
</p>

<ul class="org-ul">
<li>`dpkg` (instalado por defecto en Ubuntu)</li>
<li>`curl` para realizar peticiones web</li>
<li>Editor Emacs con soporte para Org Mode</li>
</ul>

<p>
Puedes instalar `curl` as√≠:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt update
sudo apt install curl
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf2320d0" class="outline-2">
<h2 id="orgf2320d0">Extracci√≥n del listado de software instalado</h2>
<div class="outline-text-2" id="text-orgf2320d0">
<p>
Primero generamos un listado de los paquetes instalados con sus versiones:
</p>

<div class="org-src-container">
<pre class="src src-bash">dpkg-query -W -f=<span style="color: #005F00;">'${binary:Package} ${Version}\n'</span> &gt; paquetes_instalados.txt
</pre>
</div>

<p>
Este archivo ser√° le√≠do por nuestro script de an√°lisis de vulnerabilidades.
</p>
</div>
</div>
<div id="outline-container-org76a2eb3" class="outline-2">
<h2 id="org76a2eb3">Script de an√°lisis con Bash</h2>
<div class="outline-text-2" id="text-org76a2eb3">
<p>
A continuaci√≥n, presentamos el script en Bash que se encarga de:
</p>

<ol class="org-ol">
<li>Leer el archivo de paquetes instalados</li>
<li>Buscar cada paquete en la API p√∫blica de <a href="https://vulners.com">Vulners</a></li>
<li>Extraer posibles CVEs relacionados</li>
<li>Generar autom√°ticamente un informe en formato Org Mode</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>

<span style="color: #004651;">OUTPUT</span>=<span style="color: #005F00;">"vulnerabilidades.org"</span>
<span style="color: #004651;">PACKAGE_LIST</span>=<span style="color: #005F00;">"paquetes_instalados.txt"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Verifica dependencias</span>
<span style="color: #D70000;">if ! </span><span style="color: #1F55A0;">command</span> -v curl &amp;&gt; /dev/null; <span style="color: #D70000;">then</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Este script requiere 'curl'. Inst&#225;lalo con: sudo apt install curl"</span>
    <span style="color: #D70000;">exit</span> 1
<span style="color: #D70000;">fi</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">T&#237;tulo del archivo Org</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"#+TITLE: An&#225;lisis de Vulnerabilidades del Sistema"</span> &gt; <span style="color: #005F00;">"$OUTPUT"</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"#+DATE: $(</span><span style="color: #1F55A0; font-weight: bold;">date '+%Y-%m-%d'</span><span style="color: #005F00;">)"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"* Resultados de escaneo de vulnerabilidades"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Obtener lista de paquetes instalados</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"[*] Obteniendo lista de paquetes..."</span>
dpkg-query -W -f=<span style="color: #005F00;">'${binary:Package} ${Version}\n'</span> &gt; <span style="color: #005F00;">"$PACKAGE_LIST"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Buscar vulnerabilidades por paquete</span>
<span style="color: #D70000;">while</span> <span style="color: #004651;">IFS</span>= read -r line; <span style="color: #D70000;">do</span>
    <span style="color: #004651;">nombre</span>=$(<span style="color: #1F55A0; font-weight: bold;">echo "$line" | awk '{print $1}'</span>)
    <span style="color: #004651;">version</span>=$(<span style="color: #1F55A0; font-weight: bold;">echo "$line" | awk '{print $2}'</span>)
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"[+] Buscando CVEs para: $nombre $version"</span>

    <span style="color: #004651;">query</span>=<span style="color: #005F00;">"${nombre}%20${version}"</span>
    <span style="color: #004651;">response</span>=$(<span style="color: #1F55A0; font-weight: bold;">curl -s "https://vulners.com/api/v3/search/lucene/?query=$query&amp;size=3"</span>)

    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"** $nombre $version"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>

    <span style="color: #D70000;">if </span><span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"$response"</span> | grep -q <span style="color: #005F00;">'"cvelist":'</span>; <span style="color: #D70000;">then</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   &#8594; Vulnerabilidades encontradas."</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   - Vulnerabilidades encontradas:"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"$response"</span> | grep -oP <span style="color: #005F00;">'"id":\s*"\K(CVE-[0-9\-]+)'</span> | uniq | sed <span style="color: #005F00;">'s/^/     - /'</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
    <span style="color: #D70000;">else</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   &#8594; Sin vulnerabilidades encontradas."</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   - Sin vulnerabilidades encontradas."</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
    <span style="color: #D70000;">fi</span>

    sleep 1  <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Para no sobrecargar el servidor</span>
<span style="color: #D70000;">done</span> &lt; <span style="color: #005F00;">"$PACKAGE_LIST"</span>

<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"[&#10004;] An&#225;lisis completado. Archivo generado: $OUTPUT"</span>
</pre>
</div>

<p>
Para usarlo:
</p>

<div class="org-src-container">
<pre class="src src-bash">chmod +x check_vulnerabilities_org.sh
./check_vulnerabilities_org.sh
</pre>
</div>
</div>
</div>
<div id="outline-container-org1e11a39" class="outline-2">
<h2 id="org1e11a39">Ejemplo de resultados</h2>
<div class="outline-text-2" id="text-org1e11a39">
<p>
A continuaci√≥n se muestra un extracto real generado autom√°ticamente con el script:
</p>

<p>
#+begin<sub>example</sub>
</p>
</div>
<div id="outline-container-orgac93d32" class="outline-3">
<h3 id="orgac93d32">openssl 3.0.2-0ubuntu1.15</h3>
<div class="outline-text-3" id="text-orgac93d32">
<ul class="org-ul">
<li>Vulnerabilidades encontradas:
<ul class="org-ul">
<li>CVE-2022-0778</li>
<li>CVE-2023-0464</li>
<li>CVE-2023-2650</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org5e1cb18" class="outline-3">
<h3 id="org5e1cb18">firefox 124.0</h3>
<div class="outline-text-3" id="text-org5e1cb18">
<ul class="org-ul">
<li>Vulnerabilidades encontradas:
<ul class="org-ul">
<li>CVE-2024-29943</li>
<li>CVE-2024-29944</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org51f7d0f" class="outline-3">
<h3 id="org51f7d0f">vlc 3.0.16</h3>
<div class="outline-text-3" id="text-org51f7d0f">
<ul class="org-ul">
<li>Sin vulnerabilidades encontradas.</li>
</ul>
<p>
#+end<sub>example</sub>
</p>
</div>
</div>
</div>
<div id="outline-container-orgd156269" class="outline-2">
<h2 id="orgd156269">Exportar resultados a PDF o HTML</h2>
<div class="outline-text-2" id="text-orgd156269">
<p>
Desde Emacs, abre el archivo generado `vulnerabilidades.org` y presiona:
</p>

<ul class="org-ul">
<li>`C-c C-e l o` ‚Üí Exportar a PDF</li>
<li>`C-c C-e h o` ‚Üí Exportar a HTML</li>
</ul>

<p>
Esto genera un informe profesional que puedes archivar, compartir o a√±adir a tu blog.
</p>
</div>
</div>
<div id="outline-container-orgcdbb603" class="outline-2">
<h2 id="orgcdbb603">Recomendaciones</h2>
<div class="outline-text-2" id="text-orgcdbb603">
<ul class="org-ul">
<li>Ejecutar este script regularmente como parte de tus tareas de mantenimiento.</li>
<li>Configurar alertas autom√°ticas de CVE con herramientas como `apticron`, `unattended-upgrades` o `lynis`.</li>
<li>Complementar con esc√°neres m√°s avanzados como <b>OpenVAS</b> o <b>Lynis</b> para auditor√≠as completas.</li>
</ul>
</div>
</div>
<div id="outline-container-orgca61169" class="outline-2">
<h2 id="orgca61169">Conclusi√≥n</h2>
<div class="outline-text-2" id="text-orgca61169">
<p>
La seguridad no es un estado, es un proceso. Automatizar la detecci√≥n de vulnerabilidades con herramientas simples como Bash, APIs p√∫blicas y Org Mode nos permite mantenernos al tanto de riesgos sin depender de soluciones comerciales complejas.
</p>

<p>
Este enfoque demuestra el poder de las herramientas libres combinadas: un sistema Linux, un script Bash y la flexibilidad de Emacs.
</p>
</div>
</div>
<div id="outline-container-org574fc33" class="outline-2">
<h2 id="org574fc33">Recursos</h2>
<div class="outline-text-2" id="text-org574fc33">
<ul class="org-ul">
<li><a href="https://vulners.com">Vulners API</a></li>
<li><a href="https://nvd.nist.gov">National Vulnerability Database</a></li>
<li><a href="https://cve.mitre.org">CVE Mitre</a></li>
<li><a href="https://cisofy.com/lynis/">Lynis Auditor</a></li>
<li><a href="https://www.greenbone.net/">Greenbone/OpenVAS</a></li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categor√≠a</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-orgmode.html">orgmode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[orgmode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-08-detecci%C3%B3n-de-vulnerabilidades-en-linux-con-bash-y-org-mode.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-08-detecci%C3%B3n-de-vulnerabilidades-en-linux-con-bash-y-org-mode.html</guid>
  <pubDate>Tue, 08 Apr 2025 04:55:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Tutorial de Seguridad en Linux: M√≠nimo de Protecci√≥n ante Ataques Inform√°ticos (II)]]></title>
  <description><![CDATA[
<div id="outline-container-org8b21ed4" class="outline-2">
<h2 id="org8b21ed4">Cap√≠tulo 2: Automatizaci√≥n y An√°lisis Avanzado</h2>
<div class="outline-text-2" id="text-org8b21ed4">
</div>
<div id="outline-container-orgc67696a" class="outline-3">
<h3 id="orgc67696a">Objetivos</h3>
<div class="outline-text-3" id="text-orgc67696a">
<ul class="org-ul">
<li>Automatizar tareas de seguridad con scripts.</li>
<li>Analizar logs para detectar patrones sospechosos.</li>
<li>Generar reportes de seguridad.</li>
</ul>
</div>
</div>
<div id="outline-container-orgd0bea96" class="outline-3">
<h3 id="orgd0bea96">Paso 1: Automatizar Tareas con Scripts en Bash</h3>
<div class="outline-text-3" id="text-orgd0bea96">
<p>
Crea un script para automatizar la revisi√≥n de logs y el bloqueo de IPs sospechosas.
</p>

<ol class="org-ol">
<li><p>
Script `security<sub>monitor.sh</sub>`:
</p>
<div class="org-src-container">
<pre class="src src-sh"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #1857a4;">LOG_FILE</span>=<span style="color: #a44185;">"/var/log/auth.log"</span>
<span style="color: #1857a4;">BAN_LIST</span>=<span style="color: #a44185;">"/etc/fail2ban/jail.local"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar IPs con m&#250;ltiples intentos fallidos</span>
<span style="color: #1857a4;">SUSPICIOUS_IPS</span>=$(<span style="color: #219fd5; font-weight: bold;">grep "Failed password" $LOG_FILE | awk '{print $(NF-3</span><span style="color: #a44185;">)}'</span> | sort | uniq -c | awk <span style="color: #a44185;">'$1 &gt; 3 {print $2}'</span>)

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Bloquear IPs sospechosas</span>
<span style="color: #219fd5; font-style: italic;">for</span> IP<span style="color: #219fd5; font-style: italic;"> in</span> $<span style="color: #1857a4;">SUSPICIOUS_IPS</span>; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Bloqueando IP: $IP"</span>
    sudo fail2ban-client set sshd banip $<span style="color: #1857a4;">IP</span>
<span style="color: #219fd5; font-style: italic;">done</span>
</pre>
</div></li>

<li><p>
Ejecutar el script diariamente con `cron`:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo crontab -e
</pre>
</div>
<p>
A√±ade la siguiente l√≠nea:
</p>
<div class="org-src-container">
<pre class="src src-nil">0 0 * * * /ruta/al/script/security_monitor.sh
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-orgd476327" class="outline-3">
<h3 id="orgd476327">Paso 2: Analizar Logs con Python</h3>
<div class="outline-text-3" id="text-orgd476327">
<p>
Crea un script en Python para analizar logs y generar reportes.
</p>

<ol class="org-ol">
<li><p>
Script `log<sub>analyzer.py</sub>`:
</p>
<div class="org-src-container">
<pre class="src src-python"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/usr/bin/env python3</span>
<span style="color: #219fd5; font-style: italic;">import</span> re
<span style="color: #219fd5; font-style: italic;">from</span> collections <span style="color: #219fd5; font-style: italic;">import</span> Counter

<span style="color: #1857a4;">LOG_FILE</span> = <span style="color: #a44185;">"/var/log/auth.log"</span>
<span style="color: #1857a4;">REPORT_FILE</span> = <span style="color: #a44185;">"/var/log/security_report.txt"</span>

<span style="color: #219fd5; font-style: italic;">def</span> <span style="color: #dc3eb7;">analyze_logs</span>():
    <span style="color: #219fd5; font-style: italic;">with</span> <span style="color: #dc3eb7;">open</span>(LOG_FILE, <span style="color: #a44185;">"r"</span>) <span style="color: #219fd5; font-style: italic;">as</span> <span style="color: #dc3eb7;">file</span>:
        <span style="color: #1857a4;">logs</span> = <span style="color: #dc3eb7;">file</span>.readlines()

    <span style="color: #1857a4;">failed_attempts</span> = Counter()
    <span style="color: #219fd5; font-style: italic;">for</span> log <span style="color: #219fd5; font-style: italic;">in</span> logs:
        <span style="color: #219fd5; font-style: italic;">if</span> <span style="color: #a44185;">"Failed password"</span> <span style="color: #219fd5; font-style: italic;">in</span> log:
            <span style="color: #1857a4;">ip</span> = re.search(r<span style="color: #a44185;">"\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b"</span>, log).group()
            <span style="color: #1857a4;">failed_attempts</span>[ip] += 1

    <span style="color: #219fd5; font-style: italic;">with</span> <span style="color: #dc3eb7;">open</span>(REPORT_FILE, <span style="color: #a44185;">"w"</span>) <span style="color: #219fd5; font-style: italic;">as</span> report:
        report.write(<span style="color: #a44185;">"Reporte de Seguridad</span><span style="color: #2f86d2;">\n</span><span style="color: #a44185;">"</span>)
        report.write(<span style="color: #a44185;">"===================</span><span style="color: #2f86d2;">\n</span><span style="color: #a44185;">"</span>)
        <span style="color: #219fd5; font-style: italic;">for</span> ip, count <span style="color: #219fd5; font-style: italic;">in</span> failed_attempts.most_common():
            report.write(f<span style="color: #a44185;">"IP: </span>{ip}<span style="color: #a44185;"> - Intentos fallidos: </span>{count}<span style="color: #2f86d2;">\n</span><span style="color: #a44185;">"</span>)

<span style="color: #219fd5; font-style: italic;">if</span> <span style="color: #dc3eb7;">__name__</span> == <span style="color: #a44185;">"__main__"</span>:
    analyze_logs()
</pre>
</div></li>

<li><p>
Ejecutar el script:
</p>
<div class="org-src-container">
<pre class="src src-sh">python3 /ruta/al/script/log_analyzer.py
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-orgb0c2406" class="outline-3">
<h3 id="orgb0c2406">Paso 3: Generar Reportes de Seguridad</h3>
<div class="outline-text-3" id="text-orgb0c2406">
<p>
Usa los scripts anteriores para generar reportes diarios.
</p>

<ol class="org-ol">
<li><p>
Combinar ambos scripts en un solo archivo:
</p>
<div class="org-src-container">
<pre class="src src-sh"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
/ruta/al/script/security_monitor.sh
python3 /ruta/al/script/log_analyzer.py
</pre>
</div></li>

<li><p>
Programar la ejecuci√≥n con `cron`:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo crontab -e
</pre>
</div>
<p>
A√±ade la siguiente l√≠nea:
</p>
<div class="org-src-container">
<pre class="src src-nil">0 1 * * * /ruta/al/script/security_report.sh
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-org963fd93" class="outline-3">
<h3 id="org963fd93">Resultados Esperados</h3>
<div class="outline-text-3" id="text-org963fd93">
<ul class="org-ul">
<li>Tareas de seguridad automatizadas.</li>
<li>Logs analizados en busca de patrones sospechosos.</li>
<li>Reportes de seguridad generados diariamente.</li>
</ul>

<p>
&#x2014;
</p>
</div>
</div>
</div>
<div id="outline-container-org35e397b" class="outline-2">
<h2 id="org35e397b">Conclusi√≥n</h2>
<div class="outline-text-2" id="text-org35e397b">
<p>
Con estos dos cap√≠tulos, has implementado un m√≠nimo de seguridad en tu entorno Linux. Desde la configuraci√≥n b√°sica del firewall hasta la automatizaci√≥n de tareas y el an√°lisis avanzado de logs, este tutorial te proporciona las herramientas necesarias para proteger tu sistema ante ataques inform√°ticos. ¬°Ahora es tu turno de adaptar y mejorar estas t√©cnicas seg√∫n tus necesidades!
</p>
</div>
</div>
<div id="outline-container-org358fc11" class="outline-2">
<h2 id="org358fc11">Recursos Adicionales</h2>
<div class="outline-text-2" id="text-org358fc11">
<ul class="org-ul">
<li><a href="https://help.ubuntu.com/community/UFW">Documentaci√≥n de UFW</a></li>
<li><a href="https://www.fail2ban.org/">Documentaci√≥n de Fail2Ban</a></li>
<li><a href="https://docs.python.org/3/">Documentaci√≥n de Python</a></li>
</ul>

<p>
```
</p>

<p>
&#x2014;
</p>

<p>
### Caracter√≠sticas del Tutorial
</p>

<ol class="org-ol">
<li><b><b>Estructura Clara</b></b>: Dividido en 2 cap√≠tulos con objetivos, pasos y resultados.</li>
<li><b><b>Scripts Pr√°cticos</b></b>: Incluye scripts en Bash y Python para automatizar tareas.</li>
<li><b><b>Logs y Reportes</b></b>: Ense√±a a monitorear logs y generar reportes de seguridad.</li>
<li><b><b>Recursos Adicionales</b></b>: Proporciona enlaces a documentaci√≥n oficial.</li>
</ol>

<p>
&#x2014;
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categor√≠a</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-python.html">python</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-firewall.html">firewall</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-logs.html">logs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[python]]></category>
  <category><![CDATA[firewall]]></category>
  <category><![CDATA[logs]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-tutorial-de-seguridad-en-linux:-m%C3%ADnimo-de-protecci%C3%B3n-ante-ataques-inform%C3%A1ticos-(ii).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-tutorial-de-seguridad-en-linux:-m%C3%ADnimo-de-protecci%C3%B3n-ante-ataques-inform%C3%A1ticos-(ii).html</guid>
  <pubDate>Tue, 18 Mar 2025 20:43:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Tutorial de Seguridad en Linux: M√≠nimo de Protecci√≥n ante Ataques Inform√°ticos (I)]]></title>
  <description><![CDATA[
<p>
AUTHOR: Tu Nombre
</p>
<div id="outline-container-orgac7d834" class="outline-2">
<h2 id="orgac7d834">Cap√≠tulo 1: Configuraci√≥n B√°sica de Seguridad</h2>
<div class="outline-text-2" id="text-orgac7d834">
</div>
<div id="outline-container-org6aed3b4" class="outline-3">
<h3 id="org6aed3b4">Objetivos</h3>
<div class="outline-text-3" id="text-org6aed3b4">
<ul class="org-ul">
<li>Configurar un firewall b√°sico.</li>
<li>Deshabilitar servicios innecesarios.</li>
<li>Monitorear logs del sistema.</li>
<li>Detectar intentos de acceso no autorizados.</li>
</ul>
</div>
</div>
<div id="outline-container-org6232592" class="outline-3">
<h3 id="org6232592">Paso 1: Configurar un Firewall B√°sico con `ufw`</h3>
<div class="outline-text-3" id="text-org6232592">
<p>
`ufw` (Uncomplicated Firewall) es una herramienta sencilla para gestionar reglas de firewall en Linux.
</p>

<ol class="org-ol">
<li><p>
Instalar `ufw`:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo apt update &amp;&amp; sudo apt install ufw -y
</pre>
</div></li>

<li><p>
Habilitar el firewall:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo ufw enable
</pre>
</div></li>

<li>Configurar reglas b√°sicas:
<ul class="org-ul">
<li><p>
Permitir SSH:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo ufw allow ssh
</pre>
</div></li>
<li><p>
Permitir HTTP/HTTPS:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo ufw allow http
sudo ufw allow https
</pre>
</div></li>
<li><p>
Denegar todo el tr√°fico por defecto:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo ufw default deny incoming
sudo ufw default allow outgoing
</pre>
</div></li>
</ul></li>

<li><p>
Verificar el estado del firewall:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo ufw status verbose
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-orga4c3880" class="outline-3">
<h3 id="orga4c3880">Paso 2: Deshabilitar Servicios Innecesarios</h3>
<div class="outline-text-3" id="text-orga4c3880">
<p>
Los servicios innecesarios pueden ser un vector de ataque. Deshabilita los que no uses.
</p>

<ol class="org-ol">
<li><p>
Listar servicios activos:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo systemctl list-unit-files --type=service | grep enabled
</pre>
</div></li>

<li><p>
Deshabilitar un servicio (por ejemplo, `apache2`):
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo systemctl stop apache2
sudo systemctl disable apache2
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-org00217f7" class="outline-3">
<h3 id="org00217f7">Paso 3: Monitorear Logs del Sistema</h3>
<div class="outline-text-3" id="text-org00217f7">
<p>
Los logs son esenciales para detectar actividad sospechosa.
</p>

<ol class="org-ol">
<li><p>
Ver logs de autenticaci√≥n:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo tail -f /var/log/auth.log
</pre>
</div></li>

<li><p>
Ver logs del firewall:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo tail -f /var/log/ufw.log
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-org91d8990" class="outline-3">
<h3 id="org91d8990">Paso 4: Detectar Intentos de Acceso No Autorizados</h3>
<div class="outline-text-3" id="text-org91d8990">
<p>
Usa `fail2ban` para bloquear IPs que realicen intentos de acceso fallidos.
</p>

<ol class="org-ol">
<li><p>
Instalar `fail2ban`:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo apt install fail2ban -y
</pre>
</div></li>

<li><p>
Configurar `fail2ban` para SSH:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo nano /etc/fail2ban/jail.local
</pre>
</div>
<p>
A√±ade lo siguiente:
</p>
<div class="org-src-container">
<pre class="src src-nil">[sshd]
enabled = true
maxretry = 3
bantime = 3600
</pre>
</div></li>

<li><p>
Reiniciar `fail2ban`:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo systemctl restart fail2ban
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-orgf3602c2" class="outline-3">
<h3 id="orgf3602c2">Resultados Esperados</h3>
<div class="outline-text-3" id="text-orgf3602c2">
<ul class="org-ul">
<li>Firewall activo y configurado.</li>
<li>Servicios innecesarios deshabilitados.</li>
<li>Logs monitoreados en tiempo real.</li>
<li>Intentos de acceso no autorizados bloqueados.</li>
</ul>

<p>
&#x2014;
</p>
</div>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categor√≠a</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-python.html">python</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-firewall.html">firewall</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-logs.html">logs</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[python]]></category>
  <category><![CDATA[firewall]]></category>
  <category><![CDATA[logs]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-tutorial-de-seguridad-en-linux:-m%C3%ADnimo-de-protecci%C3%B3n-ante-ataques-inform%C3%A1ticos-(i).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-tutorial-de-seguridad-en-linux:-m%C3%ADnimo-de-protecci%C3%B3n-ante-ataques-inform%C3%A1ticos-(i).html</guid>
  <pubDate>Tue, 18 Mar 2025 20:40:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Configuraci√≥n M√≠nima de Seguridad con Scripts Bash y Python]]></title>
  <description><![CDATA[
<p>
Por Qwen AI
</p>
<div id="outline-container-org5ffb64a" class="outline-2">
<h2 id="org5ffb64a">Introducci√≥n</h2>
<div class="outline-text-2" id="text-org5ffb64a">
<p>
Este documento describe c√≥mo configurar una seguridad m√≠nima en un sistema Linux utilizando scripts escritos en <b><b>Bash</b></b> y <b><b>Python</b></b>. Las medidas incluyen:
</p>
<ul class="org-ul">
<li>Configuraci√≥n b√°sica de un <b><b>firewall</b></b> con IPTables.</li>
<li>Bloqueo de IPs sospechosas (anti-botnet).</li>
<li>Protecci√≥n contra escaneos de puertos.</li>
<li>Configuraci√≥n de pol√≠ticas de red seguras.</li>
</ul>
</div>
</div>
<div id="outline-container-orgc1fc759" class="outline-2">
<h2 id="orgc1fc759">Configuraci√≥n B√°sica del Firewall con IPTables (Bash)</h2>
<div class="outline-text-2" id="text-orgc1fc759">
<p>
El siguiente script configura un firewall b√°sico utilizando IPTables para permitir solo el tr√°fico necesario.
</p>

<p>
<b><b>Script Bash:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Limpiar todas las reglas existentes</span>
iptables -F
iptables -X

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Pol&#237;tica por defecto: Denegar todo el tr&#225;fico entrante y saliente</span>
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Permitir tr&#225;fico local (loopback)</span>
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Permitir conexiones establecidas o relacionadas</span>
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Permitir SSH (puerto 22) desde una IP espec&#237;fica (opcional)</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Reemplaza "TU_IP" con tu direcci&#243;n IP p&#250;blica</span>
iptables -A INPUT -p tcp --dport 22 -s TU_IP -j ACCEPT

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Permitir HTTP (puerto 80) y HTTPS (puerto 443)</span>
iptables -A INPUT -p tcp --dport 80 -j ACCEPT
iptables -A INPUT -p tcp --dport 443 -j ACCEPT

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Registrar intentos de acceso no autorizados</span>
iptables -A INPUT -j LOG --log-prefix <span style="color: #a44185;">"IPTables-Dropped: "</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Guardar las reglas de IPTables</span>
iptables-save &gt; /etc/iptables/rules.v4
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>Aseg√∫rate de tener permisos de superusuario (`sudo`) para ejecutar este script.</li>
<li>Si bloqueas accidentalmente el acceso SSH, puedes perder el control remoto del servidor.</li>
</ul>
</div>
</div>
<div id="outline-container-orgc0d97ed" class="outline-2">
<h2 id="orgc0d97ed">Bloqueo de IPs Sospechosas (Anti-Botnet)</h2>
<div class="outline-text-2" id="text-orgc0d97ed">
<p>
El siguiente script bloquea IPs sospechosas utilizando una lista negra predefinida.
</p>

<p>
<b><b>Script Bash:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Descargar una lista negra de IPs conocidas (por ejemplo, Emerging Threats)</span>
wget -q https://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt -O /tmp/blocked_ips.txt

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Leer el archivo y bloquear cada IP</span>
<span style="color: #219fd5; font-style: italic;">while </span><span style="color: #dc3eb7;">read</span> -r ip; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #219fd5; font-style: italic;">if</span> [[ $<span style="color: #1857a4;">ip</span> =~ ^[0-9]+<span style="color: #a44185;">\.</span>[0-9]+<span style="color: #a44185;">\.</span>[0-9]+<span style="color: #a44185;">\.</span>[0-9]+$ ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        iptables -A INPUT -s <span style="color: #a44185;">"$ip"</span> -j DROP
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Bloqueada IP: $ip"</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
<span style="color: #219fd5; font-style: italic;">done</span> &lt; /tmp/blocked_ips.txt

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Guardar las reglas de IPTables</span>
iptables-save &gt; /etc/iptables/rules.v4
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>La lista negra puede actualizarse peri√≥dicamente para mantenerse al d√≠a con nuevas amenazas.</li>
<li>Puedes personalizar la fuente de la lista negra seg√∫n tus necesidades.</li>
</ul>
</div>
</div>
<div id="outline-container-orgd6dd9af" class="outline-2">
<h2 id="orgd6dd9af">Protecci√≥n Contra Escaneos de Puertos (Python)</h2>
<div class="outline-text-2" id="text-orgd6dd9af">
<p>
El siguiente script utiliza Python para monitorear intentos de escaneo de puertos y bloquear IPs sospechosas.
</p>

<p>
<b><b>Script Python:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-python"><span style="color: #219fd5; font-style: italic;">import</span> os
<span style="color: #219fd5; font-style: italic;">import</span> time
<span style="color: #219fd5; font-style: italic;">from</span> collections <span style="color: #219fd5; font-style: italic;">import</span> defaultdict

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Diccionario para rastrear intentos de conexi&#243;n por IP</span>
<span style="color: #1857a4;">connection_attempts</span> = defaultdict(<span style="color: #dc3eb7;">int</span>)

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Umbral de intentos sospechosos</span>
<span style="color: #1857a4;">THRESHOLD</span> = 5
<span style="color: #1857a4;">BLOCK_TIME</span> = 60  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Tiempo en segundos para bloquear una IP</span>

<span style="color: #219fd5; font-style: italic;">def</span> <span style="color: #dc3eb7;">block_ip</span>(ip):
    <span style="color: #60a8a1; font-style: italic;">"""Bloquea una IP usando IPTables."""</span>
    os.system(f<span style="color: #a44185;">"iptables -A INPUT -s </span>{ip}<span style="color: #a44185;"> -j DROP"</span>)
    <span style="color: #dc3eb7;">print</span>(f<span style="color: #a44185;">"Bloqueada IP sospechosa: </span>{ip}<span style="color: #a44185;">"</span>)

<span style="color: #219fd5; font-style: italic;">def</span> <span style="color: #dc3eb7;">monitor_logs</span>():
    <span style="color: #60a8a1; font-style: italic;">"""Monitorea los logs del sistema en busca de intentos de conexi&#243;n."""</span>
    <span style="color: #219fd5; font-style: italic;">with</span> <span style="color: #dc3eb7;">open</span>(<span style="color: #a44185;">"/var/log/auth.log"</span>, <span style="color: #a44185;">"r"</span>) <span style="color: #219fd5; font-style: italic;">as</span> log_file:
        log_file.seek(0, 2)  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ir al final del archivo</span>
        <span style="color: #219fd5; font-style: italic;">while</span> <span style="color: #2f86d2;">True</span>:
            <span style="color: #1857a4;">line</span> = log_file.readline()
            <span style="color: #219fd5; font-style: italic;">if</span> <span style="color: #a44185;">"Failed password"</span> <span style="color: #219fd5; font-style: italic;">in</span> line:
                <span style="color: #1857a4;">ip</span> = line.split(<span style="color: #a44185;">"from "</span>)[1].split(<span style="color: #a44185;">" port"</span>)[0]
                <span style="color: #1857a4;">connection_attempts</span>[ip] += 1
                <span style="color: #dc3eb7;">print</span>(f<span style="color: #a44185;">"Intento de conexi&#243;n desde: </span>{ip}<span style="color: #a44185;"> (</span>{connection_attempts[ip]}<span style="color: #a44185;"> intentos)"</span>)

                <span style="color: #219fd5; font-style: italic;">if</span> connection_attempts[ip] &gt;= THRESHOLD:
                    block_ip(ip)
                    time.sleep(BLOCK_TIME)
                    <span style="color: #1857a4;">connection_attempts</span>[ip] = 0  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Reiniciar contador</span>
            time.sleep(1)

<span style="color: #219fd5; font-style: italic;">if</span> <span style="color: #dc3eb7;">__name__</span> == <span style="color: #a44185;">"__main__"</span>:
    monitor_logs()
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>Este script requiere acceso a los logs del sistema (`/var/log/auth.log`).</li>
<li>Aseg√∫rate de tener instalado Python y permisos de superusuario.</li>
</ul>
</div>
</div>
<div id="outline-container-orgd2ddd5a" class="outline-2">
<h2 id="orgd2ddd5a">Configuraci√≥n de Pol√≠ticas de Red Seguras (Bash)</h2>
<div class="outline-text-2" id="text-orgd2ddd5a">
<p>
El siguiente script configura pol√≠ticas adicionales para mejorar la seguridad de la red.
</p>

<p>
<b><b>Script Bash:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Deshabilitar el redireccionamiento IP</span>
<span style="color: #dc3eb7;">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/all/send_redirects
<span style="color: #dc3eb7;">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Habilitar protecci&#243;n contra SYN Flood</span>
<span style="color: #dc3eb7;">echo</span> 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Deshabilitar el reenv&#237;o de paquetes IPv4</span>
<span style="color: #dc3eb7;">echo</span> 0 &gt; /proc/sys/net/ipv4/ip_forward

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Habilitar protecci&#243;n contra IP Spoofing</span>
<span style="color: #219fd5; font-style: italic;">for</span> interface<span style="color: #219fd5; font-style: italic;"> in</span> $(<span style="color: #219fd5; font-weight: bold;">ls /sys/class/net | grep -v lo</span>); <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #dc3eb7;">echo</span> 1 &gt; /proc/sys/net/ipv4/conf/$<span style="color: #1857a4;">interface</span>/rp_filter
<span style="color: #219fd5; font-style: italic;">done</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Guardar cambios en sysctl.conf</span>
cat &lt;&lt;EOF &gt;&gt; /etc/sysctl.conf
<span style="color: #a44185;">net.ipv4.conf.all.send_redirects = 0</span>
<span style="color: #a44185;">net.ipv4.conf.default.send_redirects = 0</span>
<span style="color: #a44185;">net.ipv4.tcp_syncookies = 1</span>
<span style="color: #a44185;">net.ipv4.ip_forward = 0</span>
<span style="color: #a44185;">EOF</span>

sysctl -p
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>Estas configuraciones mejoran la seguridad del sistema contra ataques comunes.</li>
<li>Aseg√∫rate de probar los cambios en un entorno seguro antes de aplicarlos en producci√≥n.</li>
</ul>
</div>
</div>
<div id="outline-container-org12afde5" class="outline-2">
<h2 id="org12afde5">Conclusi√≥n</h2>
<div class="outline-text-2" id="text-org12afde5">
<p>
Este documento proporciona scripts b√°sicos en Bash y Python para configurar una seguridad m√≠nima en sistemas Linux. Recuerda que estas medidas son solo un punto de partida y deben complementarse con auditor√≠as regulares, actualizaciones de software y mejores pr√°cticas de seguridad.
</p>

<p>
Para m√°s informaci√≥n, consulta la documentaci√≥n oficial de IPTables y las recomendaciones de seguridad para tu distribuci√≥n de Linux.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categor√≠a</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-python.html">python</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-internet.html">internet</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[python]]></category>
  <category><![CDATA[internet]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-configuraci%C3%B3n-m%C3%ADnima-de-seguridad-con-scripts-bash-y-python.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-configuraci%C3%B3n-m%C3%ADnima-de-seguridad-con-scripts-bash-y-python.html</guid>
  <pubDate>Tue, 18 Mar 2025 16:25:00 +0100</pubDate>
</item>
</channel>
</rss>
