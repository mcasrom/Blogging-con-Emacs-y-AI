<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title><![CDATA[Emacs con esteroides - emacs]]></title>
<description><![CDATA[Emacs con esteroides - emacs]]></description>
<link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI//tag-emacs.html</link>
<lastBuildDate>Thu, 05 Jun 2025 14:33:05 +0200</lastBuildDate>
<item>
  <title><![CDATA[Análisis del Log del Firewall UFW en Ubuntu: Guía Completa para Usuarios]]></title>
  <description><![CDATA[
<div id="outline-container-orgb695410" class="outline-2">
<h2 id="orgb695410">Introducción</h2>
<div class="outline-text-2" id="text-orgb695410">
<p>
El firewall UFW (Uncomplicated Firewall) es una herramienta sencilla y poderosa para gestionar reglas de firewall en Ubuntu. Analizar sus logs es esencial para monitorear la seguridad de tu sistema, detectar intentos de acceso no autorizados y diagnosticar problemas de red. En este post, aprenderás a localizar los logs de UFW, analizar su contenido, resumir los detalles críticos y organizar la información en una tabla `.org` para un análisis eficiente usando Emacs.
</p>
</div>
</div>
<div id="outline-container-orgb2c50c2" class="outline-2">
<h2 id="orgb2c50c2">Localizando los Logs de UFW</h2>
<div class="outline-text-2" id="text-orgb2c50c2">
</div>
<div id="outline-container-org71c6cec" class="outline-3">
<h3 id="org71c6cec">Paso 1: Verificar si UFW está Registrando Eventos</h3>
<div class="outline-text-3" id="text-org71c6cec">
<p>
Primero, asegúrate de que UFW esté habilitado y configurado para generar logs. Ejecuta en la terminal:
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>sudo ufw status
</code></pre>
</div>

<p>
Si ves `logging: on`, UFW está generando logs. Si está desactivado, actívalo con:
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>sudo ufw logging on
</code></pre>
</div>

<p>
Puedes ajustar el nivel de logging (`low`, `medium`, `high`):
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>sudo ufw logging medium
</code></pre>
</div>
</div>
</div>
<div id="outline-container-org4997e59" class="outline-3">
<h3 id="org4997e59">Paso 2: Encontrar el Archivo de Log</h3>
<div class="outline-text-3" id="text-org4997e59">
<p>
UFW suele almacenar sus logs en `/var/log/ufw.log`. Para verificarlo:
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>sudo ls /var/log/ufw.log
</code></pre>
</div>

<p>
Si no existe, los eventos de UFW pueden estar en los logs del sistema, como `/var/log/syslog` o `/var/log/messages`. Usa `grep` para filtrar:
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>sudo grep UFW /var/log/syslog
</code></pre>
</div>

<p>
Para ver los logs en tiempo real:
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>sudo tail -f /var/log/ufw.log
</code></pre>
</div>
</div>
</div>
<div id="outline-container-org5b48314" class="outline-3">
<h3 id="org5b48314">Paso 3: Revisar Logs Rotados</h3>
<div class="outline-text-3" id="text-org5b48314">
<p>
Los logs de UFW pueden rotarse (archivarse). Busca archivos comprimidos:
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>ls /var/log/ufw.log*
</code></pre>
</div>

<p>
Para leer un log comprimido:
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>sudo zcat /var/log/ufw.log.1.gz
</code></pre>
</div>
</div>
</div>
<div id="outline-container-orgdf94d97" class="outline-3">
<h3 id="orgdf94d97">Paso 4: Configuración del Logging</h3>
<div class="outline-text-3" id="text-orgdf94d97">
<p>
Si no ves logs, verifica la configuración en `/etc/ufw/ufw.conf`:
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>sudo cat /etc/ufw/ufw.conf
</code></pre>
</div>

<p>
Busca la línea `LOGLEVEL`. Asegúrate de que no esté en `off`. Por ejemplo:
</p>

<div class="org-src-container">
<pre class="src src-text"><code>LOGLEVEL=medium
</code></pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org5959500" class="outline-2">
<h2 id="org5959500">Análisis de los Logs de UFW</h2>
<div class="outline-text-2" id="text-org5959500">
</div>
<div id="outline-container-orgb5c8ab3" class="outline-3">
<h3 id="orgb5c8ab3">Formato de una Entrada de Log</h3>
<div class="outline-text-3" id="text-orgb5c8ab3">
<p>
Los logs de UFW tienen un formato estándar. Aquí tienes un ejemplo:
</p>

<div class="org-src-container">
<pre class="src src-text"><code>May 29 19:33:45 laptop kernel: [UFW BLOCK] IN=eth0 OUT= MAC=00:15:5d:01:23:45 SRC=192.168.1.100 DST=192.168.1.101 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=12345 PROTO=TCP SPT=12345 DPT=80
</code></pre>
</div>

<ul class="org-ul">
<li><b><b>Fecha y hora</b></b>: `May 29 19:33:45`</li>
<li><b><b>Host</b></b>: `laptop`</li>
<li><b><b>Acción</b></b>: `[UFW BLOCK]` (indica que el tráfico fue bloqueado; otras opciones incluyen `[UFW ALLOW]`)</li>
<li><b><b>Interfaz</b></b>: `IN=eth0` (interfaz de entrada)</li>
<li><b><b>Direcciones IP</b></b>: `SRC=192.168.1.100` (origen), `DST=192.168.1.101` (destino)</li>
<li><b><b>Protocolo y puertos</b></b>: `PROTO=TCP SPT=12345 DPT=80` (protocolo TCP, puerto origen 12345, puerto destino 80)</li>
<li><b><b>Otros detalles</b></b>: `LEN`, `TOS`, `TTL`, etc., describen características del paquete.</li>
</ul>
</div>
</div>
<div id="outline-container-org734a2d4" class="outline-3">
<h3 id="org734a2d4">Herramientas para Análisis</h3>
<div class="outline-text-3" id="text-org734a2d4">
<ol class="org-ol">
<li><b><b>Grep para filtrar eventos específicos</b></b>:
<ul class="org-ul">
<li><p>
Bloqueos de una IP específica:
</p>
<div class="org-src-container">
<pre class="src src-bash"><code>sudo grep <span style="color: #a44185;">"SRC=192.168.1.100"</span> /var/log/ufw.log
</code></pre>
</div></li>
<li><p>
Tráfico en un puerto específico:
</p>
<div class="org-src-container">
<pre class="src src-bash"><code>sudo grep <span style="color: #a44185;">"DPT=22"</span> /var/log/ufw.log
</code></pre>
</div></li>
</ul></li>

<li><b><b>Awk para extraer campos</b></b>:
<ul class="org-ul">
<li><p>
Extraer IPs de origen bloqueadas:
</p>
<div class="org-src-container">
<pre class="src src-bash"><code>sudo awk <span style="color: #a44185;">'/UFW BLOCK/ {print $13}'</span> /var/log/ufw.log | sort | uniq
</code></pre>
</div></li>
</ul></li>

<li><b><b>Resumen con `wc` y `uniq`</b></b>:
<ul class="org-ul">
<li><p>
Contar eventos de bloqueo:
</p>
<div class="org-src-container">
<pre class="src src-bash"><code>sudo grep <span style="color: #a44185;">"UFW BLOCK"</span> /var/log/ufw.log | wc -l
</code></pre>
</div></li>
</ul></li>
</ol>
</div>
</div>
<div id="outline-container-orge11e5b9" class="outline-3">
<h3 id="orge11e5b9">Ejemplo Práctico</h3>
<div class="outline-text-3" id="text-orge11e5b9">
<p>
Supongamos que quieres identificar intentos de acceso al puerto 22 (SSH). Ejecuta:
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>sudo grep <span style="color: #a44185;">"DPT=22"</span> /var/log/ufw.log &gt; ssh_attempts.log
</code></pre>
</div>

<p>
Luego, analiza los intentos por IP:
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>awk <span style="color: #a44185;">'{print $13}'</span> ssh_attempts.log | sort | uniq -c
</code></pre>
</div>

<p>
Salida de ejemplo:
</p>

<div class="org-src-container">
<pre class="src src-text"><code> 5 SRC=192.168.1.100
10 SRC=203.0.113.50
</code></pre>
</div>

<p>
Esto indica que la IP `203.0.113.50` intentó acceder 10 veces al puerto 22.
</p>
</div>
</div>
</div>
<div id="outline-container-org1de198c" class="outline-2">
<h2 id="org1de198c">Resumen de Detalles Críticos</h2>
<div class="outline-text-2" id="text-org1de198c">
<p>
Los logs de UFW contienen información valiosa para la seguridad. Los detalles críticos a observar incluyen:
</p>
<ul class="org-ul">
<li><b><b>Acciones</b></b>: Bloqueos (`UFW BLOCK`) o permisos (`UFW ALLOW`).</li>
<li><b><b>Direcciones IP</b></b>: Identificar IPs sospechosas o repetitivas.</li>
<li><b><b>Puertos de destino</b></b>: Puertos comunes como 22 (SSH), 80 (HTTP) o 443 (HTTPS) son objetivos frecuentes.</li>
<li><b><b>Protocolos</b></b>: TCP, UDP, etc., para entender el tipo de tráfico.</li>
<li><b><b>Frecuencia</b></b>: Intentos repetidos pueden indicar un ataque.</li>
</ul>
</div>
</div>
<div id="outline-container-orgc09079d" class="outline-2">
<h2 id="orgc09079d">Tabla de Detalles Críticos en Formato `.org`</h2>
<div class="outline-text-2" id="text-orgc09079d">
<table>


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Aspecto</th>
<th scope="col" class="org-left">Descripción</th>
<th scope="col" class="org-left">Comando de Ejemplo</th>
<th scope="col" class="org-left">Acción Recomendada</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Acción del Firewall</td>
<td class="org-left">Indica si el tráfico fue bloqueado o permitido</td>
<td class="org-left">`grep "UFW BLOCK" /var/log/ufw.log`</td>
<td class="org-left">Investigar bloqueos frecuentes</td>
</tr>

<tr>
<td class="org-left">IP de Origen (SRC)</td>
<td class="org-left">Dirección IP que envía el tráfico</td>
<td class="org-left">`awk '<i>UFW BLOCK</i> {print $13}' /var/log/ufw.log</td>
<td class="org-left">sort</td>
<td class="org-left">uniq`</td>
<td class="org-left">Bloquear IPs sospechosas con UFW</td>
</tr>

<tr>
<td class="org-left">Puerto de Destino (DPT)</td>
<td class="org-left">Puerto al que se dirige el tráfico</td>
<td class="org-left">`grep "DPT=22" /var/log/ufw.log`</td>
<td class="org-left">Monitorear puertos sensibles (22, 80, etc.)</td>
</tr>

<tr>
<td class="org-left">Protocolo</td>
<td class="org-left">Tipo de protocolo (TCP, UDP, etc.)</td>
<td class="org-left">`grep "PROTO=TCP" /var/log/ufw.log`</td>
<td class="org-left">Identificar protocolos inusuales</td>
</tr>

<tr>
<td class="org-left">Frecuencia</td>
<td class="org-left">Número de eventos por IP o puerto</td>
<td class="org-left">`grep "UFW BLOCK" /var/log/ufw.log</td>
<td class="org-left">wc -l`</td>
<td class="org-left">Configurar alertas para alta frecuencia</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-orge4759f7" class="outline-2">
<h2 id="orge4759f7">Consejos para Emacs con Esteroides</h2>
<div class="outline-text-2" id="text-orge4759f7">
<p>
Si usas Emacs, puedes optimizar el análisis de logs:
</p>
<ul class="org-ul">
<li><b><b>Modo `org-mode`</b></b>: Copia la tabla anterior en un archivo `.org` para organizarla.</li>
<li><b><b>Modo `shell`</b></b>: Usa `M-x shell` para ejecutar comandos como `grep` o `awk` desde Emacs.</li>
<li><b><b>Dired</b></b>: Navega por `/var/log/` con `C-x C-f /var/log/ufw.log` y usa `dired-mode` para abrir logs.</li>
<li><b><b>Tramp</b></b>: Accede a logs en servidores remotos con `/ssh:user@host:/var/log/ufw.log`.</li>
</ul>
</div>
</div>
<div id="outline-container-orgb41186d" class="outline-2">
<h2 id="orgb41186d">Conclusión</h2>
<div class="outline-text-2" id="text-orgb41186d">
<p>
Analizar los logs de UFW te permite mantener tu sistema seguro y detectar problemas rápidamente. Con herramientas como `grep`, `awk` y Emacs, puedes filtrar, resumir y organizar la información de manera eficiente. Usa la tabla `.org` para mantener un registro claro de los detalles críticos y automatiza el monitoreo para ahorrar tiempo.
</p>

<div class="org-src-container">
<pre class="src src-bash"><code><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Script para monitorear intentos al puerto 22 en tiempo real</span>
sudo tail -f /var/log/ufw.log | grep <span style="color: #a44185;">"DPT=22"</span>
</code></pre>
</div>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ufw.html">ufw</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-firewall.html">firewall</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-logs.html">logs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-sysadmin.html">sysadmin</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ubuntu.html">ubuntu</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> </div>]]></description>
  <category><![CDATA[ufw]]></category>
  <category><![CDATA[firewall]]></category>
  <category><![CDATA[logs]]></category>
  <category><![CDATA[sysadmin]]></category>
  <category><![CDATA[ubuntu]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[org-mode]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-05-30--an-lisis-del-log-del-firewall-ufw-en-ubuntu-gu-a-completa-para-usuarios.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-05-30--an-lisis-del-log-del-firewall-ufw-en-ubuntu-gu-a-completa-para-usuarios.html</guid>
  <pubDate>Fri, 30 May 2025 06:43:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Nace un blog complementario: "El Mapa y El Código"]]></title>
  <description><![CDATA[
<div id="outline-container-orgf0906e7" class="outline-2">
<h2 id="orgf0906e7">Un nuevo espacio con la misma energía</h2>
<div class="outline-text-2" id="text-orgf0906e7">
<p>
Desde que inicié <b>Emacs con Esteroides</b>, he mantenido un principio claro: usar Emacs no solo como una herramienta, sino como un entorno completo para pensar, escribir, publicar y automatizar. Hoy quiero compartir con quienes siguen este blog una novedad que nace del mismo impulso creativo, la misma atención al detalle y el mismo amor por <b>Org Mode</b> y el flujo de trabajo con Git.
</p>

<p>
<b><b>Ha nacido un blog complementario: <a href="https://mcasrom.github.io/geo-ia/">El Mapa y El Código</a></b></b>
</p>

<p>
Este nuevo espacio, construido completamente en Emacs y Org Mode, está dedicado al análisis de temas geoestratégicos, geopolíticos y de relaciones de poder global. Si en <b>Emacs con Esteroides</b> exploramos el poder técnico y filosófico de Emacs, en <b>El Mapa y El Código</b> abordamos el poder en su dimensión política y territorial.
</p>


<figure id="org7d2682a">
<a href="https://mcasrom.github.io/geo-ia/" width="800px"><img src="images/logoblog_backup.png" alt="logoblog_backup.png" width="800px"></a>

</figure>
</div>
</div>
<div id="outline-container-org1eb1806" class="outline-2">
<h2 id="org1eb1806">¿Por qué otro blog?</h2>
<div class="outline-text-2" id="text-org1eb1806">
<p>
Aunque los dos blogs comparten la misma infraestructura (Emacs + Org + GitHub Pages), el contenido y enfoque de cada uno responde a distintas pasiones: la ingeniería del conocimiento y la ingeniería del mundo. Esta separación permite mantener la claridad temática sin dejar de aprovechar todo el ecosistema de Emacs para escribir, analizar y publicar.
</p>
</div>
</div>
<div id="outline-container-org2c48267" class="outline-2">
<h2 id="org2c48267">¿Qué puedes esperar de <b>El Mapa y El Código</b>?</h2>
<div class="outline-text-2" id="text-org2c48267">
<ul class="org-ul">
<li>Análisis actuales sobre conflictos, tensiones y alianzas globales.</li>
<li>Diagramas en PlantUML y mapas conceptuales generados desde Org.</li>
<li>Reflexiones críticas sobre los equilibrios de poder emergentes.</li>
<li>Vinculación con herramientas libres y visualización en Emacs.</li>
</ul>
</div>
</div>
<div id="outline-container-org7ae2157" class="outline-2">
<h2 id="org7ae2157">En resumen</h2>
<div class="outline-text-2" id="text-org7ae2157">
<p>
Si te interesa el uso avanzado de Emacs, <b>Emacs con Esteroides</b> seguirá siendo tu espacio. Pero si también te atrae el análisis geopolítico con una mirada técnica, crítica y libre, te invito a visitar y seguir:
</p>

<p>
👉 <a href="https://mcasrom.github.io/geo-ia/">El Mapa y El Código</a>
</p>

<p>
Espero sinceramente que este nuevo proyecto también sea de tu interés.
</p>


<figure id="orgf94c077">
<img src="images/blog-relacion-diagrama.png" alt="blog-relacion-diagrama.png">

</figure>


<blockquote>
<p>
<b>Dos blogs, una misma filosofía: pensar, escribir, publicar y compartir desde Emacs.</b>
</p>
</blockquote>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-geopolitica.html">geopolitica</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-geoestrategia.html">geoestrategia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-blog.html">blog</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-github.html">github</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[geopolitica]]></category>
  <category><![CDATA[geoestrategia]]></category>
  <category><![CDATA[blog]]></category>
  <category><![CDATA[github]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-05-28-nace-un-blog-complementario-el-mapa-y-el-c-digo-.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-05-28-nace-un-blog-complementario-el-mapa-y-el-c-digo-.html</guid>
  <pubDate>Wed, 28 May 2025 13:07:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Creación de Presentaciones con Emacs (i)]]></title>
  <description><![CDATA[
<div id="outline-container-org3744e37" class="outline-2">
<h2 id="org3744e37">Introducción</h2>
</div>


<div id="outline-container-org8b4904c" class="outline-2">
<h2 id="org8b4904c">Introducción</h2>
<div class="outline-text-2" id="text-org8b4904c">
<p>
Emacs no solo es un editor de texto potente, sino también una herramienta versátil que permite crear <b>presentaciones profesionales</b> directamente desde archivos Org Mode. En este artículo exploraremos cómo generar presentaciones usando dos tecnologías integradas en Emacs:
</p>

<ul class="org-ul">
<li><code>Beamer</code> para presentaciones en PDF estilo LaTeX.</li>
<li><code>Reveal.js</code> para presentaciones web interactivas en HTML.</li>
</ul>
</div>
</div>
<div id="outline-container-orgb3b7e81" class="outline-2">
<h2 id="orgb3b7e81">Ventajas de crear presentaciones en Emacs</h2>
<div class="outline-text-2" id="text-orgb3b7e81">
<ul class="org-ul">
<li><b><b>Reproducibilidad</b></b>: El contenido puede versionarse con Git.</li>
<li><b><b>Modularidad</b></b>: Puedes reutilizar contenido fácilmente.</li>
<li><b><b>Exportación flexible</b></b>: A PDF, HTML, Markdown, LaTeX, etc.</li>
<li><b><b>Org Babel</b></b>: Inserta código ejecutable y gráficos en vivo.</li>
</ul>
</div>
</div>
<div id="outline-container-org631a223" class="outline-2">
<h2 id="org631a223">Opción 1: Presentaciones PDF con LaTeX Beamer</h2>
<div class="outline-text-2" id="text-org631a223">
<p>
<b><b>Requisitos previos</b></b>:
</p>
<ul class="org-ul">
<li>Instalado un sistema LaTeX completo (TeX Live o MiKTeX).</li>
<li>Emacs con Org Mode actualizado.</li>
</ul>

<p>
<b><b>Configuración mínima</b></b> en Emacs:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">setq</span> org-latex-packages-alist '((<span style="color: #a44185;">""</span> <span style="color: #a44185;">"graphicx"</span> t)
                                  (<span style="color: #a44185;">""</span> <span style="color: #a44185;">"xcolor"</span> t)
                                  (<span style="color: #a44185;">""</span> <span style="color: #a44185;">"hyperref"</span> t)))

(<span style="color: #219fd5; font-style: italic;">setq</span> org-latex-default-class <span style="color: #a44185;">"beamer"</span>)
</pre>
</div>

<p>
<b><b>Ejemplo de presentación Beamer en Org Mode</b></b>:
</p>

<p>
#+BEGIN<sub>SRC</sub> org
</p>
</div>
</div>
<div id="outline-container-org2217a9a" class="outline-2">
<h2 id="org2217a9a">Introducción</h2>
<div class="outline-text-2" id="text-org2217a9a">
<ul class="org-ul">
<li>Esta es una diapositiva de ejemplo.</li>
</ul>
</div>
</div>
<div id="outline-container-orgfe4d399" class="outline-2">
<h2 id="orgfe4d399">Código en vivo</h2>
<div class="outline-text-2" id="text-orgfe4d399">
<div class="org-src-container">
<pre class="src src-python"><span style="color: #dc3eb7;">print</span>(<span style="color: #a44185;">"Hola desde Python en Beamer"</span>)
</pre>
</div>

<pre class="example">
Hola desde Python en Beamer
</pre>


<p>
#+END<sub>SRC</sub>
</p>

<p>
<b><b>Exportar</b></b>: Usa <code>C-c C-e l P</code> para exportar a PDF.
</p>
</div>
</div>
<div id="outline-container-org406fecf" class="outline-2">
<h2 id="org406fecf">Opción 2: Presentaciones web con Reveal.js</h2>
<div class="outline-text-2" id="text-org406fecf">
<p>
Reveal.js genera presentaciones en HTML interactivas. Es ideal para compartir en la web o proyectar desde navegadores modernos.
</p>

<p>
<b><b>Requisitos</b></b>:
</p>
<ul class="org-ul">
<li>Instalar el paquete Reveal.js y colocarlo en tu sistema.</li>
<li>Configuración mínima en Emacs:</li>
</ul>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">setq</span> org-reveal-root <span style="color: #a44185;">"https://cdn.jsdelivr.net/npm/reveal.js"</span>)
</pre>
</div>

<p>
<b><b>Ejemplo Reveal.js</b></b>:
</p>

<p>
#+BEGIN<sub>SRC</sub> org
</p>
</div>
</div>
<div id="outline-container-org9789b11" class="outline-2">
<h2 id="org9789b11">Bienvenida</h2>
<div class="outline-text-2" id="text-org9789b11">
<p>
¡Hola Emacs!
</p>
</div>
</div>
<div id="outline-container-org6f3c026" class="outline-2">
<h2 id="org6f3c026">Diapositiva con código</h2>
<div class="outline-text-2" id="text-org6f3c026">
<div class="org-src-container">
<pre class="src src-shell"><span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Hola desde shell"</span>
</pre>
</div>
<p>
#+END<sub>SRC</sub>
</p>

<p>
<b><b>Exportar a HTML Reveal</b></b>: <code>C-c C-e R R</code>
</p>
</div>
</div>
<div id="outline-container-orge45fe1f" class="outline-2">
<h2 id="orge45fe1f">Agregar diagramas: Integración con PlantUML</h2>
<div class="outline-text-2" id="text-orge45fe1f">
<p>
Puedes incluir diagramas UML en tus presentaciones gracias a Org Babel.
</p>

<p>
<b><b>Ejemplo de secuencia UML</b></b>:
</p>


<figure id="org4b81bca">
<img src="images/uml-diagrama-presentacion.png" alt="uml-diagrama-presentacion.png">

</figure>
</div>
</div>
<div id="outline-container-org2f8dca2" class="outline-2">
<h2 id="org2f8dca2">Tips Avanzados</h2>
<div class="outline-text-2" id="text-org2f8dca2">
<ul class="org-ul">
<li>Puedes usar <code>#+INCLUDE</code> para insertar secciones comunes en múltiples presentaciones.</li>
<li>Usa <code>org-babel-tangle</code> para extraer código reutilizable.</li>
<li>Personaliza el CSS si usas Reveal.js con `#+REVEAL<sub>EXTRA</sub><sub>CSS</sub>`.</li>
</ul>
</div>
</div>
<div id="outline-container-org26d7d50" class="outline-2">
<h2 id="org26d7d50">Comparación rápida</h2>
<div class="outline-text-2" id="text-org26d7d50">
<table>


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Característica</th>
<th scope="col" class="org-left">Beamer (PDF)</th>
<th scope="col" class="org-left">Reveal.js (HTML)</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Interactividad</td>
<td class="org-left">❌ No</td>
<td class="org-left">✅ Sí</td>
</tr>

<tr>
<td class="org-left">Estilo visual</td>
<td class="org-left">✅ Profesional</td>
<td class="org-left">✅ Moderno</td>
</tr>

<tr>
<td class="org-left">Facilidad de uso</td>
<td class="org-left">Media</td>
<td class="org-left">Alta</td>
</tr>

<tr>
<td class="org-left">Compartición</td>
<td class="org-left">Difícil (PDF)</td>
<td class="org-left">Muy fácil (HTML)</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org890d91f" class="outline-2">
<h2 id="org890d91f">Referencias</h2>
<div class="outline-text-2" id="text-org890d91f">
<ol class="org-ol">
<li><a href="https://orgmode.org">Org Mode oficial</a></li>
<li><a href="https://revealjs.com">Reveal.js</a></li>
<li><a href="https://ctan.org/pkg/beamer">Beamer en CTAN</a></li>
<li><a href="https://plantuml.com">PlantUML para Emacs</a></li>
</ol>
</div>
</div>
<div id="outline-container-orgd05a8f7" class="outline-2">
<h2 id="orgd05a8f7">Conclusión</h2>
<div class="outline-text-2" id="text-orgd05a8f7">
<p>
Gracias a Emacs y Org Mode, puedes crear presentaciones impactantes y completamente reproducibles, ya sea en formato PDF o HTML interactivo. Con un poco de práctica, sustituirás definitivamente PowerPoint por Emacs.
</p>

<p>
&#x2014;
</p>
</div>
</div>
<div id="outline-container-orgbe9cf7b" class="outline-2">
<h2 id="orgbe9cf7b">🎯 ¿Y ahora qué?</h2>
<div class="outline-text-2" id="text-orgbe9cf7b">
<p>
Crea tu primera presentación en `presentacion.org`, agrega tus secciones, exporta a PDF o HTML y comparte tus conocimientos desde <b>Emacs con esteroides</b>.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> </div>]]></description>
  <category><![CDATA[tutoriales]]></category>
  <category><![CDATA[emacs]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-05-03-creaci-n-de-presentaciones-con-emacs-i-.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-05-03-creaci-n-de-presentaciones-con-emacs-i-.html</guid>
  <pubDate>Sat, 03 May 2025 09:04:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Guía Completa de Emacs y Org Mode: De Principiante a Experto]]></title>
  <description><![CDATA[
<nav id="table-of-contents" role="doc-toc">
<h2>Table of Contents</h2>
<div id="text-table-of-contents" role="doc-toc">
<ul>
<li><a href="#org8c4f931">1. Prefacio</a>
<ul>
<li><a href="#orga8d5a6a">1.1. Estructura de la guía</a></li>
</ul>
</li>
<li><a href="#orgd3bf774">2. Introducción a Emacs y Org Mode</a>
<ul>
<li><a href="#orge025cf2">2.1. ¿Qué es Emacs?</a></li>
<li><a href="#org915c2af">2.2. ¿Qué es Org Mode?</a></li>
<li><a href="#org59e9422">2.3. ¿Por qué aprender Emacs y Org Mode?</a></li>
</ul>
</li>
<li><a href="#orgdf44adc">3. Instalación y configuración inicial</a>
<ul>
<li><a href="#orge917a7c">3.1. Instalación de Emacs</a>
<ul>
<li><a href="#org93df5eb">3.1.1. Linux</a></li>
<li><a href="#org98aad8d">3.1.2. macOS</a></li>
<li><a href="#orgf8df816">3.1.3. Windows</a></li>
</ul>
</li>
<li><a href="#orgc883696">3.2. Primera ejecución</a></li>
<li><a href="#org2c471c0">3.3. Configuración básica inicial</a></li>
<li><a href="#orga4d8b2b">3.4. Configurando el sistema de paquetes</a>
<ul>
<li><a href="#org011fd90">3.4.1. Uso de use-package</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#org628ad58">4. Fundamentos de Emacs</a>
<ul>
<li><a href="#orgc517bff">4.1. Terminología esencial</a></li>
<li><a href="#orga44393f">4.2. Notación de teclas</a></li>
<li><a href="#org08c1be8">4.3. Comandos básicos de navegación</a></li>
<li><a href="#org3e6c2db">4.4. Comandos básicos de edición</a></li>
<li><a href="#org98dc6c6">4.5. Gestión de archivos y buffers</a></li>
<li><a href="#org229c410">4.6. Gestión de ventanas y frames</a></li>
<li><a href="#orgfd47c5f">4.7. Búsqueda y reemplazo</a></li>
<li><a href="#orged1ec81">4.8. Ayuda y documentación</a></li>
<li><a href="#org13ba31d">4.9. Diagrama: Estructura básica de Emacs</a></li>
</ul>
</li>
<li><a href="#org2c01e27">5. Dominando Org Mode</a>
<ul>
<li><a href="#org4aa309a">5.1. Fundamentos de Org Mode</a>
<ul>
<li><a href="#org92454da">5.1.1. Estructura básica de un documento Org</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#org2aa0595">6. Encabezado de primer nivel</a>
<ul>
<li><a href="#org98e6f40">6.1. Encabezado de segundo nivel</a>
<ul>
<li><a href="#org3391a25">6.1.1. Encabezado de tercer nivel</a></li>
<li><a href="#org25ad511">6.1.2. Navegación en documentos Org</a></li>
<li><a href="#org77a86ba">6.1.3. Edición de la estructura</a></li>
</ul>
</li>
<li><a href="#org6d44a63">6.2. Gestión de tareas y proyectos</a>
<ul>
<li><a href="#org655f968">6.2.1. Estados de TODO</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#orga3c4bdc">7. <span class="todo TODO">TODO</span> Completar informe trimestral</a></li>
<li><a href="#org53c05f6">8. <span class="done DONE">DONE</span> Enviar correo al equipo</a>
<ul>
<li>
<ul>
<li><a href="#orgff3049f">8.0.1. Prioridades</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#org4e7f8d8">9. <span class="todo TODO">TODO</span> Tarea crítica de alta prioridad</a></li>
<li><a href="#orgf8ba5b3">10. <span class="todo TODO">TODO</span> Tarea de prioridad media</a></li>
<li><a href="#org18d8246">11. <span class="todo TODO">TODO</span> Tarea de baja prioridad</a>
<ul>
<li>
<ul>
<li><a href="#org3d201f1">11.0.1. Plazos y programación</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#orgdf5d093">12. <span class="todo TODO">TODO</span> Completar proyecto</a>
<ul>
<li>
<ul>
<li><a href="#orgab3c98f">12.0.1. Propiedades y etiquetas</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#org236dc14">13. <span class="todo TODO">TODO</span> Escribir propuesta de proyecto</a></li>
<li><a href="#orgcca17cb">14. <span class="todo TODO">TODO</span> Actualizar sitio web&#xa0;&#xa0;&#xa0;<span class="tag"><span class="web">web</span>&#xa0;<span class="tecnolog_a">tecnología</span></span></a></li>
<li><a href="#org838fbdb">15. <span class="todo TODO">TODO</span> Llamar al cliente Acme&#xa0;&#xa0;&#xa0;<span class="tag"><span class="tel_fono">teléfono</span>&#xa0;<span class="clientes">clientes</span></span></a>
<ul>
<li><a href="#orgb632dd7">15.1. Agenda y organización</a>
<ul>
<li><a href="#org6d4365b">15.1.1. Configuración básica de agenda</a></li>
<li><a href="#orgcea93e7">15.1.2. Vista personalizada de agenda</a></li>
<li><a href="#orgea119ba">15.1.3. Sistema de captura</a></li>
</ul>
</li>
<li><a href="#org0de3c01">15.2. Toma de notas avanzada</a>
<ul>
<li><a href="#org661e244">15.2.1. Enlaces y referencias cruzadas</a></li>
<li><a href="#orga9e2fa3">15.2.2. Listas de control (checklists)</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#orge930472">16. <span class="todo TODO">TODO</span> Preparar presentación <code>[0/3]</code></a>
<ul>
<li>
<ul>
<li><a href="#org0a24a27">16.0.1. Tablas y cálculos</a></li>
<li><a href="#orge54423d">16.0.2. Código fuente y bloques de código</a></li>
<li><a href="#org0b75a9c">16.0.3. Exportación y publicación</a></li>
</ul>
</li>
<li><a href="#orgfbea2de">16.1. Diagrama: Estructura de Org Mode</a></li>
</ul>
</li>
<li><a href="#org9589fac">17. Flujos de trabajo avanzados</a>
<ul>
<li><a href="#org6d60d1f">17.1. Sistema GTD (Getting Things Done)</a>
<ul>
<li><a href="#org6c09d6e">17.1.1. Estructura de archivos</a></li>
<li><a href="#org5d809d2">17.1.2. Configuración básica para GTD</a></li>
<li><a href="#orge6a30c7">17.1.3. Flujo de trabajo GTD en Org Mode</a></li>
</ul>
</li>
<li><a href="#orga94586b">17.2. Zettelkasten para gestión de conocimiento</a>
<ul>
<li><a href="#orga35ba14">17.2.1. Configuración básica</a></li>
<li><a href="#org4e87b47">17.2.2. Uso con org-roam</a></li>
<li><a href="#orgf756f41">17.2.3. Principios de Zettelkasten en Org Mode</a></li>
</ul>
</li>
<li><a href="#orgf27e49a">17.3. Gestión de proyectos y tareas</a>
<ul>
<li><a href="#orgfd12f3e">17.3.1. Tareas recurrentes</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#org50b5ec5">18. <span class="todo TODO">TODO</span> Revisar correo electrónico</a></li>
<li><a href="#org278a367">19. <span class="todo TODO">TODO</span> Reunión semanal de equipo</a></li>
<li><a href="#org38c24a8">20. <span class="todo TODO">TODO</span> Pago de servicios</a>
<ul>
<li>
<ul>
<li><a href="#org23b002e">20.0.1. Hábitos</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#orga54d72c">21. <span class="todo TODO">TODO</span> Ejercicio diario</a>
<ul>
<li>
<ul>
<li><a href="#org4b4e3c2">21.0.1. Seguimiento de tiempo</a></li>
</ul>
</li>
<li><a href="#orgc06e2e6">21.1. Integración con correo electrónico</a>
<ul>
<li><a href="#org36e9ee5">21.1.1. Configuración con mu4e</a></li>
</ul>
</li>
<li><a href="#org0d9c8c7">21.2. Publicación en la web</a>
<ul>
<li><a href="#orgff4d67d">21.2.1. Configuración básica de org-publish</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#orgeec2ded">22. Extensiones y personalización</a>
<ul>
<li><a href="#org0599a23">22.1. Paquetes esenciales para Org Mode</a>
<ul>
<li><a href="#org652c03c">22.1.1. org-bullets</a></li>
<li><a href="#org1bc9fae">22.1.2. org-super-agenda</a></li>
<li><a href="#org92ab476">22.1.3. org-download</a></li>
<li><a href="#org199120d">22.1.4. org-noter</a></li>
</ul>
</li>
<li><a href="#org8fab220">22.2. Temas y personalización visual</a>
<ul>
<li><a href="#org9fa2545">22.2.1. Temas populares</a></li>
<li><a href="#orgf4ae1b1">22.2.2. Personalización de fuentes</a></li>
</ul>
</li>
<li><a href="#org6f10893">22.3. Gestión avanzada de configuraciones</a>
<ul>
<li><a href="#orgdd60966">22.3.1. use-package</a></li>
<li><a href="#org8119aa3">22.3.2. Organización por archivos</a></li>
</ul>
</li>
<li><a href="#org6fad6b7">22.4. Productividad con pequeñas mejoras</a></li>
</ul>
</li>
<li><a href="#org971f369">23. Solución de problemas comunes</a>
<ul>
<li><a href="#orged54be1">23.1. Problemas de rendimiento</a></li>
<li><a href="#org66efd91">23.2. Problemas de exportación</a></li>
<li><a href="#org14a62b1">23.3. Errores en Org Mode</a></li>
<li><a href="#org920c0e4">23.4. Problemas de compatibilidad</a></li>
</ul>
</li>
<li><a href="#org8887017">24. Diagrama: Jerarquía de conceptos en Emacs y Org Mode</a></li>
<li><a href="#orgaeaaef8">25. Emacs + Org Mode</a>
<ul>
<li><a href="#org8dfe05b">25.1. Fundamentos de Emacs</a>
<ul>
<li><a href="#orgce2e95b">25.1.1. Terminología</a></li>
<li><a href="#org1e70527">25.1.2. Navegación</a></li>
<li><a href="#orgecc2310">25.1.3. Edición</a></li>
</ul>
</li>
<li><a href="#org5c5024d">25.2. Org Mode Básico</a>
<ul>
<li><a href="#orga612c41">25.2.1. Estructura de documentos</a></li>
<li><a href="#org379fa14">25.2.2. Gestión de tareas</a></li>
<li><a href="#org399c1b2">25.2.3. Enlaces y referencias</a></li>
<li><a href="#org0f94738">25.2.4. Fechas y horarios</a></li>
</ul>
</li>
<li><a href="#orgce9d078">25.3. Org Mode Avanzado</a>
<ul>
<li><a href="#orgc589490">25.3.1. Agenda</a></li>
<li><a href="#org64fc7f5">25.3.2. Captura</a></li>
<li><a href="#org524a063">25.3.3. Exportación</a></li>
<li><a href="#org4eca9e9">25.3.4. Babel (código)</a></li>
<li><a href="#org1de5ad5">25.3.5. Bloques especiales</a></li>
</ul>
</li>
<li><a href="#orgf4a7af1">25.4. Flujos de trabajo</a>
<ul>
<li><a href="#orgc0ffdca">25.4.1. GTD</a></li>
<li><a href="#org4577926">25.4.2. Zettelkasten</a></li>
<li><a href="#org0ba223c">25.4.3. Gestión de proyectos</a></li>
<li><a href="#orgfa3ff06">25.4.4. Toma de notas</a></li>
</ul>
</li>
<li><a href="#org929d3f3">25.5. Personalización</a>
<ul>
<li><a href="#orgb7cf1b3">25.5.1. Temas</a></li>
<li><a href="#orgc429eb3">25.5.2. Paquetes adicionales</a></li>
<li><a href="#org5af57a2">25.5.3. Configuración propia</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#org1f336f4">26. Recursos y referencias</a>
<ul>
<li><a href="#orgbe42200">26.1. Documentación oficial</a></li>
<li><a href="#orgc253411">26.2. Libros</a></li>
<li><a href="#org829c3c6">26.3. Tutoriales en línea</a></li>
<li><a href="#org2932805">26.4. Comunidades y foros</a></li>
<li><a href="#orge3e2049">26.5. Repositorios y configuraciones públicas</a></li>
<li><a href="#org04f331f">26.6. Canales de YouTube</a></li>
</ul>
</li>
<li><a href="#org1acea69">27. Resumen y siguientes pasos</a>
<ul>
<li><a href="#org791f9e7">27.1. Lo que has aprendido</a></li>
<li><a href="#orgce60f79">27.2. Recomendaciones para continuar</a></li>
<li><a href="#orgfd6a650">27.3. Plan de aprendizaje de 30 días</a></li>
</ul>
</li>
<li><a href="#orga3a5477">28. Conclusión</a></li>
</ul>
</div>
</nav>
<div id="outline-container-org8c4f931" class="outline-2">
<h2 id="org8c4f931"><span class="section-number-2">1.</span> Prefacio</h2>
<div class="outline-text-2" id="text-1">
<p>
Esta guía está diseñada para proporcionar un recurso completo para aprender a trabajar con Emacs y Org Mode, desde los conceptos básicos hasta las técnicas avanzadas. Está orientada tanto a principiantes como a usuarios intermedios que desean profundizar sus conocimientos y mejorar su flujo de trabajo.
</p>
</div>
<div id="outline-container-orga8d5a6a" class="outline-3">
<h3 id="orga8d5a6a"><span class="section-number-3">1.1.</span> Estructura de la guía</h3>
<div class="outline-text-3" id="text-1-1">
<p>
La guía está dividida en varias secciones principales:
</p>

<ol class="org-ol">
<li>Introducción a Emacs y Org Mode</li>
<li>Instalación y configuración inicial</li>
<li>Fundamentos de Emacs</li>
<li>Dominando Org Mode</li>
<li>Flujos de trabajo avanzados</li>
<li>Extensiones y personalización</li>
<li>Solución de problemas comunes</li>
<li>Recursos y referencias</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-orgd3bf774" class="outline-2">
<h2 id="orgd3bf774"><span class="section-number-2">2.</span> Introducción a Emacs y Org Mode</h2>
<div class="outline-text-2" id="text-2">
</div>
<div id="outline-container-orge025cf2" class="outline-3">
<h3 id="orge025cf2"><span class="section-number-3">2.1.</span> ¿Qué es Emacs?</h3>
<div class="outline-text-3" id="text-2-1">
<p>
Emacs es mucho más que un simple editor de texto. Es un entorno completo para programación, escritura, organización y casi cualquier tarea relacionada con texto. Desarrollado originalmente en la década de 1970 por Richard Stallman, Emacs se ha convertido en uno de los editores más potentes y extensibles disponibles.
</p>

<p>
Algunas características distintivas de Emacs:
</p>

<ul class="org-ul">
<li><b>Extensibilidad ilimitada</b>: Emacs está escrito en Lisp (específicamente Emacs Lisp), lo que permite a los usuarios personalizar y extender cualquier aspecto del editor.</li>
<li><b>Auto-documentado</b>: Incluye documentación extensa y accesible desde dentro del propio editor.</li>
<li><b>Multi-plataforma</b>: Funciona en prácticamente cualquier sistema operativo.</li>
<li><b>Ecosistema rico</b>: Miles de paquetes y extensiones disponibles.</li>
<li><b>Longevidad</b>: Con más de 45 años de desarrollo continuo, Emacs es uno de los programas más antiguos en uso activo.</li>
</ul>
</div>
</div>
<div id="outline-container-org915c2af" class="outline-3">
<h3 id="org915c2af"><span class="section-number-3">2.2.</span> ¿Qué es Org Mode?</h3>
<div class="outline-text-3" id="text-2-2">
<p>
Org Mode es una de las extensiones más populares y potentes para Emacs. Creado por Carsten Dominik en 2003, Org Mode comenzó como un simple organizador de notas y ha evolucionado hasta convertirse en un sistema completo para:
</p>

<ul class="org-ul">
<li>Tomar notas estructuradas</li>
<li>Mantener listas de tareas y proyectos</li>
<li>Planificar proyectos</li>
<li>Gestionar documentos</li>
<li>Programar literaria</li>
<li>Publicar documentos en múltiples formatos</li>
<li>Mantener una agenda y calendario</li>
<li>Implementar metodologías como GTD (Getting Things Done)</li>
</ul>

<p>
Org Mode utiliza archivos de texto plano con una sintaxis simple pero poderosa, lo que garantiza que tus datos sean accesibles a largo plazo.
</p>
</div>
</div>
<div id="outline-container-org59e9422" class="outline-3">
<h3 id="org59e9422"><span class="section-number-3">2.3.</span> ¿Por qué aprender Emacs y Org Mode?</h3>
<div class="outline-text-3" id="text-2-3">
<p>
En la era de aplicaciones especializadas para cada tarea específica, puede parecer anacrónico dedicar tiempo a aprender una herramienta compleja como Emacs. Sin embargo, hay razones convincentes para hacerlo:
</p>

<ul class="org-ul">
<li><b>Unificación de herramientas</b>: Un solo entorno para programación, escritura, organización, correo electrónico y más.</li>
<li><b>Eficiencia a largo plazo</b>: La inversión inicial en la curva de aprendizaje se compensa con mayor productividad a lo largo del tiempo.</li>
<li><b>Adaptabilidad</b>: Emacs se adapta a tu flujo de trabajo, no al revés.</li>
<li><b>Formato de datos duradero</b>: Los archivos de texto plano seguirán siendo legibles décadas después, a diferencia de formatos propietarios.</li>
<li><b>Control total</b>: No dependes de servicios en la nube o compañías que puedan discontinuar sus productos.</li>
<li><b>Comunidad vibrante</b>: Acceso a una comunidad de usuarios experimentados y entusiastas.</li>
</ul>

<blockquote>
<p>
"Emacs no es solo un editor de texto; es un estilo de vida." — Un usuario anónimo de Emacs
</p>
</blockquote>
</div>
</div>
</div>
<div id="outline-container-orgdf44adc" class="outline-2">
<h2 id="orgdf44adc"><span class="section-number-2">3.</span> Instalación y configuración inicial</h2>
<div class="outline-text-2" id="text-3">
</div>
<div id="outline-container-orge917a7c" class="outline-3">
<h3 id="orge917a7c"><span class="section-number-3">3.1.</span> Instalación de Emacs</h3>
<div class="outline-text-3" id="text-3-1">
</div>
<div id="outline-container-org93df5eb" class="outline-4">
<h4 id="org93df5eb"><span class="section-number-4">3.1.1.</span> Linux</h4>
<div class="outline-text-4" id="text-3-1-1">
<p>
En distribuciones basadas en Debian/Ubuntu:
</p>

<div class="org-src-container">
<pre class="src src-shell">sudo apt update
sudo apt install emacs
</pre>
</div>

<p>
En distribuciones basadas en Red Hat/Fedora:
</p>

<div class="org-src-container">
<pre class="src src-shell">sudo dnf install emacs
</pre>
</div>

<p>
En Arch Linux:
</p>

<div class="org-src-container">
<pre class="src src-shell">sudo pacman -S emacs
</pre>
</div>
</div>
</div>
<div id="outline-container-org98aad8d" class="outline-4">
<h4 id="org98aad8d"><span class="section-number-4">3.1.2.</span> macOS</h4>
<div class="outline-text-4" id="text-3-1-2">
<p>
Usando Homebrew:
</p>

<div class="org-src-container">
<pre class="src src-shell">brew install emacs
</pre>
</div>

<p>
Alternativamente, puedes descargar una versión precompilada como Emacs For Mac OS X (<a href="https://emacsformacosx.com/">https://emacsformacosx.com/</a>).
</p>
</div>
</div>
<div id="outline-container-orgf8df816" class="outline-4">
<h4 id="orgf8df816"><span class="section-number-4">3.1.3.</span> Windows</h4>
<div class="outline-text-4" id="text-3-1-3">
<ol class="org-ol">
<li>Descarga el instalador desde la página oficial GNU: <a href="https://gnu.org/software/emacs/download.html">https://gnu.org/software/emacs/download.html</a></li>
<li>Ejecuta el instalador y sigue las instrucciones</li>
<li>Opcionalmente, añade Emacs al PATH del sistema para acceder desde la línea de comandos</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-orgc883696" class="outline-3">
<h3 id="orgc883696"><span class="section-number-3">3.2.</span> Primera ejecución</h3>
<div class="outline-text-3" id="text-3-2">
<p>
Al iniciar Emacs por primera vez, verás una pantalla de bienvenida con información básica y enlaces útiles. Para empezar a usar Emacs inmediatamente:
</p>

<ol class="org-ol">
<li>Presiona `Ctrl+x` seguido de `Ctrl+f` para abrir un archivo</li>
<li>Escribe el nombre del archivo (nuevo o existente) y presiona Enter</li>
<li>¡Comienza a editar!</li>
</ol>
</div>
</div>
<div id="outline-container-org2c471c0" class="outline-3">
<h3 id="org2c471c0"><span class="section-number-3">3.3.</span> Configuración básica inicial</h3>
<div class="outline-text-3" id="text-3-3">
<p>
Emacs utiliza un archivo de configuración llamado `init.el` ubicado en el directorio `~/.emacs.d/` (en sistemas Unix/macOS) o `AppData\Roaming\.emacs.d\` (en Windows).
</p>

<p>
Aquí hay una configuración básica para empezar:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n b&#225;sica para Emacs y Org Mode</span>

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Interfaz de usuario</span>
(menu-bar-mode -1)                  <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Desactivar barra de men&#250;</span>
(tool-bar-mode -1)                  <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Desactivar barra de herramientas</span>
(scroll-bar-mode -1)                <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Desactivar barra de desplazamiento</span>
(global-display-line-numbers-mode)  <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Mostrar n&#250;meros de l&#237;nea</span>

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Comportamiento general</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> inhibit-startup-screen t)     <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Saltar pantalla de inicio</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> make-backup-files nil)        <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">No crear archivos de respaldo</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> auto-save-default nil)        <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">No crear archivos de auto-guardado</span>
(global-auto-revert-mode 1)         <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Actualizar buffer cuando el archivo cambia</span>

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n de Org Mode</span>
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">org</span>)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-startup-indented t)       <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Sangr&#237;a visual</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-startup-folded nil)       <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Mostrar todo el contenido al abrir</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-directory <span style="color: #a44185;">"~/org"</span>)        <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Directorio principal para archivos Org</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-default-notes-file <span style="color: #a44185;">"~/org/notes.org"</span>) <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Archivo predeterminado para notas</span>

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Atajos globales para Org Mode</span>
(global-set-key (kbd <span style="color: #a44185;">"C-c l"</span>) 'org-store-link)
(global-set-key (kbd <span style="color: #a44185;">"C-c a"</span>) 'org-agenda)
(global-set-key (kbd <span style="color: #a44185;">"C-c c"</span>) 'org-capture)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Sistema de paquetes</span>
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">package</span>)
(add-to-list 'package-archives '(<span style="color: #a44185;">"melpa"</span> . <span style="color: #a44185;">"https://melpa.org/packages/"</span>) t)
(package-initialize)
</pre>
</div>

<p>
Para usar esta configuración:
</p>

<ol class="org-ol">
<li>Crea el directorio `~/.emacs.d/` si no existe</li>
<li>Crea un archivo llamado `init.el` dentro de ese directorio</li>
<li>Copia el código anterior y pégalo en el archivo</li>
<li>Reinicia Emacs</li>
</ol>
</div>
</div>
<div id="outline-container-orga4d8b2b" class="outline-3">
<h3 id="orga4d8b2b"><span class="section-number-3">3.4.</span> Configurando el sistema de paquetes</h3>
<div class="outline-text-3" id="text-3-4">
<p>
Emacs incluye un gestor de paquetes que te permite instalar extensiones fácilmente:
</p>

<ol class="org-ol">
<li>Presiona `M-x` (Alt+x o Esc+x)</li>
<li>Escribe `package-refresh-contents` y presiona Enter</li>
<li>Para instalar un paquete:
<ul class="org-ul">
<li>Presiona `M-x`</li>
<li>Escribe `package-install` y presiona Enter</li>
<li>Escribe el nombre del paquete (e.g., `use-package`) y presiona Enter</li>
</ul></li>
</ol>
</div>
<div id="outline-container-org011fd90" class="outline-4">
<h4 id="org011fd90"><span class="section-number-4">3.4.1.</span> Uso de use-package</h4>
<div class="outline-text-4" id="text-3-4-1">
<p>
Para simplificar la configuración de paquetes, recomendamos instalar `use-package`:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Instalar use-package si no est&#225; instalado</span>
(<span style="color: #219fd5; font-style: italic;">unless</span> (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">use-package</span>)
(<span style="color: #219fd5; font-style: italic;">setq</span> use-package-always-ensure t)  <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Instalar autom&#225;ticamente paquetes si no est&#225;n presentes</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div id="outline-container-org628ad58" class="outline-2">
<h2 id="org628ad58"><span class="section-number-2">4.</span> Fundamentos de Emacs</h2>
<div class="outline-text-2" id="text-4">
</div>
<div id="outline-container-orgc517bff" class="outline-3">
<h3 id="orgc517bff"><span class="section-number-3">4.1.</span> Terminología esencial</h3>
<div class="outline-text-3" id="text-4-1">
<p>
Antes de avanzar, es importante familiarizarse con la terminología específica de Emacs:
</p>

<ul class="org-ul">
<li><b>Buffer</b>: Área de edición donde se visualiza y modifica el contenido de un archivo.</li>
<li><b>Frame</b>: Lo que otros programas llamarían "ventana" (la ventana completa de la aplicación).</li>
<li><b>Window</b>: División dentro de un frame (lo que otros programas llamarían "panel" o "split").</li>
<li><b>Point</b>: La posición actual del cursor.</li>
<li><b>Mark</b>: Una posición guardada en el buffer.</li>
<li><b>Region</b>: El texto entre point y mark.</li>
<li><b>Kill</b>: Cortar texto (eliminarlo y guardarlo en el kill ring).</li>
<li><b>Yank</b>: Pegar texto desde el kill ring.</li>
<li><b>Kill ring</b>: Equivalente al portapapeles, pero con historial.</li>
<li><b>Minibuffer</b>: Área en la parte inferior de la pantalla donde Emacs solicita entrada del usuario.</li>
<li><b>Mode line</b>: Barra de estado en la parte inferior de cada ventana.</li>
</ul>
</div>
</div>
<div id="outline-container-orga44393f" class="outline-3">
<h3 id="orga44393f"><span class="section-number-3">4.2.</span> Notación de teclas</h3>
<div class="outline-text-3" id="text-4-2">
<p>
Emacs utiliza una notación especial para describir combinaciones de teclas:
</p>

<ul class="org-ul">
<li>`C-x`: Presionar Ctrl y x simultáneamente</li>
<li>`M-x`: Presionar Alt (o Meta) y x simultáneamente, o Esc seguido de x</li>
<li>`C-x C-f`: Presionar Ctrl+x, seguido de Ctrl+f</li>
<li>`C-x k RET`: Presionar Ctrl+x, seguido de k, seguido de Enter (Return)</li>
</ul>
</div>
</div>
<div id="outline-container-org08c1be8" class="outline-3">
<h3 id="org08c1be8"><span class="section-number-3">4.3.</span> Comandos básicos de navegación</h3>
<div class="outline-text-3" id="text-4-3">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Atajo</th>
<th scope="col" class="org-left">Comando</th>
<th scope="col" class="org-left">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">`C-f`</td>
<td class="org-left">`forward-char`</td>
<td class="org-left">Mover cursor un carácter hacia adelante</td>
</tr>

<tr>
<td class="org-left">`C-b`</td>
<td class="org-left">`backward-char`</td>
<td class="org-left">Mover cursor un carácter hacia atrás</td>
</tr>

<tr>
<td class="org-left">`C-n`</td>
<td class="org-left">`next-line`</td>
<td class="org-left">Mover cursor a la siguiente línea</td>
</tr>

<tr>
<td class="org-left">`C-p`</td>
<td class="org-left">`previous-line`</td>
<td class="org-left">Mover cursor a la línea anterior</td>
</tr>

<tr>
<td class="org-left">`C-a`</td>
<td class="org-left">`move-beginning-of-line`</td>
<td class="org-left">Ir al principio de la línea actual</td>
</tr>

<tr>
<td class="org-left">`C-e`</td>
<td class="org-left">`move-end-of-line`</td>
<td class="org-left">Ir al final de la línea actual</td>
</tr>

<tr>
<td class="org-left">`M-f`</td>
<td class="org-left">`forward-word`</td>
<td class="org-left">Avanzar una palabra</td>
</tr>

<tr>
<td class="org-left">`M-b`</td>
<td class="org-left">`backward-word`</td>
<td class="org-left">Retroceder una palabra</td>
</tr>

<tr>
<td class="org-left">`M-a`</td>
<td class="org-left">`backward-sentence`</td>
<td class="org-left">Ir al principio de la oración actual</td>
</tr>

<tr>
<td class="org-left">`M-e`</td>
<td class="org-left">`forward-sentence`</td>
<td class="org-left">Ir al final de la oración actual</td>
</tr>

<tr>
<td class="org-left">`M-&lt;`</td>
<td class="org-left">`beginning-of-buffer`</td>
<td class="org-left">Ir al principio del buffer</td>
</tr>

<tr>
<td class="org-left">`M-&gt;`</td>
<td class="org-left">`end-of-buffer`</td>
<td class="org-left">Ir al final del buffer</td>
</tr>

<tr>
<td class="org-left">`C-v`</td>
<td class="org-left">`scroll-up-command`</td>
<td class="org-left">Avanzar una pantalla</td>
</tr>

<tr>
<td class="org-left">`M-v`</td>
<td class="org-left">`scroll-down-command`</td>
<td class="org-left">Retroceder una pantalla</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org3e6c2db" class="outline-3">
<h3 id="org3e6c2db"><span class="section-number-3">4.4.</span> Comandos básicos de edición</h3>
<div class="outline-text-3" id="text-4-4">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Atajo</th>
<th scope="col" class="org-left">Comando</th>
<th scope="col" class="org-left">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">`C-d`</td>
<td class="org-left">`delete-char`</td>
<td class="org-left">Eliminar carácter bajo el cursor</td>
</tr>

<tr>
<td class="org-left">`M-d`</td>
<td class="org-left">`kill-word`</td>
<td class="org-left">Eliminar palabra desde el cursor</td>
</tr>

<tr>
<td class="org-left">`C-k`</td>
<td class="org-left">`kill-line`</td>
<td class="org-left">Eliminar desde el cursor hasta el final de la línea</td>
</tr>

<tr>
<td class="org-left">`M-k`</td>
<td class="org-left">`kill-sentence`</td>
<td class="org-left">Eliminar oración desde el cursor</td>
</tr>

<tr>
<td class="org-left">`C-w`</td>
<td class="org-left">`kill-region`</td>
<td class="org-left">Cortar región seleccionada</td>
</tr>

<tr>
<td class="org-left">`M-w`</td>
<td class="org-left">`kill-ring-save`</td>
<td class="org-left">Copiar región seleccionada</td>
</tr>

<tr>
<td class="org-left">`C-y`</td>
<td class="org-left">`yank`</td>
<td class="org-left">Pegar (último texto cortado/copiado)</td>
</tr>

<tr>
<td class="org-left">`M-y`</td>
<td class="org-left">`yank-pop`</td>
<td class="org-left">Ciclar a través del historial del kill ring (después de `C-y`)</td>
</tr>

<tr>
<td class="org-left">`C-/`</td>
<td class="org-left">`undo`</td>
<td class="org-left">Deshacer último cambio</td>
</tr>

<tr>
<td class="org-left">`C-x u`</td>
<td class="org-left">`undo`</td>
<td class="org-left">Alternativa para deshacer</td>
</tr>

<tr>
<td class="org-left">`C-g`</td>
<td class="org-left">`keyboard-quit`</td>
<td class="org-left">Cancelar comando actual o área de selección</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org98dc6c6" class="outline-3">
<h3 id="org98dc6c6"><span class="section-number-3">4.5.</span> Gestión de archivos y buffers</h3>
<div class="outline-text-3" id="text-4-5">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Atajo</th>
<th scope="col" class="org-left">Comando</th>
<th scope="col" class="org-left">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">`C-x C-f`</td>
<td class="org-left">`find-file`</td>
<td class="org-left">Abrir archivo</td>
</tr>

<tr>
<td class="org-left">`C-x C-s`</td>
<td class="org-left">`save-buffer`</td>
<td class="org-left">Guardar archivo actual</td>
</tr>

<tr>
<td class="org-left">`C-x C-w`</td>
<td class="org-left">`write-file`</td>
<td class="org-left">Guardar como&#x2026;</td>
</tr>

<tr>
<td class="org-left">`C-x k`</td>
<td class="org-left">`kill-buffer`</td>
<td class="org-left">Cerrar buffer actual</td>
</tr>

<tr>
<td class="org-left">`C-x b`</td>
<td class="org-left">`switch-to-buffer`</td>
<td class="org-left">Cambiar a otro buffer</td>
</tr>

<tr>
<td class="org-left">`C-x C-b`</td>
<td class="org-left">`list-buffers`</td>
<td class="org-left">Listar todos los buffers</td>
</tr>

<tr>
<td class="org-left">`C-x C-c`</td>
<td class="org-left">`save-buffers-kill-terminal`</td>
<td class="org-left">Salir de Emacs</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org229c410" class="outline-3">
<h3 id="org229c410"><span class="section-number-3">4.6.</span> Gestión de ventanas y frames</h3>
<div class="outline-text-3" id="text-4-6">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Atajo</th>
<th scope="col" class="org-left">Comando</th>
<th scope="col" class="org-left">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">`C-x 0`</td>
<td class="org-left">`delete-window`</td>
<td class="org-left">Cerrar ventana actual</td>
</tr>

<tr>
<td class="org-left">`C-x 1`</td>
<td class="org-left">`delete-other-windows`</td>
<td class="org-left">Cerrar todas las ventanas excepto la actual</td>
</tr>

<tr>
<td class="org-left">`C-x 2`</td>
<td class="org-left">`split-window-below`</td>
<td class="org-left">Dividir ventana horizontalmente</td>
</tr>

<tr>
<td class="org-left">`C-x 3`</td>
<td class="org-left">`split-window-right`</td>
<td class="org-left">Dividir ventana verticalmente</td>
</tr>

<tr>
<td class="org-left">`C-x o`</td>
<td class="org-left">`other-window`</td>
<td class="org-left">Mover cursor a otra ventana</td>
</tr>

<tr>
<td class="org-left">`C-x 5 2`</td>
<td class="org-left">`make-frame`</td>
<td class="org-left">Crear un nuevo frame</td>
</tr>

<tr>
<td class="org-left">`C-x 5 0`</td>
<td class="org-left">`delete-frame`</td>
<td class="org-left">Cerrar frame actual</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-orgfd47c5f" class="outline-3">
<h3 id="orgfd47c5f"><span class="section-number-3">4.7.</span> Búsqueda y reemplazo</h3>
<div class="outline-text-3" id="text-4-7">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Atajo</th>
<th scope="col" class="org-left">Comando</th>
<th scope="col" class="org-left">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">`C-s`</td>
<td class="org-left">`isearch-forward`</td>
<td class="org-left">Búsqueda incremental hacia adelante</td>
</tr>

<tr>
<td class="org-left">`C-r`</td>
<td class="org-left">`isearch-backward`</td>
<td class="org-left">Búsqueda incremental hacia atrás</td>
</tr>

<tr>
<td class="org-left">`M-%`</td>
<td class="org-left">`query-replace`</td>
<td class="org-left">Buscar y reemplazar interactivo</td>
</tr>

<tr>
<td class="org-left">`C-M-s`</td>
<td class="org-left">`isearch-forward-regexp`</td>
<td class="org-left">Búsqueda con expresiones regulares hacia adelante</td>
</tr>

<tr>
<td class="org-left">`C-M-r`</td>
<td class="org-left">`isearch-backward-regexp`</td>
<td class="org-left">Búsqueda con expresiones regulares hacia atrás</td>
</tr>

<tr>
<td class="org-left">`C-M-%`</td>
<td class="org-left">`query-replace-regexp`</td>
<td class="org-left">Buscar y reemplazar con expresiones regulares</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-orged1ec81" class="outline-3">
<h3 id="orged1ec81"><span class="section-number-3">4.8.</span> Ayuda y documentación</h3>
<div class="outline-text-3" id="text-4-8">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Atajo</th>
<th scope="col" class="org-left">Comando</th>
<th scope="col" class="org-left">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">`C-h t`</td>
<td class="org-left">`help-with-tutorial`</td>
<td class="org-left">Abrir tutorial interactivo de Emacs</td>
</tr>

<tr>
<td class="org-left">`C-h k`</td>
<td class="org-left">`describe-key`</td>
<td class="org-left">Describir qué hace una combinación de teclas</td>
</tr>

<tr>
<td class="org-left">`C-h f`</td>
<td class="org-left">`describe-function`</td>
<td class="org-left">Describir una función</td>
</tr>

<tr>
<td class="org-left">`C-h v`</td>
<td class="org-left">`describe-variable`</td>
<td class="org-left">Describir una variable</td>
</tr>

<tr>
<td class="org-left">`C-h m`</td>
<td class="org-left">`describe-mode`</td>
<td class="org-left">Describir el modo actual y sus atajos</td>
</tr>

<tr>
<td class="org-left">`C-h a`</td>
<td class="org-left">`apropos-command`</td>
<td class="org-left">Buscar comandos por palabra clave</td>
</tr>

<tr>
<td class="org-left">`C-h i`</td>
<td class="org-left">`info`</td>
<td class="org-left">Abrir sistema de documentación Info</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org13ba31d" class="outline-3">
<h3 id="org13ba31d"><span class="section-number-3">4.9.</span> Diagrama: Estructura básica de Emacs</h3>
<div class="outline-text-3" id="text-4-9">

<figure id="org23e4201">
<img src="images/estructura_basica_emacs.png" alt="estructura_basica_emacs.png">

</figure>

<p>
<a href="images/estructura_basica_emacs.png">Ver imagen</a>
</p>
</div>
</div>
</div>
<div id="outline-container-org2c01e27" class="outline-2">
<h2 id="org2c01e27"><span class="section-number-2">5.</span> Dominando Org Mode</h2>
<div class="outline-text-2" id="text-5">
</div>
<div id="outline-container-org4aa309a" class="outline-3">
<h3 id="org4aa309a"><span class="section-number-3">5.1.</span> Fundamentos de Org Mode</h3>
<div class="outline-text-3" id="text-5-1">
<p>
Org Mode es un sistema de organización y toma de notas dentro de Emacs. Para activarlo:
</p>

<ol class="org-ol">
<li>Abre cualquier archivo con extensión `.org`</li>
<li>Alternativamente, ejecuta `M-x org-mode` para activarlo en cualquier buffer</li>
</ol>
</div>
<div id="outline-container-org92454da" class="outline-4">
<h4 id="org92454da"><span class="section-number-4">5.1.1.</span> Estructura básica de un documento Org</h4>
<div class="outline-text-4" id="text-5-1-1">
<p>
Un documento Org tiene la siguiente estructura:
</p>

<p>
#+BEGIN_EXAMPLE
</p>
</div>
</div>
</div>
</div>
<div id="outline-container-org2aa0595" class="outline-2">
<h2 id="org2aa0595"><span class="section-number-2">6.</span> Encabezado de primer nivel</h2>
<div class="outline-text-2" id="text-6">
</div>
<div id="outline-container-org98e6f40" class="outline-3">
<h3 id="org98e6f40"><span class="section-number-3">6.1.</span> Encabezado de segundo nivel</h3>
<div class="outline-text-3" id="text-6-1">
</div>
<div id="outline-container-org3391a25" class="outline-4">
<h4 id="org3391a25"><span class="section-number-4">6.1.1.</span> Encabezado de tercer nivel</h4>
<div class="outline-text-4" id="text-6-1-1">
</div>
<ul class="org-ul">
<li><a id="org12f0be5"></a>Encabezado de cuarto nivel<br>
<ul class="org-ul">
<li><a id="orga5b58aa"></a>Encabezado de quinto nivel<br>
<div class="outline-text-6" id="text-orga5b58aa">
<p>
Texto normal que forma parte del contenido.
</p>

<ul class="org-ul">
<li>Lista de viñetas</li>
<li>Otro elemento
<ul class="org-ul">
<li>Sub-elemento</li>
<li>Otro sub-elemento
<ul class="org-ul">
<li>Sub-sub-elemento</li>
</ul></li>
</ul></li>

<li>Lista numerada</li>
<li>Segundo elemento
a. Sub-elemento con letras
b. Otro sub-elemento</li>
</ul>

<p>
#+END_EXAMPLE
</p>
</div>
</li>
</ul>
</li>
</ul>
</div>
<div id="outline-container-org25ad511" class="outline-4">
<h4 id="org25ad511"><span class="section-number-4">6.1.2.</span> Navegación en documentos Org</h4>
<div class="outline-text-4" id="text-6-1-2">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Atajo</th>
<th scope="col" class="org-left">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">`TAB`</td>
<td class="org-left">Ciclar visibilidad del encabezado actual</td>
</tr>

<tr>
<td class="org-left">`S-TAB`</td>
<td class="org-left">Ciclar visibilidad global del documento</td>
</tr>

<tr>
<td class="org-left">`C-c C-n`</td>
<td class="org-left">Ir al siguiente encabezado</td>
</tr>

<tr>
<td class="org-left">`C-c C-p`</td>
<td class="org-left">Ir al encabezado anterior</td>
</tr>

<tr>
<td class="org-left">`C-c C-f`</td>
<td class="org-left">Ir al siguiente encabezado del mismo nivel</td>
</tr>

<tr>
<td class="org-left">`C-c C-b`</td>
<td class="org-left">Ir al encabezado anterior del mismo nivel</td>
</tr>

<tr>
<td class="org-left">`C-c C-u`</td>
<td class="org-left">Subir un nivel en la jerarquía de encabezados</td>
</tr>

<tr>
<td class="org-left">`C-c C-j`</td>
<td class="org-left">Saltar a un encabezado específico</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org77a86ba" class="outline-4">
<h4 id="org77a86ba"><span class="section-number-4">6.1.3.</span> Edición de la estructura</h4>
<div class="outline-text-4" id="text-6-1-3">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Atajo</th>
<th scope="col" class="org-left">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">`M-RET`</td>
<td class="org-left">Insertar nuevo encabezado/elemento</td>
</tr>

<tr>
<td class="org-left">`M-S-RET`</td>
<td class="org-left">Insertar nuevo TODO</td>
</tr>

<tr>
<td class="org-left">`M-left/right`</td>
<td class="org-left">Promover/degradar encabezado actual</td>
</tr>

<tr>
<td class="org-left">`M-up/down`</td>
<td class="org-left">Mover encabezado arriba/abajo</td>
</tr>

<tr>
<td class="org-left">`C-c *`</td>
<td class="org-left">Convertir línea normal en encabezado o viceversa</td>
</tr>

<tr>
<td class="org-left">`C-c C-w`</td>
<td class="org-left">Reubicar encabezado (con subárbol)</td>
</tr>

<tr>
<td class="org-left">`C-c C-x b`</td>
<td class="org-left">Mostrar solo el subárbol actual</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div id="outline-container-org6d44a63" class="outline-3">
<h3 id="org6d44a63"><span class="section-number-3">6.2.</span> Gestión de tareas y proyectos</h3>
<div class="outline-text-3" id="text-6-2">
</div>
<div id="outline-container-org655f968" class="outline-4">
<h4 id="org655f968"><span class="section-number-4">6.2.1.</span> Estados de TODO</h4>
<div class="outline-text-4" id="text-6-2-1">
<p>
Por defecto, Org Mode incluye los estados TODO y DONE:
</p>

<p>
#+BEGIN_EXAMPLE
</p>
</div>
</div>
</div>
</div>
<div id="outline-container-orga3c4bdc" class="outline-2">
<h2 id="orga3c4bdc"><span class="section-number-2">7.</span> <span class="todo TODO">TODO</span> Completar informe trimestral</h2>
</div>
<div id="outline-container-org53c05f6" class="outline-2">
<h2 id="org53c05f6"><span class="section-number-2">8.</span> <span class="done DONE">DONE</span> Enviar correo al equipo</h2>
<div class="outline-text-2" id="text-8">
<p>
#+END_EXAMPLE
</p>

<p>
Para cambiar el estado de una tarea:
</p>

<ol class="org-ol">
<li>Coloca el cursor sobre el encabezado de la tarea</li>
<li>Presiona `C-c C-t` o `S-left/right` para ciclar entre estados</li>
</ol>

<p>
Para personalizar los estados de TODO:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Secuencia b&#225;sica de estados</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-todo-keywords
      '((sequence <span style="color: #a44185;">"TODO(t)"</span> <span style="color: #a44185;">"IN-PROGRESS(p)"</span> <span style="color: #a44185;">"WAITING(w)"</span> <span style="color: #a44185;">"|"</span> <span style="color: #a44185;">"DONE(d)"</span> <span style="color: #a44185;">"CANCELLED(c)"</span>)))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Con colores personalizados</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-todo-keyword-faces
      '((<span style="color: #a44185;">"TODO"</span> . org-warning)
        (<span style="color: #a44185;">"IN-PROGRESS"</span> . <span style="color: #a44185;">"orange"</span>)
        (<span style="color: #a44185;">"WAITING"</span> . <span style="color: #a44185;">"purple"</span>)
        (<span style="color: #a44185;">"DONE"</span> . <span style="color: #a44185;">"green"</span>)
        (<span style="color: #a44185;">"CANCELLED"</span> . <span style="color: #a44185;">"gray"</span>)))
</pre>
</div>
</div>
<div id="outline-container-orgff3049f" class="outline-4">
<h4 id="orgff3049f"><span class="section-number-4">8.0.1.</span> Prioridades</h4>
<div class="outline-text-4" id="text-8-0-1">
<p>
Puedes asignar prioridades a las tareas:
</p>

<p>
#+BEGIN_EXAMPLE
</p>
</div>
</div>
</div>
<div id="outline-container-org4e7f8d8" class="outline-2">
<h2 id="org4e7f8d8"><span class="section-number-2">9.</span> <span class="todo TODO">TODO</span> Tarea crítica de alta prioridad</h2>
</div>
<div id="outline-container-orgf8ba5b3" class="outline-2">
<h2 id="orgf8ba5b3"><span class="section-number-2">10.</span> <span class="todo TODO">TODO</span> Tarea de prioridad media</h2>
</div>
<div id="outline-container-org18d8246" class="outline-2">
<h2 id="org18d8246"><span class="section-number-2">11.</span> <span class="todo TODO">TODO</span> Tarea de baja prioridad</h2>
<div class="outline-text-2" id="text-11">
<p>
#+END_EXAMPLE
</p>

<p>
Para cambiar la prioridad: `C-c ,`
</p>
</div>
<div id="outline-container-org3d201f1" class="outline-4">
<h4 id="org3d201f1"><span class="section-number-4">11.0.1.</span> Plazos y programación</h4>
<div class="outline-text-4" id="text-11-0-1">
<p>
Org Mode permite establecer fechas para tus tareas:
</p>

<p>
#+BEGIN_EXAMPLE
</p>
</div>
</div>
</div>
<div id="outline-container-orgdf5d093" class="outline-2">
<h2 id="orgdf5d093"><span class="section-number-2">12.</span> <span class="todo TODO">TODO</span> Completar proyecto</h2>
<div class="outline-text-2" id="text-12">
<p>
  SCHEDULED: <span class="timestamp-wrapper"><span class="timestamp">&lt;2025-04-28 lun&gt;</span></span>
#+END_EXAMPLE
</p>

<ul class="org-ul">
<li>`DEADLINE`: Fecha límite para completar la tarea</li>
<li>`SCHEDULED`: Fecha planificada para comenzar a trabajar en la tarea</li>
</ul>

<p>
Para establecer estas fechas:
</p>
<ul class="org-ul">
<li>`C-c C-d`: Establecer DEADLINE</li>
<li>`C-c C-s`: Establecer SCHEDULED</li>
</ul>
</div>
<div id="outline-container-orgab3c98f" class="outline-4">
<h4 id="orgab3c98f"><span class="section-number-4">12.0.1.</span> Propiedades y etiquetas</h4>
<div class="outline-text-4" id="text-12-0-1">
<p>
Las propiedades permiten añadir metadatos estructurados:
</p>

<p>
#+BEGIN_EXAMPLE
</p>
</div>
</div>
</div>
<div id="outline-container-org236dc14" class="outline-2">
<h2 id="org236dc14"><span class="section-number-2">13.</span> <span class="todo TODO">TODO</span> Escribir propuesta de proyecto</h2>
<div class="outline-text-2" id="text-13">
<p>
#+END_EXAMPLE
</p>

<p>
Las etiquetas ayudan a categorizar:
</p>

<p>
#+BEGIN_EXAMPLE
</p>
</div>
</div>
<div id="outline-container-orgcca17cb" class="outline-2">
<h2 id="orgcca17cb"><span class="section-number-2">14.</span> <span class="todo TODO">TODO</span> Actualizar sitio web&#xa0;&#xa0;&#xa0;<span class="tag"><span class="web">web</span>&#xa0;<span class="tecnolog_a">tecnología</span></span></h2>
</div>
<div id="outline-container-org838fbdb" class="outline-2">
<h2 id="org838fbdb"><span class="section-number-2">15.</span> <span class="todo TODO">TODO</span> Llamar al cliente Acme&#xa0;&#xa0;&#xa0;<span class="tag"><span class="tel_fono">teléfono</span>&#xa0;<span class="clientes">clientes</span></span></h2>
<div class="outline-text-2" id="text-15">
<p>
#+END_EXAMPLE
</p>

<p>
Para añadir etiquetas: `C-c C-q`
</p>
</div>
<div id="outline-container-orgb632dd7" class="outline-3">
<h3 id="orgb632dd7"><span class="section-number-3">15.1.</span> Agenda y organización</h3>
<div class="outline-text-3" id="text-15-1">
</div>
<div id="outline-container-org6d4365b" class="outline-4">
<h4 id="org6d4365b"><span class="section-number-4">15.1.1.</span> Configuración básica de agenda</h4>
<div class="outline-text-4" id="text-15-1-1">
<p>
Para usar la agenda, primero debes especificar qué archivos incluir:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">setq</span> org-agenda-files '(<span style="color: #a44185;">"~/org/trabajo.org"</span>
                         <span style="color: #a44185;">"~/org/personal.org"</span>
                         <span style="color: #a44185;">"~/org/proyectos.org"</span>))
</pre>
</div>

<p>
Para abrir la agenda: `C-c a`
</p>

<p>
Las vistas comunes de agenda son:
</p>
<ul class="org-ul">
<li>`a`: Vista semanal/diaria</li>
<li>`t`: Lista de tareas TODO</li>
<li>`m`: Coincidir con etiquetas/propiedades</li>
<li>`s`: Búsqueda por palabras clave</li>
</ul>
</div>
</div>
<div id="outline-container-orgcea93e7" class="outline-4">
<h4 id="orgcea93e7"><span class="section-number-4">15.1.2.</span> Vista personalizada de agenda</h4>
<div class="outline-text-4" id="text-15-1-2">
<p>
Puedes crear vistas personalizadas para la agenda:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">setq</span> org-agenda-custom-commands
      '((<span style="color: #a44185;">"p"</span> <span style="color: #a44185;">"Proyectos activos"</span>
         ((tags-todo <span style="color: #a44185;">"PROYECTO+ACTIVO"</span>)))
        (<span style="color: #a44185;">"w"</span> <span style="color: #a44185;">"Agenda laboral semanal"</span>
         ((agenda <span style="color: #a44185;">""</span> ((org-agenda-span 'week)
                      (org-agenda-tag-filter-preset '(<span style="color: #a44185;">"+trabajo"</span>))))
          (tags-todo <span style="color: #a44185;">"+trabajo-reuni&#243;n"</span>)))))
</pre>
</div>
</div>
</div>
<div id="outline-container-orgea119ba" class="outline-4">
<h4 id="orgea119ba"><span class="section-number-4">15.1.3.</span> Sistema de captura</h4>
<div class="outline-text-4" id="text-15-1-3">
<p>
Org Capture permite tomar notas rápidamente sin interrumpir el flujo de trabajo:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">setq</span> org-capture-templates
      '((<span style="color: #a44185;">"t"</span> <span style="color: #a44185;">"Tarea"</span> entry (file+headline <span style="color: #a44185;">"~/org/tareas.org"</span> <span style="color: #a44185;">"Tareas"</span>)
         <span style="color: #a44185;">"* TODO %?\n  %i\n  %a"</span>)
        (<span style="color: #a44185;">"n"</span> <span style="color: #a44185;">"Nota"</span> entry (file+datetree <span style="color: #a44185;">"~/org/notas.org"</span>)
         <span style="color: #a44185;">"* %?\n  %U\n  %i\n  %a"</span>)
        (<span style="color: #a44185;">"j"</span> <span style="color: #a44185;">"Diario"</span> entry (file+datetree <span style="color: #a44185;">"~/org/diario.org"</span>)
         <span style="color: #a44185;">"* %?\n  %U\n  %i"</span>)
        (<span style="color: #a44185;">"i"</span> <span style="color: #a44185;">"Idea"</span> entry (file+headline <span style="color: #a44185;">"~/org/ideas.org"</span> <span style="color: #a44185;">"Ideas"</span>)
         <span style="color: #a44185;">"* %? :IDEA:\n  %U"</span>)))
</pre>
</div>

<p>
Para capturar: `C-c c`
</p>
</div>
</div>
</div>
<div id="outline-container-org0de3c01" class="outline-3">
<h3 id="org0de3c01"><span class="section-number-3">15.2.</span> Toma de notas avanzada</h3>
<div class="outline-text-3" id="text-15-2">
</div>
<div id="outline-container-org661e244" class="outline-4">
<h4 id="org661e244"><span class="section-number-4">15.2.1.</span> Enlaces y referencias cruzadas</h4>
<div class="outline-text-4" id="text-15-2-1">
<p>
Org Mode tiene un potente sistema de enlaces:
</p>

<pre class="example" id="orgbd2513e">
[[https://gnu.org][Sitio de GNU]]  # Enlace externo
[[file:imagen.png]]               # Enlace a archivo
[[./documentos/informe.pdf]]     # Ruta relativa
[[#ID]]                          # Enlace a un ID en el documento
[[proyectos.org::*Proyecto X]]   # Enlace a un encabezado en otro archivo
</pre>

<p>
Para insertar un enlace: `C-c C-l`
Para seguir un enlace: `C-c C-o`
</p>
</div>
</div>
<div id="outline-container-orga9e2fa3" class="outline-4">
<h4 id="orga9e2fa3"><span class="section-number-4">15.2.2.</span> Listas de control (checklists)</h4>
<div class="outline-text-4" id="text-15-2-2">
<p>
Para tareas con subtareas:
</p>

<p>
#+BEGIN_EXAMPLE
</p>
</div>
</div>
</div>
</div>
<div id="outline-container-orge930472" class="outline-2">
<h2 id="orge930472"><span class="section-number-2">16.</span> <span class="todo TODO">TODO</span> Preparar presentación <code>[0/3]</code></h2>
<div class="outline-text-2" id="text-16">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Recopilar datos</li>
<li class="off"><code>[&#xa0;]</code> Crear diapositivas</li>
<li class="off"><code>[&#xa0;]</code> Ensayar presentación</li>
</ul>
<p>
#+END_EXAMPLE
</p>

<p>
Para marcar un elemento como completo: `C-c C-c`
</p>
</div>
<div id="outline-container-org0a24a27" class="outline-4">
<h4 id="org0a24a27"><span class="section-number-4">16.0.1.</span> Tablas y cálculos</h4>
<div class="outline-text-4" id="text-16-0-1">
<p>
Org Mode tiene un potente sistema de tablas con capacidades de hoja de cálculo:
</p>

<pre class="example" id="orga0b3cc7">
#+ATTR_HTML: :border 2 :rules all :frame border
| Nombre  | Horas | Tarifa | Total  |
|---------+-------+--------+--------|
| Juan    |    10 |     25 |    250 |
| María   |     8 |     30 |    240 |
| Carlos  |    12 |     20 |    240 |
|---------+-------+--------+--------|
| Total   |    30 |        |    730 |
#+TBLFM: @5$2=vsum(@2..@4$2)::@2$4=$2*$3::@3$4=$2*$3::@4$4=$2*$3::@5$4=vsum(@2..@4$4)
</pre>

<p>
Para crear una tabla: Comienza a escribir `|` y presiona TAB
</p>

<p>
Comandos útiles para tablas:
</p>
<ul class="org-ul">
<li>`TAB`: Navegar entre celdas</li>
<li>`RET`: Crear nueva fila</li>
<li>`M-left/right/up/down`: Mover columnas/filas</li>
<li>`C-c -`: Insertar línea horizontal</li>
<li>`C-c ^`: Ordenar tabla</li>
<li>`C-c *`: Recalcular fórmulas</li>
</ul>
</div>
</div>
<div id="outline-container-orge54423d" class="outline-4">
<h4 id="orge54423d"><span class="section-number-4">16.0.2.</span> Código fuente y bloques de código</h4>
<div class="outline-text-4" id="text-16-0-2">
<p>
Org Mode permite incluir bloques de código ejecutables:
</p>

<pre class="example" id="org37ca6c7">
#+BEGIN_SRC python :results output
def fibonacci(n):
    a, b = 0, 1
    for i in range(n):
        print(a, end=' ')
        a, b = b, a + b

fibonacci(10)
#+END_SRC

#+RESULTS:
: 0 1 1 2 3 5 8 13 21 34
</pre>

<p>
Para crear un bloque de código: `C-c C-,` o simplemente escribe `&lt;s` y presiona TAB
Para ejecutar un bloque de código: `C-c C-c` con el cursor dentro del bloque
</p>
</div>
</div>
<div id="outline-container-org0b75a9c" class="outline-4">
<h4 id="org0b75a9c"><span class="section-number-4">16.0.3.</span> Exportación y publicación</h4>
<div class="outline-text-4" id="text-16-0-3">
<p>
Org Mode puede exportar documentos a múltiples formatos:
</p>

<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Formato</th>
<th scope="col" class="org-left">Comando</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">HTML</td>
<td class="org-left">`C-c C-e h h`</td>
</tr>

<tr>
<td class="org-left">PDF (vía LaTeX)</td>
<td class="org-left">`C-c C-e l p`</td>
</tr>

<tr>
<td class="org-left">Markdown</td>
<td class="org-left">`C-c C-e m m`</td>
</tr>

<tr>
<td class="org-left">ASCII/Text</td>
<td class="org-left">`C-c C-e t a`</td>
</tr>

<tr>
<td class="org-left">ODT</td>
<td class="org-left">`C-c C-e o o`</td>
</tr>

<tr>
<td class="org-left">iCalendar</td>
<td class="org-left">`C-c C-e c c`</td>
</tr>

<tr>
<td class="org-left">LaTeX</td>
<td class="org-left">`C-c C-e l l`</td>
</tr>
</tbody>
</table>

<p>
Para personalizar la exportación, puedes usar opciones al principio del documento:
</p>

<pre class="example" id="org2ae13ac">
#+OPTIONS: toc:2 num:t ^:nil
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS: [a4paper,11pt]
#+LATEX_HEADER: \usepackage{xcolor}
#+HTML_HEAD: &lt;style&gt;body { max-width: 800px; margin: auto; }&lt;/style&gt;
</pre>
</div>
</div>
<div id="outline-container-orgfbea2de" class="outline-3">
<h3 id="orgfbea2de"><span class="section-number-3">16.1.</span> Diagrama: Estructura de Org Mode</h3>
<div class="outline-text-3" id="text-16-1">

<figure id="org8ac2b71">
<img src="images/estructura_org_mode.png" alt="estructura_org_mode.png" width="170%" class="sombra">

</figure>
</div>
</div>
</div>
<div id="outline-container-org9589fac" class="outline-2">
<h2 id="org9589fac"><span class="section-number-2">17.</span> Flujos de trabajo avanzados</h2>
<div class="outline-text-2" id="text-17">
</div>
<div id="outline-container-org6d60d1f" class="outline-3">
<h3 id="org6d60d1f"><span class="section-number-3">17.1.</span> Sistema GTD (Getting Things Done)</h3>
<div class="outline-text-3" id="text-17-1">
<p>
Org Mode es ideal para implementar el método GTD de David Allen:
</p>
</div>
<div id="outline-container-org6c09d6e" class="outline-4">
<h4 id="org6c09d6e"><span class="section-number-4">17.1.1.</span> Estructura de archivos</h4>
<div class="outline-text-4" id="text-17-1-1">
<pre class="example" id="org6798bd7">
~/org/
  ├── inbox.org      # Captura inicial de todo
  ├── gtd.org        # Tareas organizadas
  ├── someday.org    # Proyectos e ideas futuras
  ├── tickler.org    # Recordatorios cronológicos
  └── referencias.org # Material de referencia
</pre>
</div>
</div>
<div id="outline-container-org5d809d2" class="outline-4">
<h4 id="org5d809d2"><span class="section-number-4">17.1.2.</span> Configuración básica para GTD</h4>
<div class="outline-text-4" id="text-17-1-2">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Estados para el flujo GTD</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-todo-keywords
      '((sequence <span style="color: #a44185;">"TODO(t)"</span> <span style="color: #a44185;">"NEXT(n)"</span> <span style="color: #a44185;">"WAITING(w)"</span> <span style="color: #a44185;">"SOMEDAY(s)"</span> <span style="color: #a44185;">"|"</span> <span style="color: #a44185;">"DONE(d)"</span> <span style="color: #a44185;">"CANCELLED(c)"</span>)))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Archivos para agenda</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-agenda-files '(<span style="color: #a44185;">"~/org/inbox.org"</span> <span style="color: #a44185;">"~/org/gtd.org"</span> <span style="color: #a44185;">"~/org/tickler.org"</span>))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Plantillas de captura para GTD</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-capture-templates
      '((<span style="color: #a44185;">"t"</span> <span style="color: #a44185;">"Todo"</span> entry (file <span style="color: #a44185;">"~/org/inbox.org"</span>)
         <span style="color: #a44185;">"* TODO %?\n%i\n%U"</span>)
        (<span style="color: #a44185;">"n"</span> <span style="color: #a44185;">"Nota"</span> entry (file <span style="color: #a44185;">"~/org/inbox.org"</span>)
         <span style="color: #a44185;">"* %? :NOTE:\n%i\n%U"</span>)
        (<span style="color: #a44185;">"m"</span> <span style="color: #a44185;">"Reuni&#243;n"</span> entry (file <span style="color: #a44185;">"~/org/inbox.org"</span>)
         <span style="color: #a44185;">"* MEETING %? :MEETING:\n%i\n%U"</span>)
        (<span style="color: #a44185;">"r"</span> <span style="color: #a44185;">"Referencia"</span> entry (file <span style="color: #a44185;">"~/org/referencias.org"</span>)
         <span style="color: #a44185;">"* %? :REFERENCE:\n%i\n%U"</span>)
        (<span style="color: #a44185;">"s"</span> <span style="color: #a44185;">"Someday"</span> entry (file <span style="color: #a44185;">"~/org/someday.org"</span>)
         <span style="color: #a44185;">"* SOMEDAY %?\n%i\n%U"</span>)))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n de refiling para procesar la bandeja de entrada</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-refile-targets '((<span style="color: #a44185;">"~/org/gtd.org"</span> <span style="color: #dc3eb7;">:maxlevel</span> . 3)
                           (<span style="color: #a44185;">"~/org/someday.org"</span> <span style="color: #dc3eb7;">:level</span> . 1)
                           (<span style="color: #a44185;">"~/org/referencias.org"</span> <span style="color: #dc3eb7;">:level</span> . 1)
                           (<span style="color: #a44185;">"~/org/tickler.org"</span> <span style="color: #dc3eb7;">:maxlevel</span> . 2)))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Vistas personalizadas para GTD</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-agenda-custom-commands
      '((<span style="color: #a44185;">"g"</span> <span style="color: #a44185;">"Vista GTD"</span>
         ((agenda <span style="color: #a44185;">""</span> ((org-agenda-span 'day)
                      (org-agenda-skip-function '(org-agenda-skip-entry-if 'todo 'done))
                      (org-agenda-sorting-strategy '(time-up priority-down))))
          (todo <span style="color: #a44185;">"NEXT"</span>
                ((org-agenda-skip-function '(org-agenda-skip-entry-if 'scheduled))
                 (org-agenda-overriding-header <span style="color: #a44185;">"Pr&#243;ximas acciones:"</span>)))
          (todo <span style="color: #a44185;">"WAITING"</span>
                ((org-agenda-overriding-header <span style="color: #a44185;">"Esperando:"</span>)))
          (todo <span style="color: #a44185;">"TODO"</span>
                ((org-agenda-skip-function '(org-agenda-skip-entry-if 'scheduled))
                 (org-agenda-overriding-header <span style="color: #a44185;">"Tareas pendientes:"</span>)))))
        (<span style="color: #a44185;">"r"</span> <span style="color: #a44185;">"Revisi&#243;n semanal"</span>
         ((agenda <span style="color: #a44185;">""</span> ((org-agenda-span 'week)
                      (org-agenda-start-on-weekday 1)
                      (org-agenda-start-with-log-mode t)))
          (stuck <span style="color: #a44185;">""</span>)
          (todo <span style="color: #a44185;">"SOMEDAY"</span>
                ((org-agenda-overriding-header <span style="color: #a44185;">"Proyectos futuros:"</span>)))))))
</pre>
</div>
</div>
</div>
<div id="outline-container-orge6a30c7" class="outline-4">
<h4 id="orge6a30c7"><span class="section-number-4">17.1.3.</span> Flujo de trabajo GTD en Org Mode</h4>
<div class="outline-text-4" id="text-17-1-3">
<ol class="org-ol">
<li><b>Capturar</b>: Usa `C-c c` para añadir cualquier información a `inbox.org`</li>
<li><b>Procesar</b>: Regularmente revisa `inbox.org` y decide qué hacer con cada ítem:
<ul class="org-ul">
<li>Si es accionable y toma menos de 2 minutos, hazlo ahora</li>
<li>Si es accionable pero toma más tiempo, conviértelo en un TODO</li>
<li>Si no es accionable, archívalo en referencias o someday</li>
</ul></li>
<li><b>Organizar</b>: Usa `C-c C-w` (refile) para mover elementos a donde pertenecen</li>
<li><b>Revisar</b>: Usa la vista de agenda para revisar regularmente tus tareas</li>
<li><b>Hacer</b>: Usa la vista "Próximas acciones" para decidir qué hacer ahora</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-orga94586b" class="outline-3">
<h3 id="orga94586b"><span class="section-number-3">17.2.</span> Zettelkasten para gestión de conocimiento</h3>
<div class="outline-text-3" id="text-17-2">
<p>
El método Zettelkasten es un sistema de toma de notas interconectadas:
</p>
</div>
<div id="outline-container-orga35ba14" class="outline-4">
<h4 id="orga35ba14"><span class="section-number-4">17.2.1.</span> Configuración básica</h4>
<div class="outline-text-4" id="text-17-2-1">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Directorio para notas Zettelkasten</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-zettelkasten-directory <span style="color: #a44185;">"~/org/zettelkasten/"</span>)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Plantilla para nueva nota</span>
(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">org-zettelkasten-new-note</span> ()
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (<span style="color: #219fd5; font-style: italic;">let</span> ((title (read-string <span style="color: #a44185;">"T&#237;tulo de la nota: "</span>)))
    (<span style="color: #219fd5; font-style: italic;">let</span> ((file (concat org-zettelkasten-directory
                        (format-time-string <span style="color: #a44185;">"%Y%m%d%H%M"</span>)
                        <span style="color: #a44185;">"-"</span>
                        (replace-regexp-in-string <span style="color: #a44185;">" "</span> <span style="color: #a44185;">"_"</span> (downcase title))
                        <span style="color: #a44185;">".org"</span>)))
      (find-file file)
      (insert (format <span style="color: #a44185;">"#+TITLE: %s\n#+DATE: %s\n#+FILETAGS: \n\n"</span> 
                      title 
                      (format-time-string <span style="color: #a44185;">"[%Y-%m-%d %a %H:%M]"</span>)))
      (save-buffer))))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Atajo global para crear nueva nota</span>
(global-set-key (kbd <span style="color: #a44185;">"C-c z n"</span>) 'org-zettelkasten-new-note)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para buscar notas</span>
(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">org-zettelkasten-find-note</span> ()
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (<span style="color: #219fd5; font-style: italic;">let</span> ((default-directory org-zettelkasten-directory))
    (call-interactively 'find-file)))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Atajo global para buscar notas</span>
(global-set-key (kbd <span style="color: #a44185;">"C-c z f"</span>) 'org-zettelkasten-find-note)
</pre>
</div>
</div>
</div>
<div id="outline-container-org4e87b47" class="outline-4">
<h4 id="org4e87b47"><span class="section-number-4">17.2.2.</span> Uso con org-roam</h4>
<div class="outline-text-4" id="text-17-2-2">
<p>
Para una implementación más completa, puedes usar `org-roam`:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n b&#225;sica de org-roam</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org-roam</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:hook</span>
  (after-init . org-roam-mode)
  <span style="color: #dc3eb7;">:custom</span>
  (org-roam-directory <span style="color: #a44185;">"~/org/roam"</span>)
  <span style="color: #dc3eb7;">:bind</span> (<span style="color: #dc3eb7;">:map</span> org-roam-mode-map
              ((<span style="color: #a44185;">"C-c n l"</span> . org-roam)
               (<span style="color: #a44185;">"C-c n f"</span> . org-roam-find-file)
               (<span style="color: #a44185;">"C-c n g"</span> . org-roam-graph))
              <span style="color: #dc3eb7;">:map</span> org-mode-map
              ((<span style="color: #a44185;">"C-c n i"</span> . org-roam-insert))
              ((<span style="color: #a44185;">"C-c n I"</span> . org-roam-insert-immediate))))
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf756f41" class="outline-4">
<h4 id="orgf756f41"><span class="section-number-4">17.2.3.</span> Principios de Zettelkasten en Org Mode</h4>
<div class="outline-text-4" id="text-17-2-3">
<ol class="org-ol">
<li><b>Atomicidad</b>: Cada nota aborda un solo concepto</li>
<li><b>Autonomía</b>: Cada nota es comprensible por sí misma</li>
<li><b>Vinculación</b>: Las notas se conectan entre sí mediante enlaces</li>
<li><b>Explicación</b>: Los enlaces explican por qué se conectan dos notas</li>
<li><b>Indexación</b>: Usa notas de índice para agrupar temáticamente</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-orgf27e49a" class="outline-3">
<h3 id="orgf27e49a"><span class="section-number-3">17.3.</span> Gestión de proyectos y tareas</h3>
<div class="outline-text-3" id="text-17-3">
</div>
<div id="outline-container-orgfd12f3e" class="outline-4">
<h4 id="orgfd12f3e"><span class="section-number-4">17.3.1.</span> Tareas recurrentes</h4>
<div class="outline-text-4" id="text-17-3-1">
<p>
Org Mode permite definir tareas que se repiten automáticamente después de completarlas:
</p>

<p>
#+BEGIN_EXAMPLE
</p>
</div>
</div>
</div>
</div>
<div id="outline-container-org50b5ec5" class="outline-2">
<h2 id="org50b5ec5"><span class="section-number-2">18.</span> <span class="todo TODO">TODO</span> Revisar correo electrónico</h2>
<div class="outline-text-2" id="text-18">
</div>
</div>
<div id="outline-container-org278a367" class="outline-2">
<h2 id="org278a367"><span class="section-number-2">19.</span> <span class="todo TODO">TODO</span> Reunión semanal de equipo</h2>
<div class="outline-text-2" id="text-19">
</div>
</div>
<div id="outline-container-org38c24a8" class="outline-2">
<h2 id="org38c24a8"><span class="section-number-2">20.</span> <span class="todo TODO">TODO</span> Pago de servicios</h2>
<div class="outline-text-2" id="text-20">
<p>
#+END_EXAMPLE
</p>

<p>
Marcadores de repetición:
</p>
<ul class="org-ul">
<li>`.+1d`: Repetir cada día después de completar</li>
<li>`++1w`: Repetir cada semana en el mismo día</li>
<li>`+1m`: Repetir cada mes en la misma fecha</li>
</ul>
</div>
<div id="outline-container-org23b002e" class="outline-4">
<h4 id="org23b002e"><span class="section-number-4">20.0.1.</span> Hábitos</h4>
<div class="outline-text-4" id="text-20-0-1">
<p>
Para seguimiento de hábitos, puedes usar `org-habit`:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">org-habit</span>)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-habit-graph-column 40)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-habit-show-habits-only-for-today t)
</pre>
</div>

<p>
Ejemplo de hábito:
</p>

<p>
#+BEGIN_EXAMPLE
</p>
</div>
</div>
</div>
<div id="outline-container-orga54d72c" class="outline-2">
<h2 id="orga54d72c"><span class="section-number-2">21.</span> <span class="todo TODO">TODO</span> Ejercicio diario</h2>
<div class="outline-text-2" id="text-21">
<p>
#+END_EXAMPLE
</p>
</div>
<div id="outline-container-org4b4e3c2" class="outline-4">
<h4 id="org4b4e3c2"><span class="section-number-4">21.0.1.</span> Seguimiento de tiempo</h4>
<div class="outline-text-4" id="text-21-0-1">
<p>
Org Mode permite registrar el tiempo dedicado a tareas:
</p>

<p>
Para iniciar el reloj: `C-c C-x C-i`
Para detener el reloj: `C-c C-x C-o`
Para ver informe de tiempo: `C-c C-x C-r`
</p>

<p>
Configuración para seguimiento de tiempo:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Formato para informe de tiempo</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-clock-report-include-clocks t)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-agenda-start-with-clockreport-mode t)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-clock-persist t)
(org-clock-persistence-insinuate)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Guardar &#250;ltima tarea en la que se trabaj&#243;</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-clock-persist 'history)
</pre>
</div>
</div>
</div>
<div id="outline-container-orgc06e2e6" class="outline-3">
<h3 id="orgc06e2e6"><span class="section-number-3">21.1.</span> Integración con correo electrónico</h3>
<div class="outline-text-3" id="text-21-1">
<p>
Org Mode puede integrarse con el correo electrónico para una gestión eficiente:
</p>
</div>
<div id="outline-container-org36e9ee5" class="outline-4">
<h4 id="org36e9ee5"><span class="section-number-4">21.1.1.</span> Configuración con mu4e</h4>
<div class="outline-text-4" id="text-21-1-1">
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">mu4e</span>
  <span style="color: #dc3eb7;">:ensure</span> nil
  <span style="color: #dc3eb7;">:config</span>
  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Integraci&#243;n con Org Mode</span>
  (<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">org-mu4e</span>)

  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Guardar enlaces a correos electr&#243;nicos</span>
  (org-link-set-parameters <span style="color: #a44185;">"mu4e"</span>
                          <span style="color: #dc3eb7;">:follow</span> #'org-mu4e-open
                          <span style="color: #dc3eb7;">:store</span> #'org-mu4e-store-link)

  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Capturar correos electr&#243;nicos como tareas</span>
  (add-to-list 'org-capture-templates
             '(<span style="color: #a44185;">"e"</span> <span style="color: #a44185;">"Email"</span> entry (file+headline <span style="color: #a44185;">"~/org/inbox.org"</span> <span style="color: #a44185;">"Correos"</span>)
               <span style="color: #a44185;">"* TODO %?\nENLACE: %a\n %i"</span>))

  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Convertir correos en tareas</span>
  (define-key mu4e-headers-mode-map (kbd <span style="color: #a44185;">"C-c c"</span>) 'org-mu4e-store-and-capture)
  (define-key mu4e-view-mode-map (kbd <span style="color: #a44185;">"C-c c"</span>) 'org-mu4e-store-and-capture))
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org0d9c8c7" class="outline-3">
<h3 id="org0d9c8c7"><span class="section-number-3">21.2.</span> Publicación en la web</h3>
<div class="outline-text-3" id="text-21-2">
<p>
Org Mode permite crear sitios web completos:
</p>
</div>
<div id="outline-container-orgff4d67d" class="outline-4">
<h4 id="orgff4d67d"><span class="section-number-4">21.2.1.</span> Configuración básica de org-publish</h4>
<div class="outline-text-4" id="text-21-2-1">
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">ox-publish</span>)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-publish-project-alist
      '((<span style="color: #a44185;">"sitio-web"</span>
         <span style="color: #dc3eb7;">:base-directory</span> <span style="color: #a44185;">"~/org/sitio/"</span>
         <span style="color: #dc3eb7;">:base-extension</span> <span style="color: #a44185;">"org"</span>
         <span style="color: #dc3eb7;">:publishing-directory</span> <span style="color: #a44185;">"~/public_html/"</span>
         <span style="color: #dc3eb7;">:recursive</span> t
         <span style="color: #dc3eb7;">:publishing-function</span> org-html-publish-to-html
         <span style="color: #dc3eb7;">:headline-levels</span> 4
         <span style="color: #dc3eb7;">:auto-preamble</span> t
         <span style="color: #dc3eb7;">:auto-sitemap</span> t
         <span style="color: #dc3eb7;">:sitemap-title</span> <span style="color: #a44185;">"Mi Sitio Web"</span>)
        (<span style="color: #a44185;">"sitio-web-static"</span>
         <span style="color: #dc3eb7;">:base-directory</span> <span style="color: #a44185;">"~/org/sitio/static/"</span>
         <span style="color: #dc3eb7;">:base-extension</span> <span style="color: #a44185;">"css</span><span style="color: #219fd5; font-weight: bold;">\\</span><span style="color: #219fd5; font-weight: bold;">|</span><span style="color: #a44185;">js</span><span style="color: #219fd5; font-weight: bold;">\\</span><span style="color: #219fd5; font-weight: bold;">|</span><span style="color: #a44185;">png</span><span style="color: #219fd5; font-weight: bold;">\\</span><span style="color: #219fd5; font-weight: bold;">|</span><span style="color: #a44185;">jpg</span><span style="color: #219fd5; font-weight: bold;">\\</span><span style="color: #219fd5; font-weight: bold;">|</span><span style="color: #a44185;">gif"</span>
         <span style="color: #dc3eb7;">:publishing-directory</span> <span style="color: #a44185;">"~/public_html/static/"</span>
         <span style="color: #dc3eb7;">:recursive</span> t
         <span style="color: #dc3eb7;">:publishing-function</span> org-publish-attachment)
        (<span style="color: #a44185;">"sitio-web-completo"</span>
         <span style="color: #dc3eb7;">:components</span> (<span style="color: #a44185;">"sitio-web"</span> <span style="color: #a44185;">"sitio-web-static"</span>))))
</pre>
</div>

<p>
Para publicar el sitio: `M-x org-publish` y selecciona "sitio-web-completo"
</p>
</div>
</div>
</div>
</div>
<div id="outline-container-orgeec2ded" class="outline-2">
<h2 id="orgeec2ded"><span class="section-number-2">22.</span> Extensiones y personalización</h2>
<div class="outline-text-2" id="text-22">
</div>
<div id="outline-container-org0599a23" class="outline-3">
<h3 id="org0599a23"><span class="section-number-3">22.1.</span> Paquetes esenciales para Org Mode</h3>
<div class="outline-text-3" id="text-22-1">
<p>
Estos paquetes complementan la funcionalidad de Org Mode:
</p>
</div>
<div id="outline-container-org652c03c" class="outline-4">
<h4 id="org652c03c"><span class="section-number-4">22.1.1.</span> org-bullets</h4>
<div class="outline-text-4" id="text-22-1-1">
<p>
Mejora la visualización de los encabezados con Unicode:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org-bullets</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:hook</span> (org-mode . org-bullets-mode))
</pre>
</div>
</div>
</div>
<div id="outline-container-org1bc9fae" class="outline-4">
<h4 id="org1bc9fae"><span class="section-number-4">22.1.2.</span> org-super-agenda</h4>
<div class="outline-text-4" id="text-22-1-2">
<p>
Agrupa elementos en la agenda para mejor visualización:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org-super-agenda</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (org-super-agenda-mode)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-super-agenda-groups
        '((<span style="color: #dc3eb7;">:name</span> <span style="color: #a44185;">"Importantes"</span>
                 <span style="color: #dc3eb7;">:priority</span> <span style="color: #a44185;">"A"</span>)
          (<span style="color: #dc3eb7;">:name</span> <span style="color: #a44185;">"Trabajo"</span>
                 <span style="color: #dc3eb7;">:tag</span> <span style="color: #a44185;">"trabajo"</span>)
          (<span style="color: #dc3eb7;">:name</span> <span style="color: #a44185;">"Urgentes"</span>
                 <span style="color: #dc3eb7;">:deadline</span> today)
          (<span style="color: #dc3eb7;">:name</span> <span style="color: #a44185;">"Pr&#243;ximas tareas"</span>
                 <span style="color: #dc3eb7;">:todo</span> <span style="color: #a44185;">"NEXT"</span>)
          (<span style="color: #dc3eb7;">:name</span> <span style="color: #a44185;">"Esperando"</span>
                 <span style="color: #dc3eb7;">:todo</span> <span style="color: #a44185;">"WAITING"</span>))))
</pre>
</div>
</div>
</div>
<div id="outline-container-org92ab476" class="outline-4">
<h4 id="org92ab476"><span class="section-number-4">22.1.3.</span> org-download</h4>
<div class="outline-text-4" id="text-22-1-3">
<p>
Permite insertar imágenes fácilmente en documentos Org:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org-download</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:after</span> org
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-download-method 'directory)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-download-image-dir <span style="color: #a44185;">"~/org/images"</span>)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-download-heading-lvl nil)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-download-timestamp <span style="color: #a44185;">"%Y%m%d-%H%M%S_"</span>)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-image-actual-width 400))
</pre>
</div>
</div>
</div>
<div id="outline-container-org199120d" class="outline-4">
<h4 id="org199120d"><span class="section-number-4">22.1.4.</span> org-noter</h4>
<div class="outline-text-4" id="text-22-1-4">
<p>
Para tomar notas mientras lees documentos PDF:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org-noter</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-noter-notes-search-path '(<span style="color: #a44185;">"~/org/notas"</span>))
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-noter-separate-notes-from-heading t))
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org8fab220" class="outline-3">
<h3 id="org8fab220"><span class="section-number-3">22.2.</span> Temas y personalización visual</h3>
<div class="outline-text-3" id="text-22-2">
</div>
<div id="outline-container-org9fa2545" class="outline-4">
<h4 id="org9fa2545"><span class="section-number-4">22.2.1.</span> Temas populares</h4>
<div class="outline-text-4" id="text-22-2-1">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Doom Themes - conjunto de temas modernos</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">doom-themes</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (load-theme 'doom-one t)
  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configurar org-mode espec&#237;ficamente</span>
  (doom-themes-org-config))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Modus Themes - temas accesibles incluidos en Emacs</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">modus-themes</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (load-theme 'modus-operandi t)) <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Tema claro, usa modus-vivendi para oscuro</span>

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Spacemacs Theme</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">spacemacs-theme</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:defer</span> t
  <span style="color: #dc3eb7;">:init</span>
  (load-theme 'spacemacs-dark t))
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf4ae1b1" class="outline-4">
<h4 id="orgf4ae1b1"><span class="section-number-4">22.2.2.</span> Personalización de fuentes</h4>
<div class="outline-text-4" id="text-22-2-2">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Establecer fuentes para diferentes contextos</span>
(set-face-attribute 'default nil <span style="color: #dc3eb7;">:font</span> <span style="color: #a44185;">"JetBrains Mono-12"</span>)
(set-face-attribute 'variable-pitch nil <span style="color: #dc3eb7;">:font</span> <span style="color: #a44185;">"Cantarell-12"</span>)
(set-face-attribute 'fixed-pitch nil <span style="color: #dc3eb7;">:font</span> <span style="color: #a44185;">"JetBrains Mono-12"</span>)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Mejorar la visualizaci&#243;n de Org Mode</span>
(add-hook 'org-mode-hook 'variable-pitch-mode)
(add-hook 'org-mode-hook 'visual-line-mode)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Mantener fuente monoespaciada en ciertos elementos</span>
(set-face-attribute 'org-block nil <span style="color: #dc3eb7;">:inherit</span> 'fixed-pitch)
(set-face-attribute 'org-code nil <span style="color: #dc3eb7;">:inherit</span> 'fixed-pitch)
(set-face-attribute 'org-table nil <span style="color: #dc3eb7;">:inherit</span> 'fixed-pitch)
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org6f10893" class="outline-3">
<h3 id="org6f10893"><span class="section-number-3">22.3.</span> Gestión avanzada de configuraciones</h3>
<div class="outline-text-3" id="text-22-3">
</div>
<div id="outline-container-orgdd60966" class="outline-4">
<h4 id="orgdd60966"><span class="section-number-4">22.3.1.</span> use-package</h4>
<div class="outline-text-4" id="text-22-3-1">
<p>
Para mantener tu configuración de Emacs organizada:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Instalaci&#243;n de use-package</span>
(<span style="color: #219fd5; font-style: italic;">unless</span> (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">use-package</span>)
(<span style="color: #219fd5; font-style: italic;">setq</span> use-package-always-ensure t)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Ejemplo de uso</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:bind</span> ((<span style="color: #a44185;">"C-c a"</span> . org-agenda)
         (<span style="color: #a44185;">"C-c c"</span> . org-capture)
         (<span style="color: #a44185;">"C-c l"</span> . org-store-link))
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-agenda-files '(<span style="color: #a44185;">"~/org/agenda.org"</span>))
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-default-notes-file <span style="color: #a44185;">"~/org/notes.org"</span>))
</pre>
</div>
</div>
</div>
<div id="outline-container-org8119aa3" class="outline-4">
<h4 id="org8119aa3"><span class="section-number-4">22.3.2.</span> Organización por archivos</h4>
<div class="outline-text-4" id="text-22-3-2">
<p>
Una estructura recomendada para configuración de Emacs:
</p>

<pre class="example" id="org24efcbd">
~/.emacs.d/
  ├── init.el           # Archivo principal
  ├── early-init.el     # Configuración temprana (Emacs 27+)
  ├── custom.el         # Personalizaciones generadas por customize
  └── lisp/             # Carpeta para módulos propios
      ├── init-core.el  # Configuración básica
      ├── init-ui.el    # Interfaz de usuario
      ├── init-org.el   # Configuración Org Mode
      └── init-dev.el   # Herramientas de desarrollo
</pre>

<p>
Ejemplo de init.el para cargar módulos:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Establecer directorio lisp</span>
(add-to-list 'load-path (expand-file-name <span style="color: #a44185;">"lisp"</span> user-emacs-directory))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Cargar m&#243;dulos</span>
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">init-core</span>)
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">init-ui</span>)
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">init-org</span>)
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">init-dev</span>)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Cargar personalizaciones externas</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> custom-file (expand-file-name <span style="color: #a44185;">"custom.el"</span> user-emacs-directory))
(<span style="color: #219fd5; font-style: italic;">when</span> (file-exists-p custom-file)
  (load custom-file))
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org6fad6b7" class="outline-3">
<h3 id="org6fad6b7"><span class="section-number-3">22.4.</span> Productividad con pequeñas mejoras</h3>
<div class="outline-text-3" id="text-22-4">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Mejorar la funci&#243;n de auto-completado</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">company</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:hook</span> (after-init . global-company-mode)
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> company-idle-delay 0.1)
  (<span style="color: #219fd5; font-style: italic;">setq</span> company-minimum-prefix-length 1))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Mejorar b&#250;squeda/selecci&#243;n</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">ivy</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (ivy-mode 1)
  (<span style="color: #219fd5; font-style: italic;">setq</span> ivy-use-virtual-buffers t)
  (<span style="color: #219fd5; font-style: italic;">setq</span> enable-recursive-minibuffers t))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Ayuda con comandos</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">which-key</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (which-key-mode))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Acceso r&#225;pido a archivos recientes</span>
(recentf-mode 1)
(<span style="color: #219fd5; font-style: italic;">setq</span> recentf-max-menu-items 25)
(global-set-key <span style="color: #a44185;">"\C-x\ \C-r"</span> 'recentf-open-files)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Atajos globales &#250;tiles</span>
(global-set-key (kbd <span style="color: #a44185;">"&lt;f5&gt;"</span>) 'revert-buffer)
(global-set-key (kbd <span style="color: #a44185;">"C-c r"</span>) 'replace-string)
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org971f369" class="outline-2">
<h2 id="org971f369"><span class="section-number-2">23.</span> Solución de problemas comunes</h2>
<div class="outline-text-2" id="text-23">
</div>
<div id="outline-container-orged54be1" class="outline-3">
<h3 id="orged54be1"><span class="section-number-3">23.1.</span> Problemas de rendimiento</h3>
<div class="outline-text-3" id="text-23-1">
<p>
Si Emacs se vuelve lento:
</p>

<ol class="org-ol">
<li><b>Diagnóstico</b>: Usa `M-x profiler-start` y `M-x profiler-report` para identificar cuellos de botella</li>
<li><b>Reducir paquetes</b>: Deshabilita paquetes que no uses frecuentemente</li>
<li><b>Archivos Org grandes</b>: Divide archivos muy grandes en varios más pequeños</li>
<li><b>Org Agenda lenta</b>: Reduce cantidad de archivos en `org-agenda-files`</li>
<li><b>Inicio lento</b>: Usa `use-package` con `:defer t` para cargar paquetes solo cuando se necesiten</li>
</ol>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Mejorar rendimiento con GC</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> gc-cons-threshold 100000000) <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">100 MB</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> read-process-output-max (* 1024 1024)) <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">1 MB</span>

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Acelerar Org Mode</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-agenda-dim-blocked-tasks nil)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-agenda-inhibit-startup t)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Optimizar para archivos grandes</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">so-long</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (global-so-long-mode 1))
</pre>
</div>
</div>
</div>
<div id="outline-container-org66efd91" class="outline-3">
<h3 id="org66efd91"><span class="section-number-3">23.2.</span> Problemas de exportación</h3>
<div class="outline-text-3" id="text-23-2">
<p>
Para resolver problemas al exportar documentos:
</p>

<ol class="org-ol">
<li><b>Dependencias</b>: Asegúrate de tener instaladas las dependencias necesarias (LaTeX, Pandoc, etc.)</li>
<li><b>Errores de sintaxis</b>: Verifica la sintaxis del documento con `M-x org-lint`</li>
<li><b>Problemas con LaTeX</b>: Usa `C-c C-e l L` para exportar a LaTeX y ver errores específicos</li>
<li><b>Caracteres especiales</b>: Usa `#+LATEX_HEADER: \usepackage[utf8]{inputenc}` para UTF-8</li>
</ol>
</div>
</div>
<div id="outline-container-org14a62b1" class="outline-3">
<h3 id="org14a62b1"><span class="section-number-3">23.3.</span> Errores en Org Mode</h3>
<div class="outline-text-3" id="text-23-3">
<p>
Soluciones a problemas comunes:
</p>

<ol class="org-ol">
<li><b>Tareas no aparecen en agenda</b>: Verifica que el archivo esté en `org-agenda-files`</li>
<li><b>Problemas de indentación</b>: Usa `org-indent-mode` o `M-x org-indent-region`</li>
<li><b>Enlaces que no funcionan</b>: Verifica la sintaxis ``</li>
<li><b>Bloques de código no se ejecutan</b>: Verifica que hayas cargado el lenguaje en `org-babel-load-languages`</li>
</ol>
</div>
</div>
<div id="outline-container-org920c0e4" class="outline-3">
<h3 id="org920c0e4"><span class="section-number-3">23.4.</span> Problemas de compatibilidad</h3>
<div class="outline-text-3" id="text-23-4">
<p>
Para problemas entre versiones o sistemas:
</p>

<ol class="org-ol">
<li><b>Distintas versiones de Emacs</b>: Usa condicionales en tu configuración
```emacs-lisp
(when (&gt;= emacs-major-version 27)
  ;; Código específico para Emacs 27+
  )
```</li>
<li><b>Distintos sistemas operativos</b>:
```emacs-lisp
(cond ((eq system-type 'windows-nt)
       ;; Configuración para Windows
       )
      ((eq system-type 'darwin)
       ;; Configuración para macOS
       )
      ((eq system-type 'gnu/linux)
       ;; Configuración para Linux
       ))
```</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-org8887017" class="outline-2">
<h2 id="org8887017"><span class="section-number-2">24.</span> Diagrama: Jerarquía de conceptos en Emacs y Org Mode</h2>
<div class="outline-text-2" id="text-24">
<p>
#+BEGIN_SRC plantuml
@startmindmap
skinparam backgroundColor #EEEBDC
skinparam handwritten true
</p>
</div>
</div>
<div id="outline-container-orgaeaaef8" class="outline-2">
<h2 id="orgaeaaef8"><span class="section-number-2">25.</span> Emacs + Org Mode</h2>
<div class="outline-text-2" id="text-25">
</div>
<div id="outline-container-org8dfe05b" class="outline-3">
<h3 id="org8dfe05b"><span class="section-number-3">25.1.</span> Fundamentos de Emacs</h3>
<div class="outline-text-3" id="text-25-1">
</div>
<div id="outline-container-orgce2e95b" class="outline-4">
<h4 id="orgce2e95b"><span class="section-number-4">25.1.1.</span> Terminología</h4>
<div class="outline-text-4" id="text-25-1-1">
</div>
<ul class="org-ul">
<li><a id="org9cbdb52"></a>Buffers<br></li>
<li><a id="org975a4e1"></a>Frames<br></li>
<li><a id="orga488b34"></a>Windows<br></li>
<li><a id="org6df90d9"></a>Point &amp; Mark<br></li>
<li><a id="org4c100cd"></a>Modes<br></li>
</ul>
</div>
<div id="outline-container-org1e70527" class="outline-4">
<h4 id="org1e70527"><span class="section-number-4">25.1.2.</span> Navegación</h4>
<div class="outline-text-4" id="text-25-1-2">
</div>
<ul class="org-ul">
<li><a id="orgcb4eccc"></a>Básica (C-f, C-b, etc.)<br></li>
<li><a id="orgbc79a0e"></a>Avanzada (M-f, M-b, etc.)<br></li>
</ul>
</div>
<div id="outline-container-orgecc2310" class="outline-4">
<h4 id="orgecc2310"><span class="section-number-4">25.1.3.</span> Edición</h4>
<div class="outline-text-4" id="text-25-1-3">
</div>
<ul class="org-ul">
<li><a id="orgcaaff3c"></a>Básica<br></li>
<li><a id="org5493be9"></a>Búsqueda y reemplazo<br></li>
<li><a id="orgc263e92"></a>Región y kill ring<br></li>
</ul>
</div>
</div>
<div id="outline-container-org5c5024d" class="outline-3">
<h3 id="org5c5024d"><span class="section-number-3">25.2.</span> Org Mode Básico</h3>
<div class="outline-text-3" id="text-25-2">
</div>
<div id="outline-container-orga612c41" class="outline-4">
<h4 id="orga612c41"><span class="section-number-4">25.2.1.</span> Estructura de documentos</h4>
<div class="outline-text-4" id="text-25-2-1">
</div>
<ul class="org-ul">
<li><a id="orgc8647b2"></a>Encabezados y subencabezados<br></li>
<li><a id="orgedd9db8"></a>Listas<br></li>
<li><a id="org30fe485"></a>Tablas<br></li>
</ul>
</div>
<div id="outline-container-org379fa14" class="outline-4">
<h4 id="org379fa14"><span class="section-number-4">25.2.2.</span> Gestión de tareas</h4>
<div class="outline-text-4" id="text-25-2-2">
</div>
<ul class="org-ul">
<li><a id="orgd7a3014"></a>Estados TODO<br></li>
<li><a id="org5305d6f"></a>Prioridades<br></li>
<li><a id="orga07c9b0"></a>Etiquetas<br></li>
</ul>
</div>
<div id="outline-container-org399c1b2" class="outline-4">
<h4 id="org399c1b2"><span class="section-number-4">25.2.3.</span> Enlaces y referencias</h4>
</div>
<div id="outline-container-org0f94738" class="outline-4">
<h4 id="org0f94738"><span class="section-number-4">25.2.4.</span> Fechas y horarios</h4>
</div>
</div>
<div id="outline-container-orgce9d078" class="outline-3">
<h3 id="orgce9d078"><span class="section-number-3">25.3.</span> Org Mode Avanzado</h3>
<div class="outline-text-3" id="text-25-3">
</div>
<div id="outline-container-orgc589490" class="outline-4">
<h4 id="orgc589490"><span class="section-number-4">25.3.1.</span> Agenda</h4>
</div>
<div id="outline-container-org64fc7f5" class="outline-4">
<h4 id="org64fc7f5"><span class="section-number-4">25.3.2.</span> Captura</h4>
</div>
<div id="outline-container-org524a063" class="outline-4">
<h4 id="org524a063"><span class="section-number-4">25.3.3.</span> Exportación</h4>
</div>
<div id="outline-container-org4eca9e9" class="outline-4">
<h4 id="org4eca9e9"><span class="section-number-4">25.3.4.</span> Babel (código)</h4>
</div>
<div id="outline-container-org1de5ad5" class="outline-4">
<h4 id="org1de5ad5"><span class="section-number-4">25.3.5.</span> Bloques especiales</h4>
</div>
</div>
<div id="outline-container-orgf4a7af1" class="outline-3">
<h3 id="orgf4a7af1"><span class="section-number-3">25.4.</span> Flujos de trabajo</h3>
<div class="outline-text-3" id="text-25-4">
</div>
<div id="outline-container-orgc0ffdca" class="outline-4">
<h4 id="orgc0ffdca"><span class="section-number-4">25.4.1.</span> GTD</h4>
</div>
<div id="outline-container-org4577926" class="outline-4">
<h4 id="org4577926"><span class="section-number-4">25.4.2.</span> Zettelkasten</h4>
</div>
<div id="outline-container-org0ba223c" class="outline-4">
<h4 id="org0ba223c"><span class="section-number-4">25.4.3.</span> Gestión de proyectos</h4>
</div>
<div id="outline-container-orgfa3ff06" class="outline-4">
<h4 id="orgfa3ff06"><span class="section-number-4">25.4.4.</span> Toma de notas</h4>
</div>
</div>
<div id="outline-container-org929d3f3" class="outline-3">
<h3 id="org929d3f3"><span class="section-number-3">25.5.</span> Personalización</h3>
<div class="outline-text-3" id="text-25-5">
</div>
<div id="outline-container-orgb7cf1b3" class="outline-4">
<h4 id="orgb7cf1b3"><span class="section-number-4">25.5.1.</span> Temas</h4>
</div>
<div id="outline-container-orgc429eb3" class="outline-4">
<h4 id="orgc429eb3"><span class="section-number-4">25.5.2.</span> Paquetes adicionales</h4>
</div>
<div id="outline-container-org5af57a2" class="outline-4">
<h4 id="org5af57a2"><span class="section-number-4">25.5.3.</span> Configuración propia</h4>
<div class="outline-text-4" id="text-25-5-3">
<p>
@endmindmap
#+END_SRC
</p>
</div>
</div>
</div>
</div>
<div id="outline-container-org1f336f4" class="outline-2">
<h2 id="org1f336f4"><span class="section-number-2">26.</span> Recursos y referencias</h2>
<div class="outline-text-2" id="text-26">
</div>
<div id="outline-container-orgbe42200" class="outline-3">
<h3 id="orgbe42200"><span class="section-number-3">26.1.</span> Documentación oficial</h3>
<div class="outline-text-3" id="text-26-1">
<ul class="org-ul">
<li>[Manual de Org Mode](<a href="https://orgmode.org/manual/">https://orgmode.org/manual/</a>)</li>
<li>[Manual de Emacs](<a href="https://www.gnu.org/software/emacs/manual/">https://www.gnu.org/software/emacs/manual/</a>)</li>
<li>[Org-mode Compact Guide](<a href="https://orgmode.org/guide/">https://orgmode.org/guide/</a>)</li>
<li>[Worg: Wiki de Org Mode](<a href="https://orgmode.org/worg/">https://orgmode.org/worg/</a>)</li>
</ul>
</div>
</div>
<div id="outline-container-orgc253411" class="outline-3">
<h3 id="orgc253411"><span class="section-number-3">26.2.</span> Libros</h3>
<div class="outline-text-3" id="text-26-2">
<ul class="org-ul">
<li>"Org Mode Compact Guide" por Carsten Dominik</li>
<li>"Mastering Emacs" por Mickey Petersen</li>
<li>"Practical Emacs Tutorial" por Xah Lee</li>
<li>"Writing GNU Emacs Extensions" por Bob Glickstein</li>
<li>"Learning GNU Emacs" por Debra Cameron, et al.</li>
</ul>
</div>
</div>
<div id="outline-container-org829c3c6" class="outline-3">
<h3 id="org829c3c6"><span class="section-number-3">26.3.</span> Tutoriales en línea</h3>
<div class="outline-text-3" id="text-26-3">
<ul class="org-ul">
<li>[Curso Org Mode UC Irvine](<a href="https://github.com/zamansky/using-emacs">https://github.com/zamansky/using-emacs</a>)</li>
<li>[Org Mode - Organize Your Life In Plain Text](<a href="http://doc.norang.ca/org-mode.html">http://doc.norang.ca/org-mode.html</a>) por Bernt Hansen</li>
<li>[Emacs Tutorial de Sacha Chua](<a href="https://sachachua.com/blog/category/emacs/">https://sachachua.com/blog/category/emacs/</a>)</li>
</ul>
</div>
</div>
<div id="outline-container-org2932805" class="outline-3">
<h3 id="org2932805"><span class="section-number-3">26.4.</span> Comunidades y foros</h3>
<div class="outline-text-3" id="text-26-4">
<ul class="org-ul">
<li>[Reddit r/emacs](<a href="https://www.reddit.com/r/emacs/">https://www.reddit.com/r/emacs/</a>)</li>
<li>[Reddit r/orgmode](<a href="https://www.reddit.com/r/orgmode/">https://www.reddit.com/r/orgmode/</a>)</li>
<li>[Emacs Stack Exchange](<a href="https://emacs.stackexchange.com/">https://emacs.stackexchange.com/</a>)</li>
<li>[Org Mode Mailing List](<a href="https://lists.gnu.org/mailman/listinfo/emacs-orgmode">https://lists.gnu.org/mailman/listinfo/emacs-orgmode</a>)</li>
</ul>
</div>
</div>
<div id="outline-container-orge3e2049" class="outline-3">
<h3 id="orge3e2049"><span class="section-number-3">26.5.</span> Repositorios y configuraciones públicas</h3>
<div class="outline-text-3" id="text-26-5">
<ul class="org-ul">
<li>[Doom Emacs](<a href="https://github.com/hlissner/doom-emacs">https://github.com/hlissner/doom-emacs</a>) - Configuración popular y modular</li>
<li>[Spacemacs](<a href="https://www.spacemacs.org/">https://www.spacemacs.org/</a>) - Configuración comunitaria con características de Vim</li>
<li>[Prelude](<a href="https://github.com/bbatsov/prelude">https://github.com/bbatsov/prelude</a>) - Configuración mejorada para Emacs</li>
</ul>
</div>
</div>
<div id="outline-container-org04f331f" class="outline-3">
<h3 id="org04f331f"><span class="section-number-3">26.6.</span> Canales de YouTube</h3>
<div class="outline-text-3" id="text-26-6">
<ul class="org-ul">
<li>[System Crafters](<a href="https://www.youtube.com/c/SystemCrafters">https://www.youtube.com/c/SystemCrafters</a>)</li>
<li>[Protesilaos Stavrou](<a href="https://www.youtube.com/c/ProtesilaosStavrou">https://www.youtube.com/c/ProtesilaosStavrou</a>)</li>
<li>[David Wilson](<a href="https://www.youtube.com/c/DavidWilson3">https://www.youtube.com/c/DavidWilson3</a>)</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org1acea69" class="outline-2">
<h2 id="org1acea69"><span class="section-number-2">27.</span> Resumen y siguientes pasos</h2>
<div class="outline-text-2" id="text-27">
</div>
<div id="outline-container-org791f9e7" class="outline-3">
<h3 id="org791f9e7"><span class="section-number-3">27.1.</span> Lo que has aprendido</h3>
<div class="outline-text-3" id="text-27-1">
<p>
En esta guía has explorado:
</p>

<ol class="org-ol">
<li><b>Fundamentos de Emacs</b>: Configuración básica y comandos esenciales</li>
<li><b>Org Mode</b>: Toma de notas estructurada y gestión de tareas</li>
<li><b>Flujos de trabajo avanzados</b>: GTD, Zettelkasten y gestión de proyectos</li>
<li><b>Personalización</b>: Temas, paquetes y optimizaciones</li>
<li><b>Solución de problemas</b>: Estrategias para resolver problemas comunes</li>
</ol>
</div>
</div>
<div id="outline-container-orgce60f79" class="outline-3">
<h3 id="orgce60f79"><span class="section-number-3">27.2.</span> Recomendaciones para continuar</h3>
<div class="outline-text-3" id="text-27-2">
<ol class="org-ol">
<li><b>Práctica regular</b>: Usa Emacs y Org Mode a diario, incluso para tareas simples</li>
<li><b>Incremento gradual</b>: Añade nuevas funcionalidades de una en una</li>
<li><b>Personalización progresiva</b>: Modifica tu configuración cuando sea necesario</li>
<li><b>Participación comunitaria</b>: Únete a foros y grupos de usuarios</li>
<li><b>Contribución</b>: Comparte tus conocimientos y mejoras con la comunidad</li>
</ol>
</div>
</div>
<div id="outline-container-orgfd6a650" class="outline-3">
<h3 id="orgfd6a650"><span class="section-number-3">27.3.</span> Plan de aprendizaje de 30 días</h3>
<div class="outline-text-3" id="text-27-3">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-right">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-right">Día</th>
<th scope="col" class="org-left">Tema</th>
<th scope="col" class="org-left">Actividad</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-right">1-5</td>
<td class="org-left">Comandos básicos</td>
<td class="org-left">Memorizar atajos esenciales, hacer el tutorial integrado</td>
</tr>

<tr>
<td class="org-right">6-10</td>
<td class="org-left">Edición avanzada</td>
<td class="org-left">Practicar selección, búsqueda y reemplazo</td>
</tr>

<tr>
<td class="org-right">11-15</td>
<td class="org-left">Org Mode básico</td>
<td class="org-left">Crear archivo de tareas, capturar notas, usar agenda</td>
</tr>

<tr>
<td class="org-right">16-20</td>
<td class="org-left">Configuración</td>
<td class="org-left">Personalizar init.el, instalar paquetes esenciales</td>
</tr>

<tr>
<td class="org-right">21-25</td>
<td class="org-left">Org Mode avanzado</td>
<td class="org-left">Implementar GTD, exportar a diferentes formatos</td>
</tr>

<tr>
<td class="org-right">26-30</td>
<td class="org-left">Flujo de trabajo</td>
<td class="org-left">Integrar Emacs en tu vida diaria, automatizar tareas</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div id="outline-container-orga3a5477" class="outline-2">
<h2 id="orga3a5477"><span class="section-number-2">28.</span> Conclusión</h2>
<div class="outline-text-2" id="text-28">
<p>
Emacs y Org Mode representan una inversión significativa de tiempo y esfuerzo, pero ofrecen un retorno extraordinario en términos de productividad, control y longevidad. Con esta guía, estás equipado para comenzar tu viaje hacia el dominio de estas herramientas poderosas y flexibles.
</p>

<p>
Recuerda que la configuración ideal es aquella que se adapta a tu flujo de trabajo, no al revés. Tómate tu tiempo para experimentar y encontrar lo que funciona mejor para ti.
</p>

<p>
La comunidad de Emacs es una de las más antiguas y colaborativas en el mundo del software libre. Nunca dudes en buscar ayuda, compartir soluciones o contribuir al desarrollo continuo de este ecosistema.
</p>

<blockquote>
<p>
"La verdadera productividad no está en hacer más cosas, sino en hacer las cosas correctas con las herramientas adecuadas." — Anónimo
</p>
</blockquote>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-productividad.html">productividad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-editor-de-texto.html">editor-de-texto</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-programación.html">programación</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[productividad]]></category>
  <category><![CDATA[editor-de-texto]]></category>
  <category><![CDATA[programación]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-25-gu%C3%ADa-completa-de-emacs-y-org-mode:-de-principiante-a-experto.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-25-gu%C3%ADa-completa-de-emacs-y-org-mode:-de-principiante-a-experto.html</guid>
  <pubDate>Fri, 25 Apr 2025 04:38:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Emacs para Tomar Notas: La Herramienta Definitiva para Gestionar tu Conocimiento]]></title>
  <description><![CDATA[
<div id="outline-container-org550bfbf" class="outline-2">
<h2 id="org550bfbf">Introducción</h2>
<div class="outline-text-2" id="text-org550bfbf">
<p>
Tomar notas es una habilidad fundamental en nuestra era de sobrecarga de información. Ya sea para estudiar, trabajar en proyectos o simplemente capturar ideas fugaces, necesitamos un sistema que sea a la vez potente y flexible. Emacs, especialmente con Org mode, ofrece una de las experiencias más completas para la gestión de notas y conocimiento.
</p>

<p>
En este artículo, exploraremos cómo configurar Emacs para tomar notas eficientemente, desde notas rápidas hasta sistemas completos de gestión del conocimiento. También analizaremos las ventajas y desventajas de este enfoque frente a otras alternativas populares.
</p>
</div>
</div>
<div id="outline-container-org831ecf3" class="outline-2">
<h2 id="org831ecf3">¿Por qué usar Emacs para tomar notas?</h2>
<div class="outline-text-2" id="text-org831ecf3">
<p>
Antes de sumergirnos en la configuración, vale la pena entender qué hace a Emacs una opción tan atractiva para tomar notas:
</p>

<ul class="org-ul">
<li><b>Sistema unificado</b>: Todo tu conocimiento en un solo lugar, accesible mediante texto plano</li>
<li><b>Personalización ilimitada</b>: Adapta el sistema a tu flujo de trabajo exacto</li>
<li><b>Formatos abiertos y portables</b>: Tus notas te pertenecen y durarán décadas</li>
<li><b>Potencia de Org mode</b>: Estructura jerárquica, enlaces, etiquetas, propiedades, tablas, código, etc.</li>
<li><b>Integración con tu vida digital</b>: Calendarios, tareas, bibliografía, correo electrónico y más</li>
</ul>
</div>
</div>
<div id="outline-container-orgbc91ffc" class="outline-2">
<h2 id="orgbc91ffc">Configuración básica para toma de notas</h2>
<div class="outline-text-2" id="text-orgbc91ffc">
</div>
<div id="outline-container-org6c0ca8b" class="outline-3">
<h3 id="org6c0ca8b">Instalación y configuración inicial</h3>
<div class="outline-text-3" id="text-org6c0ca8b">
<p>
Si aún no tienes Emacs instalado, el primer paso es obtenerlo para tu sistema operativo:
</p>

<div class="org-src-container">
<pre class="src src-shell"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">En sistemas basados en Debian/Ubuntu</span>
sudo apt install emacs

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">En macOS con Homebrew</span>
brew install emacs

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">En Windows, descarga desde https://gnu.org/software/emacs/download.html</span>
</pre>
</div>

<p>
Aunque Org mode viene incluido en Emacs moderno, querrás algunas configuraciones adicionales en tu <code>~/.emacs.d/init.el</code> o <code>~/.emacs</code>:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n b&#225;sica para Org mode</span>
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">org</span>)
(global-set-key (kbd <span style="color: #a44185;">"C-c l"</span>) 'org-store-link)
(global-set-key (kbd <span style="color: #a44185;">"C-c a"</span>) 'org-agenda)
(global-set-key (kbd <span style="color: #a44185;">"C-c c"</span>) 'org-capture)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Definir ubicaciones para notas</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-directory <span style="color: #a44185;">"~/org"</span>)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-default-notes-file (concat org-directory <span style="color: #a44185;">"/notas.org"</span>))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Habilitar indent-mode para mejor visualizaci&#243;n</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-startup-indented t)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Mostrar im&#225;genes inline</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-display-inline-images t)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Habilitar auto-completado</span>
(add-hook 'org-mode-hook 'company-mode)
</pre>
</div>
</div>
</div>
<div id="outline-container-org7c7c894" class="outline-3">
<h3 id="org7c7c894">Configuración para captura rápida de notas</h3>
<div class="outline-text-3" id="text-org7c7c894">
<p>
Una de las características más poderosas de Org mode es el sistema de captura (Org Capture), que permite tomar notas rápidamente sin interrumpir tu flujo de trabajo:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Plantillas para captura r&#225;pida de notas</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-capture-templates
      '((<span style="color: #a44185;">"t"</span> <span style="color: #a44185;">"Tarea"</span> entry (file+headline <span style="color: #a44185;">"~/org/tareas.org"</span> <span style="color: #a44185;">"Tareas"</span>)
         <span style="color: #a44185;">"* TODO %?\n  %i\n  %a"</span>)
        (<span style="color: #a44185;">"n"</span> <span style="color: #a44185;">"Nota"</span> entry (file+headline <span style="color: #a44185;">"~/org/notas.org"</span> <span style="color: #a44185;">"Notas"</span>)
         <span style="color: #a44185;">"* %? :nota:\n  %U\n  %i\n  %a"</span>)
        (<span style="color: #a44185;">"i"</span> <span style="color: #a44185;">"Idea"</span> entry (file+headline <span style="color: #a44185;">"~/org/ideas.org"</span> <span style="color: #a44185;">"Ideas"</span>)
         <span style="color: #a44185;">"* %? :idea:\n  %U\n  %i"</span>)
        (<span style="color: #a44185;">"j"</span> <span style="color: #a44185;">"Diario"</span> entry (file+datetree <span style="color: #a44185;">"~/org/diario.org"</span>)
         <span style="color: #a44185;">"* %?\nIngresado el %U\n  %i\n  %a"</span>)))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Atajo global para captura desde cualquier aplicaci&#243;n</span>
(global-set-key (kbd <span style="color: #a44185;">"C-c c"</span>) 'org-capture)
</pre>
</div>

<p>
Con esta configuración, puedes presionar <code>C-c c</code> (Control + c, seguido de c) desde cualquier lugar en Emacs para abrir el menú de captura. Luego selecciona "n" para una nota, "t" para una tarea, etc.
</p>
</div>
</div>
<div id="outline-container-org32b390b" class="outline-3">
<h3 id="org32b390b">Organización de archivos de notas</h3>
<div class="outline-text-3" id="text-org32b390b">
<p>
Te recomendamos estructurar tus notas en varios archivos según su propósito:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Archivos para la agenda y b&#250;squedas</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-agenda-files '(<span style="color: #a44185;">"~/org/tareas.org"</span>
                         <span style="color: #a44185;">"~/org/proyectos.org"</span>
                         <span style="color: #a44185;">"~/org/calendario.org"</span>
                         <span style="color: #a44185;">"~/org/notas.org"</span>))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Archivo para notas r&#225;pidas que luego se procesar&#225;n</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-refile-targets '((org-agenda-files <span style="color: #dc3eb7;">:maxlevel</span> . 3)))
</pre>
</div>

<p>
Una estructura básica podría ser:
</p>

<ul class="org-ul">
<li><code>~/org/notas.org</code> - Notas generales y misceláneas</li>
<li><code>~/org/tareas.org</code> - Lista de tareas y proyectos</li>
<li><code>~/org/diario.org</code> - Entradas de diario organizadas por fecha</li>
<li><code>~/org/ideas.org</code> - Ideas y pensamientos para desarrollar</li>
<li><code>~/org/referencias.org</code> - Referencias a artículos, libros, etc.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org74d6e12" class="outline-2">
<h2 id="org74d6e12">Funcionalidades avanzadas para toma de notas</h2>
<div class="outline-text-2" id="text-org74d6e12">
</div>
<div id="outline-container-org37d2973" class="outline-3">
<h3 id="org37d2973">Org Roam: Un sistema Zettelkasten en Emacs</h3>
<div class="outline-text-3" id="text-org37d2973">
<p>
Org Roam implementa el método Zettelkasten de toma de notas interconectadas:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Instalar org-roam con package.el</span>
(<span style="color: #219fd5; font-style: italic;">unless</span> (package-installed-p 'org-roam)
  (package-install 'org-roam))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n b&#225;sica</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org-roam</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:hook</span>
  (after-init . org-roam-mode)
  <span style="color: #dc3eb7;">:custom</span>
  (org-roam-directory <span style="color: #a44185;">"~/org-roam/"</span>)
  <span style="color: #dc3eb7;">:bind</span> (<span style="color: #dc3eb7;">:map</span> org-roam-mode-map
              ((<span style="color: #a44185;">"C-c n l"</span> . org-roam)
               (<span style="color: #a44185;">"C-c n f"</span> . org-roam-find-file)
               (<span style="color: #a44185;">"C-c n g"</span> . org-roam-graph))
              <span style="color: #dc3eb7;">:map</span> org-mode-map
              ((<span style="color: #a44185;">"C-c n i"</span> . org-roam-insert))
              ((<span style="color: #a44185;">"C-c n I"</span> . org-roam-insert-immediate))))
</pre>
</div>
</div>
</div>
<div id="outline-container-org76ce2fd" class="outline-3">
<h3 id="org76ce2fd">Org Journal para diarios estructurados</h3>
<div class="outline-text-3" id="text-org76ce2fd">
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org-journal</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:defer</span> t
  <span style="color: #dc3eb7;">:custom</span>
  (org-journal-dir <span style="color: #a44185;">"~/org/diario/"</span>)
  (org-journal-date-format <span style="color: #a44185;">"%A, %d %B %Y"</span>)
  (org-journal-file-format <span style="color: #a44185;">"%Y-%m-%d.org"</span>))
</pre>
</div>
</div>
</div>
<div id="outline-container-org5b55859" class="outline-3">
<h3 id="org5b55859">Deft para búsqueda rápida de notas</h3>
<div class="outline-text-3" id="text-org5b55859">
<p>
Deft proporciona una interfaz similar a Notational Velocity para buscar rápidamente entre tus notas:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">deft</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:bind</span> (<span style="color: #a44185;">"&lt;f8&gt;"</span> . deft)
  <span style="color: #dc3eb7;">:custom</span>
  (deft-extensions '(<span style="color: #a44185;">"org"</span> <span style="color: #a44185;">"md"</span> <span style="color: #a44185;">"txt"</span>))
  (deft-directory <span style="color: #a44185;">"~/org"</span>)
  (deft-recursive t)
  (deft-use-filename-as-title nil))
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org8dddb03" class="outline-2">
<h2 id="org8dddb03">Técnicas eficientes para tomar notas en Emacs</h2>
<div class="outline-text-2" id="text-org8dddb03">
</div>
<div id="outline-container-orge912915" class="outline-3">
<h3 id="orge912915">Captura rápida de notas</h3>
<div class="outline-text-3" id="text-orge912915">
<p>
Para capturar rápidamente una nota:
</p>

<ol class="org-ol">
<li>Presiona <code>C-c c</code> para abrir el menú de captura</li>
<li>Selecciona el tipo de nota (n para nota general)</li>
<li>Escribe tu nota</li>
<li>Finaliza con <code>C-c C-c</code></li>
</ol>
</div>
</div>
<div id="outline-container-org87e2bdb" class="outline-3">
<h3 id="org87e2bdb">Enlazando notas entre sí</h3>
<div class="outline-text-3" id="text-org87e2bdb">
<p>
Los enlaces son fundamentales en un sistema de notas:
</p>

<ul class="org-ul">
<li>Para crear un enlace interno: <code>[[archivo:notas.org::*Título][Descripción]]</code></li>
<li>Para enlazar a un sitio web: <code>[[https://example.com][Sitio Web]]</code></li>
<li>Para enlazar a un archivo local: <code>[[file:~/documentos/archivo.pdf][PDF]]</code></li>
</ul>
</div>
</div>
<div id="outline-container-orgf203340" class="outline-3">
<h3 id="orgf203340">Estructurando tus notas con encabezados</h3>
<div class="outline-text-3" id="text-orgf203340">
<p>
Org mode permite estructurar jerárquicamente:
</p>

<p>
#+BEGIN<sub>EXAMPLE</sub>
</p>
</div>
</div>
</div>
<div id="outline-container-orga7559a0" class="outline-2">
<h2 id="orga7559a0">Tema principal</h2>
<div class="outline-text-2" id="text-orga7559a0">
</div>
<div id="outline-container-orgf200216" class="outline-3">
<h3 id="orgf200216">Subtema</h3>
<div class="outline-text-3" id="text-orgf200216">
</div>
<div id="outline-container-org594bd90" class="outline-4">
<h4 id="org594bd90">Punto específico</h4>
<div class="outline-text-4" id="text-org594bd90">
<p>
    Contenido detallado&#x2026;
#+END<sub>EXAMPLE</sub>
</p>

<p>
Puedes expandir/contraer encabezados con TAB y navegar con <code>C-c C-n</code> (siguiente) y <code>C-c C-p</code> (anterior).
</p>
</div>
</div>
</div>
<div id="outline-container-orga54a700" class="outline-3">
<h3 id="orga54a700">Etiquetado y categorización</h3>
<div class="outline-text-3" id="text-orga54a700">
<p>
Las etiquetas permiten categorizar y filtrar notas:
</p>

<p>
#+BEGIN<sub>EXAMPLE</sub>
</p>
</div>
</div>
</div>
<div id="outline-container-org3bb3ed2" class="outline-2">
<h2 id="org3bb3ed2">Concepto importante sobre programación funcional&#xa0;&#xa0;&#xa0;<span class="tag"><span class="programaci_n">programación</span>&#xa0;<span class="funcional">funcional</span></span></h2>
<div class="outline-text-2" id="text-org3bb3ed2">
<p>
#+END<sub>EXAMPLE</sub>
</p>

<p>
Luego puedes buscar con <code>C-c a m</code> (agenda match) y filtrar por etiquetas.
</p>
</div>
</div>
<div id="outline-container-org505b64b" class="outline-2">
<h2 id="org505b64b">Ventajas de usar Emacs para tomar notas</h2>
<div class="outline-text-2" id="text-org505b64b">
</div>
<div id="outline-container-org75b82e0" class="outline-3">
<h3 id="org75b82e0">Ventajas principales</h3>
<div class="outline-text-3" id="text-org75b82e0">
<ul class="org-ul">
<li><b>Longevidad</b>: Formato de texto plano garantiza accesibilidad por décadas</li>
<li><b>Flexibilidad extrema</b>: Adaptable a cualquier flujo de trabajo o metodología</li>
<li><b>Integración completa</b>: Un único sistema para notas, tareas, agenda, etc.</li>
<li><b>Portabilidad</b>: Funciona en todas las plataformas y sistemas operativos</li>
<li><b>Control total</b>: Tú controlas tu sistema, no dependes de servicios externos</li>
<li><b>Capacidades de búsqueda</b>: Búsquedas complejas entre todas tus notas</li>
<li><b>Exportación</b>: Convierte fácilmente a HTML, PDF, Markdown, etc.</li>
<li><b>Colaboración</b>: Posibilidad de sincronizar con git y otros sistemas</li>
<li><b>Gratuito y Open Source</b>: Sin costos ni restricciones</li>
</ul>
</div>
</div>
<div id="outline-container-org612bb93" class="outline-3">
<h3 id="org612bb93">Casos de uso ideales</h3>
<div class="outline-text-3" id="text-org612bb93">
<ul class="org-ul">
<li>Investigadores y académicos</li>
<li>Desarrolladores de software</li>
<li>Escritores y creadores de contenido</li>
<li>Estudiantes universitarios</li>
<li>Profesionales que manejan proyectos complejos</li>
<li>Cualquier persona interesada en construir una "segunda mente" digital</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org7e90eb8" class="outline-2">
<h2 id="org7e90eb8">Desventajas y limitaciones</h2>
<div class="outline-text-2" id="text-org7e90eb8">
<ul class="org-ul">
<li><b>Curva de aprendizaje pronunciada</b>: Requiere inversión de tiempo inicial</li>
<li><b>Interfaz menos visual</b>: Comparado con apps modernas como Notion o Evernote</li>
<li><b>Configuración técnica</b>: No es "plug and play", requiere ajustes manuales</li>
<li><b>Sincronización móvil limitada</b>: Aunque existen soluciones, no son tan pulidas</li>
<li><b>Menos atractivo visualmente</b>: Prioriza funcionalidad sobre estética</li>
<li><b>Dificultad para compartir</b>: No tan simple como otras herramientas colaborativas</li>
</ul>
</div>
</div>
<div id="outline-container-org6f16424" class="outline-2">
<h2 id="org6f16424">Comparación con otras herramientas</h2>
<div class="outline-text-2" id="text-org6f16424">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Herramienta</th>
<th scope="col" class="org-left">Ventajas vs Emacs</th>
<th scope="col" class="org-left">Desventajas vs Emacs</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Notion</td>
<td class="org-left">Interfaz moderna, compartir</td>
<td class="org-left">Datos en la nube, menos personalizable</td>
</tr>

<tr>
<td class="org-left">Obsidian</td>
<td class="org-left">Más visual, plugins</td>
<td class="org-left">Menos potente, menos integrado</td>
</tr>

<tr>
<td class="org-left">Evernote</td>
<td class="org-left">Facilidad inicial, móvil</td>
<td class="org-left">Menos estructura, formato cerrado</td>
</tr>

<tr>
<td class="org-left">OneNote</td>
<td class="org-left">Integración Microsoft, dibujo</td>
<td class="org-left">Menos estructurado, menos portable</td>
</tr>

<tr>
<td class="org-left">Apple Notes</td>
<td class="org-left">Simplicidad, integración iOS</td>
<td class="org-left">Sistema cerrado, menos potente</td>
</tr>

<tr>
<td class="org-left">Google Keep</td>
<td class="org-left">Simplicidad, acceso web</td>
<td class="org-left">Muy básico, limitado para notas extensas</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org6d3fbe7" class="outline-2">
<h2 id="org6d3fbe7">Configuración del sistema completo</h2>
<div class="outline-text-2" id="text-org6d3fbe7">
<p>
Para implementar un sistema completo de notas, te recomendamos esta configuración:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n completa para sistema de notas en Emacs</span>
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">org</span>)
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">org-capture</span>)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Directorios base</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-directory <span style="color: #a44185;">"~/org"</span>)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-default-notes-file (concat org-directory <span style="color: #a44185;">"/inbox.org"</span>))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Archivos de notas</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-agenda-files '(<span style="color: #a44185;">"~/org/inbox.org"</span>
                         <span style="color: #a44185;">"~/org/proyectos.org"</span>
                         <span style="color: #a44185;">"~/org/tareas.org"</span>
                         <span style="color: #a44185;">"~/org/calendario.org"</span>
                         <span style="color: #a44185;">"~/org/areas.org"</span>))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Plantillas de captura</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-capture-templates
      '((<span style="color: #a44185;">"t"</span> <span style="color: #a44185;">"Tarea"</span> entry (file+headline <span style="color: #a44185;">"~/org/inbox.org"</span> <span style="color: #a44185;">"Tareas"</span>)
         <span style="color: #a44185;">"* TODO %?\n  %i\n  %a"</span>)
        (<span style="color: #a44185;">"n"</span> <span style="color: #a44185;">"Nota"</span> entry (file+headline <span style="color: #a44185;">"~/org/inbox.org"</span> <span style="color: #a44185;">"Notas"</span>)
         <span style="color: #a44185;">"* %? :nota:\n  %U\n  %i\n  %a"</span>)
        (<span style="color: #a44185;">"j"</span> <span style="color: #a44185;">"Diario"</span> entry (file+datetree <span style="color: #a44185;">"~/org/diario.org"</span>)
         <span style="color: #a44185;">"* %?\nIngresado el %U\n  %i\n  %a"</span>)
        (<span style="color: #a44185;">"i"</span> <span style="color: #a44185;">"Idea"</span> entry (file+headline <span style="color: #a44185;">"~/org/ideas.org"</span> <span style="color: #a44185;">"Ideas"</span>)
         <span style="color: #a44185;">"* %? :idea:\n  %U\n  %i"</span>)
        (<span style="color: #a44185;">"p"</span> <span style="color: #a44185;">"Proyecto"</span> entry (file+headline <span style="color: #a44185;">"~/org/proyectos.org"</span> <span style="color: #a44185;">"Proyectos"</span>)
         <span style="color: #a44185;">"* %? :proyecto:\n  %U\n  %i"</span>)))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Refile para mover notas entre archivos</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-refile-targets
      '((nil <span style="color: #dc3eb7;">:maxlevel</span> . 9)
        (org-agenda-files <span style="color: #dc3eb7;">:maxlevel</span> . 9)))
(<span style="color: #219fd5; font-style: italic;">setq</span> org-outline-path-complete-in-steps nil)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-refile-use-outline-path t)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Org Babel para c&#243;digo ejecutable en notas</span>
(org-babel-do-load-languages
 'org-babel-load-languages
 '((python . t)
   (shell . t)
   (js . t)
   (emacs-lisp . t)
   (plantuml . t)))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Para diagramas con PlantUML</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-plantuml-jar-path
      (expand-file-name <span style="color: #a44185;">"~/plantuml/plantuml.jar"</span>))
(add-to-list 'org-src-lang-modes '(<span style="color: #a44185;">"plantuml"</span> . plantuml))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Mejor visualizaci&#243;n</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> org-startup-indented t)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-startup-folded t)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-pretty-entities t)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-hide-emphasis-markers t)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Atajos globales</span>
(global-set-key (kbd <span style="color: #a44185;">"C-c c"</span>) 'org-capture)
(global-set-key (kbd <span style="color: #a44185;">"C-c a"</span>) 'org-agenda)
(global-set-key (kbd <span style="color: #a44185;">"C-c l"</span>) 'org-store-link)
(global-set-key (kbd <span style="color: #a44185;">"C-c b"</span>) 'org-switchb)
</pre>
</div>
</div>
</div>
<div id="outline-container-org6679c18" class="outline-2">
<h2 id="org6679c18">Flujo de trabajo recomendado</h2>
<div class="outline-text-2" id="text-org6679c18">
<ol class="org-ol">
<li><b>Captura</b>: Usa <code>C-c c</code> para capturar rápidamente cualquier idea o información</li>
<li><b>Procesamiento</b>: Revisa periódicamente tu <code>inbox.org</code> y refile (<code>C-c C-w</code>) las notas a ubicaciones apropiadas</li>
<li><b>Organización</b>: Estructura tus notas con encabezados, etiquetas y propiedades</li>
<li><b>Interconexión</b>: Enlaza notas relacionadas entre sí</li>
<li><b>Revisión</b>: Programa revisiones regulares de tus notas para reforzar el conocimiento</li>
<li><b>Búsqueda</b>: Usa <code>C-c a s</code> para búsquedas por texto o etiquetas</li>
</ol>
</div>
</div>
<div id="outline-container-orgb729844" class="outline-2">
<h2 id="orgb729844">Diagrama de Arquitectura del Sistema de Notas</h2>
<div class="outline-text-2" id="text-orgb729844">

<figure id="orga869795">
<img src="images/sistema-notas-emacs.png" alt="sistema-notas-emacs.png">

</figure>
</div>
</div>
<div id="outline-container-org8cb451d" class="outline-2">
<h2 id="org8cb451d">Referencias y recursos adicionales</h2>
<div class="outline-text-2" id="text-org8cb451d">
</div>
<div id="outline-container-org2f93bc8" class="outline-3">
<h3 id="org2f93bc8">Documentación oficial</h3>
<div class="outline-text-3" id="text-org2f93bc8">
<ul class="org-ul">
<li><a href="https://orgmode.org/manual/">Manual de Org Mode</a></li>
<li><a href="https://www.gnu.org/software/emacs/manual/">Manual de Emacs</a></li>
</ul>
</div>
</div>
<div id="outline-container-orgccd36b3" class="outline-3">
<h3 id="orgccd36b3">Libros</h3>
<div class="outline-text-3" id="text-orgccd36b3">
<ul class="org-ul">
<li>"Org Mode Compact Guide" por Carsten Dominik</li>
<li>"Mastering Emacs" por Mickey Petersen</li>
<li>"Getting Things Done with Emacs" por Bernt Hansen</li>
</ul>
</div>
</div>
<div id="outline-container-org621a03f" class="outline-3">
<h3 id="org621a03f">Artículos y tutoriales</h3>
<div class="outline-text-3" id="text-org621a03f">
<ul class="org-ul">
<li>Worg: <a href="https://orgmode.org/worg/">Wiki de Org Mode</a></li>
<li><a href="https://blog.jethro.dev/posts/org_mode_workflow_preview/">Workflow de Org Mode para Zettelkasten</a> por Jethro Kuan</li>
<li><a href="https://sachachua.com/blog/category/emacs/">Blog de Sacha Chua sobre Emacs</a></li>
</ul>
</div>
</div>
<div id="outline-container-orge06f409" class="outline-3">
<h3 id="orge06f409">Comunidades</h3>
<div class="outline-text-3" id="text-orge06f409">
<ul class="org-ul">
<li>Reddit: r/emacs y r/orgmode</li>
<li><a href="https://emacs.stackexchange.com/">Emacs Stack Exchange</a></li>
<li><a href="https://orgmode.org/community.html">Comunidad de Org Mode</a></li>
</ul>
</div>
</div>
<div id="outline-container-orgae1f401" class="outline-3">
<h3 id="orgae1f401">Paquetes complementarios</h3>
<div class="outline-text-3" id="text-orgae1f401">
<ul class="org-ul">
<li>org-roam: <a href="https://www.orgroam.com/">https://www.orgroam.com/</a></li>
<li>org-journal: <a href="https://github.com/bastibe/org-journal">https://github.com/bastibe/org-journal</a></li>
<li>deft: <a href="https://jblevins.org/projects/deft/">https://jblevins.org/projects/deft/</a></li>
<li>org-download: <a href="https://github.com/abo-abo/org-download">https://github.com/abo-abo/org-download</a></li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orge09047a" class="outline-2">
<h2 id="orge09047a">Conclusiones</h2>
<div class="outline-text-2" id="text-orge09047a">
<p>
Emacs con Org mode ofrece probablemente el sistema más potente y flexible para tomar notas que existe actualmente. Aunque tiene una curva de aprendizaje pronunciada, los beneficios a largo plazo son enormes para quienes inviertan el tiempo en dominarlo.
</p>

<p>
La combinación de texto plano, estructura jerárquica, enlaces, etiquetas, propiedades y capacidades de programación hacen de Org mode un entorno ideal para construir un "segundo cerebro" digital que puede evolucionar contigo durante décadas.
</p>

<p>
Si valoras el control total sobre tus datos, la personalización extrema y la eficiencia a largo plazo, vale la pena explorar Emacs como tu plataforma principal para tomar notas.
</p>

<p>
¿Has probado Emacs para tomar notas? ¿Qué técnicas has encontrado más útiles? Comparte tus experiencias en los comentarios.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-notas.html">notas</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-productividad.html">productividad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-gestión-de-conocimiento.html">gestión-de-conocimiento</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[notas]]></category>
  <category><![CDATA[productividad]]></category>
  <category><![CDATA[gestión-de-conocimiento]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-25--emacs-para-tomar-notas:-la-herramienta-definitiva-para-gestionar-tu-conocimiento.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-25--emacs-para-tomar-notas:-la-herramienta-definitiva-para-gestionar-tu-conocimiento.html</guid>
  <pubDate>Fri, 25 Apr 2025 04:04:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[12 Servicios de Ciberseguridad Gratuitos para Usuarios (Guía 2024)]]></title>
  <description><![CDATA[
<div id="outline-container-org5ca332c" class="outline-2">
<h2 id="org5ca332c">Introducción: Ciberseguridad al Alcance de Todos</h2>
<div class="outline-text-2" id="text-org5ca332c">
<p>
En un mundo donde las amenazas digitales crecen exponencialmente, proteger tus datos y sistemas es más crucial que nunca. La combinación de herramientas de ciberseguridad gratuitas y flujos de trabajo automatizados ofrece una solución poderosa y personalizable. En esta guía de 2024, se exploran <b>12 servicios gratuitos de ciberseguridad</b> para tareas como la detección de filtraciones de datos, análisis de redes y obtención de inteligencia de fuentes abiertas (OSINT). Cada servicio se detalla con ejemplos prácticos de uso, scripts y automatizaciones. Además, se incluye un diagrama del ecosistema y un script descargable para automatizar tareas de seguridad.
</p>
</div>
</div>
<div id="outline-container-org0134286" class="outline-2">
<h2 id="org0134286">🌐 Diagrama: Ecosistema de Herramientas</h2>
<div class="outline-text-2" id="text-org0134286">

<figure id="orgd2de304">
<img src="images/ciberseguridad-2024-diagrama.png" alt="ciberseguridad-2024-diagrama.png">

</figure>

<p>
<a href="images/ciberseguridad-2024-diagrama.png">Ver imagen completa</a>
</p>
</div>
</div>
<div id="outline-container-org1bcb4a8" class="outline-2">
<h2 id="org1bcb4a8">🛡️ Configuración Inicial</h2>
<div class="outline-text-2" id="text-org1bcb4a8">
</div>
<div id="outline-container-org7b3adc9" class="outline-3">
<h3 id="org7b3adc9">Instalación de Herramientas y Dependencias</h3>
<div class="outline-text-3" id="text-org7b3adc9">
<p>
Asegúrate de contar con herramientas como curl, jq, un cliente de API (por ejemplo, HTTPie o Postman), Python y un editor de texto compatible con bloques de código y automatización. 
</p>
</div>
</div>
<div id="outline-container-org0fbebd5" class="outline-3">
<h3 id="org0fbebd5">Directorio de Seguridad</h3>
<div class="outline-text-3" id="text-org0fbebd5">
<p>
Crea un directorio para almacenar notas y resultados:
</p>

<div class="org-src-container">
<pre class="src src-sh">mkdir -p ~/security
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org9e5577c" class="outline-2">
<h2 id="org9e5577c">🔒 Los 12 Servicios de Ciberseguridad Gratuitos</h2>
<div class="outline-text-2" id="text-org9e5577c">
</div>
<div id="outline-container-orgef545d9" class="outline-3">
<h3 id="orgef545d9">1. <a href="https://haveibeenpwned.com/">Have I Been Pwned (HIBP)</a></h3>
<div class="outline-text-3" id="text-orgef545d9">
<ul class="org-ul">
<li><b>Propósito</b>: Verifica si tus correos electrónicos o contraseñas han sido comprometidos en filtraciones de datos.</li>
<li><b>Límite Gratuito</b>: 1,500 solicitudes/mes con API Key.</li>
<li><b>Uso</b>:</li>
</ul>
<div class="org-src-container">
<pre class="src src-sh">curl -H <span style="color: #a44185;">"hibp-api-key: TU_API_KEY"</span> <span style="color: #a44185;">"https://haveibeenpwned.com/api/v3/breachedaccount/test@example.com"</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orge16d2ad" class="outline-3">
<h3 id="orge16d2ad">2. <a href="https://www.virustotal.com/">VirusTotal</a></h3>
<div class="outline-text-3" id="text-orge16d2ad">
<ul class="org-ul">
<li><b>Propósito</b>: Analiza archivos y URLs para detectar malware.</li>
<li><b>Límite Gratuito</b>: 500 solicitudes/día, 4 archivos/mes (máx. 32 MB).</li>
<li><b>Uso</b>:</li>
</ul>
<div class="org-src-container">
<pre class="src src-sh">curl --request POST --url https://www.virustotal.com/api/v3/files <span style="color: #a44185;">\</span>
  --header <span style="color: #a44185;">'x-apikey: TU_API_KEY'</span> <span style="color: #a44185;">\</span>
  --form <span style="color: #a44185;">'file=@/ruta/al/archivo'</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org31ef758" class="outline-3">
<h3 id="org31ef758">3. <a href="https://www.shodan.io/">Shodan</a></h3>
<div class="outline-text-3" id="text-org31ef758">
<ul class="org-ul">
<li><b>Propósito</b>: Busca dispositivos conectados a Internet (IoT, servidores, etc.).</li>
<li><b>Límite Gratuito</b>: 100 créditos de consulta/mes.</li>
<li><b>Uso</b>:</li>
</ul>
<div class="org-src-container">
<pre class="src src-sh">curl <span style="color: #a44185;">"https://api.shodan.io/shodan/host/search?key=TU_API_KEY&amp;query=port:80+os:linux"</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org6eeed77" class="outline-3">
<h3 id="org6eeed77">4. <a href="https://www.dehashed.com/">Dehashed</a></h3>
<div class="outline-text-3" id="text-org6eeed77">
<ul class="org-ul">
<li><b>Propósito</b>: Búsqueda profunda en filtraciones, incluyendo metadatos (nombres, direcciones).</li>
<li><b>Límite Gratuito</b>: 5 consultas/día.</li>
<li><b>Uso</b>:</li>
</ul>
<div class="org-src-container">
<pre class="src src-sh">curl -u <span style="color: #a44185;">"TU_EMAIL:API_KEY"</span> <span style="color: #a44185;">"https://api.dehashed.com/search?query=email:test@example.com"</span> | jq .
</pre>
</div>
</div>
</div>
<div id="outline-container-org095df39" class="outline-3">
<h3 id="org095df39">5. <a href="https://www.greynoise.io/">GreyNoise</a></h3>
<div class="outline-text-3" id="text-org095df39">
<ul class="org-ul">
<li><b>Propósito</b>: Detecta IPs maliciosas o escaneos masivos en la red.</li>
<li><b>Límite Gratuito</b>: 1,000 solicitudes/mes.</li>
<li><b>Uso</b>:</li>
</ul>
<div class="org-src-container">
<pre class="src src-sh">curl -H <span style="color: #a44185;">"key: TU_API_KEY"</span> <span style="color: #a44185;">"https://api.greynoise.io/v3/community/1.1.1.1"</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orge93d9fd" class="outline-3">
<h3 id="orge93d9fd">6. <a href="https://urlscan.io/">URLScan.io</a></h3>
<div class="outline-text-3" id="text-orge93d9fd">
<ul class="org-ul">
<li><b>Propósito</b>: Analiza URLs para detectar phishing o comportamiento sospechoso.</li>
<li><b>Límite Gratuito</b>: 10 escaneos/día.</li>
<li><b>Uso</b>:</li>
</ul>
<div class="org-src-container">
<pre class="src src-sh">curl -X POST <span style="color: #a44185;">"https://urlscan.io/api/v1/scan/"</span> -H <span style="color: #a44185;">"API-Key: TU_API_KEY"</span> -H <span style="color: #a44185;">"Content-Type: application/json"</span> -d <span style="color: #a44185;">'{"url": "https://example.com"}'</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf09714b" class="outline-3">
<h3 id="orgf09714b">7. <a href="https://intelx.io/">Intelligence X</a></h3>
<div class="outline-text-3" id="text-orgf09714b">
<ul class="org-ul">
<li><b>Propósito</b>: Busca datos en la Dark Web y archivos expuestos.</li>
<li><b>Límite Gratuito</b>: 50 solicitudes/mes.</li>
<li><b>Uso</b>:</li>
</ul>
<div class="org-src-container">
<pre class="src src-sh">curl -H <span style="color: #a44185;">"x-key: TU_API_KEY"</span> <span style="color: #a44185;">"https://api.intelx.io/intelligent/search?term=dominio.com"</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org36af834" class="outline-3">
<h3 id="org36af834">8. <a href="https://dnsdumpster.com/">DNSDumpster</a></h3>
<div class="outline-text-3" id="text-org36af834">
<ul class="org-ul">
<li><b>Propósito</b>: Mapea subdominios y registros DNS de un dominio.</li>
<li><b>Límite Gratuito</b>: Sin límite explícito, uso web.</li>
<li><b>Uso</b>: Accede a la web y realiza la consulta manualmente.</li>
</ul>
</div>
</div>
<div id="outline-container-org30603f8" class="outline-3">
<h3 id="org30603f8">9. <a href="https://www.censys.io/">Censys</a></h3>
<div class="outline-text-3" id="text-org30603f8">
<ul class="org-ul">
<li><b>Propósito</b>: Inventario de dispositivos y certificados SSL.</li>
<li><b>Límite Gratuito</b>: 250 solicitudes/mes.</li>
<li><b>Uso</b>:</li>
</ul>
<div class="org-src-container">
<pre class="src src-python"><span style="color: #219fd5; font-style: italic;">import</span> censys.certificates
<span style="color: #1857a4;">certs</span> = censys.certificates.CensysCertificates(api_id=<span style="color: #a44185;">"TU_ID"</span>, api_secret=<span style="color: #a44185;">"TU_SECRET"</span>)
<span style="color: #219fd5; font-style: italic;">for</span> cert <span style="color: #219fd5; font-style: italic;">in</span> certs.search(<span style="color: #a44185;">"parsed.names:example.com"</span>):
    <span style="color: #dc3eb7;">print</span>(cert)
</pre>
</div>
</div>
</div>
<div id="outline-container-org23dfc42" class="outline-3">
<h3 id="org23dfc42">10. <a href="https://www.abuseipdb.com/">AbuseIPDB</a></h3>
<div class="outline-text-3" id="text-org23dfc42">
<ul class="org-ul">
<li><b>Propósito</b>: Reporta y verifica IPs sospechosas.</li>
<li><b>Límite Gratuito</b>: 1,000 solicitudes/día.</li>
<li><b>Uso</b>:</li>
</ul>
<div class="org-src-container">
<pre class="src src-sh">curl -G https://api.abuseipdb.com/api/v2/check <span style="color: #a44185;">\</span>
  --data-urlencode <span style="color: #a44185;">"ipAddress=1.1.1.1"</span> <span style="color: #a44185;">\</span>
  -H <span style="color: #a44185;">"Key: TU_API_KEY"</span> <span style="color: #a44185;">\</span>
  -H <span style="color: #a44185;">"Accept: application/json"</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgff60fc5" class="outline-3">
<h3 id="orgff60fc5">11. <a href="https://packettotal.com/">PacketTotal</a></h3>
<div class="outline-text-3" id="text-orgff60fc5">
<ul class="org-ul">
<li><b>Propósito</b>: Analiza capturas de paquetes (PCAP) para detectar amenazas.</li>
<li><b>Límite Gratuito</b>: 10 análisis/mes.</li>
<li><b>Uso</b>: Accede a la web y sube el archivo PCAP manualmente.</li>
</ul>
</div>
</div>
<div id="outline-container-org4b01f37" class="outline-3">
<h3 id="org4b01f37">12. <a href="https://otx.alienvault.com/">OTX AlienVault</a></h3>
<div class="outline-text-3" id="text-org4b01f37">
<ul class="org-ul">
<li><b>Propósito</b>: Comparte inteligencia de amenazas (IoCs, malware).</li>
<li><b>Límite Gratuito</b>: Acceso completo a la API.</li>
<li><b>Uso</b>:</li>
</ul>
<div class="org-src-container">
<pre class="src src-sh">curl -H <span style="color: #a44185;">"X-OTX-API-KEY: TU_API_KEY"</span> <span style="color: #a44185;">"https://otx.alienvault.com/api/v1/indicators/IPv4/8.8.8.8"</span>
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org7b907bb" class="outline-2">
<h2 id="org7b907bb">📊 Tabla Comparativa Extendida</h2>
<div class="outline-text-2" id="text-org7b907bb">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Servicio</th>
<th scope="col" class="org-left">Propósito</th>
<th scope="col" class="org-left">Límite Gratuito</th>
<th scope="col" class="org-left">Tipo de Consulta</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">HaveIBeenPwned</td>
<td class="org-left">Filtraciones de datos</td>
<td class="org-left">1,500/mes</td>
<td class="org-left">API</td>
</tr>

<tr>
<td class="org-left">VirusTotal</td>
<td class="org-left">Análisis de archivos/URLs</td>
<td class="org-left">500/día, 4 archivos/mes</td>
<td class="org-left">API</td>
</tr>

<tr>
<td class="org-left">Shodan</td>
<td class="org-left">Dispositivos conectados</td>
<td class="org-left">100 créditos/mes</td>
<td class="org-left">API</td>
</tr>

<tr>
<td class="org-left">Dehashed</td>
<td class="org-left">Filtraciones profundas</td>
<td class="org-left">5/día</td>
<td class="org-left">API</td>
</tr>

<tr>
<td class="org-left">GreyNoise</td>
<td class="org-left">IPs maliciosas</td>
<td class="org-left">1,000/mes</td>
<td class="org-left">API</td>
</tr>

<tr>
<td class="org-left">URLScan.io</td>
<td class="org-left">Escaneo de URLs</td>
<td class="org-left">10/día</td>
<td class="org-left">API</td>
</tr>

<tr>
<td class="org-left">Intelligence X</td>
<td class="org-left">Dark Web y archivos expuestos</td>
<td class="org-left">50/mes</td>
<td class="org-left">API</td>
</tr>

<tr>
<td class="org-left">DNSDumpster</td>
<td class="org-left">Subdominios y DNS</td>
<td class="org-left">Ilimitado (web)</td>
<td class="org-left">Web</td>
</tr>

<tr>
<td class="org-left">Censys</td>
<td class="org-left">Certificados/Inventario</td>
<td class="org-left">250/mes</td>
<td class="org-left">API/Python</td>
</tr>

<tr>
<td class="org-left">AbuseIPDB</td>
<td class="org-left">IPs sospechosas</td>
<td class="org-left">1,000/día</td>
<td class="org-left">API</td>
</tr>

<tr>
<td class="org-left">PacketTotal</td>
<td class="org-left">Análisis de PCAP</td>
<td class="org-left">10/mes</td>
<td class="org-left">Web</td>
</tr>

<tr>
<td class="org-left">OTX AlienVault</td>
<td class="org-left">Inteligencia de amenazas</td>
<td class="org-left">Completo</td>
<td class="org-left">API</td>
</tr>
</tbody>
</table>

<p>
<b>Conclusión</b>: Estas herramientas permiten fortalecer la seguridad digital de cualquier usuario, automatizando tareas clave y centralizando resultados para una gestión más eficiente.
</p>

<p>
Citations:
[1] <a href="https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/56277478/527b378c-edf3-45cc-8e5c-b1cfbe13c35a/paste.txt">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/56277478/527b378c-edf3-45cc-8e5c-b1cfbe13c35a/paste.txt</a>
</p>

<p>
&#x2014;
Answer from Perplexity: pplx.ai/share
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-haveibeenpwned.html">haveibeenpwned</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-virustotal.html">virustotal</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-shodan.html">shodan</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-dehashed.html">dehashed</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-greynoise.html">greynoise</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-urlscan.html">urlscan</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[haveibeenpwned]]></category>
  <category><![CDATA[virustotal]]></category>
  <category><![CDATA[shodan]]></category>
  <category><![CDATA[dehashed]]></category>
  <category><![CDATA[greynoise]]></category>
  <category><![CDATA[urlscan]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-24--12-servicios-de-ciberseguridad-gratuitos-para-usuarios-(gu%C3%ADa-2024).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-24--12-servicios-de-ciberseguridad-gratuitos-para-usuarios-(gu%C3%ADa-2024).html</guid>
  <pubDate>Thu, 24 Apr 2025 12:53:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Auditoría y generación de contraseñas seguras en Emacs]]></title>
  <description><![CDATA[
<nav id="table-of-contents" role="doc-toc">
<h2>Table of Contents</h2>
<div id="text-table-of-contents" role="doc-toc">
<ul>
<li><a href="#org056c602">1. Introducción</a></li>
<li><a href="#org45b1212">2. ¿Por qué usarlo?</a></li>
<li><a href="#org4740a4e">3. Funcionalidades principales</a></li>
<li><a href="#org91e040d">4. Código fuente del módulo</a></li>
<li><a href="#org6dbfed0">5. Diagrama del flujo de auditoría (PlantUML)</a></li>
<li><a href="#orgc74f9cf">6. Cómo usarlo</a></li>
<li><a href="#org7b5dc06">7. Próximos pasos</a></li>
<li><a href="#org8eb1ee6">8. Recomendaciones finales</a></li>
<li><a href="#org765587d">9. Conclusión</a></li>
</ul>
</div>
</nav>
<div id="outline-container-org056c602" class="outline-2">
<h2 id="org056c602"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
En esta entrada presento <code>password-audit.el</code>, un módulo para Emacs que permite auditar contraseñas, generar claves seguras y verificar la complejidad mínima exigida. También añade soporte opcional para el gestor de contraseñas <code>pass</code> desde la terminal.
</p>
</div>
</div>
<div id="outline-container-org45b1212" class="outline-2">
<h2 id="org45b1212"><span class="section-number-2">2.</span> ¿Por qué usarlo?</h2>
<div class="outline-text-2" id="text-2">
<p>
Con frecuencia usamos contraseñas débiles o repetidas. Este módulo ayuda a evaluar si una contraseña es vulnerable, y ofrece recomendaciones inmediatas para mejorarla.
</p>
</div>
</div>
<div id="outline-container-org4740a4e" class="outline-2">
<h2 id="org4740a4e"><span class="section-number-2">3.</span> Funcionalidades principales</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li>Auditoría de longitud, complejidad y patrones inseguros.</li>
<li>Generación de contraseñas seguras.</li>
<li>Integración con `pass` para analizar contraseñas almacenadas.</li>
</ul>
</div>
</div>
<div id="outline-container-org91e040d" class="outline-2">
<h2 id="org91e040d"><span class="section-number-2">4.</span> Código fuente del módulo</h2>
<div class="outline-text-2" id="text-4">
<div class="org-src-container">
<pre class="src src-emacs-lisp">  <span style="color: #8195b0; font-style: italic;">;;; </span><span style="color: #8195b0; font-style: italic;">password-audit.el --- Auditor&#237;a de contrase&#241;as + integraci&#243;n con pass -*- lexical-binding: t; -*-</span>

  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Author: Mike</span>
  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Version: 1.1</span>
  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Package-Requires: ((emacs "24.3") (cl-lib "0.5"))</span>
  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Keywords: security, password, audit</span>
  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">License: MIT</span>

(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">cl-lib</span>)

(<span style="color: #219fd5; font-style: italic;">defvar</span> <span style="color: #1857a4;">audit-password-sequences</span> '(<span style="color: #a44185;">"abc"</span> <span style="color: #a44185;">"123"</span> <span style="color: #a44185;">"qwe"</span> <span style="color: #a44185;">"password"</span> <span style="color: #a44185;">"qaz"</span>)
  <span style="color: #60a8a1; font-style: italic;">"Lista de secuencias comunes que deben evitarse en contrase&#241;as."</span>)

(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">audit-password-strength</span> (password)
  <span style="color: #60a8a1; font-style: italic;">"Audita la fortaleza de una contrase&#241;a y sugiere mejoras."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span> <span style="color: #a44185;">"sContrase&#241;a a auditar: "</span>)
  (<span style="color: #219fd5; font-style: italic;">let*</span> ((length (length password))
         (has-uppercase (string-match-p <span style="color: #a44185;">"[A-Z]"</span> password))
         (has-lowercase (string-match-p <span style="color: #a44185;">"[a-z]"</span> password))
         (has-numbers (string-match-p <span style="color: #a44185;">"[0-9]"</span> password))
         (has-symbols (string-match-p <span style="color: #a44185;">"[</span><span style="color: #219fd5; font-weight: bold;">^</span><span style="color: #a44185;">a-zA-Z0-9]"</span> password))
         (has-sequences (cl-some (<span style="color: #219fd5; font-style: italic;">lambda</span> (seq)
                                   (string-match-p (regexp-quote seq) password))
                                 audit-password-sequences))
         (score 0)
         (feedback '()))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Evaluaci&#243;n de longitud</span>
    (<span style="color: #219fd5; font-style: italic;">cond</span>
     ((&lt; length 8)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud cr&#237;tica: menos de 8 caracteres."</span> feedback))
     ((&lt; length 12)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud insuficiente: menos de 12 caracteres."</span> feedback)
      (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score))
     ((&lt; length 16)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud aceptable: entre 12-16 caracteres."</span> feedback)
      (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score 2))
     (t
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud excelente: m&#225;s de 16 caracteres."</span> feedback)
      (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score 3)))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Evaluaci&#243;n de complejidad</span>
    (<span style="color: #219fd5; font-style: italic;">when</span> has-uppercase (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene may&#250;sculas [+]"</span> feedback))
    (<span style="color: #219fd5; font-style: italic;">when</span> has-lowercase (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene min&#250;sculas [+]"</span> feedback))
    (<span style="color: #219fd5; font-style: italic;">when</span> has-numbers   (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene n&#250;meros [+]"</span> feedback))
    (<span style="color: #219fd5; font-style: italic;">when</span> has-symbols   (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene s&#237;mbolos especiales [+]"</span> feedback))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Penalizaciones</span>
    (<span style="color: #219fd5; font-style: italic;">when</span> has-sequences
      (<span style="color: #219fd5; font-style: italic;">cl-decf</span> score)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene secuencias comunes (ej: abc, 123) [-]"</span> feedback))

    (<span style="color: #219fd5; font-style: italic;">when</span> (string-match-p (regexp-quote (user-login-name)) password)
      (<span style="color: #219fd5; font-style: italic;">cl-decf</span> score 2)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene tu nombre de usuario [-]"</span> feedback))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Limitar puntuaci&#243;n m&#225;xima</span>
    (<span style="color: #219fd5; font-style: italic;">setq</span> score (min score 10))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Mostrar resultados</span>
    (<span style="color: #219fd5; font-style: italic;">with-output-to-temp-buffer</span> <span style="color: #a44185;">"*Password Audit*"</span>
      (pop-to-buffer <span style="color: #a44185;">"*Password Audit*"</span>)
      (erase-buffer)
      (insert <span style="color: #a44185;">"=== AUDITOR&#205;A DE SEGURIDAD DE CONTRASE&#209;A ===\n\n"</span>)
      (insert (format <span style="color: #a44185;">"Puntuaci&#243;n: %d/10\n\n"</span> score))
      (insert <span style="color: #a44185;">"An&#225;lisis:\n"</span>)
      (<span style="color: #219fd5; font-style: italic;">dolist</span> (item (reverse feedback))
        (insert (format <span style="color: #a44185;">"&#8226; %s\n"</span> item)))
      (insert <span style="color: #a44185;">"\nRecomendaciones:\n"</span>)
      (<span style="color: #219fd5; font-style: italic;">cond</span>
       ((&lt; score 4)
        (insert <span style="color: #a44185;">"&#9888;&#65039; Contrase&#241;a D&#201;BIL - Se recomienda cambio inmediato\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Use la funci&#243;n `generate-strong-password`\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Longitud m&#237;nima sugerida: 16 caracteres\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Incluir letras, n&#250;meros y s&#237;mbolos\n"</span>))
       ((&lt; score 7)
        (insert <span style="color: #a44185;">"&#9888;&#65039; Contrase&#241;a MODERADA - Se recomienda mejora\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Considere alargarla\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; A&#241;adir caracteres variados\n"</span>))
       (t
        (insert <span style="color: #a44185;">"&#9989; Contrase&#241;a FUERTE - Cumple con los est&#225;ndares\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Cambiarla peri&#243;dicamente\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; No reutilizarla en otros servicios\n"</span>)))
      (insert <span style="color: #a44185;">"\n=== FIN DEL AN&#193;LISIS ===\n"</span>))))

(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">generate-strong-password</span> (<span style="color: #dc3eb7;">&amp;optional</span> length)
  <span style="color: #60a8a1; font-style: italic;">"Genera una contrase&#241;a aleatoria de LENGTH caracteres (m&#237;nimo 16)."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span> <span style="color: #a44185;">"nLongitud de la contrase&#241;a (m&#237;nimo 16): "</span>)
  (<span style="color: #219fd5; font-style: italic;">let*</span> ((chars <span style="color: #a44185;">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()_-+=&lt;&gt;?"</span>)
         (len (max 16 (<span style="color: #219fd5; font-style: italic;">or</span> length 16)))
         (pass (<span style="color: #219fd5; font-style: italic;">cl-loop</span> repeat len
                        concat (string (elt chars (random (length chars)))))))
    (kill-new pass)
    (message <span style="color: #a44185;">"Contrase&#241;a copiada al portapapeles: %s"</span> pass)))

(<span style="color: #219fd5; font-style: italic;">provide</span> '<span style="color: #2f86d2;">password-audit</span>)

<span style="color: #8195b0; font-style: italic;">;;; </span><span style="color: #8195b0; font-style: italic;">password-audit.el ends here</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org6dbfed0" class="outline-2">
<h2 id="org6dbfed0"><span class="section-number-2">5.</span> Diagrama del flujo de auditoría (PlantUML)</h2>
<div class="outline-text-2" id="text-5">

<figure id="org8a1ac7f">
<img src="images/password-audit-diagram.png" alt="password-audit-diagram.png">

</figure>
</div>
</div>
<div id="outline-container-orgc74f9cf" class="outline-2">
<h2 id="orgc74f9cf"><span class="section-number-2">6.</span> Cómo usarlo</h2>
<div class="outline-text-2" id="text-6">
<ul class="org-ul">
<li><p>
Carga el archivo con:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(load <span style="color: #a44185;">"~/ruta/a/password-audit.el"</span>)
</pre>
</div></li>

<li>Ejecuta:
<ul class="org-ul">
<li><code>M-x audit-password-strength</code> para auditar manualmente.</li>
<li><code>M-x generate-strong-password</code> para crear contraseñas seguras.</li>
<li><code>M-x audit-password-from-pass</code> para auditar claves almacenadas en <code>pass</code>.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org7b5dc06" class="outline-2">
<h2 id="org7b5dc06"><span class="section-number-2">7.</span> Próximos pasos</h2>
<div class="outline-text-2" id="text-7">
<p>
Estoy trabajando en:
</p>
<ul class="org-ul">
<li>Exportación de reportes en Org.</li>
<li>Clasificación automática por fortaleza.</li>
<li>Versión interactiva con botones y enlaces.</li>
</ul>
</div>
</div>
<div id="outline-container-org8eb1ee6" class="outline-2">
<h2 id="org8eb1ee6"><span class="section-number-2">8.</span> Recomendaciones finales</h2>
<div class="outline-text-2" id="text-8">
<ul class="org-ul">
<li>No reutilices contraseñas en diferentes servicios.</li>
<li>Usa frases largas y mezcla diferentes tipos de caracteres.</li>
<li>Guarda tus contraseñas en un gestor seguro, como <code>pass</code>, <code>KeePassXC</code> o incluso con una integración segura en Emacs.</li>
</ul>
</div>
</div>
<div id="outline-container-org765587d" class="outline-2">
<h2 id="org765587d"><span class="section-number-2">9.</span> Conclusión</h2>
<div class="outline-text-2" id="text-9">
<p>
Gracias a este pequeño módulo puedes mejorar tu higiene digital sin salir de Emacs. ¡Haz de Emacs tu central de seguridad también!
</p>


<p>
¿Tienes sugerencias? Déjalas en los comentarios o en GitHub.
</p>

<p>
&#x2014;
</p>

<p>
<b>Hecho con Emacs y café ☕ por Mike</b>
</p>

<hr>
<p><em>Este artículo forma parte de la serie "Seguridad con Emacs" en <strong>Emacs con Esteroides</strong>.</em></p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-contraseñas.html">contraseñas</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-pass.html">pass</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-orgmode.html">orgmode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[contraseñas]]></category>
  <category><![CDATA[pass]]></category>
  <category><![CDATA[orgmode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-24-auditor%C3%ADa-y-generaci%C3%B3n-de-contrase%C3%B1as-seguras-en-emacs.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-24-auditor%C3%ADa-y-generaci%C3%B3n-de-contrase%C3%B1as-seguras-en-emacs.html</guid>
  <pubDate>Thu, 24 Apr 2025 05:49:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Gestión de Contraseñas Fuertes con Emacs: Seguridad Digital para el Usuario Exigente]]></title>
  <description><![CDATA[
<div id="outline-container-org9b80c02" class="outline-2">
<h2 id="org9b80c02">Introducción</h2>
<div class="outline-text-2" id="text-org9b80c02">
<p>
En la era digital actual, donde las brechas de seguridad y los robos de datos son cada vez más comunes, la importancia de contar con contraseñas fuertes se ha convertido en un pilar fundamental de nuestra seguridad en línea. Como usuarios avanzados de Emacs, tenemos a nuestra disposición un potente entorno que puede ayudarnos no solo a crear contraseñas robustas, sino también a gestionar todo nuestro sistema de autenticación de manera eficiente y segura.
</p>

<p>
Este artículo explorará en profundidad la creación y gestión de contraseñas fuertes, analizando tanto las ventajas como los inconvenientes de diferentes enfoques, y proporcionará soluciones prácticas basadas en Emacs y scripts de Bash que potenciarán significativamente nuestra seguridad digital.
</p>
</div>
</div>
<div id="outline-container-orgd12406a" class="outline-2">
<h2 id="orgd12406a">¿Qué hace que una contraseña sea fuerte?</h2>
<div class="outline-text-2" id="text-orgd12406a">
<p>
Antes de adentrarnos en las herramientas y métodos de generación, es esencial comprender qué características definen a una contraseña como "fuerte":
</p>
</div>
<div id="outline-container-orgf8be08a" class="outline-3">
<h3 id="orgf8be08a">Complejidad</h3>
<div class="outline-text-3" id="text-orgf8be08a">
<p>
Una contraseña verdaderamente robusta debe incluir:
</p>

<ul class="org-ul">
<li>Letras mayúsculas y minúsculas</li>
<li>Números</li>
<li>Símbolos especiales (@, #, $, %, etc.)</li>
<li>Sin palabras reconocibles del diccionario</li>
<li>Sin patrones obvios (como "123456" o "qwerty")</li>
</ul>
</div>
</div>
<div id="outline-container-org779155c" class="outline-3">
<h3 id="org779155c">Longitud</h3>
<div class="outline-text-3" id="text-org779155c">
<p>
La longitud es posiblemente el factor más importante:
</p>

<ul class="org-ul">
<li>Las contraseñas de 8 caracteres ya no se consideran seguras</li>
<li>El estándar actual recomienda un mínimo de 12 caracteres</li>
<li>Para información crítica, 16 o más caracteres es lo recomendable</li>
</ul>
</div>
</div>
<div id="outline-container-org12a36c9" class="outline-3">
<h3 id="org12a36c9">Aleatoriedad</h3>
<div class="outline-text-3" id="text-org12a36c9">
<p>
La verdadera seguridad proviene de la aleatoriedad:
</p>

<ul class="org-ul">
<li>Las contraseñas generadas aleatoriamente son exponencialmente más seguras</li>
<li>La aleatoriedad humana es predecible y sigue patrones inconscientes</li>
<li>Las herramientas de generación algorítmica ofrecen aleatorización real</li>
</ul>
</div>
</div>
<div id="outline-container-orgffb8006" class="outline-3">
<h3 id="orgffb8006">Unicidad</h3>
<div class="outline-text-3" id="text-orgffb8006">
<p>
Cada servicio o cuenta debe tener una contraseña única:
</p>

<ul class="org-ul">
<li>La reutilización de contraseñas es el error más común y peligroso</li>
<li>Una brecha en un servicio no debería comprometer otras cuentas</li>
<li>La gestión de múltiples contraseñas requiere sistemas organización</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org03d9c40" class="outline-2">
<h2 id="org03d9c40">Ventajas de las contraseñas fuertes</h2>
<div class="outline-text-2" id="text-org03d9c40">
<p>
Las contraseñas robustas proporcionan numerosos beneficios que van más allá de la simple protección de acceso:
</p>
</div>
<div id="outline-container-orgc2fab23" class="outline-3">
<h3 id="orgc2fab23">Resistencia a ataques de fuerza bruta</h3>
<div class="outline-text-3" id="text-orgc2fab23">
<p>
Los ataques de fuerza bruta consisten en probar sistemáticamente todas las combinaciones posibles hasta encontrar la correcta. Una contraseña fuerte:
</p>

<ul class="org-ul">
<li>Aumenta exponencialmente el tiempo necesario para descifrarla</li>
<li>Puede requerir años o incluso siglos de procesamiento computacional</li>
<li>Hace que el ataque sea prácticamente inviable por su costo computacional</li>
</ul>
</div>
</div>
<div id="outline-container-org3a95f79" class="outline-3">
<h3 id="org3a95f79">Protección contra ataques de diccionario</h3>
<div class="outline-text-3" id="text-org3a95f79">
<p>
Estos ataques prueban palabras comunes y sus variaciones:
</p>

<ul class="org-ul">
<li>Las contraseñas aleatorias no aparecen en diccionarios</li>
<li>La mezcla de caracteres especiales complica estos ataques</li>
<li>La ausencia de palabras reconocibles elimina puntos de entrada lógicos</li>
</ul>
</div>
</div>
<div id="outline-container-org0aa3f60" class="outline-3">
<h3 id="org0aa3f60">Defensa ante ingeniería social</h3>
<div class="outline-text-3" id="text-org0aa3f60">
<p>
Muchos ataques se basan en información personal fácilmente obtenible:
</p>

<ul class="org-ul">
<li>Las contraseñas generadas aleatoriamente no contienen información personal</li>
<li>Los atacantes no pueden deducirlas a partir de datos públicos</li>
<li>Se elimina la vulnerabilidad asociada a fechas, nombres o preferencias personales</li>
</ul>
</div>
</div>
<div id="outline-container-orgf200193" class="outline-3">
<h3 id="orgf200193">Mayor tiempo de protección</h3>
<div class="outline-text-3" id="text-orgf200193">
<p>
Las contraseñas fuertes permanecen seguras por más tiempo:
</p>

<ul class="org-ul">
<li>Resisten avances en capacidad computacional</li>
<li>Se mantienen vigentes incluso si las técnicas de ataque mejoran</li>
<li>Proporcionan un margen de seguridad ante la evolución tecnológica</li>
</ul>
</div>
</div>
<div id="outline-container-orgae8b501" class="outline-3">
<h3 id="orgae8b501">Cumplimiento de políticas de seguridad</h3>
<div class="outline-text-3" id="text-orgae8b501">
<p>
Las organizaciones y servicios tienen requisitos cada vez más estrictos:
</p>

<ul class="org-ul">
<li>Las contraseñas robustas suelen cumplir automáticamente estas políticas</li>
<li>Se evitan problemas de compatibilidad con sistemas corporativos o gubernamentales</li>
<li>Se facilita el cumplimiento normativo en entornos regulados</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org7b35707" class="outline-2">
<h2 id="org7b35707">Inconvenientes de las contraseñas fuertes</h2>
<div class="outline-text-2" id="text-org7b35707">
<p>
Sin embargo, la implementación de contraseñas robustas también presenta algunos desafíos:
</p>
</div>
<div id="outline-container-orgd068be3" class="outline-3">
<h3 id="orgd068be3">Dificultad para memorizarlas</h3>
<div class="outline-text-3" id="text-orgd068be3">
<p>
El principal inconveniente es la memorización:
</p>

<ul class="org-ul">
<li>Las contraseñas aleatorias complejas son difíciles de recordar</li>
<li>Tener múltiples contraseñas diferentes aumenta esta dificultad</li>
<li>La complejidad puede llevar al usuario a anotar las contraseñas físicamente</li>
</ul>
</div>
</div>
<div id="outline-container-org2fb2d76" class="outline-3">
<h3 id="org2fb2d76">Riesgo de pérdida de acceso</h3>
<div class="outline-text-3" id="text-org2fb2d76">
<p>
Si se olvida una contraseña compleja:
</p>

<ul class="org-ul">
<li>Los procesos de recuperación pueden ser complicados</li>
<li>Algunos sistemas podrían quedar inaccesibles permanentemente</li>
<li>La frustración podría llevar a crear respaldos inseguros</li>
</ul>
</div>
</div>
<div id="outline-container-orge0c2511" class="outline-3">
<h3 id="orge0c2511">Problemas de compatibilidad</h3>
<div class="outline-text-3" id="text-orge0c2511">
<p>
No todos los sistemas aceptan contraseñas muy complejas:
</p>

<ul class="org-ul">
<li>Algunos servicios limitan los caracteres especiales permitidos</li>
<li>Ciertos sistemas imponen límites de longitud máxima</li>
<li>Plataformas legacy podrían tener restricciones técnicas</li>
</ul>
</div>
</div>
<div id="outline-container-org7c8868c" class="outline-3">
<h3 id="org7c8868c">Inconvenientes prácticos</h3>
<div class="outline-text-3" id="text-org7c8868c">
<p>
El uso diario presenta desafíos adicionales:
</p>

<ul class="org-ul">
<li>Escribir contraseñas complejas puede ser tedioso, especialmente en dispositivos móviles</li>
<li>La introducción manual aumenta el riesgo de errores tipográficos</li>
<li>Los cambios frecuentes de contraseña multiplican estos problemas</li>
</ul>
</div>
</div>
<div id="outline-container-orgeebb2ed" class="outline-3">
<h3 id="orgeebb2ed">Fricción con la experiencia de usuario</h3>
<div class="outline-text-3" id="text-orgeebb2ed">
<p>
La seguridad excesiva puede afectar la usabilidad:
</p>

<ul class="org-ul">
<li>Puede aumentar el tiempo de acceso a los servicios</li>
<li>Podría generar frustración en usuarios menos técnicos</li>
<li>El equilibrio entre seguridad y conveniencia es delicado</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgf8fd8b4" class="outline-2">
<h2 id="orgf8fd8b4">Generación de contraseñas fuertes con Bash</h2>
<div class="outline-text-2" id="text-orgf8fd8b4">
<p>
Una solución pragmática para generar contraseñas robustas es utilizar scripts de Bash en sistemas Unix/Linux. A continuación, presentamos un script completo que permite generar contraseñas altamente seguras con diferentes configuraciones:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">strong-password-generator.sh - Generador de contrase&#241;as seguras</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Autor: Emacs con Esteroides</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Fecha: 2025-04-23</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Uso: ./strong-password-generator.sh [longitud] [complejidad]</span>
<span style="color: #8195b0; font-style: italic;">#   </span><span style="color: #8195b0; font-style: italic;">longitud: n&#250;mero de caracteres (por defecto: 16)</span>
<span style="color: #8195b0; font-style: italic;">#   </span><span style="color: #8195b0; font-style: italic;">complejidad: 1=b&#225;sica, 2=media, 3=alta, 4=extrema (por defecto: 3)</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Colores para mejor visualizaci&#243;n</span>
<span style="color: #1857a4;">RED</span>=<span style="color: #a44185;">'\033[0;31m'</span>
<span style="color: #1857a4;">GREEN</span>=<span style="color: #a44185;">'\033[0;32m'</span>
<span style="color: #1857a4;">BLUE</span>=<span style="color: #a44185;">'\033[0;34m'</span>
<span style="color: #1857a4;">YELLOW</span>=<span style="color: #a44185;">'\033[0;33m'</span>
<span style="color: #1857a4;">NC</span>=<span style="color: #a44185;">'\033[0m'</span> <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">No Color</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Banner</span>
<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${BLUE}"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#9556;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9559;"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#9553;                                               &#9553;"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#9553;   GENERADOR DE CONTRASE&#209;AS ULTRA-SEGURAS      &#9553;"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#9553;   Para usuarios de Emacs con Esteroides       &#9553;"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#9553;                                               &#9553;"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#9562;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9565;"</span>
<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${NC}"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Valores por defecto</span>
<span style="color: #1857a4;">PASSWORD_LENGTH</span>=${<span style="color: #1857a4;">1</span>:-16}
<span style="color: #1857a4;">COMPLEXITY_LEVEL</span>=${<span style="color: #1857a4;">2</span>:-3}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Validar entrada</span>
<span style="color: #219fd5; font-style: italic;">if</span> <span style="color: #219fd5; font-weight: bold;">!</span> [[ <span style="color: #a44185;">"$PASSWORD_LENGTH"</span> =~ ^[0-9]+$ ]]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}Error: La longitud debe ser un n&#250;mero entero.${NC}"</span>
    <span style="color: #219fd5; font-style: italic;">exit</span> 1
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #219fd5; font-style: italic;">if</span> [[ <span style="color: #a44185;">"$PASSWORD_LENGTH"</span> -lt 8 ]]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}Advertencia: Se recomienda una longitud m&#237;nima de 12 caracteres.${NC}"</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Continuando con longitud $PASSWORD_LENGTH..."</span>
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #219fd5; font-style: italic;">if</span> <span style="color: #219fd5; font-weight: bold;">!</span> [[ <span style="color: #a44185;">"$COMPLEXITY_LEVEL"</span> =~ ^[1-4]$ ]]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}Error: El nivel de complejidad debe ser 1, 2, 3 o 4.${NC}"</span>
    <span style="color: #219fd5; font-style: italic;">exit</span> 1
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Definir conjuntos de caracteres seg&#250;n nivel de complejidad</span>
<span style="color: #219fd5; font-style: italic;">case</span> $<span style="color: #1857a4;">COMPLEXITY_LEVEL</span><span style="color: #219fd5; font-style: italic;"> in</span>
    1) <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">B&#225;sico: letras y n&#250;meros</span>
        <span style="color: #1857a4;">CHAR_SET</span>=<span style="color: #a44185;">"a-zA-Z0-9"</span>
        <span style="color: #1857a4;">DESCRIPTION</span>=<span style="color: #a44185;">"b&#225;sica (letras y n&#250;meros)"</span>
        ;;
    2) <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Medio: a&#241;ade algunos s&#237;mbolos comunes</span>
        <span style="color: #1857a4;">CHAR_SET</span>=<span style="color: #a44185;">"a-zA-Z0-9!@#$%^&amp;*"</span>
        <span style="color: #1857a4;">DESCRIPTION</span>=<span style="color: #a44185;">"media (letras, n&#250;meros y s&#237;mbolos comunes)"</span>
        ;;
    3) <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Alto: amplia gama de s&#237;mbolos</span>
        <span style="color: #1857a4;">CHAR_SET</span>=<span style="color: #a44185;">"a-zA-Z0-9!@#$%^&amp;*()_+-=[]{}|;:,.&lt;&gt;?/~"</span>
        <span style="color: #1857a4;">DESCRIPTION</span>=<span style="color: #a44185;">"alta (amplia gama de caracteres)"</span>
        ;;
    4) <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Extremo: incluye caracteres Unicode</span>
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generamos con todo y a&#241;adimos caracteres Unicode</span>
        <span style="color: #1857a4;">CHAR_SET</span>=<span style="color: #a44185;">"a-zA-Z0-9!@#$%^&amp;*()_+-=[]{}|;:,.&lt;&gt;?/~\"\\\`"</span>
        <span style="color: #1857a4;">DESCRIPTION</span>=<span style="color: #a44185;">"extrema (incluyendo caracteres especiales avanzados)"</span>
        ;;
<span style="color: #219fd5; font-style: italic;">esac</span>

<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}Generando contrase&#241;a con:${NC}"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#8226; Longitud: $PASSWORD_LENGTH caracteres"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#8226; Complejidad: $DESCRIPTION"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para generar la contrase&#241;a</span>
<span style="color: #dc3eb7;">generate_password</span>() {
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">length</span>=$<span style="color: #1857a4;">1</span>
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">charset</span>=$<span style="color: #1857a4;">2</span>
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">complexity</span>=$<span style="color: #1857a4;">3</span>

    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Base64 da buena entrop&#237;a</span>
    <span style="color: #219fd5; font-style: italic;">if</span> [[ $<span style="color: #1857a4;">complexity</span> -eq 4 ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Para nivel extremo, incluimos algunos caracteres Unicode</span>
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generamos una contrase&#241;a base</span>
        <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">base_password</span>=$(<span style="color: #219fd5; font-weight: bold;">LC_ALL=C tr -dc "$charset" &lt; /dev/urandom | head -c $(($length - 3</span>)))
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">A&#241;adimos 3 caracteres Unicode comunes pero poco usados en contrase&#241;as</span>
        <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">unicode_chars</span>=$(<span style="color: #219fd5; font-weight: bold;">echo -e "\u2603\u03A9\u2764"</span>)
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"${base_password}${unicode_chars}"</span> | fold -w1 | shuf | tr -d <span style="color: #a44185;">'\n'</span> | head -c $<span style="color: #1857a4;">length</span>
    <span style="color: #219fd5; font-style: italic;">else</span>
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Para otros niveles usamos el conjunto definido</span>
        <span style="color: #1857a4;">LC_ALL</span>=C tr -dc <span style="color: #a44185;">"$charset"</span> &lt; /dev/urandom | head -c $<span style="color: #1857a4;">length</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generar contrase&#241;a</span>
<span style="color: #1857a4;">PASSWORD</span>=$(<span style="color: #219fd5; font-weight: bold;">generate_password $PASSWORD_LENGTH "$CHAR_SET" $COMPLEXITY_LEVEL</span>)

<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${GREEN}Contrase&#241;a generada:${NC}"</span>
<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${BLUE}$PASSWORD${NC}"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Evaluaci&#243;n de la fortaleza</span>
<span style="color: #1857a4;">STRENGTH</span>=0
[[ ${#<span style="color: #1857a4;">PASSWORD</span>} -ge 12 ]] &amp;&amp; ((<span style="color: #1857a4;">STRENGTH</span>+=1))
[[ ${#<span style="color: #1857a4;">PASSWORD</span>} -ge 16 ]] &amp;&amp; ((<span style="color: #1857a4;">STRENGTH</span>+=1))
[[ <span style="color: #a44185;">"$PASSWORD"</span> =~ [A-Z] ]] &amp;&amp; ((<span style="color: #1857a4;">STRENGTH</span>+=1))
[[ <span style="color: #a44185;">"$PASSWORD"</span> =~ [a-z] ]] &amp;&amp; ((<span style="color: #1857a4;">STRENGTH</span>+=1))
[[ <span style="color: #a44185;">"$PASSWORD"</span> =~ [0-9] ]] &amp;&amp; ((<span style="color: #1857a4;">STRENGTH</span>+=1))
[[ <span style="color: #a44185;">"$PASSWORD"</span> =~ [^a-zA-Z0-9] ]] &amp;&amp; ((<span style="color: #1857a4;">STRENGTH</span>+=1))

<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${GREEN}Evaluaci&#243;n de fortaleza:${NC}"</span>
<span style="color: #219fd5; font-style: italic;">case</span> $<span style="color: #1857a4;">STRENGTH</span><span style="color: #219fd5; font-style: italic;"> in</span>
    6) <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}&#9733;&#9733;&#9733;&#9733;&#9733; Excelente${NC} - Pr&#225;cticamente imposible de romper"</span> ;;
    5) <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}&#9733;&#9733;&#9733;&#9733;&#9734; Muy buena${NC} - Extremadamente dif&#237;cil de comprometer"</span> ;;
    4) <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}&#9733;&#9733;&#9733;&#9734;&#9734; Buena${NC} - Resistente a la mayor&#237;a de ataques"</span> ;;
    3) <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}&#9733;&#9733;&#9734;&#9734;&#9734; Moderada${NC} - Ofrece protecci&#243;n b&#225;sica"</span> ;;
    *) <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}&#9733;&#9734;&#9734;&#9734;&#9734; D&#233;bil${NC} - Considere aumentar la complejidad"</span> ;;
<span style="color: #219fd5; font-style: italic;">esac</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Estimaci&#243;n del tiempo para romperla (muy aproximada)</span>
<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${GREEN}Tiempo estimado para romper mediante fuerza bruta:${NC}"</span>
<span style="color: #1857a4;">COMBINATIONS</span>=0
<span style="color: #219fd5; font-style: italic;">case</span> $<span style="color: #1857a4;">COMPLEXITY_LEVEL</span><span style="color: #219fd5; font-style: italic;"> in</span>
    1) <span style="color: #1857a4;">CHAR_COUNT</span>=62 ;; <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">a-z, A-Z, 0-9</span>
    2) <span style="color: #1857a4;">CHAR_COUNT</span>=71 ;; <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">+9 s&#237;mbolos comunes</span>
    3) <span style="color: #1857a4;">CHAR_COUNT</span>=95 ;; <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">ASCII imprimible est&#225;ndar</span>
    4) <span style="color: #1857a4;">CHAR_COUNT</span>=105 ;; <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Con algunos caracteres adicionales</span>
<span style="color: #219fd5; font-style: italic;">esac</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">F&#243;rmula b&#225;sica: combinaciones = conjunto^longitud</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Convertimos a notaci&#243;n cient&#237;fica para evitar desbordamientos</span>
<span style="color: #1857a4;">EXPONENT</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$PASSWORD_LENGTH * l($CHAR_COUNT</span><span style="color: #a44185;">)/l(10)"</span> | bc -l | awk <span style="color: #a44185;">'{printf "%.2f", $1}'</span>)
<span style="color: #1857a4;">CRACK_TIME</span>=<span style="color: #a44185;">""</span>

<span style="color: #219fd5; font-style: italic;">if</span> (( $(<span style="color: #219fd5; font-weight: bold;">echo "$EXPONENT &lt; 9" | bc -l</span>) )); <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #1857a4;">CRACK_TIME</span>=<span style="color: #a44185;">"Horas o d&#237;as"</span>
<span style="color: #219fd5; font-style: italic;">elif</span> (( $(<span style="color: #219fd5; font-weight: bold;">echo "$EXPONENT &lt; 12" | bc -l</span>) )); <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #1857a4;">CRACK_TIME</span>=<span style="color: #a44185;">"Meses"</span>
<span style="color: #219fd5; font-style: italic;">elif</span> (( $(<span style="color: #219fd5; font-weight: bold;">echo "$EXPONENT &lt; 15" | bc -l</span>) )); <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #1857a4;">CRACK_TIME</span>=<span style="color: #a44185;">"A&#241;os"</span>
<span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #1857a4;">CRACK_TIME</span>=<span style="color: #a44185;">"Siglos o milenios"</span>
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#8226; Combinaciones posibles: ~10^$EXPONENT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#8226; Tiempo aproximado: $CRACK_TIME (con hardware actual)"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Guardar en el portapapeles si est&#225; disponible xclip o xsel</span>
<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${GREEN}Acciones adicionales:${NC}"</span>
<span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v xclip &gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"$PASSWORD"</span> | xclip -selection clipboard
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#8226; Contrase&#241;a copiada al portapapeles (xclip)"</span>
<span style="color: #219fd5; font-style: italic;">elif </span><span style="color: #dc3eb7;">command</span> -v xsel &gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"$PASSWORD"</span> | xsel -b
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#8226; Contrase&#241;a copiada al portapapeles (xsel)"</span>
<span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#8226; Instale xclip o xsel para copiar autom&#225;ticamente al portapapeles"</span>
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"&#8226; Use ${YELLOW}Ctrl+Y${NC} para pegar esta contrase&#241;a en Emacs (despu&#233;s de copiarla)"</span>

<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${BLUE}Para usar desde Emacs, a&#241;ada este script a su init.el${NC}"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Consulte la secci&#243;n 'Integraci&#243;n con Emacs' en el blog Emacs con Esteroides"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">""</span>
</pre>
</div>

<p>
Este script ofrece:
</p>

<ul class="org-ul">
<li>Generación de contraseñas con distintos niveles de complejidad</li>
<li>Evaluación de la fortaleza de la contraseña generada</li>
<li>Estimación del tiempo necesario para romperla mediante fuerza bruta</li>
<li>Integración con el portapapeles para facilitar su uso</li>
<li>Feedback visual mediante colores y formato amigable</li>
</ul>
</div>
</div>
<div id="outline-container-org8621c78" class="outline-2">
<h2 id="org8621c78">Integración con Emacs</h2>
<div class="outline-text-2" id="text-org8621c78">
<p>
Ahora que contamos con un potente generador de contraseñas, vamos a integrarlo en nuestro entorno Emacs para maximizar su utilidad.
</p>
</div>
<div id="outline-container-org0a047cf" class="outline-3">
<h3 id="org0a047cf">Configuración básica</h3>
<div class="outline-text-3" id="text-org0a047cf">
<p>
Podemos agregar el siguiente código a nuestro archivo <code>init.el</code> para crear una función que genere contraseñas directamente desde Emacs:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para generar contrase&#241;as fuertes desde Emacs</span>
(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">generate-strong-password</span> (length complexity)
  <span style="color: #60a8a1; font-style: italic;">"Genera una contrase&#241;a fuerte usando nuestro script personalizado.</span>
<span style="color: #60a8a1; font-style: italic;">LENGTH es la longitud de la contrase&#241;a.</span>
<span style="color: #60a8a1; font-style: italic;">COMPLEXITY es el nivel de complejidad (1-4)."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span> 
   (list 
    (read-number <span style="color: #a44185;">"Longitud de la contrase&#241;a: "</span> 16)
    (read-number <span style="color: #a44185;">"Nivel de complejidad (1-4): "</span> 3)))

  (<span style="color: #219fd5; font-style: italic;">let</span> ((script-path <span style="color: #a44185;">"~/bin/strong-password-generator.sh"</span>))
    (<span style="color: #219fd5; font-style: italic;">if</span> (file-exists-p script-path)
        (<span style="color: #219fd5; font-style: italic;">let</span> ((password 
               (string-trim 
                (shell-command-to-string 
                 (format <span style="color: #a44185;">"%s %d %d"</span> script-path length complexity)))))
          <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Insertar en el buffer actual o mostrar en minibuffer</span>
          (<span style="color: #219fd5; font-style: italic;">if</span> (use-region-p)
              (<span style="color: #219fd5; font-style: italic;">progn</span>
                (delete-region (region-beginning) (region-end))
                (insert password)
                (message <span style="color: #a44185;">"Contrase&#241;a insertada en el buffer"</span>))
            (kill-new password)
            (message <span style="color: #a44185;">"Contrase&#241;a copiada al kill-ring: %s"</span> password)))
      (message <span style="color: #a44185;">"Script no encontrado en %s. Verifique la ruta."</span> script-path))))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Atajo de teclado para generar contrase&#241;as r&#225;pidamente</span>
(global-set-key (kbd <span style="color: #a44185;">"C-c p"</span>) 'generate-strong-password)
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf2cc1a1" class="outline-3">
<h3 id="orgf2cc1a1">Integración con passwords.el</h3>
<div class="outline-text-3" id="text-orgf2cc1a1">
<p>
Para una gestión más completa, podemos aprovechar la biblioteca estándar <code>auth-source.el</code> de Emacs para almacenar y recuperar contraseñas de forma segura:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Integraci&#243;n con auth-source para gesti&#243;n de contrase&#241;as</span>
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">auth-source</span>)

(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">save-password-to-auth-source</span> (host user password)
  <span style="color: #60a8a1; font-style: italic;">"Guarda una contrase&#241;a en auth-source para el HOST y USER especificados."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span>
   (list
    (read-string <span style="color: #a44185;">"Host/Servicio: "</span>)
    (read-string <span style="color: #a44185;">"Usuario: "</span>)
    (read-string <span style="color: #a44185;">"Contrase&#241;a: "</span> nil nil nil t)))  <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">No mostrar la contrase&#241;a</span>

  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Crear entrada en auth-source</span>
  (<span style="color: #219fd5; font-style: italic;">let</span> ((auth-sources '(<span style="color: #a44185;">"~/.authinfo.gpg"</span>)))
    (auth-source-forget-all-cached)
    (<span style="color: #219fd5; font-style: italic;">let</span> ((entry (list <span style="color: #dc3eb7;">:host</span> host <span style="color: #dc3eb7;">:user</span> user <span style="color: #dc3eb7;">:secret</span> password)))
      (auth-source-save-behavior nil)
      (auth-source-save-new entry)
      (message <span style="color: #a44185;">"Contrase&#241;a guardada para %s@%s"</span> user host))))

(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">generate-and-save-password</span> (host user length complexity)
  <span style="color: #60a8a1; font-style: italic;">"Genera una contrase&#241;a fuerte y la guarda en auth-source."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span>
   (list
    (read-string <span style="color: #a44185;">"Host/Servicio: "</span>)
    (read-string <span style="color: #a44185;">"Usuario: "</span>)
    (read-number <span style="color: #a44185;">"Longitud de la contrase&#241;a: "</span> 16)
    (read-number <span style="color: #a44185;">"Nivel de complejidad (1-4): "</span> 3)))

  (<span style="color: #219fd5; font-style: italic;">let*</span> ((script-path <span style="color: #a44185;">"~/bin/strong-password-generator.sh"</span>)
         (password
          (string-trim
           (shell-command-to-string
            (format <span style="color: #a44185;">"%s %d %d"</span> script-path length complexity)))))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Guardar en auth-source</span>
    (save-password-to-auth-source host user password)

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Tambi&#233;n copiar al kill-ring para uso inmediato</span>
    (kill-new password)
    (message <span style="color: #a44185;">"Contrase&#241;a generada y guardada para %s@%s (copiada al kill-ring)"</span> user host)))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para recuperar contrase&#241;as</span>
(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">get-password-from-auth-source</span> (host user)
  <span style="color: #60a8a1; font-style: italic;">"Recupera una contrase&#241;a desde auth-source."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span>
   (list
    (read-string <span style="color: #a44185;">"Host/Servicio: "</span>)
    (read-string <span style="color: #a44185;">"Usuario: "</span>)))

  (<span style="color: #219fd5; font-style: italic;">let*</span> ((auth-info (car (auth-source-search <span style="color: #dc3eb7;">:host</span> host <span style="color: #dc3eb7;">:user</span> user)))
         (password (<span style="color: #219fd5; font-style: italic;">if</span> auth-info
                      (<span style="color: #219fd5; font-style: italic;">let</span> ((secret (plist-get auth-info <span style="color: #dc3eb7;">:secret</span>)))
                        (<span style="color: #219fd5; font-style: italic;">if</span> (functionp secret)
                            (funcall secret)
                          secret))
                    nil)))

    (<span style="color: #219fd5; font-style: italic;">if</span> password
        (<span style="color: #219fd5; font-style: italic;">progn</span>
          (kill-new password)
          (message <span style="color: #a44185;">"Contrase&#241;a recuperada y copiada al kill-ring"</span>))
      (message <span style="color: #a44185;">"No se encontr&#243; contrase&#241;a para %s@%s"</span> user host))))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Atajo para generar y guardar</span>
(global-set-key (kbd <span style="color: #a44185;">"C-c P"</span>) 'generate-and-save-password)
</pre>
</div>
</div>
</div>
<div id="outline-container-org7edf7b6" class="outline-3">
<h3 id="org7edf7b6">Integración con pass (Password Store)</h3>
<div class="outline-text-3" id="text-org7edf7b6">
<p>
Para usuarios de <code>pass</code> (el estándar Unix para gestión de contraseñas), ofrecemos también una integración con este sistema:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Integraci&#243;n con Password Store (pass)</span>
(<span style="color: #219fd5; font-style: italic;">when</span> (executable-find <span style="color: #a44185;">"pass"</span>)
  (<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">auth-source-pass</span>)
  (auth-source-pass-enable)

  (<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">generate-password-and-store-in-pass</span> (path length complexity)
    <span style="color: #60a8a1; font-style: italic;">"Genera una contrase&#241;a fuerte y la almacena usando pass."</span>
    (<span style="color: #219fd5; font-style: italic;">interactive</span>
     (list
      (read-string <span style="color: #a44185;">"Ruta en pass (ej. email/gmail.com): "</span>)
      (read-number <span style="color: #a44185;">"Longitud de la contrase&#241;a: "</span> 16)
      (read-number <span style="color: #a44185;">"Nivel de complejidad (1-4): "</span> 3)))

    (<span style="color: #219fd5; font-style: italic;">let*</span> ((script-path <span style="color: #a44185;">"~/bin/strong-password-generator.sh"</span>)
           (password
            (string-trim
             (shell-command-to-string
              (format <span style="color: #a44185;">"%s %d %d"</span> script-path length complexity)))))

      <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Almacenar en pass</span>
      (shell-command-to-string (format <span style="color: #a44185;">"echo '</span><span style="color: #2f86d2;">%s</span><span style="color: #a44185;">' | pass insert -e '</span><span style="color: #2f86d2;">%s</span><span style="color: #a44185;">'"</span> password path))

      <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Copiar al kill-ring</span>
      (kill-new password)
      (message <span style="color: #a44185;">"Contrase&#241;a generada y almacenada en pass: %s (copiada al kill-ring)"</span> path)))

  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Atajo para la funci&#243;n de pass</span>
  (global-set-key (kbd <span style="color: #a44185;">"C-c M-p"</span>) 'generate-password-and-store-in-pass))
</pre>
</div>
</div>
</div>
<div id="outline-container-orgd7e8c2e" class="outline-3">
<h3 id="orgd7e8c2e">Integración avanzada con org-mode</h3>
<div class="outline-text-3" id="text-orgd7e8c2e">
<p>
Para los amantes de <code>org-mode</code>, podemos crear un sistema completo de gestión de contraseñas aprovechando sus capacidades:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Gesti&#243;n de contrase&#241;as con org-mode (cifrado)</span>
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">org-crypt</span>)
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">epa-file</span>)
(epa-file-enable)
(org-crypt-use-before-save-magic)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-tags-exclude-from-inheritance (<span style="color: #219fd5; font-style: italic;">quote</span> (<span style="color: #a44185;">"crypt"</span>)))
(<span style="color: #219fd5; font-style: italic;">setq</span> org-crypt-key user-mail-address)  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Usar tu clave GPG</span>

(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">create-password-entry-in-org</span> ()
  <span style="color: #60a8a1; font-style: italic;">"Crea una entrada para una contrase&#241;a en un archivo org cifrado."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (<span style="color: #219fd5; font-style: italic;">let*</span> ((org-password-file <span style="color: #a44185;">"~/org/passwords.org.gpg"</span>)
         (host (read-string <span style="color: #a44185;">"Servicio/Sitio: "</span>))
         (user (read-string <span style="color: #a44185;">"Usuario/Email: "</span>))
         (notes (read-string <span style="color: #a44185;">"Notas adicionales: "</span>))
         (length (read-number <span style="color: #a44185;">"Longitud de la contrase&#241;a: "</span> 16))
         (complexity (read-number <span style="color: #a44185;">"Nivel de complejidad (1-4): "</span> 3))
         (script-path <span style="color: #a44185;">"~/bin/strong-password-generator.sh"</span>)
         (password
          (string-trim
           (shell-command-to-string
            (format <span style="color: #a44185;">"%s %d %d"</span> script-path length complexity)))))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Crear o abrir el archivo</span>
    (<span style="color: #219fd5; font-style: italic;">unless</span> (file-exists-p org-password-file)
      (<span style="color: #219fd5; font-style: italic;">with-temp-file</span> org-password-file
        (insert <span style="color: #a44185;">"#+TITLE: Base de datos de contrase&#241;as seguras\n"</span>)
        (insert <span style="color: #a44185;">"#+AUTHOR: "</span> user-full-name <span style="color: #a44185;">"\n"</span>)
        (insert <span style="color: #a44185;">"#+STARTUP: content\n\n"</span>)))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">A&#241;adir nueva entrada</span>
    (find-file org-password-file)
    (goto-char (point-max))
    (insert (format <span style="color: #a44185;">"\n* %s %s\n"</span> host (format-time-string <span style="color: #a44185;">"(%Y-%m-%d)"</span>)))
    (insert (format <span style="color: #a44185;">"  :PROPERTIES:\n"</span>))
    (insert (format <span style="color: #a44185;">"  :CREATED: %s\n"</span> (format-time-string <span style="color: #a44185;">"[%Y-%m-%d %a %H:%M]"</span>)))
    (insert (format <span style="color: #a44185;">"  :USER: %s\n"</span> user))
    (insert (format <span style="color: #a44185;">"  :END:\n"</span>))
    (insert (format <span style="color: #a44185;">"** Credenciales :crypt:\n"</span>))
    (insert (format <span style="color: #a44185;">"- Usuario: %s\n"</span> user))
    (insert (format <span style="color: #a44185;">"- Contrase&#241;a: %s\n"</span> password))
    (insert (format <span style="color: #a44185;">"- Generada: %s\n"</span> (format-time-string <span style="color: #a44185;">"%Y-%m-%d"</span>)))
    (insert (format <span style="color: #a44185;">"- Longitud: %d caracteres\n"</span> length))
    (insert (format <span style="color: #a44185;">"- Complejidad: nivel %d\n"</span> complexity))
    (<span style="color: #219fd5; font-style: italic;">when</span> (not (string= notes <span style="color: #a44185;">""</span>))
      (insert (format <span style="color: #a44185;">"** Notas\n%s\n"</span> notes)))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Cifrar inmediatamente la secci&#243;n</span>
    (org-encrypt-entry)
    (save-buffer)

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Copiar al kill-ring</span>
    (kill-new password)
    (message <span style="color: #a44185;">"Entrada creada para %s y contrase&#241;a copiada al kill-ring"</span> host)))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Atajo para crear entradas de contrase&#241;as en org</span>
(global-set-key (kbd <span style="color: #a44185;">"C-c M-P"</span>) 'create-password-entry-in-org)
</pre>
</div>
</div>
</div>
<div id="outline-container-org24dbc58" class="outline-3">
<h3 id="org24dbc58">Uso con Dired</h3>
<div class="outline-text-3" id="text-org24dbc58">
<p>
Para una integración aún más completa, podemos agregar un marcador en Dired para ejecutar nuestro generador:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Integraci&#243;n con Dired</span>
(<span style="color: #219fd5; font-style: italic;">with-eval-after-load</span> 'dired
  (define-key dired-mode-map (kbd <span style="color: #a44185;">";p"</span>) 
    (<span style="color: #219fd5; font-style: italic;">lambda</span> ()
      (<span style="color: #219fd5; font-style: italic;">interactive</span>)
      (<span style="color: #219fd5; font-style: italic;">let</span> ((default-directory dired-directory))
        (generate-strong-password 16 3)))))
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orgd16a3fd" class="outline-2">
<h2 id="orgd16a3fd">Buenas prácticas para la gestión de contraseñas</h2>
<div class="outline-text-2" id="text-orgd16a3fd">
<p>
Además de generar contraseñas fuertes, es importante seguir algunas buenas prácticas para maximizar nuestra seguridad:
</p>
</div>
<div id="outline-container-org430a57e" class="outline-3">
<h3 id="org430a57e">Rotación periódica</h3>
<div class="outline-text-3" id="text-org430a57e">
<ul class="org-ul">
<li>Cambiar contraseñas críticas cada 3-6 meses</li>
<li>No reutilizar contraseñas anteriores</li>
<li>Automatizar recordatorios con <code>org-agenda</code></li>
</ul>
</div>
</div>
<div id="outline-container-org823f7f2" class="outline-3">
<h3 id="org823f7f2">Autenticación de dos factores (2FA)</h3>
<div class="outline-text-3" id="text-org823f7f2">
<ul class="org-ul">
<li>Complementar contraseñas con un segundo factor de autenticación</li>
<li>Configurar apps como Google Authenticator o Authy</li>
<li>Posible integración con <code>auth-source-xoauth2.el</code></li>
</ul>
</div>
</div>
<div id="outline-container-orgc3ede33" class="outline-3">
<h3 id="orgc3ede33">Sistema de clasificación</h3>
<div class="outline-text-3" id="text-orgc3ede33">
<ul class="org-ul">
<li>Categorizar contraseñas según su nivel de sensibilidad</li>
<li>Ajustar la complejidad según la importancia del servicio</li>
<li>Documentar políticas personales en un archivo <code>org</code> cifrado</li>
</ul>
</div>
</div>
<div id="outline-container-org733d40a" class="outline-3">
<h3 id="org733d40a">Respaldo seguro</h3>
<div class="outline-text-3" id="text-org733d40a">
<ul class="org-ul">
<li>Mantener copias cifradas de las contraseñas más importantes</li>
<li>Considerar soluciones físicas como claves de respaldo o papel</li>
<li>Establecer procedimientos de recuperación documentados</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org332580d" class="outline-2">
<h2 id="org332580d">Diagrama: Arquitectura del sistema de gestión de contraseñas</h2>
<div class="outline-text-2" id="text-org332580d">
<p>
El siguiente diagrama PlantUML ilustra la arquitectura completa del sistema de gestión de contraseñas que hemos descrito:
</p>


<figure id="org30e220e">
<img src="images/password-system-architecture.png" alt="password-system-architecture.png">

</figure>
</div>
</div>
<div id="outline-container-org49846be" class="outline-2">
<h2 id="org49846be">Comparativa de enfoques de gestión de contraseñas</h2>
<div class="outline-text-2" id="text-org49846be">
<p>
Para poner en perspectiva nuestra solución, comparemos diferentes enfoques para la gestión de contraseñas:
</p>

<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Enfoque</th>
<th scope="col" class="org-left">Pros</th>
<th scope="col" class="org-left">Contras</th>
<th scope="col" class="org-left">Integración con Emacs</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Memoria humana</td>
<td class="org-left">No requiere herramientas</td>
<td class="org-left">Limitado en cantidad y complejidad</td>
<td class="org-left">N/A</td>
</tr>

<tr>
<td class="org-left">Anotación física</td>
<td class="org-left">Simple, no hackeable remotamente</td>
<td class="org-left">Riesgo de pérdida, acceso físico</td>
<td class="org-left">N/A</td>
</tr>

<tr>
<td class="org-left">Navegador web</td>
<td class="org-left">Conveniente, automático</td>
<td class="org-left">Seguridad variable, portabilidad limitada</td>
<td class="org-left">Débil</td>
</tr>

<tr>
<td class="org-left">Gestor comercial (LastPass)</td>
<td class="org-left">Fácil de usar, multiplataforma</td>
<td class="org-left">Dependencia de terceros, posibles brechas</td>
<td class="org-left">Generalmente nula</td>
</tr>

<tr>
<td class="org-left">Password Store (pass)</td>
<td class="org-left">Open source, basado en GPG, CLI</td>
<td class="org-left">Requiere configuración, menos GUI</td>
<td class="org-left">Excelente (auth-source-pass)</td>
</tr>

<tr>
<td class="org-left">KeePass/KeePassXC</td>
<td class="org-left">Open source, cifrado local</td>
<td class="org-left">Sincronización manual</td>
<td class="org-left">Moderada (plugins disponibles)</td>
</tr>

<tr>
<td class="org-left">Nuestro sistema con Emacs</td>
<td class="org-left">Personalizable, integrado, cifrado</td>
<td class="org-left">Curva de aprendizaje, configuración</td>
<td class="org-left">Total (nativo)</td>
</tr>

<tr>
<td class="org-left">Biometría</td>
<td class="org-left">Conveniente, único</td>
<td class="org-left">Limitaciones hardware, no cambiable</td>
<td class="org-left">Limitada (requiere hardware)</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org6aa52b2" class="outline-2">
<h2 id="org6aa52b2">Personalizaciones avanzadas del generador de contraseñas</h2>
<div class="outline-text-2" id="text-org6aa52b2">
<p>
Nuestro script de generación de contraseñas puede personalizarse aún más para satisfacer necesidades específicas:
</p>
</div>
<div id="outline-container-orgb96344a" class="outline-3">
<h3 id="orgb96344a">Patrones de contraseñas memorizables</h3>
<div class="outline-text-3" id="text-orgb96344a">
<p>
A veces necesitamos contraseñas que, siendo seguras, también sean memorizables. Podemos modificar nuestro script para generar contraseñas basadas en patrones:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">memorable-password-generator.sh</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Definir conjuntos de palabras (esto ser&#237;a mucho m&#225;s extenso en una implementaci&#243;n real)</span>
<span style="color: #1857a4;">ADJECTIVES</span>=(<span style="color: #a44185;">"r&#225;pido"</span> <span style="color: #a44185;">"alegre"</span> <span style="color: #a44185;">"verde"</span> <span style="color: #a44185;">"brillante"</span> <span style="color: #a44185;">"suave"</span> <span style="color: #a44185;">"&#225;spero"</span> <span style="color: #a44185;">"dulce"</span> <span style="color: #a44185;">"amargo"</span> <span style="color: #a44185;">"fuerte"</span> <span style="color: #a44185;">"d&#233;bil"</span>)
<span style="color: #1857a4;">NOUNS</span>=(<span style="color: #a44185;">"tigre"</span> <span style="color: #a44185;">"monta&#241;a"</span> <span style="color: #a44185;">"oc&#233;ano"</span> <span style="color: #a44185;">"jard&#237;n"</span> <span style="color: #a44185;">"libro"</span> <span style="color: #a44185;">"pluma"</span> <span style="color: #a44185;">"casa"</span> <span style="color: #a44185;">"estrella"</span> <span style="color: #a44185;">"fuego"</span> <span style="color: #a44185;">"nube"</span>)
<span style="color: #1857a4;">VERBS</span>=(<span style="color: #a44185;">"corre"</span> <span style="color: #a44185;">"salta"</span> <span style="color: #a44185;">"nada"</span> <span style="color: #a44185;">"vuela"</span> <span style="color: #a44185;">"escribe"</span> <span style="color: #a44185;">"lee"</span> <span style="color: #a44185;">"canta"</span> <span style="color: #a44185;">"baila"</span> <span style="color: #a44185;">"r&#237;e"</span> <span style="color: #a44185;">"llora"</span>)

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generar componentes aleatorios</span>
<span style="color: #dc3eb7;">get_random_element</span>() {
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">array</span>=(<span style="color: #a44185;">"$@"</span>)
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"${array[RANDOM % ${#array[@]}]}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generar una contrase&#241;a memorable</span>
<span style="color: #dc3eb7;">generate_memorable_password</span>() {
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">adj</span>=$(<span style="color: #219fd5; font-weight: bold;">get_random_element "${ADJECTIVES[@]}"</span>)
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">noun</span>=$(<span style="color: #219fd5; font-weight: bold;">get_random_element "${NOUNS[@]}"</span>)
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">verb</span>=$(<span style="color: #219fd5; font-weight: bold;">get_random_element "${VERBS[@]}"</span>)
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">num</span>=$(<span style="color: #219fd5; font-weight: bold;">(RANDOM % 1000</span>))
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">special_chars</span>=(<span style="color: #a44185;">"!"</span> <span style="color: #a44185;">"@"</span> <span style="color: #a44185;">"#"</span> <span style="color: #a44185;">"$"</span> <span style="color: #a44185;">"%"</span> <span style="color: #a44185;">"&amp;"</span> <span style="color: #a44185;">"*"</span>)
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">special</span>=$(<span style="color: #219fd5; font-weight: bold;">get_random_element "${special_chars[@]}"</span>)

    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Capitalizar primera letra de cada palabra para mayor seguridad</span>
    <span style="color: #1857a4;">adj</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$adj" | sed 's/\(.\</span><span style="color: #a44185;">)/\u\1/'</span>)
    <span style="color: #1857a4;">noun</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$noun" | sed 's/\(.\</span><span style="color: #a44185;">)/\u\1/'</span>)
    <span style="color: #1857a4;">verb</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$verb" | sed 's/\(.\</span><span style="color: #a44185;">)/\u\1/'</span>)

    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"${adj}${special}${noun}${num}${verb}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generar y mostrar</span>
<span style="color: #1857a4;">PASSWORD</span>=$(<span style="color: #219fd5; font-weight: bold;">generate_memorable_password</span>)
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Contrase&#241;a memorable generada: $PASSWORD"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Esta contrase&#241;a es m&#225;s f&#225;cil de recordar pero sigue siendo segura."</span>
</pre>
</div>

<p>
Integramos esta funcionalidad en Emacs:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">generate-memorable-password</span> ()
  <span style="color: #60a8a1; font-style: italic;">"Genera una contrase&#241;a memorable pero segura."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (<span style="color: #219fd5; font-style: italic;">let</span> ((script-path <span style="color: #a44185;">"~/bin/memorable-password-generator.sh"</span>))
    (<span style="color: #219fd5; font-style: italic;">if</span> (file-exists-p script-path)
        (<span style="color: #219fd5; font-style: italic;">let</span> ((password 
               (string-trim 
                (shell-command-to-string script-path))))
          (kill-new password)
          (message <span style="color: #a44185;">"Contrase&#241;a memorable generada y copiada: %s"</span> password))
      (message <span style="color: #a44185;">"Script no encontrado en %s"</span> script-path))))

(global-set-key (kbd <span style="color: #a44185;">"C-c m"</span>) 'generate-memorable-password)
</pre>
</div>
</div>
</div>
<div id="outline-container-org077f6d8" class="outline-3">
<h3 id="org077f6d8">Generador de frases de contraseña (diceware)</h3>
<div class="outline-text-3" id="text-org077f6d8">
<p>
Las frases de contraseña ofrecen alta entropía siendo más memorizables:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">passphrase-generator.sh</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Simulamos dados para seleccionar palabras del diccionario diceware</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">En una implementaci&#243;n real, usar&#237;amos un diccionario completo</span>
<span style="color: #1857a4;">DICEWARE_DICT</span>=(
    <span style="color: #a44185;">"abaco"</span> <span style="color: #a44185;">"badajo"</span> <span style="color: #a44185;">"cabra"</span> <span style="color: #a44185;">"dados"</span> <span style="color: #a44185;">"efecto"</span> <span style="color: #a44185;">"f&#225;bula"</span> <span style="color: #a44185;">"gacela"</span> <span style="color: #a44185;">"hacedor"</span>
    <span style="color: #a44185;">"icono"</span> <span style="color: #a44185;">"jab&#243;n"</span> <span style="color: #a44185;">"kiosco"</span> <span style="color: #a44185;">"labio"</span> <span style="color: #a44185;">"maceta"</span> <span style="color: #a44185;">"nadar"</span> <span style="color: #a44185;">"oasis"</span> <span style="color: #a44185;">"pacto"</span>
    <span style="color: #a44185;">"queso"</span> <span style="color: #a44185;">"r&#225;bano"</span> <span style="color: #a44185;">"s&#225;bana"</span> <span style="color: #a44185;">"tabla"</span> <span style="color: #a44185;">"&#250;nico"</span> <span style="color: #a44185;">"vac&#237;o"</span> <span style="color: #a44185;">"wafle"</span> <span style="color: #a44185;">"xil&#243;fono"</span>
    <span style="color: #a44185;">"yeso"</span> <span style="color: #a44185;">"zarza"</span> <span style="color: #a44185;">"&#225;guila"</span> <span style="color: #a44185;">"b&#250;ho"</span> <span style="color: #a44185;">"c&#225;liz"</span> <span style="color: #a44185;">"d&#225;til"</span> <span style="color: #a44185;">"&#233;lite"</span> <span style="color: #a44185;">"f&#233;nix"</span>
    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Este diccionario ser&#237;a mucho m&#225;s extenso en la realidad</span>
)

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generar frase de contrase&#241;a</span>
<span style="color: #dc3eb7;">generate_passphrase</span>() {
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">num_words</span>=$<span style="color: #1857a4;">1</span>
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">passphrase</span>=<span style="color: #a44185;">""</span>
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">separator</span>=$<span style="color: #1857a4;">2</span>

    <span style="color: #219fd5; font-style: italic;">for</span> ((<span style="color: #1857a4;">i</span>=0; i&lt;num_words; i++)); <span style="color: #219fd5; font-style: italic;">do</span>
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Seleccionar palabra aleatoria</span>
        <span style="color: #1857a4;">index</span>=$(<span style="color: #219fd5; font-weight: bold;">(RANDOM % ${#DICEWARE_DICT[@]}</span>))
        <span style="color: #1857a4;">word</span>=${<span style="color: #1857a4;">DICEWARE_DICT</span>[$<span style="color: #1857a4;">index</span>]}

        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">A&#241;adir capitalizaci&#243;n aleatoria para mayor seguridad</span>
        <span style="color: #219fd5; font-style: italic;">if</span> ((RANDOM % 2)); <span style="color: #219fd5; font-style: italic;">then</span>
            <span style="color: #1857a4;">word</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$word" | sed 's/\(.\</span><span style="color: #a44185;">)/\u\1/'</span>)
        <span style="color: #219fd5; font-style: italic;">fi</span>

        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">A&#241;adir a la frase</span>
        <span style="color: #219fd5; font-style: italic;">if</span> [[ -n <span style="color: #a44185;">"$passphrase"</span> ]]; <span style="color: #219fd5; font-style: italic;">then</span>
            <span style="color: #1857a4;">passphrase</span>=<span style="color: #a44185;">"${passphrase}${separator}${word}"</span>
        <span style="color: #219fd5; font-style: italic;">else</span>
            <span style="color: #1857a4;">passphrase</span>=$<span style="color: #1857a4;">word</span>
        <span style="color: #219fd5; font-style: italic;">fi</span>
    <span style="color: #219fd5; font-style: italic;">done</span>

    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">A&#241;adir un n&#250;mero aleatorio al final</span>
    <span style="color: #1857a4;">passphrase</span>=<span style="color: #a44185;">"${passphrase}${separator}$(</span><span style="color: #219fd5; font-weight: bold;">($RANDOM % 100</span><span style="color: #a44185;">))"</span>

    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"$passphrase"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generar y mostrar</span>
<span style="color: #1857a4;">NUM_WORDS</span>=${<span style="color: #1857a4;">1</span>:-4}
<span style="color: #1857a4;">SEPARATOR</span>=${<span style="color: #1857a4;">2</span>:--}
<span style="color: #1857a4;">PASSPHRASE</span>=$(<span style="color: #219fd5; font-weight: bold;">generate_passphrase $NUM_WORDS $SEPARATOR</span>)

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Frase de contrase&#241;a generada: $PASSPHRASE"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Esta frase tiene alta entrop&#237;a pero es m&#225;s f&#225;cil de recordar."</span>
</pre>
</div>

<p>
Y la correspondiente integración en Emacs:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">generate-passphrase</span> (words separator)
  <span style="color: #60a8a1; font-style: italic;">"Genera una frase de contrase&#241;a usando el m&#233;todo diceware.</span>
<span style="color: #60a8a1; font-style: italic;">WORDS es el n&#250;mero de palabras a incluir.</span>
<span style="color: #60a8a1; font-style: italic;">SEPARATOR es el car&#225;cter separador entre palabras."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span>
   (list
    (read-number <span style="color: #a44185;">"N&#250;mero de palabras: "</span> 4)
    (read-string <span style="color: #a44185;">"Separador: "</span> <span style="color: #a44185;">"-"</span>)))

  (<span style="color: #219fd5; font-style: italic;">let</span> ((script-path <span style="color: #a44185;">"~/bin/passphrase-generator.sh"</span>))
    (<span style="color: #219fd5; font-style: italic;">if</span> (file-exists-p script-path)
        (<span style="color: #219fd5; font-style: italic;">let</span> ((passphrase 
               (string-trim 
                (shell-command-to-string 
                 (format <span style="color: #a44185;">"%s %d %s"</span> script-path words separator)))))
          (kill-new passphrase)
          (message <span style="color: #a44185;">"Frase de contrase&#241;a generada y copiada: %s"</span> passphrase))
      (message <span style="color: #a44185;">"Script no encontrado en %s"</span> script-path))))

(global-set-key (kbd <span style="color: #a44185;">"C-c f"</span>) 'generate-passphrase)
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orgad83263" class="outline-2">
<h2 id="orgad83263">Estrategias de migración a contraseñas fuertes</h2>
<div class="outline-text-2" id="text-orgad83263">
<p>
La transición a un sistema de contraseñas fuertes puede parecer abrumadora. Aquí hay un enfoque gradual que facilita la adopción:
</p>
</div>
<div id="outline-container-org49b6640" class="outline-3">
<h3 id="org49b6640">Plan por fases</h3>
<div class="outline-text-3" id="text-org49b6640">
<ol class="org-ol">
<li><b>Fase 1: Inventario</b>
<ul class="org-ul">
<li>Crear un inventario completo de cuentas y servicios</li>
<li>Clasificar por importancia y sensibilidad</li>
<li>Usar org-mode para organizar este inventario</li>
</ul></li>

<li><b>Fase 2: Infraestructura</b>
<ul class="org-ul">
<li>Configurar las herramientas necesarias (scripts, GPG, integraciones)</li>
<li>Establecer las políticas de complejidad según categorías</li>
<li>Preparar sistemas de respaldo</li>
</ul></li>

<li><b>Fase 3: Migración priorizada</b>
<ul class="org-ul">
<li>Comenzar con cuentas financieras y críticas</li>
<li>Continuar con cuentas de correo y principales servicios</li>
<li>Finalizar con cuentas de menor importancia</li>
</ul></li>

<li><b>Fase 4: Revisión y mantenimiento</b>
<ul class="org-ul">
<li>Establecer calendario de rotación</li>
<li>Configurar recordatorios en org-agenda</li>
<li>Realizar auditorías periódicas de seguridad</li>
</ul></li>
</ol>
</div>
</div>
<div id="outline-container-org1263d81" class="outline-3">
<h3 id="org1263d81">Script de auditoría de contraseñas</h3>
<div class="outline-text-3" id="text-org1263d81">
<p>
El siguiente script en Emacs Lisp ayuda a evaluar la seguridad de las contraseñas existentes:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">audit-password-strength</span> (password)
  <span style="color: #60a8a1; font-style: italic;">"Audita la fortaleza de una contrase&#241;a y sugiere mejoras."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span> <span style="color: #a44185;">"sContrase&#241;a a auditar: "</span>)

  (<span style="color: #219fd5; font-style: italic;">let</span> ((length (length password))
        (has-uppercase (string-match-p <span style="color: #a44185;">"[A-Z]"</span> password))
        (has-lowercase (string-match-p <span style="color: #a44185;">"[a-z]"</span> password))
        (has-numbers (string-match-p <span style="color: #a44185;">"[0-9]"</span> password))
        (has-symbols (string-match-p <span style="color: #a44185;">"[</span><span style="color: #219fd5; font-weight: bold;">^</span><span style="color: #a44185;">a-zA-Z0-9]"</span> password))
        (has-sequences (string-match-p <span style="color: #a44185;">"</span><span style="color: #219fd5; font-weight: bold;">\\</span><span style="color: #219fd5; font-weight: bold;">(</span><span style="color: #a44185;">abc</span><span style="color: #219fd5; font-weight: bold;">\\</span><span style="color: #219fd5; font-weight: bold;">|</span><span style="color: #a44185;">123</span><span style="color: #219fd5; font-weight: bold;">\\</span><span style="color: #219fd5; font-weight: bold;">|</span><span style="color: #a44185;">qwe</span><span style="color: #219fd5; font-weight: bold;">\\</span><span style="color: #219fd5; font-weight: bold;">)</span><span style="color: #a44185;">"</span> password))
        (score 0)
        (feedback '()))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Evaluaci&#243;n de longitud</span>
    (<span style="color: #219fd5; font-style: italic;">cond</span>
     ((&lt; length 8)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud cr&#237;tica: menos de 8 caracteres."</span> feedback))
     ((&lt; length 12)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud insuficiente: menos de 12 caracteres."</span> feedback)
      (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score))
     ((&lt; length 16)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud aceptable: entre 12-16 caracteres."</span> feedback)
      (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score 2))
     (t
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud excelente: m&#225;s de 16 caracteres."</span> feedback)
      (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score 3)))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Evaluaci&#243;n de complejidad</span>
    (<span style="color: #219fd5; font-style: italic;">when</span> has-uppercase (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene may&#250;sculas [+]"</span> feedback))
    (<span style="color: #219fd5; font-style: italic;">when</span> has-lowercase (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene min&#250;sculas [+]"</span> feedback))
    (<span style="color: #219fd5; font-style: italic;">when</span> has-numbers (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene n&#250;meros [+]"</span> feedback))
    (<span style="color: #219fd5; font-style: italic;">when</span> has-symbols (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene s&#237;mbolos especiales [+]"</span> feedback))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Penalizaciones</span>
    (<span style="color: #219fd5; font-style: italic;">when</span> has-sequences
      (<span style="color: #219fd5; font-style: italic;">cl-decf</span> score)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene secuencias predecibles (ej: abc, 123) [-]"</span> feedback))

    (<span style="color: #219fd5; font-style: italic;">when</span> (string-match-p (regexp-quote (user-login-name)) password)
      (<span style="color: #219fd5; font-style: italic;">cl-decf</span> score 2)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene tu nombre de usuario [-]"</span> feedback))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Mostrar resultados</span>
    (<span style="color: #219fd5; font-style: italic;">with-output-to-temp-buffer</span> <span style="color: #a44185;">"*Password Audit*"</span>
      (switch-to-buffer <span style="color: #a44185;">"*Password Audit*"</span>)
      (erase-buffer)
      (insert <span style="color: #a44185;">"=== AUDITOR&#205;A DE SEGURIDAD DE CONTRASE&#209;A ===\n\n"</span>)
      (insert (format <span style="color: #a44185;">"Puntuaci&#243;n: %d/10\n\n"</span> score))
      (insert <span style="color: #a44185;">"An&#225;lisis:\n"</span>)
      (<span style="color: #219fd5; font-style: italic;">dolist</span> (item (reverse feedback))
        (insert (format <span style="color: #a44185;">"&#8226; %s\n"</span> item)))

      (insert <span style="color: #a44185;">"\nRecomendaciones:\n"</span>)
      (<span style="color: #219fd5; font-style: italic;">cond</span>
       ((&lt; score 4)
        (insert <span style="color: #a44185;">"&#9888;&#65039; Contrase&#241;a D&#201;BIL - Se recomienda cambio inmediato\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Utilice la funci&#243;n generate-strong-password para crear una nueva\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Aumente la longitud a m&#237;nimo 16 caracteres\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Incluya caracteres de todas las categor&#237;as\n"</span>))
       ((&lt; score 7)
        (insert <span style="color: #a44185;">"&#9888;&#65039; Contrase&#241;a MODERADA - Se recomienda mejora\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Considere aumentar la longitud\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; A&#241;ada el tipo de caracteres que faltan\n"</span>))
       (t
        (insert <span style="color: #a44185;">"&#9989; Contrase&#241;a FUERTE - Cumple con los est&#225;ndares recomendados\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Recuerde cambiarla peri&#243;dicamente\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Aseg&#250;rese de no reutilizarla en otros servicios\n"</span>)))

      (insert <span style="color: #a44185;">"\n=== FIN DEL AN&#193;LISIS ===\n"</span>))))

(global-set-key (kbd <span style="color: #a44185;">"C-c C-p a"</span>) 'audit-password-strength)
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org9de327c" class="outline-2">
<h2 id="org9de327c">Recursos adicionales</h2>
<div class="outline-text-2" id="text-org9de327c">
<p>
Para profundizar en la seguridad de contraseñas y su gestión con Emacs, recomendamos consultar:
</p>
</div>
<div id="outline-container-orga335b13" class="outline-3">
<h3 id="orga335b13">Paquetes de Emacs relacionados</h3>
<div class="outline-text-3" id="text-orga335b13">
<ul class="org-ul">
<li><code>auth-source.el</code> - Sistema base para autenticación</li>
<li><code>auth-source-pass.el</code> - Integración con pass</li>
<li><code>password-store.el</code> - Interfaz alternativa para pass</li>
<li><code>org-crypt.el</code> - Cifrado selectivo en org-mode</li>
<li><code>password-generator.el</code> - Generador simple de contraseñas</li>
<li><code>gpg-encrypt.el</code> - Utilidades para cifrado con GPG</li>
</ul>
</div>
</div>
<div id="outline-container-org39660a0" class="outline-3">
<h3 id="org39660a0">Lecturas recomendadas</h3>
<div class="outline-text-3" id="text-org39660a0">
<ul class="org-ul">
<li>"Practical Cryptography" por Niels Ferguson y Bruce Schneier</li>
<li>"Password Strength" en el NIST Special Publication 800-63B</li>
<li>"The Emacs Auth-Source Library" en la documentación oficial de Emacs</li>
<li>"Diceware Passphrase Home" por Arnold Reinhold</li>
</ul>
</div>
</div>
<div id="outline-container-org4e82b7b" class="outline-3">
<h3 id="org4e82b7b">Herramientas complementarias</h3>
<div class="outline-text-3" id="text-org4e82b7b">
<ul class="org-ul">
<li><code>pass</code> - El estándar Unix para gestores de contraseñas</li>
<li><code>gpg</code> - GNU Privacy Guard para cifrado</li>
<li><code>xclip</code> / <code>xsel</code> - Utilidades para acceso al portapapeles</li>
<li><code>pwgen</code> - Generador alternativo de contraseñas</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org86fd205" class="outline-2">
<h2 id="org86fd205">Conclusión</h2>
<div class="outline-text-2" id="text-org86fd205">
<p>
La seguridad de nuestras contraseñas no es una preocupación menor en la era digital. Con las herramientas adecuadas y un enfoque sistemático, podemos transformar esta necesidad en una fortaleza. Emacs, con su flexibilidad y capacidad de integración, nos proporciona el entorno perfecto para implementar un sistema de gestión de contraseñas personalizado, seguro y eficiente.
</p>

<p>
Al combinar scripts de Bash para la generación de contraseñas con las capacidades de cifrado y organización de Emacs, hemos creado un ecosistema completo que nos permite:
</p>

<ul class="org-ul">
<li>Generar contraseñas con diferentes niveles de complejidad según nuestras necesidades</li>
<li>Almacenar de forma segura nuestras credenciales utilizando cifrado GPG</li>
<li>Recuperar fácilmente las contraseñas cuando las necesitamos</li>
<li>Auditar y mantener nuestra seguridad digital de forma proactiva</li>
</ul>

<p>
Esta solución, adaptada específicamente para usuarios avanzados de Emacs, demuestra una vez más la versatilidad de este editor: mucho más que una herramienta para escribir texto, es una plataforma completa para la productividad y la seguridad digital.
</p>

<p>
En un mundo donde las amenazas digitales crecen día a día, tomar el control de nuestra seguridad con herramientas que conocemos y podemos personalizar representa una ventaja significativa. Las contraseñas fuertes son solo el comienzo; es el sistema completo alrededor de ellas lo que marca la diferencia.
</p>

<p>
Como diría Richard Stallman: "La libertad en el software es también la libertad de controlar tu propia seguridad".
</p>

<p>
¡Mantén tus contraseñas fuertes y tus buffers de Emacs siempre a mano!
</p>
</div>
</div>
<div id="outline-container-org584a746" class="outline-2">
<h2 id="org584a746">Nota sobre la ejecución del script</h2>
<div class="outline-text-2" id="text-org584a746">
<p>
Para utilizar el script de generación de contraseñas presentado en este artículo:
</p>

<ol class="org-ol">
<li>Copia el código Bash en un archivo llamado <code>strong-password-generator.sh</code></li>
<li>Guárdalo en <code>~/bin/</code> (o modifica las rutas en el código Emacs)</li>
<li>Asegúrate de hacerlo ejecutable:</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash">chmod +x ~/bin/strong-password-generator.sh
</pre>
</div>

<ol class="org-ol">
<li>Añade las configuraciones de Emacs a tu <code>init.el</code></li>
<li>Reinicia Emacs o evalúa el código con <code>M-x eval-buffer</code></li>
</ol>

<p>
A partir de ese momento, podrás generar contraseñas seguras con <code>C-c p</code> y aprovechar todas las funcionalidades descritas en este artículo.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-contraseñas.html">contraseñas</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-criptografía.html">criptografía</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[contraseñas]]></category>
  <category><![CDATA[criptografía]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-23-gesti%C3%B3n-de-contrase%C3%B1as-fuertes-con-emacs:-seguridad-digital-para-el-usuario-exigente.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-23-gesti%C3%B3n-de-contrase%C3%B1as-fuertes-con-emacs:-seguridad-digital-para-el-usuario-exigente.html</guid>
  <pubDate>Wed, 23 Apr 2025 04:45:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Automatizando Auditorías de Seguridad en Linux con Bash y Emacs]]></title>
  <description><![CDATA[
<div id="outline-container-org9f4ca91" class="outline-2">
<h2 id="org9f4ca91">Introducción</h2>
<div class="outline-text-2" id="text-org9f4ca91">
<p>
En un entorno donde las amenazas cibernéticas evolucionan constantemente, realizar auditorías de seguridad en sistemas Linux es esencial para identificar vulnerabilidades como puertos abiertos, permisos inseguros o configuraciones riesgosas. Realizar estas tareas manualmente es tedioso y propenso a errores. Este post presenta un flujo de trabajo para <b><b>automatizar auditorías de seguridad</b></b> usando scripts en Bash, integrando los resultados en Emacs con Org-mode para un análisis interactivo y programando ejecuciones automáticas con `cron`. Combinamos la potencia de la terminal con la flexibilidad de Emacs para ofrecer una solución eficiente para usuarios avanzados de Linux.
</p>
</div>
</div>
<div id="outline-container-org27d75cf" class="outline-2">
<h2 id="org27d75cf">Objetivos</h2>
<div class="outline-text-2" id="text-org27d75cf">
<ul class="org-ul">
<li>Crear scripts en Bash para auditar puertos y permisos.</li>
<li>Integrar resultados en Org-mode para análisis interactivo en Emacs.</li>
<li>Automatizar auditorías con `cron` para ejecuciones periódicas.</li>
</ul>
</div>
</div>
<div id="outline-container-org2b8e8bf" class="outline-2">
<h2 id="org2b8e8bf">Audiencia</h2>
<div class="outline-text-2" id="text-org2b8e8bf">
<p>
Usuarios avanzados de Linux interesados en ciberseguridad, automatización y flujos de trabajo con Emacs.
</p>
</div>
</div>
<div id="outline-container-org8df851f" class="outline-2">
<h2 id="org8df851f">Herramientas Requeridas</h2>
<div class="outline-text-2" id="text-org8df851f">
<ul class="org-ul">
<li><b><b>nmap</b></b>: Escaneo de puertos y servicios.</li>
<li><b><b>find</b></b> y <b><b>stat</b></b>: Verificación de permisos.</li>
<li><b><b>Bash</b></b>: Scripts de automatización.</li>
<li><b><b>Emacs</b></b> con <b><b>Org-mode</b></b>: Visualización y análisis.</li>
<li><b><b>cron</b></b>: Programación de tareas.</li>
</ul>
</div>
</div>
<div id="outline-container-orgc93fce4" class="outline-2">
<h2 id="orgc93fce4">Configuración Inicial</h2>
<div class="outline-text-2" id="text-orgc93fce4">
<p>
Instala las herramientas necesarias en un sistema Linux (por ejemplo, Ubuntu/Debian):
</p>

<div class="org-src-container">
<pre class="src src-shell">sudo apt update
sudo apt install nmap findutils coreutils bash emacs
</pre>
</div>

<p>
Verifica que `cron` esté habilitado:
</p>

<div class="org-src-container">
<pre class="src src-shell">systemctl status cron
</pre>
</div>

<p>
Configura Emacs para Org-mode y `emacsclient`. Añade a `~/.emacs` o `~/.config/emacs/init.el`:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(server-start)
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">org</span>)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-startup-folded t)
</pre>
</div>
</div>
</div>
<div id="outline-container-orge5f4165" class="outline-2">
<h2 id="orge5f4165">Script de Auditoría en Bash</h2>
<div class="outline-text-2" id="text-orge5f4165">
<p>
El script `security<sub>audit.sh</sub>` realiza:
</p>
<ol class="org-ol">
<li>Escaneo de puertos con `nmap`.</li>
<li>Verificación de permisos con `find`.</li>
<li>Generación de un resumen en Org-mode que se abre en Emacs.</li>
</ol>
</div>
<div id="outline-container-org213dd5b" class="outline-3">
<h3 id="org213dd5b">Código del Script</h3>
<div class="outline-text-3" id="text-org213dd5b">
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">security_audit.sh</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n</span>
<span style="color: #1857a4;">OUTPUT_DIR</span>=<span style="color: #a44185;">"$HOME/security_audit"</span>
<span style="color: #1857a4;">TIMESTAMP</span>=$(<span style="color: #219fd5; font-weight: bold;">date +%Y%m%d_%H%M%S</span>)
<span style="color: #1857a4;">REPORT_DIR</span>=<span style="color: #a44185;">"$OUTPUT_DIR/report_$TIMESTAMP"</span>
mkdir -p <span style="color: #a44185;">"$REPORT_DIR"</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Escaneo de puertos</span>
<span style="color: #dc3eb7;">scan_ports</span>() {
  <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">target</span>=<span style="color: #a44185;">"localhost"</span>
  <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">output</span>=<span style="color: #a44185;">"$REPORT_DIR/nmap_scan.txt"</span>
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Escaneando puertos en $target..."</span>
  nmap -sV <span style="color: #a44185;">"$target"</span> &gt; <span style="color: #a44185;">"$output"</span> 2&gt;&amp;1
  [ $<span style="color: #1857a4;">?</span> -eq 0 ] &amp;&amp; <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Escaneo completado: $output"</span> || <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Error en nmap."</span>
}
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificaci&#243;n de permisos</span>
<span style="color: #dc3eb7;">check_permissions</span>() {
  <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">output</span>=<span style="color: #a44185;">"$REPORT_DIR/permissions_report.txt"</span>
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Verificando permisos inseguros..."</span>
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Archivos con escritura para 'otros':"</span> &gt; <span style="color: #a44185;">"$output"</span>
  find /home -type f -perm -o+w &gt;&gt; <span style="color: #a44185;">"$output"</span> 2&gt;/dev/null
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\nArchivos con ejecuci&#243;n para 'otros':"</span> &gt;&gt; <span style="color: #a44185;">"$output"</span>
  find /home -type f -perm -o+x &gt;&gt; <span style="color: #a44185;">"$output"</span> 2&gt;/dev/null
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Verificaci&#243;n completada: $output"</span>
}
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar auditor&#237;as</span>
scan_ports
check_permissions
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generar resumen en Org-mode</span>
<span style="color: #1857a4;">SUMMARY</span>=<span style="color: #a44185;">"$REPORT_DIR/summary.org"</span>
cat &lt;&lt; EOF &gt; <span style="color: #a44185;">"$SUMMARY"</span>
<span style="color: #a44185;">#+TITLE: Reporte de Auditor&#237;a de Seguridad - $TIMESTAMP</span>
<span style="color: #a44185;">#+DATE: $(</span><span style="color: #219fd5; font-weight: bold;">date</span><span style="color: #a44185;">)</span>
</pre>
</div>

<div class="org-src-container">
<pre class="src src-bash">- Resumen de Auditor&#237;a
  - *Fecha*: $<span style="color: #1857a4;">TIMESTAMP</span>
  - *Escaneo de puertos*: [[file:nmap_scan.txt][Resultados de Nmap]]
  - *Permisos inseguros*: [[file:permissions_report.txt][Reporte de Permisos]]
-  Notas
  - Revisar puertos abiertos para servicios innecesarios.
  - Corregir permisos inseguros en archivos listados.
EOF
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Reporte generado: $SUMMARY"</span>
emacsclient -c <span style="color: #a44185;">"$SUMMARY"</span> 2&gt;/dev/null || <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Abre $SUMMARY manualmente."</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orge23a0c9" class="outline-3">
<h3 id="orge23a0c9">Ejecución</h3>
<div class="outline-text-3" id="text-orge23a0c9">
<p>
Guarda el script, hazlo ejecutable y ejecútalo:
</p>

<div class="org-src-container">
<pre class="src src-shell">chmod +x security_audit.sh
./security_audit.sh
</pre>
</div>

<p>
El script genera una carpeta en `~/security<sub>audit</sub>/report<sub>YYYYMMDD</sub><sub>HHMMSS</sub>` con:
</p>
<ul class="org-ul">
<li>`nmap<sub>scan.txt</sub>`: Resultados del escaneo de puertos.</li>
<li>`permissions<sub>report.txt</sub>`: Archivos con permisos inseguros.</li>
<li>`summary.org`: Resumen en Org-mode con enlaces.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org4df799d" class="outline-2">
<h2 id="org4df799d">Integración con Emacs y Org-mode</h2>
<div class="outline-text-2" id="text-org4df799d">
<p>
El archivo `summary.org` organiza los resultados en un formato interactivo. Para mejorar la experiencia, usamos funciones en Emacs (`security<sub>audit.el</sub>`) que procesan los reportes y generan un buffer dinámico.
</p>
</div>
<div id="outline-container-orga1ceab5" class="outline-3">
<h3 id="orga1ceab5">Código de Emacs</h3>
<div class="outline-text-3" id="text-orga1ceab5">
<div class="org-src-container">
<pre class="src src-elisp"><span style="color: #8195b0; font-style: italic;">;;; </span><span style="color: #8195b0; font-style: italic;">security_audit.el --- Funciones para auditor&#237;as de seguridad</span>

(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">security-audit-process-report</span> (report-dir)
  <span style="color: #60a8a1; font-style: italic;">"Procesa un reporte y genera un buffer en Org-mode."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span> <span style="color: #a44185;">"DDirectorio del reporte: "</span>)
  (<span style="color: #219fd5; font-style: italic;">let</span> ((nmap-file (concat report-dir <span style="color: #a44185;">"nmap_scan.txt"</span>))
        (perm-file (concat report-dir <span style="color: #a44185;">"permissions_report.txt"</span>))
        (buffer (get-buffer-create <span style="color: #a44185;">"*Security Audit Report*"</span>)))
    (<span style="color: #219fd5; font-style: italic;">with-current-buffer</span> buffer
      (erase-buffer)
      (org-mode)
      (insert <span style="color: #a44185;">"#+TITLE: Auditor&#237;a de Seguridad\n"</span>)
      (insert <span style="color: #a44185;">"#+DATE: "</span> (format-time-string <span style="color: #a44185;">"%Y-%m-%d %H:%M:%S"</span>) <span style="color: #a44185;">"\n\n"</span>)
      (insert <span style="color: #a44185;">"* An&#225;lisis de Puertos Abiertos\n"</span>)
      (<span style="color: #219fd5; font-style: italic;">if</span> (file-exists-p nmap-file)
          (<span style="color: #219fd5; font-style: italic;">progn</span>
            (insert <span style="color: #a44185;">"[[file:"</span> nmap-file <span style="color: #a44185;">"][Ver resultados completos]]\n\n"</span>)
            (insert <span style="color: #a44185;">"Puertos destacados:\n"</span>)
            (<span style="color: #219fd5; font-style: italic;">with-temp-buffer</span>
              (insert-file-contents nmap-file)
              (goto-char (point-min))
              (<span style="color: #219fd5; font-style: italic;">while</span> (re-search-forward <span style="color: #a44185;">"</span><span style="color: #219fd5; font-weight: bold;">\\</span><span style="color: #219fd5; font-weight: bold;">(</span><span style="color: #a44185;">[0-9]+/tcp\\s+open</span><span style="color: #219fd5; font-weight: bold;">\\</span><span style="color: #219fd5; font-weight: bold;">)</span><span style="color: #a44185;">"</span> nil t)
                (insert <span style="color: #a44185;">"- "</span> (match-string 1) <span style="color: #a44185;">"\n"</span>))))
        (insert <span style="color: #a44185;">"No se encontraron resultados de nmap.\n\n"</span>))
      (insert <span style="color: #a44185;">"* Permisos Inseguros\n"</span>)
      (<span style="color: #219fd5; font-style: italic;">if</span> (file-exists-p perm-file)
          (insert <span style="color: #a44185;">"[[file:"</span> perm-file <span style="color: #a44185;">"][Ver reporte de permisos]]\n\n"</span>)
        (insert <span style="color: #a44185;">"No se encontraron resultados de permisos.\n\n"</span>))
      (insert <span style="color: #a44185;">"* Acciones Recomendadas\n"</span>)
      (insert <span style="color: #a44185;">"- Cerrar puertos innecesarios (ej., `ufw deny`).\n"</span>)
      (insert <span style="color: #a44185;">"- Ajustar permisos con `chmod`.\n"</span>))
    (display-buffer buffer)))

(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">security-audit-open-latest</span> ()
  <span style="color: #60a8a1; font-style: italic;">"Abre el reporte m&#225;s reciente en ~/security_audit."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (<span style="color: #219fd5; font-style: italic;">let</span> ((audit-dir <span style="color: #a44185;">"~/security_audit"</span>))
    (<span style="color: #219fd5; font-style: italic;">when</span> (file-directory-p audit-dir)
      (<span style="color: #219fd5; font-style: italic;">let</span> ((latest-dir (car (sort (directory-files audit-dir t <span style="color: #a44185;">"^report_"</span>) #'string&gt;))))
        (<span style="color: #219fd5; font-style: italic;">if</span> latest-dir
            (security-audit-process-report latest-dir)
          (message <span style="color: #a44185;">"No se encontraron reportes en %s"</span> audit-dir))))))

(<span style="color: #219fd5; font-style: italic;">provide</span> '<span style="color: #2f86d2;">security_audit</span>)
<span style="color: #8195b0; font-style: italic;">;;; </span><span style="color: #8195b0; font-style: italic;">security_audit.el ends here</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org46ddb13" class="outline-3">
<h3 id="org46ddb13">Uso en Emacs</h3>
<div class="outline-text-3" id="text-org46ddb13">
<p>
Carga `security<sub>audit.el</sub>` en Emacs y ejecuta:
</p>

<div class="org-src-container">
<pre class="src src-elisp">M-x security-audit-open-latest
</pre>
</div>

<p>
Esto genera un buffer `*Security Audit Report*` con un resumen interactivo, incluyendo enlaces a los resultados y recomendaciones.
</p>
</div>
</div>
</div>
<div id="outline-container-org3496671" class="outline-2">
<h2 id="org3496671">Automatización con Cron</h2>
<div class="outline-text-2" id="text-org3496671">
<p>
Programa el script para ejecutarse automáticamente con `cron`.
</p>
</div>
<div id="outline-container-org1794e7f" class="outline-3">
<h3 id="org1794e7f">Configuración</h3>
<div class="outline-text-3" id="text-org1794e7f">
<p>
Edita el crontab:
</p>

<div class="org-src-container">
<pre class="src src-shell">crontab -e
</pre>
</div>

<p>
Añade una ejecución diaria a las 2:00 AM:
</p>

<div class="org-src-container">
<pre class="src src-shell">0 2 * * * /bin/bash /path/to/security_audit.sh &gt;&gt; /path/to/security_audit.log 2&gt;&amp;1
</pre>
</div>

<p>
Verifica que `cron` esté activo:
</p>

<div class="org-src-container">
<pre class="src src-shell">systemctl status cron
</pre>
</div>

<p>
Los reportes se generarán en `~/security<sub>audit</sub>` y podrán revisarse con `M-x security-audit-open-latest`.
</p>
</div>
</div>
</div>
<div id="outline-container-orge66c279" class="outline-2">
<h2 id="orge66c279">Flujo de Trabajo (Diagrama)</h2>
<div class="outline-text-2" id="text-orge66c279">
<p>
El siguiente diagrama en PlantUML ilustra el proceso:
</p>


<figure id="org038b5c0">
<img src="images/audit_workflow.png" alt="audit_workflow.png">

</figure>
</div>
</div>
<div id="outline-container-org7631959" class="outline-2">
<h2 id="org7631959">Ejemplo Práctico</h2>
<div class="outline-text-2" id="text-org7631959">
<ol class="org-ol">
<li>Ejecuta el script:</li>
</ol>

<div class="org-src-container">
<pre class="src src-shell">./security_audit.sh
</pre>
</div>

<ol class="org-ol">
<li>Abre el reporte en Emacs:</li>
</ol>

<div class="org-src-container">
<pre class="src src-elisp">M-x security-audit-open-latest
</pre>
</div>

<ol class="org-ol">
<li>Revisa los resultados, sigue los enlaces y aplica correcciones (por ejemplo, `ufw deny` para puertos o `chmod` para permisos).</li>
</ol>
</div>
</div>
<div id="outline-container-org86688ac" class="outline-2">
<h2 id="org86688ac">Mejoras Adicionales</h2>
<div class="outline-text-2" id="text-org86688ac">
<ul class="org-ul">
<li><b><b>Notificaciones</b></b>: Añade alertas con `notify-send`:</li>
</ul>

<div class="org-src-container">
<pre class="src src-shell"><span style="color: #219fd5; font-style: italic;">if</span> grep -q <span style="color: #a44185;">"22/tcp open"</span> <span style="color: #a44185;">"$REPORT_DIR/nmap_scan.txt"</span>; <span style="color: #219fd5; font-style: italic;">then</span>
  notify-send <span style="color: #a44185;">"Auditor&#237;a de Seguridad"</span> <span style="color: #a44185;">"Puerto SSH abierto detectado."</span>
<span style="color: #219fd5; font-style: italic;">fi</span>
</pre>
</div>

<ul class="org-ul">
<li><b><b>Exportar a PDF</b></b>: Genera un PDF desde el reporte:</li>
</ul>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">with-current-buffer</span> <span style="color: #a44185;">"*Security Audit Report*"</span>
  (org-export-to-file 'pdf <span style="color: #a44185;">"security_report.pdf"</span>))
</pre>
</div>

<ul class="org-ul">
<li><b><b>Escaneo remoto</b></b>: Modifica `scan<sub>ports</sub>` para aceptar una IP:</li>
</ul>

<div class="org-src-container">
<pre class="src src-shell"><span style="color: #dc3eb7;">scan_ports</span>() {
  <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">target</span>=<span style="color: #a44185;">"${1:-localhost}"</span>
  <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">output</span>=<span style="color: #a44185;">"$REPORT_DIR/nmap_scan.txt"</span>
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Escaneando puertos en $target..."</span>
  nmap -sV <span style="color: #a44185;">"$target"</span> &gt; <span style="color: #a44185;">"$output"</span> 2&gt;&amp;1
}
</pre>
</div>

<ul class="org-ul">
<li><b><b>Integración con Git</b></b>: Almacena reportes en un repositorio para historial.</li>
</ul>
</div>
</div>
<div id="outline-container-org4a28912" class="outline-2">
<h2 id="org4a28912">Conclusión</h2>
<div class="outline-text-2" id="text-org4a28912">
<p>
Automatizar auditorías de seguridad con Bash y Emacs simplifica tareas complejas en un flujo eficiente. Los scripts en Bash escanean puertos y permisos, `cron` asegura ejecuciones regulares, y Emacs con Org-mode ofrece un entorno interactivo para análisis. Este enfoque es ideal para administradores de sistemas y entusiastas de Linux que buscan integrar ciberseguridad en su flujo de trabajo. ¡Implementa estas herramientas y fortalece tu seguridad con <b>Emacs con Esteroides</b>!
</p>
</div>
</div>
<div id="outline-container-org0ddbc79" class="outline-2">
<h2 id="org0ddbc79">Referencias</h2>
<div class="outline-text-2" id="text-org0ddbc79">
<ul class="org-ul">
<li>[Documentación de nmap](<a href="https://nmap.org/book/man.html">https://nmap.org/book/man.html</a>)</li>
<li>[Manual de find y stat](<a href="https://www.gnu.org/software/findutils/manual/">https://www.gnu.org/software/findutils/manual/</a>)</li>
<li>[Org-mode](<a href="https://orgmode.org/">https://orgmode.org/</a>)</li>
<li>[Cron](<a href="https://man7.org/linux/man-pages/man8/cron.8.html">https://man7.org/linux/man-pages/man8/cron.8.html</a>)</li>
<li>[PlantUML](<a href="https://plantuml.com/">https://plantuml.com/</a>)</li>
<li>[Emacs Server](<a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html">https://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html</a>)</li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ciberseguridad.html">ciberseguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-automatización.html">automatización</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[ciberseguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[automatización]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-22-automatizando-auditor%C3%ADas-de-seguridad-en-linux-con-bash-y-emacs.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-22-automatizando-auditor%C3%ADas-de-seguridad-en-linux-con-bash-y-emacs.html</guid>
  <pubDate>Tue, 22 Apr 2025 07:49:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Fortaleciendo la Seguridad Informática con Snort y AIDE: Guía Completa]]></title>
  <description><![CDATA[
<div id="outline-container-orgc52fbcf" class="outline-2">
<h2 id="orgc52fbcf">Introducción</h2>
<div class="outline-text-2" id="text-orgc52fbcf">
<p>
La seguridad informática es un aspecto fundamental para cualquier sistema, especialmente en la era digital actual donde las amenazas evolucionan constantemente. En esta guía detallada, exploraremos dos herramientas esenciales para complementar tu estrategia de seguridad: <b>Snort</b> y <b>AIDE</b>.
</p>

<ul class="org-ul">
<li><b>Snort</b>: Un sistema de detección y prevención de intrusiones (IDS/IPS) basado en red que analiza el tráfico en tiempo real para identificar patrones sospechosos.</li>
<li><b>AIDE</b> (Advanced Intrusion Detection Environment): Una herramienta de detección de intrusiones basada en host que monitorea la integridad de los archivos del sistema.</li>
</ul>

<p>
La combinación de estas herramientas proporciona una defensa en profundidad, permitiéndote detectar tanto intrusiones a nivel de red como modificaciones no autorizadas en tus archivos del sistema.
</p>


<figure id="org611842f">
<img src="images/arquitectura-seguridad.png" alt="arquitectura-seguridad.png">

</figure>
</div>
</div>
<div id="outline-container-org55d4434" class="outline-2">
<h2 id="org55d4434">Parte 1: Instalación y Configuración de Snort</h2>
<div class="outline-text-2" id="text-org55d4434">
</div>
<div id="outline-container-orge3efe91" class="outline-3">
<h3 id="orge3efe91">¿Qué es Snort?</h3>
<div class="outline-text-3" id="text-orge3efe91">
<p>
Snort es un sistema de detección y prevención de intrusiones (IDS/IPS) de código abierto, creado por Martin Roesch en 1998. Esta poderosa herramienta analiza el tráfico de red en tiempo real, comparándolo con una base de datos de reglas para identificar posibles ataques, escaneos, exploits y otras actividades maliciosas.
</p>

<p>
Snort puede funcionar en tres modos principales:
</p>
<ol class="org-ol">
<li><b>Modo Sniffer</b>: Simplemente lee los paquetes de la red y los muestra en pantalla.</li>
<li><b>Modo Registro de Paquetes</b>: Guarda los paquetes en el disco para análisis posterior.</li>
<li><b>Modo NIDS</b> (Network Intrusion Detection System): Analiza el tráfico de red en busca de coincidencias con patrones predefinidos.</li>
<li><b>Modo NIPS</b> (Network Intrusion Prevention System): Además de detectar, puede bloquear activamente tráfico malicioso.</li>
</ol>
</div>
</div>
<div id="outline-container-org4a543f2" class="outline-3">
<h3 id="org4a543f2">Requisitos Previos</h3>
<div class="outline-text-3" id="text-org4a543f2">
<p>
Antes de instalar Snort, asegúrate de contar con:
</p>

<ul class="org-ul">
<li>Sistema operativo Linux (esta guía usa Ubuntu/Debian, pero puede adaptarse)</li>
<li>Privilegios de administrador (sudo/root)</li>
<li>Conexión a Internet para descargar paquetes</li>
<li>Libpcap (biblioteca para captura de paquetes)</li>
<li>DAQ (Data Acquisition Library)</li>
</ul>
</div>
</div>
<div id="outline-container-org5fb90e7" class="outline-3">
<h3 id="org5fb90e7">Instalación de Snort en Debian/Ubuntu</h3>
<div class="outline-text-3" id="text-org5fb90e7">
<p>
Primero, instalemos las dependencias necesarias:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt update
sudo apt install -y build-essential libpcap-dev libpcre3-dev libnet1-dev <span style="color: #a44185;">\</span>
zlib1g-dev luajit hwloc libdnet-dev libdumbnet-dev bison flex liblzma-dev <span style="color: #a44185;">\</span>
openssl libssl-dev libnghttp2-dev libluajit-5.1-dev pkg-config libhwloc-dev <span style="color: #a44185;">\</span>
cmake cpputest
</pre>
</div>

<p>
A continuación, instalamos Snort desde los repositorios (aunque también veremos cómo compilarlo desde el código fuente):
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt install -y snort
</pre>
</div>

<p>
Durante la instalación, se te pedirá configurar tu red local. Introduce el rango de direcciones de tu red (por ejemplo, 192.168.1.0/24).
</p>
</div>
</div>
<div id="outline-container-org671a1aa" class="outline-3">
<h3 id="org671a1aa">Instalación desde el código fuente (alternativa)</h3>
<div class="outline-text-3" id="text-org671a1aa">
<p>
Para tener la versión más reciente, puedes compilar Snort desde el código fuente:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Descargar y compilar DAQ</span>
<span style="color: #dc3eb7;">cd</span> ~/Downloads
wget https://github.com/snort3/libdaq/archive/refs/tags/v3.0.12.tar.gz
tar -xzvf v3.0.12.tar.gz
<span style="color: #dc3eb7;">cd</span> libdaq-3.0.12/
./bootstrap
./configure
make
sudo make install

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Descargar y compilar Snort</span>
<span style="color: #dc3eb7;">cd</span> ~/Downloads
wget https://github.com/snort3/snort3/archive/refs/tags/3.1.76.0.tar.gz
tar -xzvf 3.1.76.0.tar.gz
<span style="color: #dc3eb7;">cd</span> snort3-3.1.76.0/
./configure_cmake.sh --prefix=/usr/local --enable-tcmalloc
<span style="color: #dc3eb7;">cd</span> build
make
sudo make install
sudo ldconfig

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar la instalaci&#243;n</span>
snort -V
</pre>
</div>
</div>
</div>
<div id="outline-container-org22a5aac" class="outline-3">
<h3 id="org22a5aac">Configuración Básica de Snort</h3>
<div class="outline-text-3" id="text-org22a5aac">
<p>
El archivo principal de configuración se encuentra en `/etc/snort/snort.conf` (o en `/usr/local/etc/snort/snort.conf` si compilaste desde el código fuente). Vamos a realizar algunas configuraciones básicas:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo cp /etc/snort/snort.conf /etc/snort/snort.conf.bak  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear backup</span>
sudo nano /etc/snort/snort.conf
</pre>
</div>

<p>
Dentro del archivo, busca y modifica las siguientes secciones:
</p>

<p>
<b>Configuración de red</b>: Define tu red local para que Snort pueda diferenciar entre tráfico interno y externo.
</p>
<div class="org-src-container">
<pre class="src src-bash">ipvar HOME_NET 192.168.1.0/24
ipvar EXTERNAL_NET !$<span style="color: #1857a4;">HOME_NET</span>
</pre>
</div>

<p>
<b>Rutas de reglas</b>: Asegúrate de que las rutas a los archivos de reglas sean correctas.
</p>
<div class="org-src-container">
<pre class="src src-bash">var RULE_PATH /etc/snort/rules
var SO_RULE_PATH /etc/snort/so_rules
var PREPROC_RULE_PATH /etc/snort/preproc_rules
</pre>
</div>

<p>
<b>Preprocesadores</b>: Habilita los preprocesadores necesarios según tus necesidades:
</p>
<div class="org-src-container">
<pre class="src src-bash">preprocessor frag3_global: max_frags 65536
preprocessor frag3_engine: policy windows detect_anomalies
preprocessor stream5_global: track_tcp yes, track_udp yes
</pre>
</div>

<p>
<b>Reglas</b>: Descomenta las reglas que deseas utilizar:
</p>
<div class="org-src-container">
<pre class="src src-bash">include $<span style="color: #1857a4;">RULE_PATH</span>/local.rules
include $<span style="color: #1857a4;">RULE_PATH</span>/bad-traffic.rules
include $<span style="color: #1857a4;">RULE_PATH</span>/exploit.rules
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">... otras reglas seg&#250;n necesidades ...</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org3ca258b" class="outline-3">
<h3 id="org3ca258b">Creación de Reglas Personalizadas</h3>
<div class="outline-text-3" id="text-org3ca258b">
<p>
Las reglas de Snort son extremadamente poderosas y flexibles. Vamos a crear algunas reglas personalizadas en el archivo `/etc/snort/rules/local.rules`:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/snort/rules/local.rules
</pre>
</div>

<p>
Añade estas reglas de ejemplo:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Alerta por escaneo de puertos</span>
alert tcp any any -&gt; $<span style="color: #1857a4;">HOME_NET</span> any (msg:<span style="color: #a44185;">"Posible escaneo de puertos TCP"</span>; flags:S; threshold: type threshold, track by_src, count 50, seconds 60; sid:1000001; rev:1;)
</pre>
</div>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Alerta por intentos de acceso SSH m&#250;ltiples</span>
alert tcp any any -&gt; $<span style="color: #1857a4;">HOME_NET</span> 22 (msg:<span style="color: #a44185;">"Posible ataque de fuerza bruta SSH"</span>; flow:to_server; threshold: type threshold, track by_src, count 5, seconds 60; sid:1000002; rev:1;)
</pre>
</div>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Alerta por acceso a la p&#225;gina de administraci&#243;n</span>
alert tcp any any -&gt; $<span style="color: #1857a4;">HOME_NET</span> 80 (msg:<span style="color: #a44185;">"Acceso a panel de administraci&#243;n"</span>; content:<span style="color: #a44185;">"GET /admin"</span>; nocase; sid:1000003; rev:1;)
</pre>
</div>
</div>
</div>
<div id="outline-container-orgcb4c5a9" class="outline-3">
<h3 id="orgcb4c5a9">Verificación de la Configuración</h3>
<div class="outline-text-3" id="text-orgcb4c5a9">
<p>
Antes de iniciar Snort, verifica que tu configuración no tenga errores:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo snort -T -c /etc/snort/snort.conf
</pre>
</div>

<p>
Si todo está correcto, deberías ver "Snort successfully validated the configuration!"
</p>
</div>
</div>
<div id="outline-container-org92320c0" class="outline-3">
<h3 id="org92320c0">Ejecución de Snort</h3>
<div class="outline-text-3" id="text-org92320c0">
<p>
Para ejecutar Snort en modo IDS:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo snort -A console -q -c /etc/snort/snort.conf -D
</pre>
</div>

<p>
Opciones comunes:
</p>
<ul class="org-ul">
<li>`-A console`: Muestra las alertas en la consola</li>
<li>`-q`: Modo silencioso</li>
<li>`-c`: Ruta al archivo de configuración</li>
<li>`-D`: Ejecutar como demonio</li>
</ul>

<p>
Para ejecutar Snort en modo IPS (usando NFQ):
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo snort -c /etc/snort/snort.conf -Q --daq nfq --daq-var <span style="color: #1857a4;">queue</span>=1
</pre>
</div>
</div>
</div>
<div id="outline-container-orgdec95e9" class="outline-3">
<h3 id="orgdec95e9">Configuración como Servicio</h3>
<div class="outline-text-3" id="text-orgdec95e9">
<p>
Para que Snort se inicie automáticamente al arrancar el sistema:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/systemd/system/snort.service
</pre>
</div>

<p>
Añade el siguiente contenido:
</p>

<div class="org-src-container">
<pre class="src src-bash">[Unit]
<span style="color: #1857a4;">Description</span>=Snort NIDS Daemon
<span style="color: #1857a4;">After</span>=network.target

[Service]
<span style="color: #1857a4;">Type</span>=simple
<span style="color: #1857a4;">ExecStart</span>=/usr/sbin/snort -c /etc/snort/snort.conf -D
<span style="color: #1857a4;">Restart</span>=on-failure

[Install]
<span style="color: #1857a4;">WantedBy</span>=multi-user.target
</pre>
</div>


<p>
Habilita e inicia el servicio:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo systemctl enable snort.service
sudo systemctl start snort.service
sudo systemctl status snort.service
</pre>
</div>
</div>
</div>
<div id="outline-container-orgdbb5052" class="outline-3">
<h3 id="orgdbb5052">Visualización con diagrama PlantUML</h3>
<div class="outline-text-3" id="text-orgdbb5052">
<p>
El flujo de trabajo de Snort puede representarse visualmente:
</p>


<figure id="org02ef8d8">
<img src="images/flujo-snort.png" alt="flujo-snort.png">

</figure>
</div>
</div>
</div>
<div id="outline-container-orgb698de7" class="outline-2">
<h2 id="orgb698de7">Parte 2: Instalación y Configuración de AIDE</h2>
<div class="outline-text-2" id="text-orgb698de7">
</div>
<div id="outline-container-org8fbecb6" class="outline-3">
<h3 id="org8fbecb6">¿Qué es AIDE?</h3>
<div class="outline-text-3" id="text-org8fbecb6">
<p>
AIDE (Advanced Intrusion Detection Environment) es una herramienta de detección de intrusiones basada en host que verifica la integridad de los archivos del sistema. Funciona creando una base de datos de los atributos de los archivos y directorios, como permisos, timestamps, checksums y contenido. Posteriormente, puede detectar cualquier cambio no autorizado en estos atributos.
</p>

<p>
AIDE es especialmente útil para:
</p>
<ul class="org-ul">
<li>Detectar modificaciones no autorizadas en archivos críticos del sistema</li>
<li>Identificar instalaciones de rootkits o backdoors</li>
<li>Verificar la integridad del sistema tras un incidente de seguridad</li>
<li>Cumplir con requisitos de auditoría y conformidad</li>
</ul>
</div>
</div>
<div id="outline-container-orgadf285a" class="outline-3">
<h3 id="orgadf285a">Instalación de AIDE</h3>
<div class="outline-text-3" id="text-orgadf285a">
<p>
En sistemas Debian/Ubuntu:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt update
sudo apt install -y aide
</pre>
</div>

<p>
En sistemas basados en Red Hat (RHEL, CentOS, Fedora):
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo yum install -y aide
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">o con dnf</span>
sudo dnf install -y aide
</pre>
</div>
</div>
</div>
<div id="outline-container-org1e4fd00" class="outline-3">
<h3 id="org1e4fd00">Configuración Básica de AIDE</h3>
<div class="outline-text-3" id="text-org1e4fd00">
<p>
El archivo principal de configuración se encuentra en `/etc/aide/aide.conf`. Vamos a realizar una configuración básica:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo cp /etc/aide/aide.conf /etc/aide/aide.conf.bak  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear backup</span>
sudo nano /etc/aide/aide.conf
</pre>
</div>

<p>
El archivo contiene definiciones de grupos de reglas y los directorios/archivos a los que aplicarlas. Aquí hay algunos ejemplos importantes:
</p>

<div class="org-src-container">
<pre class="src src-bash">
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Definici&#243;n de grupos de reglas</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">NORMAL = checksums + atributos de archivo + permisos</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">DATAONLY = solo checksums</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">LOGS = como NORMAL pero permitiendo cambios en el tama&#241;o</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">...</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Directorios/archivos a monitorear</span>
/etc NORMAL
/bin NORMAL
/sbin NORMAL
/usr NORMAL
/boot NORMAL
/root NORMAL
<span style="color: #219fd5; font-weight: bold;">!</span>/var/log/.*  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Excluir logs - pueden cambiar frecuentemente</span>
<span style="color: #219fd5; font-weight: bold;">!</span>/var/spool/.* <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Excluir spool</span>
<span style="color: #219fd5; font-weight: bold;">!</span>/var/tmp/.* <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Excluir temporales</span>

</pre>
</div>
</div>
</div>
<div id="outline-container-orgf7d9ce6" class="outline-3">
<h3 id="orgf7d9ce6">Personalización de la Configuración</h3>
<div class="outline-text-3" id="text-orgf7d9ce6">
<p>
Vamos a personalizar la configuración para adaptarla a nuestras necesidades:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/aide/aide.conf
</pre>
</div>

<p>
Añade o modifica estas líneas según tus necesidades:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Definici&#243;n personalizada de grupos de reglas</span>
MyGroup = sha256+ftype+p+u+g+n+acl+xattrs

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Directorios espec&#237;ficos a monitorear con mayor atenci&#243;n</span>
/etc/ssh MyGroup
/etc/pam.d MyGroup
/etc/sudoers MyGroup
/etc/shadow MyGroup

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Archivos de configuraci&#243;n de Snort</span>
/etc/snort MyGroup

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Excluir directorios que cambian frecuentemente</span>
<span style="color: #219fd5; font-weight: bold;">!</span>/var/lib/mysql/.*
<span style="color: #219fd5; font-weight: bold;">!</span>/home/usuario/descargas/.*
</pre>
</div>
</div>
</div>
<div id="outline-container-org1c1ee8b" class="outline-3">
<h3 id="org1c1ee8b">Inicialización de la Base de Datos de AIDE</h3>
<div class="outline-text-3" id="text-org1c1ee8b">
<p>
Antes de usar AIDE, necesitamos inicializar su base de datos:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo aideinit
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">o alternativamente</span>
sudo aide --init
</pre>
</div>

<p>
Esto puede tomar tiempo dependiendo del tamaño de tu sistema. Una vez completado, la base de datos se creará en un archivo temporal (generalmente `/var/lib/aide/aide.db.new`). Necesitamos moverla al lugar correcto:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db
</pre>
</div>
</div>
</div>
<div id="outline-container-orgeec7e3a" class="outline-3">
<h3 id="orgeec7e3a">Ejecución Manual de Verificaciones</h3>
<div class="outline-text-3" id="text-orgeec7e3a">
<p>
Para ejecutar una verificación manualmente:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo aide --check
</pre>
</div>

<p>
Este comando comparará el estado actual del sistema con la base de datos almacenada y mostrará cualquier discrepancia.
</p>
</div>
</div>
<div id="outline-container-org0f8d893" class="outline-3">
<h3 id="org0f8d893">Actualización de la Base de Datos</h3>
<div class="outline-text-3" id="text-org0f8d893">
<p>
Después de realizar cambios legítimos en el sistema (como actualizaciones de software), debemos actualizar la base de datos de AIDE:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo aide --update
sudo mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db
</pre>
</div>
</div>
</div>
<div id="outline-container-org154d214" class="outline-3">
<h3 id="org154d214">Automatización con Cron</h3>
<div class="outline-text-3" id="text-org154d214">
<p>
Para automatizar las verificaciones regulares, configuremos una tarea cron:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/cron.daily/aide-check
</pre>
</div>

<p>
Añade este contenido:
</p>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificaci&#243;n diaria con AIDE</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ruta para almacenar informes</span>
<span style="color: #1857a4;">REPORT_DIR</span>=<span style="color: #a44185;">"/var/log/aide"</span>
<span style="color: #1857a4;">REPORT_FILE</span>=<span style="color: #a44185;">"$REPORT_DIR/aide-$(</span><span style="color: #219fd5; font-weight: bold;">date +%Y%m%d-%H%M%S</span><span style="color: #a44185;">).log"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear directorio si no existe</span>
mkdir -p $<span style="color: #1857a4;">REPORT_DIR</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar verificaci&#243;n</span>
/usr/bin/aide --check &gt; $<span style="color: #1857a4;">REPORT_FILE</span> 2&gt;&amp;1

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Si hay cambios, enviar por correo (opcional)</span>
<span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">?</span> -ne 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Se detectaron cambios en el sistema. Ver $REPORT_FILE para detalles."</span> | <span style="color: #a44185;">\</span>
    mail -s <span style="color: #a44185;">"Alerta de AIDE: cambios detectados"</span> admin@example.com
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #219fd5; font-style: italic;">exit</span> 0
</pre>
</div>

<p>
Haz el script ejecutable:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/cron.daily/aide-check
</pre>
</div>

<p>
También es buena práctica actualizar la base de datos periódicamente:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/cron.weekly/aide-update
</pre>
</div>

<p>
Añade este contenido:
</p>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Actualizaci&#243;n semanal de la base de datos de AIDE</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar actualizaci&#243;n</span>
/usr/bin/aide --update

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Mover la nueva base de datos</span>
mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db

<span style="color: #219fd5; font-style: italic;">exit</span> 0
</pre>
</div>

<p>
Haz el script ejecutable:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/cron.weekly/aide-update
</pre>
</div>
</div>
</div>
<div id="outline-container-orgbd39a86" class="outline-3">
<h3 id="orgbd39a86">Visualización con diagrama PlantUML</h3>
<div class="outline-text-3" id="text-orgbd39a86">
<p>
El flujo de trabajo de AIDE puede representarse visualmente:
</p>


<figure id="orgf20e6b4">
<img src="images/flujo-aide.png" alt="flujo-aide.png">

</figure>
</div>
</div>
</div>
<div id="outline-container-org22551e4" class="outline-2">
<h2 id="org22551e4">Parte 3: Integración de Snort y AIDE para una Defensa Completa</h2>
<div class="outline-text-2" id="text-org22551e4">
</div>
<div id="outline-container-orgc01f187" class="outline-3">
<h3 id="orgc01f187">Estrategia de Defensa en Profundidad</h3>
<div class="outline-text-3" id="text-orgc01f187">
<p>
La combinación de Snort y AIDE proporciona una defensa en profundidad para tu sistema:
</p>

<ol class="org-ol">
<li><b>Snort</b> actúa como primera línea de defensa, monitoreando el tráfico de red y detectando posibles intentos de intrusión antes de que lleguen a comprometer el sistema.</li>

<li><b>AIDE</b> funciona como última línea de defensa, verificando si algún archivo del sistema ha sido modificado, lo que indicaría una posible intrusión exitosa.</li>
</ol>

<p>
Esta estrategia aplica el principio de defensa en profundidad: múltiples capas de seguridad que se complementan para proteger tus sistemas.
</p>
</div>
</div>
<div id="outline-container-orgf6e7931" class="outline-3">
<h3 id="orgf6e7931">Integración a Nivel de Alertas</h3>
<div class="outline-text-3" id="text-orgf6e7931">
<p>
Podemos integrar las alertas de ambas herramientas para tener una vista unificada de posibles incidentes de seguridad:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/aide/aide.sh
</pre>
</div>

<p>
Crea un script que combine los resultados:
</p>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Script para integrar las alertas de Snort y AIDE</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Directorios de logs</span>
<span style="color: #1857a4;">SNORT_LOG</span>=<span style="color: #a44185;">"/var/log/snort/alert"</span>
<span style="color: #1857a4;">AIDE_LOG</span>=<span style="color: #a44185;">"/var/log/aide/aide-$(</span><span style="color: #219fd5; font-weight: bold;">date +%Y%m%d</span><span style="color: #a44185;">).log"</span>
<span style="color: #1857a4;">COMBINED_LOG</span>=<span style="color: #a44185;">"/var/log/security/combined-$(</span><span style="color: #219fd5; font-weight: bold;">date +%Y%m%d</span><span style="color: #a44185;">).log"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear directorio si no existe</span>
mkdir -p /var/log/security

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar verificaci&#243;n de AIDE</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Ejecutando verificaci&#243;n de AIDE..."</span> &gt; $<span style="color: #1857a4;">COMBINED_LOG</span>
/usr/bin/aide --check &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span> 2&gt;&amp;1
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">""</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">A&#241;adir &#250;ltimas alertas de Snort</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#218;ltimas alertas de Snort:"</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>
tail -n 50 $<span style="color: #1857a4;">SNORT_LOG</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">""</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Analizar para detectar correlaciones</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"An&#225;lisis de correlaci&#243;n:"</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>
grep -i <span style="color: #a44185;">"modified"</span> $<span style="color: #1857a4;">AIDE_LOG</span> &gt; /tmp/aide_modified.tmp
<span style="color: #219fd5; font-style: italic;">while </span><span style="color: #dc3eb7;">read</span> line; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">file</span>=$(<span style="color: #219fd5; font-weight: bold;">echo $line | awk '{print $2}'</span>)
    grep -i <span style="color: #a44185;">"$file"</span> $<span style="color: #1857a4;">SNORT_LOG</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>
<span style="color: #219fd5; font-style: italic;">done</span> &lt; /tmp/aide_modified.tmp

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Enviar informe (opcional)</span>
cat $<span style="color: #1857a4;">COMBINED_LOG</span> | mail -s <span style="color: #a44185;">"Informe de Seguridad Diario"</span> admin@example.com

<span style="color: #219fd5; font-style: italic;">exit</span> 0
</pre>
</div>

<p>
Haz el script ejecutable y configúralo como tarea cron diaria:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/aide/aide.sh
sudo nano /etc/cron.daily/security-check
</pre>
</div>

<p>
Añade este contenido:
</p>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
/etc/aide/aide.sh
</pre>
</div>

<p>
Haz el script ejecutable:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/cron.daily/security-check
</pre>
</div>
</div>
</div>
<div id="outline-container-orgb0c877a" class="outline-3">
<h3 id="orgb0c877a">Visualización con diagrama PlantUML</h3>
<div class="outline-text-3" id="text-orgb0c877a">
<p>
La integración entre Snort y AIDE puede representarse visualmente:
</p>


<figure id="orgdd0bbbe">
<img src="images/integracion-snort-aide.png" alt="integracion-snort-aide.png">

</figure>
</div>
</div>
</div>
<div id="outline-container-org8de54e5" class="outline-2">
<h2 id="org8de54e5">Parte 4: Mejores Prácticas y Mantenimiento</h2>
<div class="outline-text-2" id="text-org8de54e5">
</div>
<div id="outline-container-org9885b7c" class="outline-3">
<h3 id="org9885b7c">Actualización de Reglas de Snort</h3>
<div class="outline-text-3" id="text-org9885b7c">
<p>
Las reglas de Snort deben actualizarse regularmente para detectar las últimas amenazas:
</p>

<ol class="org-ol">
<li><b>Suscripción a Reglas</b>: Considera una suscripción a Snort VRT para obtener las últimas reglas comerciales.</li>

<li><b>Reglas de la Comunidad</b>: Alternativamente, puedes usar reglas gratuitas de la comunidad.</li>

<li><b>Actualización Automática</b>: Configura un script para actualizar las reglas periódicamente:</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/cron.daily/update-snort-rules
</pre>
</div>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Actualizaci&#243;n diaria de reglas de Snort</span>

<span style="color: #dc3eb7;">cd</span> /etc/snort/rules
wget -q https://www.snort.org/rules/community -O community.tar.gz
tar -xzf community.tar.gz
rm community.tar.gz

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Reiniciar Snort para aplicar las nuevas reglas</span>
systemctl restart snort.service
</pre>
</div>

<p>
Haz el script ejecutable:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/cron.daily/update-snort-rules
</pre>
</div>
</div>
</div>
<div id="outline-container-org4971c25" class="outline-3">
<h3 id="org4971c25">Ajuste y Optimización de Rendimiento</h3>
<div class="outline-text-3" id="text-org4971c25">
<p>
Para optimizar el rendimiento de Snort:
</p>

<p>
<b>Ajusta los preprocesadores</b>: Habilita solo los preprocesadores necesarios para tu entorno.
</p>

<p>
<b>Optimiza la memoria</b>: Ajusta los parámetros de memoria según tus recursos disponibles.
</p>
<div class="org-src-container">
<pre class="src src-bash">config detection: search-method ac-bnfa
config detection: max_queue_events 5
</pre>
</div>

<p>
<b>Filtra tráfico irrelevante</b>: Usa BPF (Berkeley Packet Filter) para filtrar tráfico que no necesitas analizar:
</p>
<div class="org-src-container">
<pre class="src src-bash">config bpf_file: /etc/snort/bpf.conf


En <span style="color: #219fd5; font-weight: bold;">`/etc/snort/bpf.conf`</span>:

not port 53 and not port 80
</pre>
</div>
</div>
</div>
<div id="outline-container-org92e7f11" class="outline-3">
<h3 id="org92e7f11">Copia de Seguridad y Recuperación</h3>
<div class="outline-text-3" id="text-org92e7f11">
<p>
Realizar copias de seguridad regulares de tus configuraciones:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/cron.weekly/security-backup
</pre>
</div>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Copia de seguridad semanal de configuraciones de seguridad</span>

<span style="color: #1857a4;">BACKUP_DIR</span>=<span style="color: #a44185;">"/backup/security/$(</span><span style="color: #219fd5; font-weight: bold;">date +%Y%m%d</span><span style="color: #a44185;">)"</span>
mkdir -p $<span style="color: #1857a4;">BACKUP_DIR</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Backup de configuraci&#243;n de Snort</span>
tar -czf $<span style="color: #1857a4;">BACKUP_DIR</span>/snort-config.tar.gz /etc/snort

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Backup de configuraci&#243;n de AIDE</span>
cp /etc/aide/aide.conf $<span style="color: #1857a4;">BACKUP_DIR</span>/
cp /var/lib/aide/aide.db $<span style="color: #1857a4;">BACKUP_DIR</span>/

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Backup de logs (opcional)</span>
tar -czf $<span style="color: #1857a4;">BACKUP_DIR</span>/security-logs.tar.gz /var/log/snort /var/log/aide

<span style="color: #219fd5; font-style: italic;">exit</span> 0
</pre>
</div>


<p>
Haz el script ejecutable:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/cron.weekly/security-backup
</pre>
</div>
</div>
</div>
<div id="outline-container-org2f92bbe" class="outline-3">
<h3 id="org2f92bbe">Pruebas de Efectividad</h3>
<div class="outline-text-3" id="text-org2f92bbe">
<p>
Es importante probar regularmente la efectividad de tu configuración:
</p>

<ol class="org-ol">
<li><b>Para Snort</b>: Utiliza herramientas como `nmap` o `hping3` para generar tráfico sospechoso de forma controlada y verifica que Snort lo detecte.</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Desde otra m&#225;quina (&#161;NO desde producci&#243;n!)</span>
sudo nmap -sS -p 1-1000 [IP-objetivo]
</pre>
</div>

<ol class="org-ol">
<li><b>Para AIDE</b>: Realiza cambios controlados en archivos monitoreados y verifica que AIDE los detecte.</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Modificar un archivo monitoreado</span>
sudo touch /etc/test-file
sudo aide --check  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Deber&#237;a mostrar el cambio</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org2853484" class="outline-3">
<h3 id="org2853484">Plan de Respuesta a Incidentes</h3>
<div class="outline-text-3" id="text-org2853484">
<p>
Desarrolla un plan simple de respuesta a incidentes:
</p>

<ol class="org-ol">
<li><b>Detección</b>: Monitoreo constante de logs y alertas.</li>
<li><b>Contención</b>: Procedimientos para aislar sistemas comprometidos.</li>
<li><b>Erradicación</b>: Eliminación de amenazas identificadas.</li>
<li><b>Recuperación</b>: Restauración de sistemas a un estado seguro.</li>
<li><b>Lecciones aprendidas</b>: Documentación y mejora continua.</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-org171b1d7" class="outline-2">
<h2 id="org171b1d7">Conclusión</h2>
<div class="outline-text-2" id="text-org171b1d7">
<p>
La combinación de Snort (IDS/IPS basado en red) y AIDE (verificación de integridad basada en host) proporciona una estrategia de defensa en profundidad para proteger tus sistemas informáticos. Mientras Snort vigila el perímetro y detecta intentos de intrusión, AIDE verifica que ningún archivo crítico haya sido modificado sin autorización.
</p>

<p>
La configuración e integración adecuada de estas herramientas, junto con un mantenimiento regular y pruebas periódicas, te permitirá mantener un nivel de seguridad robusto frente a las constantes amenazas del entorno digital.
</p>

<p>
Recuerda que la seguridad informática es un proceso continuo, no un producto. Mantente actualizado sobre las últimas amenazas y técnicas de protección, y adapta tu estrategia de seguridad en consecuencia.
</p>
</div>
</div>
<div id="outline-container-orgd7376b9" class="outline-2">
<h2 id="orgd7376b9">Referencias y Recursos Adicionales</h2>
<div class="outline-text-2" id="text-orgd7376b9">
<ul class="org-ul">
<li><a href="https://www.snort.org/">Sitio oficial de Snort</a></li>
<li><a href="https://github.com/aide/aide">Repositorio de AIDE en GitHub</a></li>
<li><a href="https://www.snort.org/documents/snort-users-manual">Manual de usuario de Snort</a></li>
<li><a href="https://aide.github.io/">Documentación de AIDE</a></li>
<li><a href="https://www.sans.org/security-resources/">Recursos de seguridad de SANS Institute</a></li>
</ul>
</div>
</div>
<div id="outline-container-org2b4e454" class="outline-2">
<h2 id="org2b4e454">Notas para el Editor de Emacs</h2>
<div class="outline-text-2" id="text-org2b4e454">
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-informática.html">informática</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-nort.html">nort</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-aide.html">AIDE</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ids.html">IDS</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ips.html">IPS</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-detección.html">detección</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-intrusiones.html">intrusiones</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-monitoreo.html">monitoreo</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-integridad.html">integridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[informática]]></category>
  <category><![CDATA[nort]]></category>
  <category><![CDATA[AIDE]]></category>
  <category><![CDATA[IDS]]></category>
  <category><![CDATA[IPS]]></category>
  <category><![CDATA[detección]]></category>
  <category><![CDATA[intrusiones]]></category>
  <category><![CDATA[monitoreo]]></category>
  <category><![CDATA[integridad]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-16--fortaleciendo-la-seguridad-inform-tica-con-snort-y-aide-gu-a-completa.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-16--fortaleciendo-la-seguridad-inform-tica-con-snort-y-aide-gu-a-completa.html</guid>
  <pubDate>Wed, 16 Apr 2025 04:17:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Guía Práctica: Configuración de UFW en Ubuntu con Scripts y Org Mode]]></title>
  <description><![CDATA[
<div id="outline-container-org43d23bd" class="outline-2">
<h2 id="org43d23bd">Introducción</h2>
<div class="outline-text-2" id="text-org43d23bd">
<p>
La seguridad es un aspecto crítico para cualquier servidor Linux. UFW (Uncomplicated Firewall) proporciona una interfaz simplificada para configurar un firewall robusto en sistemas Ubuntu. En este artículo, nos centraremos en la parte práctica: cómo crear, configurar y ejecutar un script de configuración de UFW, todo gestionado desde Emacs con Org Mode.
</p>

<p>
Este enfoque práctico te permitirá:
</p>
<ul class="org-ul">
<li>Documentar tu configuración de seguridad</li>
<li>Automatizar la implementación de reglas</li>
<li>Mantener un registro de los cambios realizados</li>
<li>Compartir fácilmente tu configuración con otros administradores</li>
</ul>

<p>
Está diseñado para administradores de sistemas y entusiastas de Linux que utilizan Emacs como parte de su flujo de trabajo.
</p>


<figure id="org668b759">
<img src="images/ufw-components.png" alt="ufw-components.png">

</figure>
</div>
</div>
<div id="outline-container-orga6af4d7" class="outline-2">
<h2 id="orga6af4d7">Prerrequisitos</h2>
<div class="outline-text-2" id="text-orga6af4d7">
<p>
Antes de comenzar, asegúrate de tener:
</p>

<ul class="org-ul">
<li>Ubuntu 22.04 LTS o superior</li>
<li>Emacs 27+ con Org Mode</li>
<li>Acceso root o privilegios sudo</li>
<li>UFW instalado (<code>sudo apt install ufw</code>)</li>
<li>Conexión SSH configurada (si trabajas remotamente)</li>
</ul>
</div>
</div>
<div id="outline-container-orgfe01919" class="outline-2">
<h2 id="orgfe01919">Creación del Script en Org Mode</h2>
<div class="outline-text-2" id="text-orgfe01919">
<p>
Comenzaremos creando un archivo Org Mode que contendrá nuestro script y documentación. En Emacs:
</p>

<ol class="org-ol">
<li>Crea un nuevo archivo: <code>C-x C-f ~/firewall-config.org RET</code></li>
<li>Añade la estructura básica del documento</li>
</ol>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #637c9d;">#+TITLE:</span> <span style="color: #dc3eb7; font-weight: bold;">Configuraci&#243;n de UFW para Servidores Ubuntu</span>
<span style="color: #637c9d;">#+AUTHOR:</span> <span style="color: #dc3eb7;">Tu Nombre</span>
<span style="color: #637c9d;">#+DATE:</span> <span style="color: #dc3eb7;">2025-04-15</span>
<span style="color: #60a8a1;">#+PROPERTY: header-args:bash :tangle ufw-secure-config.sh :comments both</span>

<span style="color: #2f86d2; font-weight: bold;">* Descripci&#243;n del Script</span>
Este script configura UFW en Ubuntu para proteger contra amenazas comunes,
incluyendo botnets, ataques de fuerza bruta y escaneos de puertos. Est&#225;
dise&#241;ado para servidores de producci&#243;n con exposici&#243;n a Internet.

<span style="color: #2f86d2; font-weight: bold;">* Script de Configuraci&#243;n</span>
<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Cabecera y verificaciones iniciales</span>
</pre>
</div>

<p>
El atributo <code>:tangle ufw-secure-config.sh</code> indica a Org Mode que extraiga (tangle) el código en un archivo ejecutable cuando lo solicitemos.
</p>
</div>
</div>
<div id="outline-container-org024ee21" class="outline-2">
<h2 id="org024ee21">Desarrollo del Script de Configuración UFW</h2>
<div class="outline-text-2" id="text-org024ee21">
<p>
Ahora desarrollaremos el script por secciones, añadiendo cada parte como un bloque de código Org Babel. Esto nos permite tener el script documentado y listo para ejecutar.
</p>
</div>
<div id="outline-container-org4e7dc53" class="outline-3">
<h3 id="org4e7dc53">Sección 1: Cabecera y verificaciones</h3>
<div class="outline-text-3" id="text-org4e7dc53">
<p>
Añade este bloque después de la sección "Cabecera y verificaciones iniciales":
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">#</span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">!/bin/bash</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Script: ufw-secure-config.sh</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Descripci&#243;n: Configuraci&#243;n segura de UFW para servidores Ubuntu</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Autor: Tu Nombre</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Fecha: 2025-04-15</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Versi&#243;n: 1.0</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Colores para mejor legibilidad</span>
<span style="color: #1857a4; background-color: #9fafc4;">RED</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">'\033[0;31m'</span>
<span style="color: #1857a4; background-color: #9fafc4;">GREEN</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">'\033[0;32m'</span>
<span style="color: #1857a4; background-color: #9fafc4;">YELLOW</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">'\033[1;33m'</span>
<span style="color: #1857a4; background-color: #9fafc4;">NC</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">'\033[0m'</span><span style="background-color: #9fafc4;"> </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Sin Color</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}=== Script de Configuraci&#243;n Segura de UFW ===${NC}"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Iniciando configuraci&#243;n en $(</span><span style="color: #219fd5; background-color: #9fafc4; font-weight: bold;">date</span><span style="color: #a44185; background-color: #9fafc4;">)"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Verificar privilegios de root</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">if</span><span style="background-color: #9fafc4;"> <a href=" $EUID -ne 0 ">[[ $</a></span><span style="color: #1857a4; background-color: #9fafc4;"><a href=" $EUID -ne 0 ">EUID</a></span><span style="background-color: #9fafc4;"><a href=" $EUID -ne 0 "> -ne 0 ]]</a>; </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">then</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${RED}Este script requiere privilegios de root.${NC}"</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Por favor, ejecuta con sudo: sudo bash $0"</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">exit</span><span style="background-color: #9fafc4;"> 1</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">fi</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Verificar que UFW est&#233; instalado</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">if ! </span><span style="color: #dc3eb7; background-color: #9fafc4;">command</span><span style="background-color: #9fafc4;"> -v ufw &amp;&gt; /dev/null; </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">then</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${YELLOW}UFW no est&#225; instalado. Instalando...${NC}"</span>
<span style="background-color: #9fafc4;">    apt update &amp;&amp; apt install -y ufw</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">if</span><span style="background-color: #9fafc4;"> [ $</span><span style="color: #1857a4; background-color: #9fafc4;">?</span><span style="background-color: #9fafc4;"> -ne 0 ]; </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">then</span>
<span style="background-color: #9fafc4;">        </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${RED}Error instalando UFW. Abortando.${NC}"</span>
<span style="background-color: #9fafc4;">        </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">exit</span><span style="background-color: #9fafc4;"> 1</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">fi</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}UFW instalado correctamente.${NC}"</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">else</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}UFW ya est&#225; instalado.${NC}"</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">fi</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Crear directorio para backups si no existe</span>
<span style="color: #1857a4; background-color: #9fafc4;">BACKUP_DIR</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">"/root/ufw-backups"</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">if</span><span style="background-color: #9fafc4;"> [ </span><span style="color: #219fd5; background-color: #9fafc4; font-weight: bold;">!</span><span style="background-color: #9fafc4;"> -d </span><span style="color: #a44185; background-color: #9fafc4;">"$BACKUP_DIR"</span><span style="background-color: #9fafc4;"> ]; </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">then</span>
<span style="background-color: #9fafc4;">    mkdir -p </span><span style="color: #a44185; background-color: #9fafc4;">"$BACKUP_DIR"</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Directorio para backups creado: $BACKUP_DIR"</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">fi</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 2: Backup y reinicio de configuraci&#243;n</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf5da726" class="outline-3">
<h3 id="orgf5da726">Sección 2: Backup y reinicio de configuración</h3>
<div class="outline-text-3" id="text-orgf5da726">
<p>
Continuamos con la siguiente sección:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Crear backup de reglas actuales</span>
<span style="color: #1857a4; background-color: #9fafc4;">TIMESTAMP</span><span style="background-color: #9fafc4;">=$(</span><span style="color: #219fd5; background-color: #9fafc4; font-weight: bold;">date +%F-%H%M%S</span><span style="background-color: #9fafc4;">)</span>
<span style="color: #1857a4; background-color: #9fafc4;">BACKUP_FILE</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">"$BACKUP_DIR/ufw-backup-$TIMESTAMP.rules"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${YELLOW}Creando backup de reglas actuales en:${NC} $BACKUP_FILE"</span>
<span style="background-color: #9fafc4;">ufw status verbose &gt; </span><span style="color: #a44185; background-color: #9fafc4;">"$BACKUP_FILE"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Guardar configuraci&#243;n actual de iptables para referencia</span>
<span style="background-color: #9fafc4;">iptables-save &gt; </span><span style="color: #a44185; background-color: #9fafc4;">"$BACKUP_DIR/iptables-backup-$TIMESTAMP.rules"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Backup de iptables guardado en: $BACKUP_DIR/iptables-backup-$TIMESTAMP.rules"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Reiniciar UFW para configuraci&#243;n limpia</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${YELLOW}Reiniciando UFW para iniciar configuraci&#243;n limpia...${NC}"</span>
<span style="background-color: #9fafc4;">ufw --force reset</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}UFW reiniciado correctamente.${NC}"</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 3: Configuraci&#243;n de pol&#237;ticas b&#225;sicas</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orga3e5d1f" class="outline-3">
<h3 id="orga3e5d1f">Sección 3: Configuración de políticas básicas</h3>
<div class="outline-text-3" id="text-orga3e5d1f">
<p>
Configuramos las políticas predeterminadas y activamos el logging:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Configurando pol&#237;ticas b&#225;sicas ===${NC}"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Establecer pol&#237;ticas predeterminadas</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando pol&#237;tica por defecto: denegar tr&#225;fico entrante"</span>
<span style="background-color: #9fafc4;">ufw default deny incoming</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando pol&#237;tica por defecto: permitir tr&#225;fico saliente"</span>
<span style="background-color: #9fafc4;">ufw default allow outgoing</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Configurar nivel de log</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando nivel de logging: medio"</span>
<span style="background-color: #9fafc4;">ufw logging medium</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}Pol&#237;ticas b&#225;sicas configuradas correctamente.${NC}"</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 4: Reglas para servicios esenciales</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org5c217f6" class="outline-3">
<h3 id="org5c217f6">Sección 4: Reglas para servicios esenciales</h3>
<div class="outline-text-3" id="text-org5c217f6">
<p>
Configuramos las reglas para los servicios principales:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Configurando reglas para servicios esenciales ===${NC}"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">SSH - Limitar intentos para prevenir ataques de fuerza bruta</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando SSH con l&#237;mite de conexiones..."</span>
<span style="background-color: #9fafc4;">ufw limit proto tcp from any to any port 22 comment </span><span style="color: #a44185; background-color: #9fafc4;">'SSH con l&#237;mite de conexiones'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">HTTP/HTTPS para servidores web</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando acceso web (HTTP/HTTPS)..."</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 80 comment </span><span style="color: #a44185; background-color: #9fafc4;">'HTTP'</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 443 comment </span><span style="color: #a44185; background-color: #9fafc4;">'HTTPS'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">DNS para resoluci&#243;n de nombres</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando acceso DNS..."</span>
<span style="background-color: #9fafc4;">ufw allow proto udp from any to any port 53 comment </span><span style="color: #a44185; background-color: #9fafc4;">'DNS'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">NTP para sincronizaci&#243;n horaria</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando acceso NTP..."</span>
<span style="background-color: #9fafc4;">ufw allow proto udp from any to any port 123 comment </span><span style="color: #a44185; background-color: #9fafc4;">'NTP'</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}Servicios esenciales configurados.${NC}"</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 5: Protecci&#243;n contra amenazas comunes</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgb425bf5" class="outline-3">
<h3 id="orgb425bf5">Sección 5: Protección contra amenazas comunes</h3>
<div class="outline-text-3" id="text-orgb425bf5">
<p>
Añadimos reglas para mitigar amenazas específicas:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Configurando protecci&#243;n contra amenazas espec&#237;ficas ===${NC}"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Limitar intentos de conexi&#243;n para HTTP/HTTPS (protecci&#243;n b&#225;sica contra DDoS)</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando l&#237;mites de conexi&#243;n para servicios web..."</span>
<span style="background-color: #9fafc4;">ufw limit proto tcp from any to any port 80 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Limitar HTTP'</span>
<span style="background-color: #9fafc4;">ufw limit proto tcp from any to any port 443 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Limitar HTTPS'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Bloquear puertos com&#250;nmente explotados por botnets y malware</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Bloqueando puertos vulnerables com&#250;nmente usados por botnets..."</span>
<span style="background-color: #9fafc4;">ufw deny proto tcp from any to any port 23 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Telnet, usado por botnets'</span>
<span style="background-color: #9fafc4;">ufw deny proto tcp from any to any port 445 comment </span><span style="color: #a44185; background-color: #9fafc4;">'SMB, objetivo de ransomware'</span>
<span style="background-color: #9fafc4;">ufw deny proto tcp from any to any port 1433 comment </span><span style="color: #a44185; background-color: #9fafc4;">'MS-SQL, explotado por botnets'</span>
<span style="background-color: #9fafc4;">ufw deny proto tcp from any to any port 3389 comment </span><span style="color: #a44185; background-color: #9fafc4;">'RDP, objetivo com&#250;n'</span>
<span style="background-color: #9fafc4;">ufw deny proto udp from any to any port 1900 comment </span><span style="color: #a44185; background-color: #9fafc4;">'UPnP, usado en DDoS'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Bloquear rangos de puertos ef&#237;meros sospechosos</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Bloqueando rangos de puertos sospechosos..."</span>
<span style="background-color: #9fafc4;">ufw deny proto tcp from any to any port 49152:65535 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Puertos ef&#237;meros sospechosos'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Limitar ICMP para prevenir ataques de flood</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Limitando tr&#225;fico ICMP..."</span>
<span style="background-color: #9fafc4;">ufw limit proto icmp from any to any comment </span><span style="color: #a44185; background-color: #9fafc4;">'Limitar ping'</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}Protecci&#243;n contra amenazas comunes configurada.${NC}"</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 6: Bloqueo de IPs maliciosas</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org225637b" class="outline-3">
<h3 id="org225637b">Sección 6: Bloqueo de IPs maliciosas</h3>
<div class="outline-text-3" id="text-org225637b">
<p>
Bloqueamos rangos de IPs conocidos por actividades maliciosas:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Configurando bloqueo de IPs maliciosas ===${NC}"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Nota: Estas son IPs de ejemplo. En producci&#243;n, usa listas actualizadas.</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Bloqueando rangos de IPs conocidos por actividades maliciosas..."</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Ejemplos de rangos sospechosos (reemplazar con datos actualizados en producci&#243;n)</span>
<span style="background-color: #9fafc4;">ufw deny from 185.220.101.0/24 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Rango de IPs sospechosas - Tor exit nodes'</span>
<span style="background-color: #9fafc4;">ufw deny from 45.148.10.0/24 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Rango de IPs de botnets reportadas'</span>
<span style="background-color: #9fafc4;">ufw deny from 91.134.0.0/16 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Fuente conocida de ataques'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Opci&#243;n: Descomentar y modificar para actualizar desde fuente externa</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">echo "Descargando lista actualizada de IPs maliciosas..."</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">curl -s <a href="https://ejemplo.com/ip-blocklist.txt">https://ejemplo.com/ip-blocklist.txt</a> | while read ip; do</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">#   </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">ufw deny from $ip comment 'IP maliciosa - lista externa'</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">done</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${YELLOW}Nota: Considera actualizar regularmente la lista de IPs bloqueadas.${NC}"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}Bloqueo de IPs maliciosas configurado.${NC}"</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 7: Activaci&#243;n del firewall</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orga27208d" class="outline-3">
<h3 id="orga27208d">Sección 7: Activación del firewall</h3>
<div class="outline-text-3" id="text-orga27208d">
<p>
Finalmente, activamos el firewall y mostramos el estado:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Activando UFW ===${NC}"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Habilitar UFW</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Activando firewall..."</span>
<span style="background-color: #9fafc4;">ufw --force enable</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Verificar estado</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Estado final de UFW ===${NC}"</span>
<span style="background-color: #9fafc4;">ufw status verbose</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Configuraci&#243;n completada exitosamente ===${NC}"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Fecha y hora: $(</span><span style="color: #219fd5; background-color: #9fafc4; font-weight: bold;">date</span><span style="color: #a44185; background-color: #9fafc4;">)"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${YELLOW}Recomendaciones:${NC}"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"1. Revisa peri&#243;dicamente /var/log/ufw.log para detectar actividad sospechosa"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"2. Considera implementar Fail2Ban como protecci&#243;n adicional"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"3. Actualiza las reglas regularmente seg&#250;n evolucionen las amenazas"</span>

<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">exit</span><span style="background-color: #9fafc4;"> 0</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #2f86d2; font-weight: bold;">* Utilizaci&#243;n del Script</span>
<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Generaci&#243;n del script ejecutable</span>
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orga45b6f8" class="outline-2">
<h2 id="orga45b6f8">Utilización del Script desde Org Mode</h2>
<div class="outline-text-2" id="text-orga45b6f8">
<p>
Ahora que tenemos nuestro script documentado en Org Mode, vamos a ver cómo utilizarlo.
</p>
</div>
<div id="outline-container-org8121919" class="outline-3">
<h3 id="org8121919">Generación del script ejecutable</h3>
<div class="outline-text-3" id="text-org8121919">
<p>
Para generar el archivo ejecutable a partir de nuestro documento Org:
</p>

<div class="org-src-container">
<pre class="src src-org">Para extraer (tangle) el script desde este documento Org Mode:

1. Posiciona el cursor en cualquier parte del documento
2. Ejecuta: <span style="color: #fa841d; background-color: #9fafc4;">~M-x org-babel-tangle~</span> (o usa el atajo <span style="color: #fa841d; background-color: #9fafc4;">~C-c C-v t~</span>)
3. Esto crear&#225; el archivo <span style="color: #fa841d; background-color: #9fafc4;">~ufw-secure-config.sh~</span> en el mismo directorio

Alternativamente, puedes ejecutar esto directamente como un bloque de c&#243;digo:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC emacs-lisp :results silent</span>
<span style="background-color: #9fafc4;">(org-babel-tangle)</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

Una vez extra&#237;do, hazlo ejecutable:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :dir .</span>
<span style="background-color: #9fafc4;">chmod +x ufw-secure-config.sh</span>
<span style="background-color: #9fafc4;">ls -la ufw-secure-config.sh</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orga05a8fa" class="outline-3">
<h3 id="orga05a8fa">Ejecución del script</h3>
<div class="outline-text-3" id="text-orga05a8fa">
<p>
Añade esta sección para documentar la ejecución:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Ejecuci&#243;n del script</span>

El script debe ejecutarse con privilegios de superusuario:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :dir . :results output :eval no</span>
<span style="background-color: #9fafc4;">sudo ./ufw-secure-config.sh</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

Nota: El script realizar&#225; las siguientes acciones:
1. Verificar&#225; los privilegios y la instalaci&#243;n de UFW
2. Crear&#225; un backup de las reglas existentes
3. Reiniciar&#225; la configuraci&#243;n de UFW
4. Establecer&#225; pol&#237;ticas predeterminadas seguras
5. Configurar&#225; reglas para servicios esenciales
6. Implementar&#225; protecciones contra amenazas comunes
7. Bloquear&#225; IPs maliciosas conocidas
8. Activar&#225; el firewall con la nueva configuraci&#243;n

<span style="color: #2f86d2; font-weight: bold;">* Personalizaci&#243;n del Script</span>

Puedes personalizar este script para adaptarlo a tus necesidades espec&#237;ficas:

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Servicios adicionales</span>

Para a&#241;adir reglas para otros servicios, agrega l&#237;neas como estas en la Secci&#243;n 4:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">FTP (si es necesario)</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 21 comment </span><span style="color: #a44185; background-color: #9fafc4;">'FTP'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Correo electr&#243;nico</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 25,465,587 comment </span><span style="color: #a44185; background-color: #9fafc4;">'SMTP'</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 110,995 comment </span><span style="color: #a44185; background-color: #9fafc4;">'POP3'</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 143,993 comment </span><span style="color: #a44185; background-color: #9fafc4;">'IMAP'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Base de datos (solo desde redes confiables)</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from 192.168.1.0/24 to any port 3306 comment </span><span style="color: #a44185; background-color: #9fafc4;">'MySQL desde LAN'</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Restricci&#243;n por origen</span>

Para permitir servicios solo desde ciertas IPs o redes:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Acceso SSH solo desde oficina</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from 203.0.113.0/24 to any port 22 comment </span><span style="color: #a44185; background-color: #9fafc4;">'SSH desde oficina'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Panel de administraci&#243;n solo desde IPs espec&#237;ficas</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from 203.0.113.10 to any port 8080 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Admin desde IP confiable'</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org8a9e92b" class="outline-2">
<h2 id="org8a9e92b">Monitoreo y Mantenimiento</h2>
<div class="outline-text-2" id="text-org8a9e92b">
<p>
Añade esta sección para completar el post:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #2f86d2; font-weight: bold;">* Monitoreo y Mantenimiento</span>

Una vez configurado el firewall, es importante monitorizarlo y mantenerlo:

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Verificaci&#243;n del estado</span>

Para verificar el estado actual del firewall:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="background-color: #9fafc4;">sudo ufw status verbose</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Monitoreo de logs</span>

Para monitorizar actividad sospechosa:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Ver &#250;ltimas entradas del log en tiempo real</span>
<span style="background-color: #9fafc4;">sudo tail -f /var/log/ufw.log</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Buscar intentos de conexi&#243;n bloqueados</span>
<span style="background-color: #9fafc4;">sudo grep </span><span style="color: #a44185; background-color: #9fafc4;">"BLOCK"</span><span style="background-color: #9fafc4;"> /var/log/ufw.log</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Contar intentos bloqueados por IP (TOP 10)</span>
<span style="background-color: #9fafc4;">sudo grep </span><span style="color: #a44185; background-color: #9fafc4;">"BLOCK"</span><span style="background-color: #9fafc4;"> /var/log/ufw.log | grep -oE </span><span style="color: #a44185; background-color: #9fafc4;">"SRC=[0-9.]+"</span><span style="background-color: #9fafc4;"> | sort | uniq -c | sort -nr | head -10</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Actualizaci&#243;n de reglas</span>

Cuando necesites actualizar las reglas:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Ver reglas numeradas</span>
<span style="background-color: #9fafc4;">sudo ufw status numbered</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Eliminar una regla espec&#237;fica</span>
<span style="background-color: #9fafc4;">sudo ufw delete 3  </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Elimina la regla n&#250;mero 3</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">A&#241;adir una nueva regla</span>
<span style="background-color: #9fafc4;">sudo ufw allow proto tcp from any to any port 8443 comment </span><span style="color: #a44185; background-color: #9fafc4;">'HTTPS alternativo'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Aplicar cambios</span>
<span style="background-color: #9fafc4;">sudo ufw reload</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #2f86d2; font-weight: bold;">* Integraci&#243;n con cron para Actualizaciones Autom&#225;ticas</span>

Para mantener tu lista de IPs bloqueadas actualizada, puedes crear un script separado y programarlo con cron:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC org</span>
<span style="background-color: #9fafc4;">#+BEGIN_SRC bash :tangle update-blocklist.sh :comments both</span>
<span style="background-color: #9fafc4;">#!/bin/bash</span>
<span style="background-color: #9fafc4;"># Script: update-blocklist.sh</span>
<span style="background-color: #9fafc4;"># Descripci&#243;n: Actualiza la lista de IPs bloqueadas en UFW</span>
<span style="background-color: #9fafc4;"># Autor: Tu Nombre</span>
<span style="background-color: #9fafc4;"># Fecha: 2025-04-15</span>

<span style="background-color: #9fafc4;"># Verificar privilegios</span>
<span style="background-color: #9fafc4;">if </span><span style="color: #2f86d2; background-color: #9fafc4; font-weight: bold; text-decoration: underline;"><a href=" $EUID -ne 0 ">[[ $EUID -ne 0 ]]</a></span><span style="background-color: #9fafc4;">; then</span>
<span style="background-color: #9fafc4;">    echo "Este script requiere privilegios de root."</span>
<span style="background-color: #9fafc4;">    exit 1</span>
<span style="background-color: #9fafc4;">fi</span>

<span style="background-color: #9fafc4;"># Directorio para logs</span>
<span style="background-color: #9fafc4;">LOG_DIR="/var/log/ufw-updates"</span>
<span style="background-color: #9fafc4;">mkdir -p "$LOG_DIR"</span>
<span style="background-color: #9fafc4;">LOG_FILE="$LOG_DIR/update-$(date +%F).log"</span>

<span style="background-color: #9fafc4;">echo "Iniciando actualizaci&#243;n de listas de bloqueo en $(date)" &gt;&gt; "$LOG_FILE"</span>

<span style="background-color: #9fafc4;"># Descargar lista actualizada (ejemplo)</span>
<span style="background-color: #9fafc4;">echo "Descargando lista actualizada..." &gt;&gt; "$LOG_FILE"</span>
<span style="background-color: #9fafc4;">curl -s </span><span style="color: #2f86d2; background-color: #9fafc4; font-weight: bold; text-decoration: underline;"><a href="https://ejemplo.com/ip-blocklist.txt">https://ejemplo.com/ip-blocklist.txt</a></span><span style="background-color: #9fafc4;"> &gt; /tmp/new-blocklist.txt</span>

<span style="background-color: #9fafc4;"># Eliminar reglas antiguas con comentario espec&#237;fico</span>
<span style="background-color: #9fafc4;">echo "Eliminando reglas antiguas..." &gt;&gt; "$LOG_FILE"</span>
<span style="background-color: #9fafc4;">for ip in $(ufw status | grep "lista externa" | awk '{print $3}'); do</span>
<span style="background-color: #9fafc4;">  ufw delete deny from $ip &gt;&gt; "$LOG_FILE" 2&gt;&amp;1</span>
<span style="background-color: #9fafc4;">done</span>

<span style="background-color: #9fafc4;"># A&#241;adir nuevas IPs</span>
<span style="background-color: #9fafc4;">echo "A&#241;adiendo nuevas IPs..." &gt;&gt; "$LOG_FILE"</span>
<span style="background-color: #9fafc4;">count=0</span>
<span style="background-color: #9fafc4;">while read ip; do</span>
<span style="background-color: #9fafc4;">  if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}(/[0-9]{1,2})?$ ]]; then</span>
<span style="background-color: #9fafc4;">    ufw deny from $ip comment 'IP maliciosa - lista externa' &gt;&gt; "$LOG_FILE" 2&gt;&amp;1</span>
<span style="background-color: #9fafc4;">    ((count++))</span>
<span style="background-color: #9fafc4;">  fi</span>
<span style="background-color: #9fafc4;">done &lt; /tmp/new-blocklist.txt</span>

<span style="background-color: #9fafc4;">echo "Actualizaci&#243;n completada. $count IPs bloqueadas." &gt;&gt; "$LOG_FILE"</span>
<span style="background-color: #9fafc4;">echo "Fecha y hora de finalizaci&#243;n: $(date)" &gt;&gt; "$LOG_FILE"</span>

<span style="background-color: #9fafc4;"># Limpiar archivos temporales</span>
<span style="background-color: #9fafc4;">rm /tmp/new-blocklist.txt</span>

<span style="background-color: #9fafc4;">exit 0</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>
<span style="color: #60a8a1;">#+END_SRC</span>

Programa la ejecuci&#243;n con cron:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Editar crontab</span>
<span style="background-color: #9fafc4;">sudo crontab -e</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">A&#241;adir l&#237;nea para ejecutar cada d&#237;a a las 3 AM</span>
<span style="background-color: #9fafc4;">0 3 * * * /ruta/a/update-blocklist.sh</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgdfe2fe9" class="outline-2">
<h2 id="orgdfe2fe9">Conclusión y Recursos Adicionales</h2>
<div class="outline-text-2" id="text-orgdfe2fe9">
<p>
Finalmente, añade una conclusión y recursos adicionales:
</p>

<p>
#+BEGIN<sub>SRC</sub> org
,* Conclusión
</p>

<p>
Configurar UFW a través de scripts gestionados con Org Mode en Emacs ofrece varias ventajas:
</p>

<ol class="org-ol">
<li><b>Documentación integrada</b>: El código y su explicación se mantienen juntos</li>
<li><b>Reproducibilidad</b>: Puedes recrear exactamente la misma configuración en diferentes servidores</li>
<li><b>Control de versiones</b>: Puedes mantener tu configuración en un sistema de control de versiones como Git</li>
<li><b>Adaptabilidad</b>: Fácil de modificar para diferentes entornos (desarrollo, pruebas, producción)</li>
</ol>

<p>
Esta aproximación combina la potencia de Emacs y Org Mode con las necesidades prácticas de la administración de sistemas, creando un flujo de trabajo eficiente y bien documentado para la gestión de la seguridad.
</p>

<p>
Recuerda que la seguridad es un proceso continuo, no un estado final. Mantén tus reglas de firewall actualizadas, revisa regularmente los logs y adapta tu configuración según evolucionen las amenazas.
</p>

<p>
,* Recursos Adicionales
</p>

<ul class="org-ul">
<li><a href="https://help.ubuntu.com/community/UFW">Documentación oficial de UFW en Ubuntu</a></li>
<li><a href="https://wiki.archlinux.org/title/Uncomplicated_Firewall">Wiki de Arch Linux sobre UFW</a></li>
<li><a href="https://orgmode.org/worg/org-contrib/babel/">Documentación de Org Babel</a></li>
<li><a href="https://www.abuseipdb.com/">AbuseIPDB</a> - Base de datos de IPs maliciosas</li>
</ul>

<p>
,* Notas de la versión
</p>

<ul class="org-ul">
<li><b>Versión 1.0 (2025-04-15)</b>: Publicación inicial</li>
<li><b>Próximas mejoras planificadas</b>: Integración con Fail2Ban, reglas para Docker, configuración para IPv6</li>
</ul>
</div>
</div>
<div id="outline-container-org602bbf5" class="outline-2">
<h2 id="org602bbf5">Diagrama de Componentes de la Configuración</h2>
<div class="outline-text-2" id="text-org602bbf5">
<p>
Este diagrama muestra los componentes principales que conforman la configuración de seguridad con UFW:
</p>


<figure id="orgb3074ff">
<img src="images/ufw-components.png" alt="ufw-components.png">

</figure>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ubuntu.html">ubuntu</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-firewall.html">firewall</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ufw.html">ufw</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-orgmode.html">orgmode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[ubuntu]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[firewall]]></category>
  <category><![CDATA[ufw]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[orgmode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15-gu-a-pr-ctica-configuraci-n-de-ufw-en-ubuntu-con-scripts-y-org-mode.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15-gu-a-pr-ctica-configuraci-n-de-ufw-en-ubuntu-con-scripts-y-org-mode.html</guid>
  <pubDate>Tue, 15 Apr 2025 23:09:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Detectando actividad maliciosa en nuestro sistema Linux: ¿Somos parte de una botnet?]]></title>
  <description><![CDATA[
<div id="outline-container-org4d90630" class="outline-2">
<h2 id="org4d90630">Introducción</h2>
<div class="outline-text-2" id="text-org4d90630">
<p>
En la era actual de amenazas cibernéticas cada vez más sofisticadas, uno de los riesgos más preocupantes es que nuestros sistemas sean comprometidos y utilizados como parte de una botnet sin nuestro conocimiento. Estas redes de equipos infectados pueden ser utilizadas para realizar ataques DDoS, minería de criptomonedas, envío de spam, o robo de datos, entre otras actividades maliciosas.
</p>

<p>
En este artículo del blog <b>Emacs con Esteroides</b>, presentaremos un script en Bash para detectar posibles señales de que nuestro sistema Linux está siendo utilizado como parte de una botnet o está bajo ataque. El script realiza comprobaciones exhaustivas del sistema y genera un informe detallado que podemos analizar para determinar si hay actividad sospechosa.
</p>
</div>
</div>
<div id="outline-container-org3d0771d" class="outline-2">
<h2 id="org3d0771d">¿Qué es una botnet?</h2>
<div class="outline-text-2" id="text-org3d0771d">
<p>
Una botnet es una red de equipos infectados con malware que son controlados remotamente por un atacante, conocido como "botmaster". Los equipos comprometidos, llamados "zombies" o "bots", ejecutan comandos sin el conocimiento de sus propietarios.
</p>

<p>
Señales comunes de que un sistema puede formar parte de una botnet:
</p>

<ul class="org-ul">
<li>Conexiones de red inusuales o no autorizadas</li>
<li>Procesos desconocidos con alto consumo de recursos</li>
<li>Tráfico de red anómalo</li>
<li>Servicios o puertos abiertos inesperados</li>
<li>Modificaciones en archivos críticos del sistema</li>
<li>Entradas sospechosas en la tabla de rutas</li>
<li>Tareas programadas desconocidas</li>
</ul>
</div>
</div>
<div id="outline-container-orgfd116dd" class="outline-2">
<h2 id="orgfd116dd">El script de detección de botnets</h2>
<div class="outline-text-2" id="text-orgfd116dd">
<p>
Nuestro script realiza múltiples comprobaciones para identificar posibles indicios de compromiso:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">botnet_detector.sh - Script para detectar posibles indicios de botnet en sistemas Linux</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Blog: Emacs con Esteroides</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Autor: Emacs con Esteroides</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Fecha: 15/04/2025</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Licencia: GPL v3</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Colores para mejor visualizaci&#243;n</span>
<span style="color: #1857a4;">RED</span>=<span style="color: #a44185;">'\033[0;31m'</span>
<span style="color: #1857a4;">GREEN</span>=<span style="color: #a44185;">'\033[0;32m'</span>
<span style="color: #1857a4;">YELLOW</span>=<span style="color: #a44185;">'\033[0;33m'</span>
<span style="color: #1857a4;">BLUE</span>=<span style="color: #a44185;">'\033[0;34m'</span>
<span style="color: #1857a4;">PURPLE</span>=<span style="color: #a44185;">'\033[0;35m'</span>
<span style="color: #1857a4;">CYAN</span>=<span style="color: #a44185;">'\033[0;36m'</span>
<span style="color: #1857a4;">NC</span>=<span style="color: #a44185;">'\033[0m'</span> <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">No Color</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para imprimir encabezados</span>
<span style="color: #dc3eb7;">print_header</span>() {
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${BLUE}====================================${NC}"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${BLUE}$1${NC}"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${BLUE}====================================${NC}\n"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para imprimir mensajes de alerta</span>
<span style="color: #dc3eb7;">print_alert</span>() {
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}[ALERTA] $1${NC}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para imprimir mensajes de advertencia</span>
<span style="color: #dc3eb7;">print_warning</span>() {
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}[ADVERTENCIA] $1${NC}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para imprimir mensajes informativos</span>
<span style="color: #dc3eb7;">print_info</span>() {
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}[INFO] $1${NC}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar si se est&#225; ejecutando como root</span>
<span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$(</span><span style="color: #219fd5; font-weight: bold;">id -u</span><span style="color: #a44185;">)"</span> != <span style="color: #a44185;">"0"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}Este script debe ejecutarse como root${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">exit</span> 1
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear directorio para informes si no existe</span>
<span style="color: #1857a4;">REPORT_DIR</span>=<span style="color: #a44185;">"/var/log/security_checks"</span>
<span style="color: #1857a4;">TIMESTAMP</span>=$(<span style="color: #219fd5; font-weight: bold;">date +"%Y%m%d_%H%M%S"</span>)
<span style="color: #1857a4;">REPORT_FILE</span>=<span style="color: #a44185;">"${REPORT_DIR}/botnet_check_${TIMESTAMP}.log"</span>

<span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #219fd5; font-weight: bold;">!</span> -d <span style="color: #a44185;">"$REPORT_DIR"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
  mkdir -p <span style="color: #a44185;">"$REPORT_DIR"</span>
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para registrar en el archivo de informe</span>
<span style="color: #dc3eb7;">log</span>() {
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"$1"</span> &gt;&gt; <span style="color: #a44185;">"$REPORT_FILE"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"$1"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Redireccionar la salida al archivo de registro y a la consola</span>
<span style="color: #219fd5; font-style: italic;">exec</span> &gt; &gt;(tee -a <span style="color: #a44185;">"$REPORT_FILE"</span>) 2&gt;&amp;1

print_header <span style="color: #a44185;">"DETECTOR DE BOTNETS Y ACTIVIDAD MALICIOSA"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Iniciando an&#225;lisis: $(</span><span style="color: #219fd5; font-weight: bold;">date</span><span style="color: #a44185;">)"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Sistema: $(</span><span style="color: #219fd5; font-weight: bold;">uname -a</span><span style="color: #a44185;">)"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Usuario: $(</span><span style="color: #219fd5; font-weight: bold;">whoami</span><span style="color: #a44185;">)"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Informe guardado en: $REPORT_FILE"</span>
<span style="color: #dc3eb7;">echo</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar herramientas necesarias e instalarlas si faltan</span>
<span style="color: #dc3eb7;">check_tools</span>() {
  print_header <span style="color: #a44185;">"Verificando herramientas necesarias"</span>

  <span style="color: #1857a4;">TOOLS</span>=(<span style="color: #a44185;">"lsof"</span> <span style="color: #a44185;">"netstat"</span> <span style="color: #a44185;">"tcpdump"</span> <span style="color: #a44185;">"htop"</span> <span style="color: #a44185;">"iftop"</span> <span style="color: #a44185;">"rkhunter"</span> <span style="color: #a44185;">"chkrootkit"</span> <span style="color: #a44185;">"lynis"</span> <span style="color: #a44185;">"clamav"</span> <span style="color: #a44185;">"sysstat"</span>)
  <span style="color: #1857a4;">PACKAGES</span>=(<span style="color: #a44185;">"lsof"</span> <span style="color: #a44185;">"net-tools"</span> <span style="color: #a44185;">"tcpdump"</span> <span style="color: #a44185;">"htop"</span> <span style="color: #a44185;">"iftop"</span> <span style="color: #a44185;">"rkhunter"</span> <span style="color: #a44185;">"chkrootkit"</span> <span style="color: #a44185;">"lynis"</span> <span style="color: #a44185;">"clamav"</span> <span style="color: #a44185;">"sysstat"</span>)

  <span style="color: #1857a4;">MISSING</span>=()

  <span style="color: #219fd5; font-style: italic;">for</span> i<span style="color: #219fd5; font-style: italic;"> in</span> <span style="color: #a44185;">"${!TOOLS[@]}"</span>; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #219fd5; font-style: italic;">if ! </span><span style="color: #dc3eb7;">command</span> -v <span style="color: #a44185;">"${TOOLS[$i]}"</span> &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
      <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}Herramienta ${TOOLS[$i]} no encontrada${NC}"</span>
      <span style="color: #1857a4;">MISSING</span>+=(<span style="color: #a44185;">"${PACKAGES[$i]}"</span>)
    <span style="color: #219fd5; font-style: italic;">else</span>
      <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}&#10003; ${TOOLS[$i]} instalado${NC}"</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #219fd5; font-style: italic;">if</span> [ ${#<span style="color: #1857a4;">MISSING</span>[@]} -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${YELLOW}Instalando herramientas faltantes...${NC}"</span>
    apt-get update
    apt-get install -y <span style="color: #a44185;">"${MISSING[@]}"</span>

    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar si hubo alg&#250;n error en la instalaci&#243;n</span>
    <span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">?</span> -ne 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
      <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}Error al instalar algunas herramientas. El script puede no funcionar correctamente.${NC}"</span>
    <span style="color: #219fd5; font-style: italic;">else</span>
      <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}Todas las herramientas necesarias han sido instaladas.${NC}"</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}Todas las herramientas necesarias est&#225;n instaladas.${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">1. Comprobar procesos sospechosos (alto uso de CPU/memoria)</span>
<span style="color: #dc3eb7;">check_suspicious_processes</span>() {
  print_header <span style="color: #a44185;">"Comprobando procesos sospechosos"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Procesos con mayor consumo de CPU</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Procesos con mayor consumo de CPU:${NC}"</span>
  ps aux --sort=-%cpu | head -11

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Procesos con mayor consumo de memoria</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Procesos con mayor consumo de memoria:${NC}"</span>
  ps aux --sort=-%mem | head -11

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar nombres de procesos sospechosos (mineros comunes, etc.)</span>
  <span style="color: #1857a4;">SUSPICIOUS_PROCESS_NAMES</span>=(<span style="color: #a44185;">"miner"</span> <span style="color: #a44185;">"xmr"</span> <span style="color: #a44185;">"monero"</span> <span style="color: #a44185;">"cryptonight"</span> <span style="color: #a44185;">"stratum"</span> <span style="color: #a44185;">"coinhive"</span> <span style="color: #a44185;">"xmrig"</span> <span style="color: #a44185;">"cpuminer"</span> <span style="color: #a44185;">"nanopool"</span> <span style="color: #a44185;">"minergate"</span>)

  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Buscando procesos con nombres sospechosos:${NC}"</span>
  <span style="color: #1857a4;">FOUND</span>=0
  <span style="color: #219fd5; font-style: italic;">for</span> name<span style="color: #219fd5; font-style: italic;"> in</span> <span style="color: #a44185;">"${SUSPICIOUS_PROCESS_NAMES[@]}"</span>; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">RESULT</span>=$(<span style="color: #219fd5; font-weight: bold;">pgrep -l -f "$name"</span>)
    <span style="color: #219fd5; font-style: italic;">if</span> [ -n <span style="color: #a44185;">"$RESULT"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
      print_alert <span style="color: #a44185;">"Posible proceso de miner&#237;a detectado: $RESULT"</span>
      <span style="color: #1857a4;">FOUND</span>=1
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">FOUND</span> -eq 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_info <span style="color: #a44185;">"No se encontraron procesos con nombres sospechosos."</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar procesos ocultos (con caracteres especiales o espacios en blanco)</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Buscando procesos con nombres ocultos o sospechosos:${NC}"</span>
  ps aux | grep -E <span style="color: #a44185;">'[ ]{2,}[^ ]+$|[.][^ ]|^ '</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Procesos sin binarios en disco (posible indicaci&#243;n de malware en memoria)</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Procesos sin binarios en disco (posible malware en memoria):${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">for</span> pid<span style="color: #219fd5; font-style: italic;"> in</span> $(<span style="color: #219fd5; font-weight: bold;">ls /proc/ | grep -E '^[0-9]+$'</span>); <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #219fd5; font-style: italic;">if</span> [ -d <span style="color: #a44185;">"/proc/$pid"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
      <span style="color: #1857a4;">BINARY</span>=$(<span style="color: #219fd5; font-weight: bold;">ls -l /proc/$pid/exe 2&gt;/dev/null | awk '{print $NF}'</span>)
      <span style="color: #219fd5; font-style: italic;">if</span> [[ <span style="color: #a44185;">"$BINARY"</span> == *<span style="color: #a44185;">"(deleted)"</span>* || -z <span style="color: #a44185;">"$BINARY"</span> ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        <span style="color: #1857a4;">PROCESS_NAME</span>=$(<span style="color: #219fd5; font-weight: bold;">cat /proc/$pid/comm 2&gt;/dev/null</span>)
        <span style="color: #1857a4;">CMDLINE</span>=$(<span style="color: #219fd5; font-weight: bold;">cat /proc/$pid/cmdline 2&gt;/dev/null | tr '\0' ' '</span>)
        <span style="color: #219fd5; font-style: italic;">if</span> [ -n <span style="color: #a44185;">"$PROCESS_NAME"</span> ] &amp;&amp; [ <span style="color: #a44185;">"$PROCESS_NAME"</span> != <span style="color: #a44185;">"ps"</span> ] &amp;&amp; [ <span style="color: #a44185;">"$PROCESS_NAME"</span> != <span style="color: #a44185;">"grep"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
          print_warning <span style="color: #a44185;">"Proceso sin binario en disco: PID=$pid NOMBRE=$PROCESS_NAME CMDLINE=$CMDLINE"</span>
        <span style="color: #219fd5; font-style: italic;">fi</span>
      <span style="color: #219fd5; font-style: italic;">fi</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">2. Comprobar conexiones de red sospechosas</span>
<span style="color: #dc3eb7;">check_suspicious_connections</span>() {
  print_header <span style="color: #a44185;">"Comprobando conexiones de red sospechosas"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Listar todas las conexiones</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Todas las conexiones activas:${NC}"</span>
  netstat -tunapl

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Conexiones establecidas</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Conexiones establecidas:${NC}"</span>
  netstat -tunapl | grep ESTABLISHED

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Puertos en escucha</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Puertos en escucha:${NC}"</span>
  netstat -tunapl | grep LISTEN

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Puertos com&#250;nmente asociados con botnets y malware</span>
  <span style="color: #1857a4;">SUSPICIOUS_PORTS</span>=(4444 5555 6666 6667 6697 8080 9999 1080 11111 1337 31337 34567 65535)

  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Buscando puertos sospechosos:${NC}"</span>
  <span style="color: #1857a4;">FOUND</span>=0
  <span style="color: #219fd5; font-style: italic;">for</span> port<span style="color: #219fd5; font-style: italic;"> in</span> <span style="color: #a44185;">"${SUSPICIOUS_PORTS[@]}"</span>; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">RESULT</span>=$(<span style="color: #219fd5; font-weight: bold;">netstat -tunapl | grep ":$port "</span>)
    <span style="color: #219fd5; font-style: italic;">if</span> [ -n <span style="color: #a44185;">"$RESULT"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
      print_alert <span style="color: #a44185;">"Puerto sospechoso $port en uso: $RESULT"</span>
      <span style="color: #1857a4;">FOUND</span>=1
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">FOUND</span> -eq 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_info <span style="color: #a44185;">"No se encontraron puertos sospechosos comunes en uso."</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar conexiones a IPs sospechosas (servidores C&amp;C conocidos)</span>
  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Esta lista deber&#237;a ser actualizada peri&#243;dicamente con IPs conocidas de C&amp;C</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Comprobando conexiones a posibles servidores C&amp;C:${NC}"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejemplo simple - en una implementaci&#243;n real, esta lista deber&#237;a ser m&#225;s extensa</span>
  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">y actualizada desde una fuente confiable</span>
  <span style="color: #1857a4;">SUSPICIOUS_IPS</span>=(<span style="color: #a44185;">"185.26.205."</span> <span style="color: #a44185;">"91.121."</span> <span style="color: #a44185;">"212.83."</span> <span style="color: #a44185;">"88.208."</span>)

  <span style="color: #1857a4;">FOUND</span>=0
  <span style="color: #219fd5; font-style: italic;">for</span> ip_pattern<span style="color: #219fd5; font-style: italic;"> in</span> <span style="color: #a44185;">"${SUSPICIOUS_IPS[@]}"</span>; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">RESULT</span>=$(<span style="color: #219fd5; font-weight: bold;">netstat -tunapl | grep "$ip_pattern"</span>)
    <span style="color: #219fd5; font-style: italic;">if</span> [ -n <span style="color: #a44185;">"$RESULT"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
      print_alert <span style="color: #a44185;">"Conexi&#243;n a posible servidor C&amp;C detectada: $RESULT"</span>
      <span style="color: #1857a4;">FOUND</span>=1
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">FOUND</span> -eq 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_info <span style="color: #a44185;">"No se encontraron conexiones a servidores C&amp;C conocidos."</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Analizar cantidad de conexiones por IP</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}IPs con m&#250;ltiples conexiones (posible comunicaci&#243;n con C&amp;C):${NC}"</span>
  netstat -ntu | awk <span style="color: #a44185;">'{print $5}'</span> | cut -d: -f1 | sort | uniq -c | sort -nr | head -n 10

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar conexiones salientes inusuales</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Conexiones salientes posiblemente sospechosas:${NC}"</span>
  <span style="color: #1857a4;">OUTBOUND</span>=$(<span style="color: #219fd5; font-weight: bold;">netstat -tun | grep -v "127.0.0.1" | grep -v "LISTEN" | grep "ESTABLISHED"</span>)
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"$OUTBOUND"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">An&#225;lisis de tr&#225;fico en tiempo real (muestra limitada)</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Captura de tr&#225;fico en tiempo real (10 segundos):${NC}"</span>
  timeout 10 tcpdump -nn -c 100 2&gt;/dev/null || print_warning <span style="color: #a44185;">"No se pudo ejecutar tcpdump"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">3. Comprobar archivos y directorios sospechosos</span>
<span style="color: #dc3eb7;">check_suspicious_files</span>() {
  print_header <span style="color: #a44185;">"Comprobando archivos y directorios sospechosos"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Archivos modificados recientemente</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Archivos del sistema modificados en las &#250;ltimas 24 horas:${NC}"</span>
  find /bin /usr/bin /sbin /usr/sbin -type f -mtime -1 -ls | grep -v <span style="color: #a44185;">"\.git"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar archivos setuid/setgid (potencialmente peligrosos)</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Archivos con permisos SUID/SGID (verificar si son leg&#237;timos):${NC}"</span>
  find / -type f <span style="color: #a44185;">\(</span> -perm -4000 -o -perm -2000 <span style="color: #a44185;">\)</span> -ls 2&gt;/dev/null | grep -v -E <span style="color: #a44185;">"/snap/|/var/lib/snapd/"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar archivos ejecutables en /tmp y /var/tmp</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Archivos ejecutables en directorios temporales:${NC}"</span>
  find /tmp /var/tmp /dev/shm -type f -perm -100 -ls 2&gt;/dev/null

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar scripts de inicio sospechosos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Scripts de inicio potencialmente sospechosos:${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">for</span> dir<span style="color: #219fd5; font-style: italic;"> in</span> /etc/init.d /etc/init /etc/rc*.d /etc/systemd/system /usr/lib/systemd/system; <span style="color: #219fd5; font-style: italic;">do</span>
    find <span style="color: #a44185;">"$dir"</span> -type f -mtime -7 -ls 2&gt;/dev/null
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar archivos ocultos en el directorio home</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Archivos ocultos recientes en directorios home:${NC}"</span>
  find /home -type f -name <span style="color: #a44185;">".*"</span> -mtime -7 -ls 2&gt;/dev/null | grep -v -E <span style="color: #a44185;">"\.cache|\.config|\.local|\.dbus|\.mozilla|\.bash_history"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar archivos con nombres sospechosos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Archivos con nombres potencialmente sospechosos:${NC}"</span>
  find / -type f -name <span style="color: #a44185;">"*backdoor*"</span> -o -name <span style="color: #a44185;">"*rootkit*"</span> -o -name <span style="color: #a44185;">"*trojan*"</span> -o -name <span style="color: #a44185;">"*miner*"</span> -o -name <span style="color: #a44185;">"*xmr*"</span> -o -name <span style="color: #a44185;">"*monero*"</span> 2&gt;/dev/null
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">4. Comprobar tareas programadas</span>
<span style="color: #dc3eb7;">check_scheduled_tasks</span>() {
  print_header <span style="color: #a44185;">"Comprobando tareas programadas"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crontabs del sistema</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Crontabs del sistema:${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">for</span> user<span style="color: #219fd5; font-style: italic;"> in</span> $(<span style="color: #219fd5; font-weight: bold;">cut -f1 -d: /etc/passwd</span>); <span style="color: #219fd5; font-style: italic;">do</span>
    crontab -l -u <span style="color: #a44185;">"$user"</span> 2&gt;/dev/null
    <span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">?</span> -eq 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
      <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"Crontab del usuario $user:"</span>
      crontab -l -u <span style="color: #a44185;">"$user"</span>
      <span style="color: #dc3eb7;">echo</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Otros archivos cron</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Otros archivos cron:${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">for</span> dir<span style="color: #219fd5; font-style: italic;"> in</span> /etc/cron.d /etc/cron.daily /etc/cron.hourly /etc/cron.monthly /etc/cron.weekly; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"Contenido de $dir:"</span>
    ls -la <span style="color: #a44185;">"$dir"</span> 2&gt;/dev/null
    <span style="color: #dc3eb7;">echo</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar /etc/crontab</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Contenido de /etc/crontab:${NC}"</span>
  cat /etc/crontab

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar systemd timers</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Systemd timers:${NC}"</span>
  systemctl list-timers --all
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">5. Comprobar usuarios y permisos</span>
<span style="color: #dc3eb7;">check_users_and_permissions</span>() {
  print_header <span style="color: #a44185;">"Comprobando usuarios y permisos"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Listar usuarios</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Lista de usuarios en el sistema:${NC}"</span>
  cut -d: -f1,3,7 /etc/passwd | sort

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Usuarios con UID 0 (root)</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Usuarios con privilegios de root (UID 0):${NC}"</span>
  grep <span style="color: #a44185;">":0:"</span> /etc/passwd

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Usuarios que pueden usar sudo</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Usuarios que pueden usar sudo:${NC}"</span>
  grep -Po <span style="color: #a44185;">'^sudo.+:\K.*$'</span> /etc/group
  cat /etc/sudoers.d/* /etc/sudoers 2&gt;/dev/null | grep -v <span style="color: #a44185;">"^#"</span> | grep -v <span style="color: #a44185;">"^$"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">&#218;ltimos inicios de sesi&#243;n</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}&#218;ltimos inicios de sesi&#243;n:${NC}"</span>
  last | head -20

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Sesiones activas</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Sesiones activas:${NC}"</span>
  w
  who

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar usuarios conectados por SSH</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Usuarios conectados por SSH:${NC}"</span>
  netstat -tnpa | grep <span style="color: #a44185;">"ESTABLISHED.*sshd"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Archivos de autorizaci&#243;n SSH</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Archivos authorized_keys (verificar claves no autorizadas):${NC}"</span>
  find /home -name <span style="color: #a44185;">"authorized_keys"</span> -exec ls -la {} <span style="color: #a44185;">\;</span> -exec cat {} <span style="color: #a44185;">\;</span> 2&gt;/dev/null
  find /root -name <span style="color: #a44185;">"authorized_keys"</span> -exec ls -la {} <span style="color: #a44185;">\;</span> -exec cat {} <span style="color: #a44185;">\;</span> 2&gt;/dev/null
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">6. Comprobar servicios y daemons</span>
<span style="color: #dc3eb7;">check_services</span>() {
  print_header <span style="color: #a44185;">"Comprobando servicios y daemons"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Servicios activos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Servicios systemd activos:${NC}"</span>
  systemctl list-units --type=service --state=running

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Todos los servicios</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Todos los servicios systemd:${NC}"</span>
  systemctl list-unit-files --type=service

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Servicios iniciados recientemente</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Servicios iniciados en los &#250;ltimos 3 d&#237;as:${NC}"</span>
  find /etc/systemd/system /usr/lib/systemd/system -type f -name <span style="color: #a44185;">"*.service"</span> -mtime -3 -ls

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Servicios no est&#225;ndar</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Servicios potencialmente no est&#225;ndar:${NC}"</span>
  systemctl list-units --type=service | grep -v -E <span style="color: #a44185;">"systemd|dbus|getty|ssh|network|ifup|rpc|nfs|syslog|cron|anacron|atd|udev|acpid|rsyslog|logind|getty|apache|nginx|mariadb|mysql|postgresql"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">7. Realizar escaneos con herramientas de seguridad</span>
<span style="color: #dc3eb7;">security_scans</span>() {
  print_header <span style="color: #a44185;">"Ejecutando escaneos de seguridad"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar rkhunter para buscar rootkits</span>
  <span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v rkhunter &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Ejecutando rkhunter (escaneo de rootkits):${NC}"</span>
    rkhunter --check --sk || print_warning <span style="color: #a44185;">"rkhunter fall&#243; o encontr&#243; problemas"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_warning <span style="color: #a44185;">"rkhunter no est&#225; instalado"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar chkrootkit</span>
  <span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v chkrootkit &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Ejecutando chkrootkit:${NC}"</span>
    chkrootkit -q || print_warning <span style="color: #a44185;">"chkrootkit fall&#243; o encontr&#243; problemas"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_warning <span style="color: #a44185;">"chkrootkit no est&#225; instalado"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar lynis para auditor&#237;a de seguridad</span>
  <span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v lynis &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Ejecutando lynis (auditor&#237;a b&#225;sica):${NC}"</span>
    lynis audit system --quick || print_warning <span style="color: #a44185;">"lynis fall&#243; o encontr&#243; problemas"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_warning <span style="color: #a44185;">"lynis no est&#225; instalado"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar ClamAV para buscar malware</span>
  <span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v clamscan &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Ejecutando ClamAV en directorios cr&#237;ticos:${NC}"</span>
    clamscan --recursive --suppress-ok-results /etc /tmp /var/tmp /home/*/.ssh /root || print_warning <span style="color: #a44185;">"clamscan fall&#243; o encontr&#243; problemas"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_warning <span style="color: #a44185;">"ClamAV no est&#225; instalado"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">8. Comprobar registros del sistema</span>
<span style="color: #dc3eb7;">check_logs</span>() {
  print_header <span style="color: #a44185;">"Analizando registros del sistema"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar intentos de inicio de sesi&#243;n fallidos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Intentos de inicio de sesi&#243;n fallidos:${NC}"</span>
  grep <span style="color: #a44185;">"Failed password"</span> /var/log/auth.log* | tail -n 20

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobaci&#243;n de conexiones rechazadas</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Conexiones rechazadas:${NC}"</span>
  grep -i <span style="color: #a44185;">"connection refused\|failed to connect"</span> /var/log/syslog* | tail -n 20

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Mensajes de error cr&#237;ticos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Mensajes de error cr&#237;ticos:${NC}"</span>
  grep -i <span style="color: #a44185;">"error\|critical\|warning\|fail"</span> /var/log/syslog* | tail -n 50

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar IPs que intentan m&#250;ltiples inicios de sesi&#243;n</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}IPs con m&#250;ltiples intentos de inicio de sesi&#243;n:${NC}"</span>
  grep <span style="color: #a44185;">"Failed password"</span> /var/log/auth.log* | grep -E -o <span style="color: #a44185;">"([0-9]{1,3}[\.]){3}[0-9]{1,3}"</span> | sort | uniq -c | sort -nr | head -n 10
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">9. Comprobar volumen de tr&#225;fico de red</span>
<span style="color: #dc3eb7;">check_network_traffic</span>() {
  print_header <span style="color: #a44185;">"Analizando tr&#225;fico de red"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Estad&#237;sticas de uso de red</span>
  <span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v vnstat &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Estad&#237;sticas de tr&#225;fico de red:${NC}"</span>
    vnstat
  <span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Estad&#237;sticas de interfaces de red:${NC}"</span>
    ip -s link
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Mostrar tabla de rutas</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Tabla de rutas:${NC}"</span>
  ip route

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Mostrar puertos abiertos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Puertos abiertos:${NC}"</span>
  ss -tuln

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Capturar y analizar una muestra de tr&#225;fico</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}An&#225;lisis de muestra de tr&#225;fico (5 segundos):${NC}"</span>
  timeout 5 tcpdump -nn -q -i any 2&gt;/dev/null || print_warning <span style="color: #a44185;">"No se pudo ejecutar tcpdump"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">10. Comprobaci&#243;n del rendimiento del sistema</span>
<span style="color: #dc3eb7;">check_system_performance</span>() {
  print_header <span style="color: #a44185;">"Analizando rendimiento del sistema"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Uso de CPU y memoria</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Uso de CPU y memoria:${NC}"</span>
  top -bn 1 | head -20

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobaci&#243;n de la carga del sistema</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Carga del sistema:${NC}"</span>
  uptime

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Uso de disco</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Uso de disco:${NC}"</span>
  df -h

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Directorios que ocupan m&#225;s espacio</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Directorios que ocupan m&#225;s espacio:${NC}"</span>
  du -sh /* 2&gt;/dev/null | sort -hr | head -10

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar swap</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Uso de swap:${NC}"</span>
  free -h
  swapon --show

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar si hay procesos zombies</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Procesos zombie:${NC}"</span>
  ps aux | awk <span style="color: #a44185;">'$8=="Z"'</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">11. Generar resumen e informe final</span>
<span style="color: #dc3eb7;">generate_summary</span>() {
  print_header <span style="color: #a44185;">"RESUMEN DE LA DETECCI&#211;N"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar indicadores clave de compromiso</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Indicadores clave revisados:${NC}"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">1. Procesos sospechosos</span>
  <span style="color: #1857a4;">SUSPICIOUS_PROCS</span>=$(<span style="color: #219fd5; font-weight: bold;">ps aux | grep -E 'miner|xmr|monero|cryptonight|stratum' | grep -v grep | wc -l</span>)
  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$SUSPICIOUS_PROCS"</span> -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_alert <span style="color: #a44185;">"&#9888;&#65039; Se encontraron $SUSPICIOUS_PROCS procesos con nombres sospechosos"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_info <span style="color: #a44185;">"&#10003; No se encontraron procesos con nombres asociados a miner&#237;a/botnet"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">2. Puertos sospechosos</span>
  <span style="color: #1857a4;">SUSPICIOUS_PORTS_COUNT</span>=$(<span style="color: #219fd5; font-weight: bold;">netstat -tunapl 2&gt;/dev/null | grep -E ':(4444|5555|6666|6667|8080|9999|1080|1337|31337</span><span style="color: #a44185;">)'</span> | grep -v <span style="color: #a44185;">"127.0.0.1"</span> | wc -l)
  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$SUSPICIOUS_PORTS_COUNT"</span> -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_alert <span style="color: #a44185;">"&#9888;&#65039; Se encontraron $SUSPICIOUS_PORTS_COUNT puertos sospechosos en uso"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_info <span style="color: #a44185;">"&#10003; No se encontraron puertos com&#250;nmente asociados con malware"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">3. Archivos sospechosos</span>
  <span style="color: #1857a4;">SUSPICIOUS_FILES</span>=$(<span style="color: #219fd5; font-weight: bold;">find /tmp /var/tmp /dev/shm -type f -perm -100 2&gt;/dev/null | wc -l</span>)
  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$SUSPICIOUS_FILES"</span> -gt 3 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_warning <span style="color: #a44185;">"&#9888;&#65039; Se encontraron $SUSPICIOUS_FILES archivos ejecutables en directorios temporales"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_info <span style="color: #a44185;">"&#10003; N&#250;mero normal de ejecutables en directorios temporales"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">4. Tareas cron sospechosas</span>
  <span style="color: #1857a4;">SUSPICIOUS_CRON</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -r "curl\|wget\|nc\|netcat\|bash -i\|python -c\|perl -e" /etc/cron* /var/spool/cron/ 2&gt;/dev/null | wc -l</span>)
  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$SUSPICIOUS_CRON"</span> -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_alert <span style="color: #a44185;">"&#9888;&#65039; Se encontraron $SUSPICIOUS_CRON tareas cron potencialmente sospechosas"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_info <span style="color: #a44185;">"&#10003; No se encontraron tareas cron sospechosas"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">5. Usuarios con UID 0 distintos de root</span>
  <span style="color: #1857a4;">ROOT_USERS</span>=$(<span style="color: #219fd5; font-weight: bold;">grep ":0:" /etc/passwd | grep -v "^root:" | wc -l</span>)
  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$ROOT_USERS"</span> -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_alert <span style="color: #a44185;">"&#9888;&#65039; Se encontraron $ROOT_USERS usuarios adicionales con privilegios de root (UID 0)"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_info <span style="color: #a44185;">"&#10003; Solo el usuario root tiene UID 0"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Evaluaci&#243;n final</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${BLUE}EVALUACI&#211;N FINAL:${NC}"</span>

  <span style="color: #1857a4;">TOTAL_ALERTS</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "\[ALERTA\]" "$REPORT_FILE"</span>)
  <span style="color: #1857a4;">TOTAL_WARNINGS</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "\[ADVERTENCIA\]" "$REPORT_FILE"</span>)

  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$TOTAL_ALERTS"</span> -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}&#9888;&#65039; Se encontraron $TOTAL_ALERTS alertas y $TOTAL_WARNINGS advertencias que requieren investigaci&#243;n inmediata.${NC}"</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}El sistema podr&#237;a estar comprometido. Revise el informe completo y tome medidas.${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">elif</span> [ <span style="color: #a44185;">"$TOTAL_WARNINGS"</span> -gt 3 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}&#9888;&#65039; Se encontraron $TOTAL_WARNINGS advertencias que requieren atenci&#243;n.${NC}"</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}El sistema podr&#237;a tener actividad sospechosa. Revise el informe completo.${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}&#10003; No se encontraron indicios claros de compromiso en el sistema.${NC}"</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}Contin&#250;e monitoreando regularmente.${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Recomendaciones</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}RECOMENDACIONES:${NC}"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"1. Ejecute este script peri&#243;dicamente para monitorear cambios"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"2. Configure un sistema de monitoreo de integridad (como AIDE o Tripwire)"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"3. Actualice regularmente el sistema y las aplicaciones"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"4. Configure correctamente el firewall"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"5. Implemente detecci&#243;n de intrusiones con herramientas como Snort o Suricata"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"6. Siga las pr&#225;cticas recomendadas de seguridad para servidores Linux"</span>

  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${BLUE}Informe completo guardado en: $REPORT_FILE${NC}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar todas las comprobaciones</span>
<span style="color: #dc3eb7;">main</span>() {
  check_tools
  check_suspicious_processes
  check_suspicious_connections
  check_suspicious_files
  check_scheduled_tasks
  check_users_and_permissions
  check_services
  security_scans
  check_logs
  check_network_traffic
  check_system_performance
  generate_summary

  print_header <span style="color: #a44185;">"FINALIZADO"</span>
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"An&#225;lisis completado: $(</span><span style="color: #219fd5; font-weight: bold;">date</span><span style="color: #a44185;">)"</span>
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Informe guardado en: $REPORT_FILE"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar el script principal</span>
main
</pre>
</div>
</div>
</div>
<div id="outline-container-org809f40b" class="outline-2">
<h2 id="org809f40b">¿Cómo funciona el script?</h2>
<div class="outline-text-2" id="text-org809f40b">
<p>
El script realiza una serie de verificaciones exhaustivas para detectar posibles signos de compromiso en el sistema:
</p>


<figure id="org3d97007">
<img src="images/botnet_detection_flow.png" alt="botnet_detection_flow.png">

</figure>

<p>
<a href="images/botnet_detection_flow.png">botnet<sub>detection</sub><sub>flow.png</sub></a>
</p>
</div>
<div id="outline-container-org86a7253" class="outline-3">
<h3 id="org86a7253">Descripción de los módulos principales</h3>
<div class="outline-text-3" id="text-org86a7253">
</div>
<div id="outline-container-orgd5586e7" class="outline-4">
<h4 id="orgd5586e7">1. Verificación de procesos sospechosos</h4>
<div class="outline-text-4" id="text-orgd5586e7">
<p>
Este módulo examina los procesos en ejecución para detectar:
</p>
<ul class="org-ul">
<li>Procesos con alto consumo de CPU o memoria</li>
<li>Procesos con nombres asociados a minería de criptomonedas o malware</li>
<li>Procesos sin archivos binarios en disco (posible indicación de malware en memoria)</li>
<li>Procesos con nombres ocultos o irreconocibles</li>
</ul>
</div>
</div>
<div id="outline-container-orgdcf512d" class="outline-4">
<h4 id="orgdcf512d">2. Análisis de conexiones de red</h4>
<div class="outline-text-4" id="text-orgdcf512d">
<p>
Esta sección examina las conexiones de red para identificar:
</p>
<ul class="org-ul">
<li>Puertos conocidos por ser utilizados por botnets y malware</li>
<li>Conexiones a direcciones IP asociadas con servidores de comando y control (C&amp;C)</li>
<li>Patrones de tráfico inusuales o sospechosos</li>
<li>Comunicaciones no autorizadas con el exterior</li>
</ul>
</div>
</div>
<div id="outline-container-org99de2e1" class="outline-4">
<h4 id="org99de2e1">3. Verificación de archivos y directorios</h4>
<div class="outline-text-4" id="text-org99de2e1">
<p>
El script busca:
</p>
<ul class="org-ul">
<li>Archivos ejecutables en ubicaciones temporales</li>
<li>Archivos del sistema modificados recientemente</li>
<li>Archivos con permisos SUID/SGID sospechosos</li>
<li>Archivos ocultos con nombres o comportamientos inusuales</li>
</ul>
</div>
</div>
<div id="outline-container-org8f7335d" class="outline-4">
<h4 id="org8f7335d">4. Análisis de tareas programadas</h4>
<div class="outline-text-4" id="text-org8f7335d">
<p>
Se examinan:
</p>
<ul class="org-ul">
<li>Tareas cron para todos los usuarios</li>
<li>Archivos cron del sistema</li>
<li>Timers de systemd</li>
<li>Scripts de inicio modificados recientemente</li>
</ul>
</div>
</div>
<div id="outline-container-orgec5c79c" class="outline-4">
<h4 id="orgec5c79c">5. Verificación de usuarios y permisos</h4>
<div class="outline-text-4" id="text-orgec5c79c">
<p>
El script revisa:
</p>
<ul class="org-ul">
<li>Usuarios con privilegios elevados (UID 0)</li>
<li>Usuarios que pueden ejecutar comandos con sudo</li>
<li>Sesiones SSH activas y recientes</li>
<li>Claves de autorización SSH no autorizadas</li>
</ul>
</div>
</div>
<div id="outline-container-org10d55d8" class="outline-4">
<h4 id="org10d55d8">6. Análisis de servicios</h4>
<div class="outline-text-4" id="text-org10d55d8">
<p>
Esta sección examina:
</p>
<ul class="org-ul">
<li>Servicios activos en el sistema</li>
<li>Servicios configurados para iniciar automáticamente</li>
<li>Servicios no estándar o sospechosos</li>
<li>Servicios añadidos o modificados recientemente</li>
</ul>
</div>
</div>
<div id="outline-container-orge7b98b4" class="outline-4">
<h4 id="orge7b98b4">7. Escaneos de seguridad</h4>
<div class="outline-text-4" id="text-orge7b98b4">
<p>
El script utiliza herramientas especializadas:
</p>
<ul class="org-ul">
<li>RKHunter para detectar rootkits</li>
<li>ChkRootkit como método adicional de detección</li>
<li>Lynis para auditoría de seguridad general</li>
<li>ClamAV para escaneo de malware</li>
</ul>
</div>
</div>
<div id="outline-container-orgf2337f8" class="outline-4">
<h4 id="orgf2337f8">8. Análisis de logs</h4>
<div class="outline-text-4" id="text-orgf2337f8">
<p>
Se analizan los registros del sistema para identificar:
</p>
<ul class="org-ul">
<li>Intentos de inicio de sesión fallidos</li>
<li>Conexiones rechazadas</li>
<li>Mensajes de error críticos</li>
<li>Patrones de actividad sospechosa</li>
</ul>
</div>
</div>
<div id="outline-container-org587a9f4" class="outline-4">
<h4 id="org587a9f4">9. Análisis de tráfico de red</h4>
<div class="outline-text-4" id="text-org587a9f4">
<p>
El script examina:
</p>
<ul class="org-ul">
<li>Estadísticas de uso de red</li>
<li>Tabla de rutas para identificar redirecciones sospechosas</li>
<li>Puertos abiertos y servicios escuchando</li>
<li>Muestras de tráfico de red en tiempo real</li>
</ul>
</div>
</div>
<div id="outline-container-org36b4d21" class="outline-4">
<h4 id="org36b4d21">10. Verificación del rendimiento</h4>
<div class="outline-text-4" id="text-org36b4d21">
<p>
Se analiza:
</p>
<ul class="org-ul">
<li>Uso de CPU y memoria</li>
<li>Carga del sistema</li>
<li>Uso de disco</li>
<li>Procesos zombie y otros indicadores de actividad anómala</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org4280415" class="outline-3">
<h3 id="org4280415">Informe y resumen final</h3>
<div class="outline-text-3" id="text-org4280415">
<p>
Al finalizar todas las verificaciones, el script genera un informe detallado y un resumen que clasifica el estado del sistema en tres categorías:
</p>

<ol class="org-ol">
<li><b>Sistema comprometido</b>: Se detectaron alertas graves que indican alta probabilidad de infección.</li>
<li><b>Actividad sospechosa</b>: Se encontraron advertencias que requieren investigación adicional.</li>
<li><b>Sistema limpio</b>: No se detectaron indicios claros de compromiso.</li>
</ol>

<p>
El informe completo se guarda en el directorio <code>/var/log/security_checks/</code> con una marca de tiempo para referencia futura y análisis comparativo.
</p>
</div>
</div>
</div>
<div id="outline-container-orge5ca4b9" class="outline-2">
<h2 id="orge5ca4b9">Uso práctico del script</h2>
<div class="outline-text-2" id="text-orge5ca4b9">
</div>
<div id="outline-container-org0822fa2" class="outline-3">
<h3 id="org0822fa2">Requisitos previos</h3>
<div class="outline-text-3" id="text-org0822fa2">
<p>
Antes de ejecutar el script, asegúrate de tener:
</p>

<ul class="org-ul">
<li>Un sistema Linux (preferiblemente Ubuntu o una distribución basada en Debian)</li>
<li>Acceso root o permisos de sudo</li>
<li>Conexión a Internet (para instalar las herramientas faltantes)</li>
</ul>
</div>
</div>
<div id="outline-container-orgf2a779e" class="outline-3">
<h3 id="orgf2a779e">Instalación y ejecución</h3>
<div class="outline-text-3" id="text-orgf2a779e">
<ol class="org-ol">
<li>Copia el script completo en un archivo llamado <code>botnet_detector.sh</code></li>
<li>Dale permisos de ejecución:</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash">chmod +x botnet_detector.sh
</pre>
</div>

<ol class="org-ol">
<li>Ejecuta el script como root:</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash">sudo ./botnet_detector.sh
</pre>
</div>

<ol class="org-ol">
<li>El script automáticamente instalará las herramientas necesarias si no están presentes.</li>
</ol>
</div>
</div>
<div id="outline-container-org44bf35d" class="outline-3">
<h3 id="org44bf35d">Automatización</h3>
<div class="outline-text-3" id="text-org44bf35d">
<p>
Para monitorear regularmente tu sistema, puedes configurar el script como una tarea programada:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Editar crontab</span>
sudo crontab -e

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">A&#241;adir una l&#237;nea para ejecutar el script semanalmente (por ejemplo, cada domingo a las 3:00 AM)</span>
0 3 * * 0 /ruta/al/botnet_detector.sh
</pre>
</div>

<p>
El informe se guardará con la fecha y hora de ejecución, permitiéndote comparar resultados a lo largo del tiempo.
</p>
</div>
</div>
</div>
<div id="outline-container-orgf1658e2" class="outline-2">
<h2 id="orgf1658e2">Signos comunes de infección por botnet</h2>
<div class="outline-text-2" id="text-orgf1658e2">
<p>
Además de las verificaciones realizadas por el script, estos son signos adicionales que podrían indicar que tu sistema está comprometido:
</p>
</div>
<div id="outline-container-orgbda72d6" class="outline-3">
<h3 id="orgbda72d6">Signos a nivel de sistema</h3>
<div class="outline-text-3" id="text-orgbda72d6">
<ul class="org-ul">
<li>Tiempos de arranque o apagado inusualmente largos</li>
<li>El sistema se vuelve significativamente más lento sin razón aparente</li>
<li>Crasheos frecuentes o pantallas azules (en Windows)</li>
<li>Programas que se cierran o abren solos</li>
<li>Cambios en la página de inicio del navegador o redirecciones web</li>
</ul>
</div>
</div>
<div id="outline-container-orgd5a4509" class="outline-3">
<h3 id="orgd5a4509">Signos a nivel de red</h3>
<div class="outline-text-3" id="text-orgd5a4509">
<ul class="org-ul">
<li>Uso de red elevado incluso cuando no estás utilizando activamente Internet</li>
<li>Quejas de tu proveedor de Internet sobre tráfico sospechoso</li>
<li>Tu dirección IP aparece en listas negras de spam</li>
<li>Tu router tiene configuraciones que no recuerdas haber cambiado</li>
</ul>
</div>
</div>
<div id="outline-container-org39bebc1" class="outline-3">
<h3 id="org39bebc1">Signos a nivel de usuario</h3>
<div class="outline-text-3" id="text-org39bebc1">
<ul class="org-ul">
<li>Cuentas de correo electrónico enviando spam sin tu conocimiento</li>
<li>Actividad en tus cuentas que no reconoces</li>
<li>Nuevos programas o extensiones del navegador que no instalaste</li>
<li>Antivirus o firewalls desactivados sin tu intervención</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgc7e6089" class="outline-2">
<h2 id="orgc7e6089">Mejores prácticas para prevenir infecciones</h2>
<div class="outline-text-2" id="text-orgc7e6089">
<p>
La prevención es siempre la mejor estrategia. Estas son algunas recomendaciones para mantener tu sistema seguro:
</p>

<ol class="org-ol">
<li><b>Mantén tu sistema actualizado</b>
<ul class="org-ul">
<li>Aplica parches de seguridad tan pronto como estén disponibles</li>
<li>Actualiza regularmente todas las aplicaciones</li>
</ul></li>

<li><b>Configura un firewall robusto</b>
<ul class="org-ul">
<li><p>
Utiliza UFW (Uncomplicated Firewall) en Ubuntu:
</p>
<div class="org-src-container">
<pre class="src src-bash">sudo ufw enable
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow ssh
</pre>
</div></li>
</ul></li>

<li><b>Implementa un sistema de detección de intrusiones</b>
<ul class="org-ul">
<li>Considera herramientas como Snort, Suricata o OSSEC</li>
</ul></li>

<li><b>Monitorea la integridad del sistema</b>
<ul class="org-ul">
<li><p>
Instala AIDE (Advanced Intrusion Detection Environment):
</p>
<div class="org-src-container">
<pre class="src src-bash">sudo apt install aide
sudo aideinit
</pre>
</div></li>
</ul></li>

<li><b>Refuerza la seguridad SSH</b>
<ul class="org-ul">
<li>Desactiva el login como root</li>
<li>Utiliza autenticación por clave en lugar de contraseñas</li>
<li>Cambia el puerto por defecto</li>
</ul></li>

<li><b>Implementa el principio de mínimo privilegio</b>
<ul class="org-ul">
<li>Crea usuarios con los permisos mínimos necesarios</li>
<li>Utiliza sudo para tareas específicas en lugar de login como root</li>
</ul></li>

<li><b>Realiza backups regularmente</b>
<ul class="org-ul">
<li>Mantén copias de seguridad offline o en ubicaciones aisladas</li>
<li>Verifica periódicamente que los backups funcionen correctamente</li>
</ul></li>
</ol>
</div>
</div>
<div id="outline-container-org6629fa8" class="outline-2">
<h2 id="org6629fa8">Qué hacer si encuentras un sistema comprometido</h2>
<div class="outline-text-2" id="text-org6629fa8">
<p>
Si el script detecta signos de compromiso o tienes razones para creer que tu sistema es parte de una botnet:
</p>

<ol class="org-ol">
<li><b>No apagues el sistema inmediatamente</b>
<ul class="org-ul">
<li>El análisis forense podría requerir información volátil en memoria</li>
</ul></li>

<li><b>Aísla el sistema de la red</b>
<ul class="org-ul">
<li>Desconecta físicamente el cable de red o desactiva la wifi</li>
</ul></li>

<li><b>Documenta todo</b>
<ul class="org-ul">
<li>Toma notas detalladas de lo que observas</li>
<li>Guarda los informes generados por el script</li>
</ul></li>

<li><b>Preserva evidencia</b>
<ul class="org-ul">
<li>Crea una imagen forense si es posible</li>
<li>Guarda logs y archivos relevantes</li>
</ul></li>

<li><b>Evalúa el impacto</b>
<ul class="org-ul">
<li>Determina qué datos o sistemas podrían estar comprometidos</li>
<li>Verifica cuentas y servicios críticos</li>
</ul></li>

<li><b>Reconstruye desde cero</b>
<ul class="org-ul">
<li>La reinstalación completa es generalmente más segura que intentar limpiar</li>
<li>Restaura datos desde backups verificados como limpios</li>
</ul></li>

<li><b>Aprende y mejora</b>
<ul class="org-ul">
<li>Analiza cómo ocurrió la intrusión</li>
<li>Implementa medidas adicionales para prevenir futuros incidentes</li>
</ul></li>
</ol>
</div>
</div>
<div id="outline-container-org67c2ae6" class="outline-2">
<h2 id="org67c2ae6">Conclusión</h2>
<div class="outline-text-2" id="text-org67c2ae6">
<p>
La seguridad informática es un proceso continuo, no un estado final. Este script puede ayudarte a detectar posibles compromisos en tu sistema Linux, pero debe ser parte de una estrategia de seguridad más amplia que incluya buenas prácticas preventivas, monitoreo regular, y planes de respuesta a incidentes.
</p>

<p>
Utilizando Emacs y org-mode, puedes adaptar y mejorar este script según tus necesidades específicas, programar su ejecución regular, y documentar y analizar sus resultados de manera organizada.
</p>

<p>
Recuerda que ninguna herramienta automatizada puede reemplazar el conocimiento y la vigilancia humana. Mantente informado sobre nuevas amenazas y técnicas de ataque, y adapta tus defensas en consecuencia.
</p>


<p>
<a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15-gu-a-pr-ctica-configuraci-n-de-ufw-en-ubuntu-con-scripts-y-org-mode">2025-04-15-gu-a-pr-ctica-configuraci-n-de-ufw-en-ubuntu-con-scripts-y-org-mode</a> <br>
</p>

<p>
<a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-16--fortaleciendo-la-seguridad-inform-tica-con-snort-y-aide-gu-a-completa">2025-04-16&#x2013;fortaleciendo-la-seguridad-inform-tica-con-snort-y-aide-gu-a-completa</a>
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-botnet.html">botnet</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-malware.html">malware</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-scripting.html">scripting</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[botnet]]></category>
  <category><![CDATA[malware]]></category>
  <category><![CDATA[scripting]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15--detectando-actividad-maliciosa-en-nuestro-sistema-linux-somos-parte-de-una-botnet-.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15--detectando-actividad-maliciosa-en-nuestro-sistema-linux-somos-parte-de-una-botnet-.html</guid>
  <pubDate>Tue, 15 Apr 2025 08:20:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Los Mejores Chats con IA Globales en abril 2025: Valoración y Especialización]]></title>
  <description><![CDATA[
<div id="outline-container-org5e9a644" class="outline-2">
<h2 id="org5e9a644">Introducción</h2>
<div class="outline-text-2" id="text-org5e9a644">
<p>
Los chatbots de inteligencia artificial (IA) han transformado la manera en que interactuamos con la tecnología, ofreciendo desde asistencia personal hasta soluciones empresariales avanzadas. En este post para <b>Emacs con Esteroides</b>, exploramos los mejores chatbots de IA disponibles globalmente en 2025, ordenados por valoración y destacando su especialización. Presentamos una tabla resumen, ejemplos prácticos y consejos para integrarlos en flujos de trabajo con Emacs y Org-mode, ideal para usuarios que buscan optimizar su productividad o implementar soluciones conversacionales.
</p>
</div>
</div>
<div id="outline-container-org0c520b9" class="outline-2">
<h2 id="org0c520b9">Metodología</h2>
<div class="outline-text-2" id="text-org0c520b9">
<p>
La selección se basa en revisiones recientes, popularidad en comunidades tecnológicas y rendimiento en casos de uso reales. La valoración (escala de 1 a 5) considera factores como comprensión del lenguaje natural, capacidades de integración, accesibilidad y experiencia del usuario. La especialización indica el área donde cada chatbot destaca, como atención al cliente, desarrollo, investigación o uso personal. Los datos reflejan tendencias globales, sin limitarse a un país específico.
</p>
</div>
</div>
<div id="outline-container-org937676a" class="outline-2">
<h2 id="org937676a">Tabla de los Mejores Chats con IA Globales</h2>
<div class="outline-text-2" id="text-org937676a">
<p>
A continuación, una tabla con los mejores chatbots de IA, ordenados por valoración descendente:
</p>
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-right">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Herramienta</th>
<th scope="col" class="org-right">Valoración</th>
<th scope="col" class="org-left">Especialización</th>
<th scope="col" class="org-left">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">ChatGPT (OpenAI)</td>
<td class="org-right">4.9</td>
<td class="org-left">Versatilidad conversacional</td>
<td class="org-left">Líder en NLP, ideal para tareas generales, integración y creación de contenido.</td>
</tr>

<tr>
<td class="org-left">Claude (Anthropic)</td>
<td class="org-right">4.7</td>
<td class="org-left">Seguridad y ética</td>
<td class="org-left">Enfocado en respuestas seguras y precisas, perfecto para entornos regulados.</td>
</tr>

<tr>
<td class="org-left">Gemini (Google)</td>
<td class="org-right">4.5</td>
<td class="org-left">Integración con ecosistema Google</td>
<td class="org-left">Conectado a internet, excelente para búsquedas y usuarios de Google Workspace.</td>
</tr>

<tr>
<td class="org-left">Grok (xAI)</td>
<td class="org-right">4.4</td>
<td class="org-left">Investigación y análisis</td>
<td class="org-left">Diseñado para respuestas profundas, con búsqueda web y modo DeepSearch.</td>
</tr>

<tr>
<td class="org-left">Copilot (Microsoft)</td>
<td class="org-right">4.2</td>
<td class="org-left">Productividad empresarial</td>
<td class="org-left">Integrado con Microsoft 365, ideal para automatización y flujos de trabajo.</td>
</tr>

<tr>
<td class="org-left">Perplexity AI</td>
<td class="org-right">4.0</td>
<td class="org-left">Búsqueda conversacional</td>
<td class="org-left">Motor de búsqueda con IA, ofrece respuestas con fuentes verificables.</td>
</tr>

<tr>
<td class="org-left">Jasper Chat</td>
<td class="org-right">3.8</td>
<td class="org-left">Creación de contenido</td>
<td class="org-left">Especializado en marketing y redacción, con enfoque en contenido creativo.</td>
</tr>

<tr>
<td class="org-left">DeepSeek</td>
<td class="org-right">3.6</td>
<td class="org-left">Código abierto y desarrollo</td>
<td class="org-left">Gratuito, personalizable, ideal para desarrolladores y proyectos técnicos.</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org71839c9" class="outline-2">
<h2 id="org71839c9">Análisis por Especialización</h2>
<div class="outline-text-2" id="text-org71839c9">
<ul class="org-ul">
<li><b><b>Versatilidad conversacional</b></b>: ChatGPT destaca por su capacidad para manejar diversos temas y contextos, con soporte para GPT-4 en su versión de pago.</li>
<li><b><b>Seguridad y ética</b></b>: Claude prioriza respuestas neutrales y seguras, ideal para industrias sensibles como la salud o finanzas.</li>
<li><b><b>Integración con ecosistema</b></b>: Gemini brilla para usuarios de Google, conectándose con Drive, Gmail y más.</li>
<li><b><b>Investigación y análisis</b></b>: Grok ofrece respuestas detalladas y búsqueda web, perfecto para académicos y profesionales.</li>
<li><b><b>Productividad empresarial</b></b>: Copilot automatiza tareas en Microsoft 365, optimizando flujos de trabajo corporativos.</li>
<li><b><b>Búsqueda conversacional</b></b>: Perplexity AI es un motor de búsqueda conversacional, con referencias claras.</li>
<li><b><b>Creación de contenido</b></b>: Jasper Chat acelera la redacción de textos publicitarios y creativos.</li>
<li><b><b>Código abierto</b></b>: DeepSeek permite personalización total, ideal para desarrolladores en Emacs.</li>
</ul>
</div>
</div>
<div id="outline-container-orgd247b5b" class="outline-2">
<h2 id="orgd247b5b">Ejemplo Práctico: Integración con Emacs</h2>
<div class="outline-text-2" id="text-orgd247b5b">
<p>
Los usuarios de Emacs pueden aprovechar estos chatbots para automatizar tareas, generar contenido o gestionar proyectos en Org-mode. A continuación, un ejemplo de script en Emacs Lisp para interactuar con la API de Grok (xAI) y capturar respuestas en un archivo Org:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">grok-query</span> (prompt)
  <span style="color: #60a8a1; font-style: italic;">"Env&#237;a una consulta a la API de Grok y guarda la respuesta en un archivo Org."</span>
  (<span style="color: #219fd5; font-style: italic;">let*</span> ((api-key <span style="color: #a44185;">"TU_API_KEY"</span>)
         (url <span style="color: #a44185;">"https://api.x.ai/v1/grok"</span>)
         (json-data (json-encode `((<span style="color: #a44185;">"prompt"</span> . ,prompt))))
         (response (shell-command-to-string
                    (format <span style="color: #a44185;">"curl -s -X POST %s -H 'Authorization: Bearer %s' -H 'Content-Type: application/json' -d '</span><span style="color: #2f86d2;">%s</span><span style="color: #a44185;">'"</span>
                            url api-key json-data)))
         (parsed (json-parse-string response))
         (answer (gethash <span style="color: #a44185;">"response"</span> parsed)))
    (<span style="color: #219fd5; font-style: italic;">with-current-buffer</span> (find-file-noselect <span style="color: #a44185;">"~/org/grok-responses.org"</span>)
      (goto-char (point-max))
      (insert (format <span style="color: #a44185;">"\n* Respuesta de Grok: %s\n:PROPERTIES:\n:DATE: %s\n:END:\n%s\n"</span>
                      prompt (format-time-string <span style="color: #a44185;">"%Y-%m-%d %H:%M"</span>) answer))
      (save-buffer))
    (message <span style="color: #a44185;">"Respuesta guardada en grok-responses.org"</span>)))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Ejemplo de uso</span>
(grok-query <span style="color: #a44185;">"Explica los beneficios de Org-mode para la gesti&#243;n de proyectos"</span>)
</pre>
</div>

<p>
Para usar este script:
</p>
<ol class="org-ol">
<li>Reemplaza <code>TU_API_KEY</code> con tu clave de la API de xAI (obtén más información en <a href="https://x.ai/api">https://x.ai/api</a>).</li>
<li>Ejecuta <code>M-x eval-buffer</code> para cargar la función.</li>
<li>Usa <code>(grok-query "tu pregunta")</code> para enviar consultas y guardar respuestas en <code>grok-responses.org</code>.</li>
</ol>

<p>
Este enfoque permite integrar respuestas de Grok (u otros chatbots con APIs similares) en tu flujo de trabajo Org-mode, ideal para notas, investigación o documentación.
</p>
</div>
</div>
<div id="outline-container-org28b01bd" class="outline-2">
<h2 id="org28b01bd">Cómo Usar Estos Chats en Flujos de Trabajo</h2>
<div class="outline-text-2" id="text-org28b01bd">
<ul class="org-ul">
<li><b><b>ChatGPT</b></b>: Genera código, resúmenes o ideas directamente en un archivo Org. Usa su API para automatizar tareas repetitivas.</li>
<li><b><b>Claude</b></b>: Perfecto para redacción ética o revisión de contenido sensible. Integra con scripts para verificar tono y precisión.</li>
<li><b><b>Grok</b></b>: Aprovecha su modo DeepSearch para investigaciones complejas, capturando resultados en tablas Org.</li>
<li><b><b>Perplexity AI</b></b>: Úsalo para validar datos en tiempo real, exportando referencias a bloques de citas en Org-mode.</li>
</ul>

<p>
Ejemplo de captura en Org-mode con Perplexity AI:
</p>

<p>
#+BEGIN<sub>SRC</sub> org
</p>
</div>
</div>
<div id="outline-container-org10dc3ab" class="outline-2">
<h2 id="org10dc3ab">Investigación sobre IA</h2>
<div class="outline-text-2" id="text-org10dc3ab">
<blockquote>
<p>
Pregunta: ¿Cuáles son las tendencias de IA en 2025?
Respuesta de Perplexity AI: La IA generativa lidera, con avances en modelos multimodales.
Fuente: [Enlace a fuente]
</p>
</blockquote>
<p>
#+END<sub>SRC</sub>
</p>
</div>
</div>
<div id="outline-container-org17fba27" class="outline-2">
<h2 id="org17fba27">Conclusión</h2>
<div class="outline-text-2" id="text-org17fba27">
<p>
Los chatbots de IA globales en 2025 ofrecen soluciones para casi cualquier necesidad, desde la versatilidad de ChatGPT hasta la especialización técnica de DeepSeek. Para los usuarios de Emacs, estas herramientas son más que asistentes: son aliados para automatizar, investigar y crear. Integra sus APIs en Org-mode para maximizar tu productividad. ¿Cuál es tu chatbot favorito? ¡Déjanos tu opinión en los comentarios!
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ai.html">ai</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ai.html">AI</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-chatbots.html">chatbots</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tecnología.html">tecnología</a> </div>]]></description>
  <category><![CDATA[ai]]></category>
  <category><![CDATA[AI]]></category>
  <category><![CDATA[chatbots]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[tecnología]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15-los-mejores-chats-con-ia-globales-en-abril-2025-valoraci-n-y-especializaci-n.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15-los-mejores-chats-con-ia-globales-en-abril-2025-valoraci-n-y-especializaci-n.html</guid>
  <pubDate>Tue, 15 Apr 2025 08:16:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Cómo crear alias en Gmail usando el signo (+)]]></title>
  <description><![CDATA[
<div id="outline-container-org37d43e0" class="outline-2">
<h2 id="org37d43e0">Introducción</h2>
<div class="outline-text-2" id="text-org37d43e0">
<p>
¿Sabías que puedes crear alias infinitos de tu correo Gmail usando el signo + sin necesidad de crear nuevas cuentas?
</p>

<p>
Esto puede ser especialmente útil si gestionas múltiples registros, newsletters, suscripciones, filtros o incluso formularios desde Emacs y quieres mantener tu bandeja de entrada organizada. Vamos a ver cómo funciona.
</p>

<p>
<b><b>¿Qué es un alias con + en Gmail?</b></b>
</p>

<p>
Gmail permite añadir texto adicional a tu dirección usando el signo `+`, lo que genera un alias que redirige los correos a tu cuenta principal.
</p>

<p>
Por ejemplo, si tu correo es:
</p>

<div class="org-src-container">
<pre class="src src-text">mikeblog@gmail.com
</pre>
</div>

<p>
Puedes crear alias como:
</p>

<div class="org-src-container">
<pre class="src src-text">mikeblog+newsletter@gmail.com
mikeblog+emacs@gmail.com
mikeblog+blogcomments@gmail.com
</pre>
</div>

<p>
Todos estos correos llegarán a tu bandeja principal de <code>mikeblog@gmail.com</code>, pero puedes identificarlos y filtrarlos fácilmente.
</p>

<p>
<b><b>¿Para qué sirve esto en la práctica?</b></b>
</p>

<ol class="org-ol">
<li><b><b>Filtros personalizados</b></b> en Gmail:
Puedes crear reglas automáticas para que los correos enviados a `mikeblog+emacs@gmail.com` se archiven, etiqueten o se reenvíen.</li>

<li><b><b>Evitar spam</b></b>:
Si te registras en un sitio sospechoso con un alias como `mikeblog+promoX@gmail.com` y luego recibes spam a esa dirección, sabes de dónde vino.</li>

<li><b><b>Usos temáticos</b></b>:
Organiza tus registros y tareas:

<ul class="org-ul">
<li>`mikeblog+proyectos@gmail.com` para colaboraciones</li>
<li>`mikeblog+facturas@gmail.com` para servicios</li>
<li>`mikeblog+contactoform@gmail.com` para formularios de tu blog</li>
</ul></li>

<li><b><b>Integración con Emacs</b></b>:
Si usas paquetes como `mu4e`, `gnus` o `notmuch`, puedes filtrar por alias desde tu configuración de correo en Emacs.</li>
</ol>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Ejemplo en mu4e para detectar correos de formularios</span>
(<span style="color: #D70000;">setq</span> mu4e-maildir-shortcuts
      '( (<span style="color: #005F00;">"/inbox"</span>            . ?i)
         (<span style="color: #005F00;">"/inbox/BlogForm"</span>  . ?f)))

<span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Filtro basado en alias</span>
(<span style="color: #D70000;">setq</span> mu4e-bookmarks
      '( (<span style="color: #005F00;">"to:mikeblog+contactoform@gmail.com"</span> <span style="color: #005F00;">"Formularios del blog"</span> ?c)))
</pre>
</div>

<p>
<b><b>Limitaciones</b></b>
</p>

<ul class="org-ul">
<li>El sistema depende de que el servicio donde introduzcas el alias respete la dirección. Algunos formularios rechazan correos con `+`.</li>
<li>Aunque Gmail lo acepta, otros proveedores pueden no reconocerlo.</li>
<li>No es seguridad real, solo una forma de organización y trazabilidad.</li>
</ul>

<p>
<b><b>Conclusión</b></b>
</p>

<p>
El uso de alias con `+` en Gmail es una herramienta poderosa, especialmente si automatizas y gestionas muchas entradas desde Emacs o tu blog. Aprovecha esta funcionalidad para mantener orden, control y claridad en tu comunicación digital.
</p>


<figure id="orgf6b3e54">
<img src="images/gmail_plus.png" alt="gmail_plus.png">

</figure>

<blockquote>
<p>
Alias no es solo una máscara, es una forma de pensar en estructura desde tu bandeja de entrada. —Mike, desde Emacs con esteroides.
</p>
</blockquote>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-gmail.html">gmail</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-correo.html">correo</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-alias.html">alias</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-static-blog.html">org-static-blog</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-consejos.html">consejos</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[gmail]]></category>
  <category><![CDATA[correo]]></category>
  <category><![CDATA[alias]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[org-static-blog]]></category>
  <category><![CDATA[consejos]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15-c-mo-crear-alias-en-gmail-usando-el-signo-.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15-c-mo-crear-alias-en-gmail-usando-el-signo-.html</guid>
  <pubDate>Tue, 15 Apr 2025 07:41:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[La Cultura de la Vibra: Un Glosario de Términos con el Prefijo Vibra]]></title>
  <description><![CDATA[
<div id="outline-container-orgdeb2b42" class="outline-2">
<h2 id="orgdeb2b42"><span class="section-number-2">1.</span> Introducción a la Cultura de la Vibra (Vibe )</h2>
<div class="outline-text-2" id="text-1">
<p>
Bienvenidos a nuestro blog, un espacio dedicado a explorar cómo damos forma a nuestras experiencias creativas y productivas a través de la <b>vibra</b>. En el mundo actual, la vibra no es solo un estado de ánimo pasajero: es una forma de diseñar intencionalmente nuestra relación con el trabajo, el arte y la tecnología. Hoy, nos sumergimos en un glosario de términos con el prefijo <b>vibra-</b>, que capturan las maneras en que moldeamos nuestros entornos, flujos de trabajo y mentalidades para que resuenen con nuestra energía única.
</p>

<p>
El prefijo <b>vibra-</b> se ha convertido en una herramienta para describir enfoques, estéticas y filosofías que transforman lo cotidiano en algo especial. Ya sea ajustando tu espacio de trabajo para inspirarte, curando una atmósfera para concentrarte o explorando nuevas formas de expresión, estos términos reflejan el corazón de una vida impulsada por la vibra. A continuación, presentamos un glosario detallado, escrito en formato Org-mode para los amantes de la organización, que define estas expresiones en un contexto genérico, aplicable a cualquier ámbito creativo o profesional. Al final, incluimos una tabla con los términos originales en inglés para referencia. ¡Prepárate para descubrir cómo hacer que tu mundo vibre a tu ritmo!
</p>
</div>
</div>
<div id="outline-container-org4b91dac" class="outline-2">
<h2 id="org4b91dac"><span class="section-number-2">2.</span> Glosario de Términos Relacionados con Vibra</h2>
<div class="outline-text-2" id="text-2">
</div>
<div id="outline-container-vibra-codificacion" class="outline-3">
<h3 id="vibra-codificacion"><span class="section-number-3">2.1.</span> Vibra-Codificación</h3>
<div class="outline-text-3" id="text-vibra-codificacion">
<p>
<b>Definición</b>: Programar con un enfoque en crear una experiencia inmersiva que fomente el estado de flujo.
</p>

<p>
<b>Descripción</b>: La vibra-codificación eleva la programación más allá de la mera escritura de código. Se trata de construir un entorno que te envuelva: una combinación de herramientas, estética y atmósfera. Puede ser configurar tu editor con un tema oscuro, conectar auriculares con música ambiental o trabajar en un espacio con luz tenue. Los vibra-codificadores eligen herramientas que se sienten fluidas, como editores con autocompletado ágil o terminales personalizadas, y ajustan su entorno para minimizar distracciones y maximizar la creatividad.
</p>

<p>
<b>Ejemplo</b>: Un vibra-codificador podría usar Visual Studio Code con el tema <b>Dracula</b>, una lista de reproducción de synthwave y una lámpara de escritorio con luz cálida, escribiendo código Python mientras siente que está en una nave espacial.
</p>

<p>
<b>Herramientas</b>: Editores como VS Code, Sublime Text; música ambiental; configuraciones de teclado ergonómicas.
</p>
</div>
</div>
<div id="outline-container-vibra-hackeo" class="outline-3">
<h3 id="vibra-hackeo"><span class="section-number-3">2.2.</span> Vibra-Hackeo</h3>
<div class="outline-text-3" id="text-vibra-hackeo">
<p>
<b>Definición</b>: Experimentar con herramientas, rutinas o entornos para optimizar la atmósfera emocional y estética de tu trabajo.
</p>

<p>
<b>Descripción</b>: El vibra-hackeo es el arte de ajustar los detalles para que tu espacio o flujo de trabajo se sienta perfecto. Puede ser reorganizar tu escritorio, probar nuevas aplicaciones de productividad o crear atajos personalizados en tu software favorito. Los vibra-hackeadores buscan ese momento en que todo encaja: desde la paleta de colores de una app hasta la disposición de las ventanas en su pantalla. Es una exploración constante para alinear las herramientas con el estado mental.
</p>

<p>
<b>Ejemplo</b>: Un vibra-hackeador podría instalar una extensión de Chrome para personalizar los colores de Notion, usar un temporizador Pomodoro con sonidos suaves y mover su monitor a un ángulo que reduzca el cansancio visual.
</p>

<p>
<b>Herramientas</b>: Aplicaciones como Notion, Obsidian; extensiones de navegador; gadgets de escritorio.
</p>
</div>
</div>
<div id="outline-container-vibra-revision" class="outline-3">
<h3 id="vibra-revision"><span class="section-number-3">2.3.</span> Vibra-Revisión</h3>
<div class="outline-text-3" id="text-vibra-revision">
<p>
<b>Definición</b>: Evaluar tu entorno o herramientas para asegurarte de que se alinean con tus necesidades emocionales o productivas.
</p>

<p>
<b>Descripción</b>: La vibra-revisión es un momento de introspección. ¿Tu espacio de trabajo te inspira o te frustra? ¿Tus aplicaciones son ágiles o están llenas de funciones que no usas? Los vibra-revisores hacen una pausa para analizar: prueban nuevos flujos de trabajo, eliminan distracciones o reorganizan su rutina. Es como limpiar tu escritorio mental, asegurándote de que cada elemento contribuya a una vibra positiva.
</p>

<p>
<b>Ejemplo</b>: Un vibra-revisor podría darse cuenta de que las notificaciones de su teléfono rompen su concentración, así que activa el modo “No molestar” y reorganiza su calendario para dedicar las mañanas a tareas creativas.
</p>

<p>
<b>Herramientas</b>: Aplicaciones de seguimiento del tiempo como Toggl; listas de tareas; modo “No molestar”.
</p>
</div>
</div>
<div id="outline-container-vibra-creacion" class="outline-3">
<h3 id="vibra-creacion"><span class="section-number-3">2.4.</span> Vibra-Creación</h3>
<div class="outline-text-3" id="text-vibra-creacion">
<p>
<b>Definición</b>: Diseñar intencionalmente un entorno o experiencia para evocar un estado de ánimo o estética específica.
</p>

<p>
<b>Descripción</b>: La vibra-creación es curar cada detalle para contar una historia. Puede ser decorar tu espacio con plantas y luces LED, elegir una paleta de colores para tus proyectos o seleccionar música que te transporte. Los vibra-creadores transforman lo ordinario en algo único, ya sea diseñando una presentación con tipografías elegantes o configurando un rincón acogedor para leer. El objetivo es un entorno que se sienta como una extensión de tu personalidad.
</p>

<p>
<b>Ejemplo</b>: Un vibra-creador podría decorar su escritorio con velas aromáticas, usar Canva para diseñar un moodboard con tonos pastel y escuchar jazz suave mientras escribe un diario.
</p>

<p>
<b>Herramientas</b>: Canva, Figma; accesorios de decoración; aplicaciones de música como Spotify.
</p>
</div>
</div>
<div id="outline-container-vibra-navegacion" class="outline-3">
<h3 id="vibra-navegacion"><span class="section-number-3">2.5.</span> Vibra-Navegación</h3>
<div class="outline-text-3" id="text-vibra-navegacion">
<p>
<b>Definición</b>: Explorar comunidades, herramientas o inspiraciones para encontrar elementos que resuenen con tu energía deseada.
</p>

<p>
<b>Descripción</b>: La vibra-navegación es una aventura en busca de lo que te motiva. Es desplazarte por Pinterest para encontrar ideas de diseño, unirte a foros en línea para descubrir apps nuevas o probar configuraciones recomendadas por otros. Los vibra-navegadores son curiosos, siempre buscando esa chispa que conecte con su estado de ánimo, ya sea una nueva técnica de productividad o una comunidad creativa.
</p>

<p>
<b>Ejemplo</b>: Un vibra-navegador podría descubrir una comunidad en Reddit sobre minimalismo, probar una app de notas como Bear y compartir su experiencia en un grupo de Discord.
</p>

<p>
<b>Herramientas</b>: Reddit, Discord; plataformas como Pinterest; apps de notas como Bear, Evernote.
</p>
</div>
</div>
<div id="outline-container-vibra-cambio" class="outline-3">
<h3 id="vibra-cambio"><span class="section-number-3">2.6.</span> Vibra-Cambio</h3>
<div class="outline-text-3" id="text-vibra-cambio">
<p>
<b>Definición</b>: Alterar deliberadamente tu entorno o herramientas para transitar entre estados emocionales o productivos.
</p>

<p>
<b>Descripción</b>: La vibra-cambio es sobre adaptarte al momento. ¿Necesitas pasar de un trabajo analítico a uno creativo? Cambia la iluminación, la música o la herramienta que usas. Los vibra-cambiadores saben que el entorno influye en la mente, así que ajustan su espacio para reflejar el estado que buscan: de un escritorio ordenado para planificar a un caos organizado para idear.
</p>

<p>
<b>Ejemplo</b>: Un vibra-cambiador podría mover su portátil a un café, cambiar su lista de reproducción de techno a folk acústico y abrir un cuaderno para esbozar ideas después de una mañana de correos.
</p>

<p>
<b>Herramientas</b>: Listas de reproducción personalizadas; cuadernos físicos; apps de cambio de contexto como Todoist.
</p>
</div>
</div>
<div id="outline-container-vibra-ajuste" class="outline-3">
<h3 id="vibra-ajuste"><span class="section-number-3">2.7.</span> Vibra-Ajuste</h3>
<div class="outline-text-3" id="text-vibra-ajuste">
<p>
<b>Definición</b>: Experimentar juguetónmente con pequeños cambios para afinar la atmósfera de tu espacio o flujo de trabajo.
</p>

<p>
<b>Descripción</b>: El vibra-ajuste celebra las mejoras sutiles. Es cambiar el fondo de pantalla de tu ordenador, ajustar el brillo de tu monitor o probar una nueva fuente en tu editor de texto. Los vibra-ajustadores encuentran alegría en los detalles, sabiendo que un pequeño cambio puede transformar la experiencia sin necesidad de una renovación completa.
</p>

<p>
<b>Ejemplo</b>: Un vibra-ajustador podría probar una fuente como <b>JetBrains Mono</b> en su editor, añadir un widget de clima a su escritorio y mover una planta para que reciba más luz.
</p>

<p>
<b>Herramientas</b>: Fuentes personalizadas; widgets de escritorio; accesorios decorativos.
</p>
</div>
</div>
<div id="outline-container-vibra-tejido" class="outline-3">
<h3 id="vibra-tejido"><span class="section-number-3">2.8.</span> Vibra-Tejido</h3>
<div class="outline-text-3" id="text-vibra-tejido">
<p>
<b>Definición</b>: Combinar múltiples elementos—herramientas, estética, rutinas—en una experiencia cohesiva y vibrante.
</p>

<p>
<b>Descripción</b>: El vibra-tejido es el arte de la síntesis. Es integrar tus apps favoritas con un estilo visual unificado, coordinar tu calendario con pausas creativas o mezclar música y aromas para potenciar tu enfoque. Los vibra-tejedores crean sistemas que fluyen naturalmente, donde cada parte refuerza la vibra general, haciendo que el trabajo o la creación se sientan sin esfuerzo.
</p>

<p>
<b>Ejemplo</b>: Un vibra-tejedor podría usar Trello para organizar proyectos, sincronizarlo con una lista de reproducción que cambia según la tarea y trabajar en un espacio con paredes pintadas de azul profundo para calmar la mente.
</p>

<p>
<b>Herramientas</b>: Trello, Asana; altavoces inteligentes; elementos de diseño interior.
</p>
</div>
</div>
</div>
<div id="outline-container-orgbe61715" class="outline-2">
<h2 id="orgbe61715"><span class="section-number-2">3.</span> Conclusión</h2>
<div class="outline-text-2" id="text-3">
<p>
El léxico de <b>vibra-</b> es más que palabras: es una invitación a vivir con intención, moldeando tus entornos y herramientas para que reflejen quién eres. Ya seas un vibra-codificador inmerso en tu código, un vibra-creador diseñando un espacio que inspira o un vibra-tejedor uniendo todo en armonía, estos términos te animan a explorar y personalizar. ¿Tienes tus propios términos o trucos para la vibra? Compártelos en los comentarios o en nuestras redes. Hasta la próxima, sigue experimentando, sigue creando y, sobre todo, sigue vibrando.
</p>

<div class="org-src-container">
<pre class="src src-text"># &#161;Un peque&#241;o truco para la vibra!
Crea un ritual diario: antes de empezar a trabajar, elige una canci&#243;n que defina tu energ&#237;a del d&#237;a, 
ajusta la iluminaci&#243;n de tu espacio y escribe una intenci&#243;n en una nota adhesiva. 
&#161;Peque&#241;os detalles, gran vibra!
</pre>
</div>
</div>
</div>
<div id="outline-container-org0747c67" class="outline-2">
<h2 id="org0747c67"><span class="section-number-2">4.</span> Tabla de Términos en Inglés</h2>
<div class="outline-text-2" id="text-4">
<table class="doctrinal-table" border="2" cellspacing="0" cellpadding="5">


<colgroup>
<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Término en Catellano</th>
<th scope="col" class="org-left">Término en Inglés</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Vibra-Codificación</td>
<td class="org-left">Vibe Coding</td>
</tr>

<tr>
<td class="org-left">Vibra-Hackeo</td>
<td class="org-left">Vibe Hacking</td>
</tr>

<tr>
<td class="org-left">Vibra-Revisión</td>
<td class="org-left">Vibe Checking</td>
</tr>

<tr>
<td class="org-left">Vibra-Creación</td>
<td class="org-left">Vibe Crafting</td>
</tr>

<tr>
<td class="org-left">Vibra-Navegación</td>
<td class="org-left">Vibe Surfing</td>
</tr>

<tr>
<td class="org-left">Vibra-Cambio</td>
<td class="org-left">Vibe Shifting</td>
</tr>

<tr>
<td class="org-left">Vibra-Ajuste</td>
<td class="org-left">Vibe Tinkering</td>
</tr>

<tr>
<td class="org-left">Vibra-Tejido</td>
<td class="org-left">Vibe Weaving</td>
</tr>
</tbody>
</table>

<p>
<b>¡Que tu mundo siempre vibre en sintonía!</b>
</p>

<p>
<a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-29-vibe-coding-programaci%C3%B3n-con-esteroides">2025-03-29-vibe-coding-programación-con-esteroides</a>
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-vive.html">vive</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-cultura.html">cultura</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-opiniones.html">opiniones</a> </div>]]></description>
  <category><![CDATA[vive]]></category>
  <category><![CDATA[cultura]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[opiniones]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-14-la-cultura-de-la-vibra-un-glosario-de-t-rminos-con-el-prefijo-vibra.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-14-la-cultura-de-la-vibra-un-glosario-de-t-rminos-con-el-prefijo-vibra.html</guid>
  <pubDate>Mon, 14 Apr 2025 05:48:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Vibe Hacking: Personalizando tu Experiencia Digital]]></title>
  <description><![CDATA[
<div id="outline-container-orgaff7e65" class="outline-2">
<h2 id="orgaff7e65">Introducción</h2>
</div>


<div id="outline-container-org56c7b3d" class="outline-2">
<h2 id="org56c7b3d">Vibe Hacking: Una Introducción</h2>
<div class="outline-text-2" id="text-org56c7b3d">
<p>
"Vibe hacking" se refiere a la práctica de modificar conscientemente nuestros entornos digitales y físicos para crear una atmósfera o "vibe" específica que mejore nuestra experiencia, estado de ánimo y productividad. Es una filosofía que combina elementos de diseño, psicología ambiental y tecnología para personalizar los espacios que habitamos.
</p>
</div>
<div id="outline-container-org704bcb4" class="outline-3">
<h3 id="org704bcb4">¿Qué es exactamente el "vibe"?</h3>
<div class="outline-text-3" id="text-org704bcb4">
<p>
El concepto de "vibe" (vibra o ambiente) es algo subjetivo pero tangible - ese sentimiento particular que se experimenta en un espacio, ya sea digital o físico. Incluye componentes visuales, auditivos, e incluso conceptuales que, en conjunto, producen una sensación específica.
</p>
</div>
</div>
<div id="outline-container-org631b69a" class="outline-3">
<h3 id="org631b69a">Vibe Hacking vs. Personalización Tradicional</h3>
<div class="outline-text-3" id="text-org631b69a">
<p>
Lo que distingue al vibe hacking de la simple personalización es su enfoque holístico y la intención consciente detrás de las modificaciones:
</p>
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Personalización Tradicional</th>
<th scope="col" class="org-left">Vibe Hacking</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Ajustes estéticos superficiales</td>
<td class="org-left">Transformación coherente del entorno</td>
</tr>

<tr>
<td class="org-left">Enfoque en apariencia</td>
<td class="org-left">Enfoque en experiencia y sensación</td>
</tr>

<tr>
<td class="org-left">Ajustes independientes</td>
<td class="org-left">Sistema integrado de modificaciones</td>
</tr>

<tr>
<td class="org-left">Principalmente visual</td>
<td class="org-left">Multisensorial (visual, auditivo, táctil)</td>
</tr>

<tr>
<td class="org-left">A menudo preestablecido</td>
<td class="org-left">Altamente personalizado y en evolución</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div id="outline-container-orgb42caa8" class="outline-2">
<h2 id="orgb42caa8">Origen y Evolución del Vibe Hacking</h2>
<div class="outline-text-2" id="text-orgb42caa8">
</div>
<div id="outline-container-org711f40e" class="outline-3">
<h3 id="org711f40e">Raíces Culturales</h3>
<div class="outline-text-3" id="text-org711f40e">
<p>
El vibe hacking tiene sus raíces en diversas tradiciones:
</p>

<ul class="org-ul">
<li><b>Feng Shui y diseño de espacios</b>: Prácticas milenarias de armonización de espacios.</li>
<li><b>Cultura hacker</b>: La ética de modificar sistemas para hacerlos funcionar mejor para el usuario.</li>
<li><b>Estética vaporwave y web nostálgica</b>: Movimientos que remezclan elementos visuales y sonoros para evocar estados emocionales específicos.</li>
<li><b>Minimalismo digital</b>: Filosofía de reducir distracciones y crear entornos de trabajo focalizados.</li>
</ul>
</div>
</div>
<div id="outline-container-orga4e5fd3" class="outline-3">
<h3 id="orga4e5fd3">Desarrollo Contemporáneo</h3>
<div class="outline-text-3" id="text-orga4e5fd3">
<p>
A partir de 2018-2020, el concepto comenzó a ganar tracción en comunidades online:
</p>

<ol class="org-ol">
<li><b>Comunidades de personalización</b>: Como r/unixporn en Reddit, donde usuarios comparten configuraciones altamente personalizadas de sistemas Unix.</li>
<li><b>Cultura WFH post-pandemia</b>: El aumento del trabajo remoto impulsó a las personas a optimizar sus espacios digitales y físicos.</li>
<li><b>Movimiento "Digital Gardens"</b>: La tendencia de crear espacios web personales con un enfoque en crecimiento orgánico y expresión personal.</li>
<li><b>Herramientas como Notion, Obsidian y por supuesto, Emacs</b>: Plataformas altamente personalizables que permiten a los usuarios crear sistemas adaptados a sus necesidades precisas.</li>
</ol>
</div>
</div>
<div id="outline-container-org0c1093c" class="outline-3">
<h3 id="org0c1093c">Evolución en la Era Actual (2022-2025)</h3>
<div class="outline-text-3" id="text-org0c1093c">
<ul class="org-ul">
<li>Integración de IA para facilitar la personalización avanzada</li>
<li>Enfoque en bienestar digital y salud mental</li>
<li>Desarrollo de comunidades dedicadas al intercambio de "vibes" personalizados</li>
<li>Herramientas cada vez más sofisticadas para la personalización multisensorial</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org9052f2d" class="outline-2">
<h2 id="org9052f2d">El Vibe Hacking en la Práctica</h2>
<div class="outline-text-2" id="text-org9052f2d">
</div>
<div id="outline-container-org504158c" class="outline-3">
<h3 id="org504158c">Principios Fundamentales</h3>
<div class="outline-text-3" id="text-org504158c">
<ol class="org-ol">
<li><b>Intencionalidad</b>: Cada cambio tiene un propósito específico</li>
<li><b>Coherencia</b>: Los elementos se combinan para crear una experiencia unificada</li>
<li><b>Iteración</b>: Evolución constante según necesidades cambiantes</li>
<li><b>Significado personal</b>: Conexión emocional con los elementos elegidos</li>
</ol>
</div>
</div>
<div id="outline-container-org10fb499" class="outline-3">
<h3 id="org10fb499">Dimensiones del Vibe Hacking</h3>
<div class="outline-text-3" id="text-org10fb499">

<figure id="org0f89e01">
<img src="images/vibe-hacking-diagram.png" alt="vibe-hacking-diagram.png">

</figure>

<p>
<a href="images/vibe-hacking-diagram.png">Ver imagen a tamaño completo</a>
</p>
</div>
</div>
</div>
<div id="outline-container-org9d1f54d" class="outline-2">
<h2 id="org9d1f54d">Vibe Hacking en Emacs: El Caso Paradigmático</h2>
<div class="outline-text-2" id="text-org9d1f54d">
<p>
Emacs representa quizás el ejemplo más puro de vibe hacking en el ámbito del software:
</p>
</div>
<div id="outline-container-org4a5a386" class="outline-3">
<h3 id="org4a5a386">Características que Hacen de Emacs un Paraíso para Vibe Hackers</h3>
<div class="outline-text-3" id="text-org4a5a386">
<ul class="org-ul">
<li><b>Personalización profunda</b>: No solo de apariencia sino de comportamiento</li>
<li><b>Integración de múltiples dominios</b>: Desde escritura hasta programación, organización personal y comunicación</li>
<li><b>Configuración programable</b>: Elisp permite modificaciones limitadas solo por la imaginación</li>
<li><b>Comunidad de compartición</b>: Ecosistema vibrante de paquetes y configuraciones</li>
</ul>
</div>
</div>
<div id="outline-container-org6ddc106" class="outline-3">
<h3 id="org6ddc106">Ejemplos de Vibe Hacking en Emacs</h3>
<div class="outline-text-3" id="text-org6ddc106">
</div>
<div id="outline-container-org82a2e89" class="outline-4">
<h4 id="org82a2e89">Flujos de Trabajo para Estados Mentales Específicos</h4>
<div class="outline-text-4" id="text-org82a2e89">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n para "Deep Work Mode"</span>
(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">my/deep-work-mode</span> ()
  <span style="color: #60a8a1; font-style: italic;">"Configurar Emacs para trabajo profundo sin distracciones."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (doom-modeline-mode -1)  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Ocultar modeline</span>
  (olivetti-mode 1)        <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Centrar texto</span>
  (display-time-mode -1)   <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Ocultar hora</span>
  (load-theme 'ef-frost t) <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Tema tranquilo</span>
  (<span style="color: #219fd5; font-style: italic;">setq-local</span> org-startup-folded t)
  (org-clock-in)           <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Iniciar reloj</span>
  (run-with-timer 0 1800 'play-sound-file <span style="color: #a44185;">"~/sounds/bell.wav"</span>))  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Campana cada 30 min</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgc45729d" class="outline-4">
<h4 id="orgc45729d">Combinaciones Estéticas Integradas</h4>
<div class="outline-text-4" id="text-orgc45729d">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">"Cyberpunk Coding Environment"</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">cyberpunk-theme</span>
  <span style="color: #dc3eb7;">:config</span>
  (load-theme 'cyberpunk t)
  (set-face-attribute 'default nil <span style="color: #dc3eb7;">:font</span> <span style="color: #a44185;">"Cascadia Code"</span> <span style="color: #dc3eb7;">:height</span> 120)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-bullets-bullet-list '(<span style="color: #a44185;">"&#9673;"</span> <span style="color: #a44185;">"&#9678;"</span> <span style="color: #a44185;">"&#9679;"</span> <span style="color: #a44185;">"&#9675;"</span> <span style="color: #a44185;">"&#10040;"</span> <span style="color: #a44185;">"&#10047;"</span>))
  (live-mode 1)  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Efectos visuales reactivos (paquete hipot&#233;tico)</span>
  (run-with-idle-timer 120 t 'activate-matrix-screensaver))
</pre>
</div>
</div>
</div>
<div id="outline-container-org98152c4" class="outline-4">
<h4 id="org98152c4">Interfaces Adaptativas según Contexto</h4>
<div class="outline-text-4" id="text-org98152c4">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Cambio autom&#225;tico de vibe seg&#250;n hora del d&#237;a</span>
(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">adjust-environment-by-time</span> ()
  (<span style="color: #219fd5; font-style: italic;">let</span> ((hour (string-to-number (format-time-string <span style="color: #a44185;">"%H"</span>))))
    (<span style="color: #219fd5; font-style: italic;">cond</span>
     ((&lt; hour 9)  (morning-setup))   <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n matutina</span>
     ((&lt; hour 17) (workday-setup))   <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n de jornada laboral</span>
     ((&lt; hour 21) (evening-setup))   <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n vespertina</span>
     (t           (night-setup)))))  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n nocturna</span>

(run-with-timer 0 3600 'adjust-environment-by-time)  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Verificar cada hora</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div id="outline-container-orgd20127a" class="outline-2">
<h2 id="orgd20127a">Ejemplos Prácticos de Vibe Hacking</h2>
<div class="outline-text-2" id="text-orgd20127a">
</div>
<div id="outline-container-org1460273" class="outline-3">
<h3 id="org1460273">Estudiantil-Académico</h3>
<div class="outline-text-3" id="text-org1460273">
<ul class="org-ul">
<li>Temas de alto contraste para lectura académica</li>
<li>Integración de Org-Roam para gestión de conocimiento</li>
<li>Plantillas específicas para distintos tipos de notas</li>
<li>Temporizadores Pomodoro incorporados</li>
<li>Eliminación de distracciones visuales</li>
</ul>
</div>
</div>
<div id="outline-container-org42cf2e3" class="outline-3">
<h3 id="org42cf2e3">Creatividad y Escritura</h3>
<div class="outline-text-3" id="text-org42cf2e3">
<ul class="org-ul">
<li>Temas minimalistas con alto enfoque en el texto</li>
<li>Sonidos ambientales sutiles (lluvia, café)</li>
<li>Modos de escritura a pantalla completa</li>
<li>Tipografías serif para composición</li>
<li>Integración con diccionarios y thesaurus</li>
</ul>
</div>
</div>
<div id="outline-container-orgbf70b5c" class="outline-3">
<h3 id="orgbf70b5c">Desarrollo de Software</h3>
<div class="outline-text-3" id="text-orgbf70b5c">
<ul class="org-ul">
<li>Esquemas de color optimizados para largos periodos de codificación</li>
<li>Resaltado de sintaxis personalizado para lenguajes frecuentes</li>
<li>Integración de LSP para asistencia en tiempo real</li>
<li>Atajos personalizados para patrones de código recurrentes</li>
<li>Dashboards de proyecto con métricas relevantes</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org2f1c9e6" class="outline-2">
<h2 id="org2f1c9e6">El Futuro del Vibe Hacking</h2>
<div class="outline-text-2" id="text-org2f1c9e6">
</div>
<div id="outline-container-org37d4d0d" class="outline-3">
<h3 id="org37d4d0d">Tendencias Emergentes</h3>
<div class="outline-text-3" id="text-org37d4d0d">
<ul class="org-ul">
<li><b>Personalización basada en biometría</b>: Ajustes automáticos según estado de atención, estrés o fatiga visual</li>
<li><b>Entornos adaptativos</b>: Interfaces que cambian sutilmente según el contexto y necesidades del momento</li>
<li><b>Colaboración en vibe design</b>: Compartir no solo configuraciones sino experiencias completas</li>
<li><b>Integración con espacios físicos</b>: Sincronización de ambientes digitales y reales</li>
</ul>
</div>
</div>
<div id="outline-container-org8174844" class="outline-3">
<h3 id="org8174844">Desafíos</h3>
<div class="outline-text-3" id="text-org8174844">
<ul class="org-ul">
<li>Equilibrio entre personalización y sobrecarga cognitiva</li>
<li>Preservación de la productividad frente al "yak shaving" (perfeccionamiento excesivo)</li>
<li>Accesibilidad vs. curva de aprendizaje</li>
<li>Sostenibilidad de configuraciones a largo plazo</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgf3e46e5" class="outline-2">
<h2 id="orgf3e46e5">Conclusión</h2>
<div class="outline-text-2" id="text-orgf3e46e5">
<p>
El vibe hacking representa más que una tendencia pasajera; es una filosofía de diseño centrada en la experiencia humana que reconoce la profunda conexión entre nuestros entornos digitales y nuestro bienestar mental. En un mundo donde pasamos cada vez más tiempo en espacios digitales, la capacidad de moldear esos espacios para que resuenen con nuestras necesidades más profundas es una forma de reclamar agencia.
</p>

<p>
Para los usuarios de Emacs, esta filosofía puede resultar familiar: la idea de que nuestras herramientas deben adaptarse a nosotros, no al revés, ha sido siempre central en la comunidad. El vibe hacking simplemente extiende esta idea para incluir dimensiones emocionales y estéticas, reconociendo que la tecnología no es solo funcional sino también experiencial.
</p>

<p>
Al tomar control consciente de nuestros entornos digitales, no solo mejoramos nuestra productividad sino que transformamos nuestra relación con la tecnología de consumidores pasivos a creadores activos de experiencia.
</p>
</div>
</div>
<div id="outline-container-orga940df8" class="outline-2">
<h2 id="orga940df8">Referencias y Recursos</h2>
<div class="outline-text-2" id="text-orga940df8">
<ul class="org-ul">
<li>Anthes, E. (2022). "Digital Environments and Mental Wellbeing". <b>Journal of Digital Psychology</b>, 14(3), 78-92.</li>
<li>r/unixporn - Reddit community for desktop customization</li>
<li>"The Vibe Economy" (2023) - Ensayo de Robin Sloan</li>
<li>Dourish, P. (2019). <b>The Stuff of Bits: An Essay on the Materialities of Information</b>. MIT Press.</li>
<li>The Org-Mode Community: <a href="https://orgmode.org">https://orgmode.org</a></li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-vibe.html">vibe</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-hacking.html">hacking</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-personalización.html">personalización</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-experiencia.html">experiencia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-digital.html">digital</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-estética.html">estética</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-digital.html">digital</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> </div>]]></description>
  <category><![CDATA[vibe]]></category>
  <category><![CDATA[hacking]]></category>
  <category><![CDATA[personalización]]></category>
  <category><![CDATA[experiencia]]></category>
  <category><![CDATA[digital]]></category>
  <category><![CDATA[estética]]></category>
  <category><![CDATA[digital]]></category>
  <category><![CDATA[emacs]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-13-vibe-hacking-personalizando-tu-experiencia-digital.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-13-vibe-hacking-personalizando-tu-experiencia-digital.html</guid>
  <pubDate>Sun, 13 Apr 2025 08:08:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Tutorial Emacs: Cómo Configurar use-package para Gestionar Paquetes como un Profesional]]></title>
  <description><![CDATA[
<div id="outline-container-orgb6ba867" class="outline-2">
<h2 id="orgb6ba867">Introducción a use-package: Tu Mejor Amigo en Emacs</h2>
<div class="outline-text-2" id="text-orgb6ba867">
<p>
Si estás empezando con Emacs, probablemente te has dado cuenta de que es un editor <b>increíblemente</b> personalizable, pero también puede ser abrumador. Una de las primeras cosas que querrás dominar es cómo instalar y configurar paquetes (extensiones que añaden funcionalidades). Aquí es donde entra <b><b>use-package</b></b>, una herramienta poderosa que simplifica la gestión de paquetes, organiza tu configuración y hace que Emacs sea más rápido y eficiente.
</p>

<p>
En este tutorial, te guiaré paso a paso para:
</p>

<ul class="org-ul">
<li>Entender qué es `use-package` y por qué es útil.</li>
<li>Configurar `use-package` en tu archivo de configuración de Emacs (<code>init.el</code> o <code>early-init.el</code>).</li>
<li>Instalar paquetes populares con ejemplos prácticos.</li>
<li>Personalizar configuraciones con opciones avanzadas de `use-package`.</li>
<li>Evitar errores comunes para principiantes.</li>
</ul>

<p>
No necesitas ser un experto en Emacs ni saber programar en Lisp. Este tutorial está diseñado para principiantes, con explicaciones claras y ejemplos que puedes copiar y pegar. ¡Vamos a convertir tu Emacs en una máquina bien organizada!
</p>
</div>
</div>
<div id="outline-container-orgac0a603" class="outline-2">
<h2 id="orgac0a603">¿Qué es use-package?</h2>
<div class="outline-text-2" id="text-orgac0a603">
<p>
<b><b>use-package</b></b> es una macro (una especie de atajo en Emacs Lisp) que te permite instalar, configurar y gestionar paquetes de manera sencilla. En lugar de escribir largas líneas de código para cargar paquetes, `use-package` te ofrece una sintaxis clara y estructurada. Sus principales ventajas son:
</p>

<ul class="org-ul">
<li><b><b>Organización</b></b>: Agrupa toda la configuración de un paquete en un solo bloque.</li>
<li><b><b>Carga diferida</b></b>: Solo carga paquetes cuando los necesitas, haciendo que Emacs inicie más rápido.</li>
<li><b><b>Instalación automática</b></b>: Descarga e instala paquetes si no están presentes.</li>
<li><b><b>Flexibilidad</b></b>: Permite personalizar teclas, ajustes y comportamientos fácilmente.</li>
</ul>

<p>
Por ejemplo, sin `use-package`, instalar y configurar el paquete <code>ivy</code> (un sistema de autocompletado) podría requerir varias líneas de código dispersas. Con `use-package`, todo queda limpio y en un solo lugar.
</p>
</div>
</div>
<div id="outline-container-org18c6d6f" class="outline-2">
<h2 id="org18c6d6f">Prerrequisitos</h2>
<div class="outline-text-2" id="text-org18c6d6f">
<p>
Antes de empezar, asegúrate de tener lo siguiente:
</p>

<ol class="org-ol">
<li><b><b>Emacs instalado</b></b>: Este tutorial asume que tienes Emacs 26.1 o superior (puedes verificarlo con <code>M-x emacs-version</code>).</li>
<li><b><b>Acceso al archivo de configuración</b></b>: Normalmente es <code>~/.emacs.d/init.el</code> o <code>~/.config/emacs/init.el</code>. Si no existe, lo crearemos.</li>
<li><b><b>Conexión a internet</b></b>: Necesaria para descargar paquetes.</li>
<li><b><b>Conocimiento básico de Emacs</b></b>: Saber cómo abrir Emacs, guardar archivos (<code>C-x C-s</code>) y evaluar código (<code>M-x eval-buffer</code>) es suficiente.</li>
</ol>

<p>
Si no estás familiarizado con estos conceptos, no te preocupes: explicaré cada paso con detalle.
</p>
</div>
</div>
<div id="outline-container-orgcaeb76f" class="outline-2">
<h2 id="orgcaeb76f">Paso 1: Configurar el Sistema de Paquetes de Emacs</h2>
<div class="outline-text-2" id="text-orgcaeb76f">
<p>
Emacs usa repositorios de paquetes como MELPA, ELPA y Org para descargar extensiones. Antes de usar `use-package`, debemos asegurarnos de que Emacs pueda acceder a estos repositorios.
</p>

<p>
Abre tu archivo de configuración (<code>init.el</code>). Puedes hacerlo con:
</p>

<div class="org-src-container">
<pre class="src src-sh">emacs ~/.emacs.d/init.el
</pre>
</div>

<p>
Añade el siguiente código al principio de tu <code>init.el</code> para configurar los repositorios de paquetes:
</p>

<div class="org-src-container">
<pre class="src src-elisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configurar repositorios de paquetes</span>
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">package</span>)
(add-to-list 'package-archives '(<span style="color: #a44185;">"melpa"</span> . <span style="color: #a44185;">"https://melpa.org/packages/"</span>) t)
(add-to-list 'package-archives '(<span style="color: #a44185;">"org"</span> . <span style="color: #a44185;">"https://orgmode.org/elpa/"</span>) t)
(package-initialize)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Refrescar la lista de paquetes (solo necesario la primera vez)</span>
(<span style="color: #219fd5; font-style: italic;">unless</span> package-archive-contents
  (package-refresh-contents))
</pre>
</div>

<p>
<b><b>Explicación</b></b>:
</p>
<ul class="org-ul">
<li><code>require 'package</code>: Carga el sistema de paquetes de Emacs.</li>
<li><code>add-to-list 'package-archives</code>: Añade MELPA y Org como fuentes de paquetes. MELPA tiene miles de paquetes modernos.</li>
<li><code>package-initialize</code>: Inicia el sistema de paquetes.</li>
<li><code>package-refresh-contents</code>: Descarga la lista de paquetes disponibles si es la primera vez.</li>
</ul>

<p>
Guarda el archivo (<code>C-x C-s</code>) y evalúa el código con <code>M-x eval-buffer</code> (o reinicia Emacs). Esto prepara el terreno para instalar `use-package`.
</p>
</div>
</div>
<div id="outline-container-org8300882" class="outline-2">
<h2 id="org8300882">Paso 2: Instalar use-package</h2>
<div class="outline-text-2" id="text-org8300882">
<p>
Aunque `use-package` es una herramienta poderosa, no viene incluida en Emacs por defecto. Vamos a instalarla automáticamente.
</p>

<p>
Añade este código justo después del bloque anterior en tu <code>init.el</code>:
</p>

<div class="org-src-container">
<pre class="src src-elisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Instalar use-package si no est&#225; presente</span>
(<span style="color: #219fd5; font-style: italic;">unless</span> (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Cargar use-package</span>
(<span style="color: #219fd5; font-style: italic;">eval-when-compile</span>
  (<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">use-package</span>))
</pre>
</div>

<p>
<b><b>Explicación</b></b>:
</p>
<ul class="org-ul">
<li><code>package-installed-p</code>: Verifica si `use-package` ya está instalado.</li>
<li><code>package-install</code>: Lo instala desde MELPA si no está presente.</li>
<li><code>eval-when-compile</code>: Optimiza la carga de `use-package` para que sea eficiente.</li>
</ul>

<p>
Guarda el archivo y evalúa con <code>M-x eval-buffer</code>. Ahora tienes `use-package` listo para usar.
</p>
</div>
</div>
<div id="outline-container-orgb34f685" class="outline-2">
<h2 id="orgb34f685">Paso 3: Usar use-package para Instalar un Paquete</h2>
<div class="outline-text-2" id="text-orgb34f685">
<p>
Para probar `use-package`, vamos a instalar y configurar <b><b>ivy</b></b>, un paquete popular que mejora el autocompletado en Emacs. Añade este bloque a tu <code>init.el</code>:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">ivy</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:demand</span> t
  <span style="color: #dc3eb7;">:config</span>
  (ivy-mode 1)
  (<span style="color: #219fd5; font-style: italic;">setq</span> ivy-use-virtual-buffers t)
  (<span style="color: #219fd5; font-style: italic;">setq</span> enable-recursive-minibuffers t))
</pre>
</div>

<p>
<b><b>Explicación del bloque</b></b>:
</p>
<ul class="org-ul">
<li><code>use-package ivy</code>: Indica que vamos a configurar el paquete <code>ivy</code>.</li>
<li><code>:ensure t</code>: Descarga e instala <code>ivy</code> automáticamente si no está presente.</li>
<li><code>:demand t</code>: Fuerza la carga de <code>ivy</code> al iniciar Emacs (normalmente, `use-package` intenta cargar paquetes solo cuando se necesitan).</li>
<li><code>:config</code>: Contiene comandos que se ejecutan <b>después</b> de cargar el paquete.</li>
<li><code>ivy-mode 1</code>: Activa el modo Ivy para autocompletado.</li>
<li><code>setq</code>: Configura opciones de Ivy, como mostrar buffers recientes y permitir minibuffers anidados.</li>
</ul>

<p>
Guarda el archivo (<code>C-x C-s</code>) y evalúa con <code>M-x eval-buffer</code>. Ahora, cuando uses comandos como <code>M-x</code> o <code>C-x C-f</code>, notarás que el autocompletado es más rápido y visual gracias a Ivy.
</p>
</div>
</div>
<div id="outline-container-org01b79e6" class="outline-2">
<h2 id="org01b79e6">Paso 4: Ejemplo Práctico – Configurar Magit con use-package</h2>
<div class="outline-text-2" id="text-org01b79e6">
<p>
Vamos a configurar otro paquete útil: <b><b>Magit</b></b>, una interfaz para Git dentro de Emacs. Este ejemplo incluye teclas personalizadas y carga diferida para optimizar el inicio.
</p>

<p>
Añade este bloque a tu <code>init.el</code>:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">magit</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:bind</span> ((<span style="color: #a44185;">"C-x g"</span> . magit-status))
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> magit-display-buffer-function #'magit-display-buffer-fullframe-status-v1))
</pre>
</div>

<p>
<b><b>Explicación</b></b>:
</p>
<ul class="org-ul">
<li><code>:ensure t</code>: Instala <code>magit</code> si no está presente.</li>
<li><code>:bind</code>: Asigna la tecla <code>C-x g</code> para abrir <code>magit-status</code>, la ventana principal de Magit.</li>
<li><code>:config</code>: Personaliza cómo se muestran las ventanas de Magit (en este caso, ocupando toda la pantalla).</li>
<li><b>Carga diferida</b>: Por defecto, `use-package` no carga Magit hasta que uses <code>C-x g</code>, lo que acelera el inicio de Emacs.</li>
</ul>

<p>
Guarda, evalúa (<code>M-x eval-buffer</code>) y prueba presionando <code>C-x g</code> en un proyecto con Git. Verás una interfaz limpia para gestionar commits, ramas y más.
</p>
</div>
</div>
<div id="outline-container-org4bc1bbf" class="outline-2">
<h2 id="org4bc1bbf">Paso 5: Personalización Avanzada con use-package</h2>
<div class="outline-text-2" id="text-org4bc1bbf">
<p>
Ahora que entiendes lo básico, exploremos opciones avanzadas de `use-package` para hacer tu configuración más poderosa.
</p>

<p>
<b><b>Carga condicional</b></b>:
Supongamos que quieres cargar el paquete <code>org</code> (para Org-mode) solo si estás editando un archivo `.org`. Usa esto:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:mode</span> (<span style="color: #a44185;">"\\.org\\'"</span> . org-mode)
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-startup-folded t)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-hide-emphasis-markers t))
</pre>
</div>

<ul class="org-ul">
<li><code>:mode</code>: Activa <code>org-mode</code> automáticamente para archivos con extensión `.org`.</li>
<li><code>:config</code>: Personaliza Org-mode (por ejemplo, oculta marcadores de formato como * o /).</li>
</ul>

<p>
<b><b>Atajos globales</b></b>:
Para añadir teclas globales, usa <code>:bind</code> en un bloque vacío:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">general</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (global-set-key (kbd <span style="color: #a44185;">"C-c t"</span>) 'org-todo))
</pre>
</div>

<p>
<b><b>Carga diferida con comandos</b></b>:
Para paquetes que solo usas ocasionalmente, como <code>helm</code>, configura la carga al invocar un comando:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">helm</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:commands</span> helm-M-x
  <span style="color: #dc3eb7;">:bind</span> ((<span style="color: #a44185;">"M-x"</span> . helm-M-x)))
</pre>
</div>

<ul class="org-ul">
<li><code>:commands</code>: Solo carga <code>helm</code> cuando ejecutas <code>helm-M-x</code>.</li>
<li><code>:bind</code>: Reemplaza el <code>M-x</code> estándar con la versión de Helm.</li>
</ul>
</div>
</div>
<div id="outline-container-org0421550" class="outline-2">
<h2 id="org0421550">Consejos para Mantener tu Configuración Limpia</h2>
<div class="outline-text-2" id="text-org0421550">
<ol class="org-ol">
<li><p>
<b><b>Organiza tu init.el</b></b>:
Divide tu archivo en secciones con comentarios:
</p>

<div class="org-src-container">
<pre class="src src-elisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Paquetes de interfaz</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">ivy</span> ...)
<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Paquetes de productividad</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org</span> ...)
</pre>
</div></li>

<li><p>
<b><b>Usa :diminish o :delight</b></b>:
Algunos paquetes llenan la barra de modos. Oculta sus nombres:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">diminish</span>
  <span style="color: #dc3eb7;">:ensure</span> t)
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">ivy</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:diminish</span> ivy-mode)
</pre>
</div></li>

<li><b><b>Prueba tu configuración</b></b>:
Evalúa bloques individuales con <code>C-c C-c</code> (en Org-mode) o <code>M-x eval-region</code> para evitar errores.</li>

<li><b><b>Haz respaldo</b></b>:
Guarda tu <code>init.el</code> en un repositorio Git para no perder tu configuración.</li>
</ol>
</div>
</div>
<div id="outline-container-org3efc4b1" class="outline-2">
<h2 id="org3efc4b1">Errores Comunes y Cómo Solucionarlos</h2>
<div class="outline-text-2" id="text-org3efc4b1">
<ul class="org-ul">
<li><b><b>"Paquete no encontrado"</b></b>:
Asegúrate de que <code>package-refresh-contents</code> se ejecute al menos una vez (<code>M-x package-refresh-contents</code>).</li>
<li><b><b>Emacs inicia lento</b></b>:
Usa <code>:defer t</code> o <code>:commands</code> en paquetes pesados para retrasar su carga.</li>
<li><b><b>Configuraciones no aplicadas</b></b>:
Verifica que estás guardando (<code>C-x C-s</code>) y evaluando (<code>M-x eval-buffer</code>) tu <code>init.el</code>.</li>
<li><b><b>Errores de sintaxis</b></b>:
Usa <code>M-x check-parens</code> para encontrar paréntesis desbalanceados en tu código.</li>
</ul>
</div>
</div>
<div id="outline-container-orge9202f2" class="outline-2">
<h2 id="orge9202f2">Conclusión</h2>
<div class="outline-text-2" id="text-orge9202f2">
<p>
¡Felicidades! Ahora sabes cómo configurar `use-package` para gestionar paquetes en Emacs como un profesional. Hemos cubierto desde la instalación básica hasta ejemplos prácticos con Ivy, Magit y Org-mode, además de trucos avanzados para personalizar tu flujo de trabajo. Con `use-package`, tu configuración será más limpia, rápida y fácil de mantener.
</p>

<p>
Si quieres explorar más, prueba estos paquetes con `use-package`:
</p>
<ul class="org-ul">
<li><code>which-key</code>: Muestra sugerencias de teclas.</li>
<li><code>company</code>: Autocompletado para código.</li>
<li><code>org-roam</code>: Notas interconectadas al estilo Zettelkasten.</li>
</ul>

<p>
¿Tienes preguntas o quieres un tutorial sobre otro aspecto de Emacs? Déjame un comentario en el blog o prueba estos comandos en tu Emacs y comparte tu experiencia. ¡Que disfrutes personalizando tu Emacs con esteroides!
</p>
</div>
</div>
<div id="outline-container-org8c0a183" class="outline-2">
<h2 id="org8c0a183">Recursos Adicionales</h2>
<div class="outline-text-2" id="text-org8c0a183">
<ul class="org-ul">
<li>Documentación oficial de `use-package`: <a href="https://github.com/jwiegley/use-package">GitHub - use-package</a></li>
<li>Tutoriales de Emacs: <a href="https://www.gnu.org/software/emacs/manual/">Manual de Emacs</a></li>
<li>Comunidad: <a href="https://www.reddit.com/r/emacs/">r/emacs</a> y <a href="https://emacs.stackexchange.com/">Emacs StackExchange</a></li>
</ul>

<div class="org-src-container">
<pre class="src src-elisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">&#161;Sigue hackeando y que la fuerza de Emacs est&#233; contigo!</span>
</pre>
</div>

<p>
&lt;!&#x2013; SEO-TIPS &#x2013;&gt;
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutorial.html">tutorial</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-use-package.html">use-package</a> </div>]]></description>
  <category><![CDATA[tutorial]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[use-package]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-13-tutorial-emacs-c-mo-configurar-use-package-para-gestionar-paquetes-como-un-profesional.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-13-tutorial-emacs-c-mo-configurar-use-package-para-gestionar-paquetes-como-un-profesional.html</guid>
  <pubDate>Sun, 13 Apr 2025 00:00:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Cronología y Desarrollo de Emacs]]></title>
  <description><![CDATA[
<div id="outline-container-orga125495" class="outline-2">
<h2 id="orga125495">Cronología y Desarrollo de Emacs</h2>
<div class="outline-text-2" id="text-orga125495">
</div>
<div id="outline-container-orgea9a2db" class="outline-3">
<h3 id="orgea9a2db">Orígenes (1970s)</h3>
<div class="outline-text-3" id="text-orgea9a2db">
<ul class="org-ul">
<li>1976: Richard Stallman crea el primer Emacs en MIT.
<ul class="org-ul">
<li>Escrito en TECO (Text Editor and Corrector).</li>
<li>Diseñado como un editor extensible para el sistema ITS.</li>
</ul></li>
<li>Características iniciales:
<ul class="org-ul">
<li>Macros en TECO para personalización.</li>
<li>Comandos interactivos básicos.</li>
</ul></li>
<li>Contexto: No existía el concepto de software libre aún.</li>
</ul>
</div>
</div>
<div id="outline-container-org5957d97" class="outline-3">
<h3 id="org5957d97">Emacs en Lisp (1980s)</h3>
<div class="outline-text-3" id="text-org5957d97">
<ul class="org-ul">
<li>1981: Stallman reescribe Emacs en Lisp (Gosling Emacs).
<ul class="org-ul">
<li>Introducción de Mocklisp, un dialecto inicial de Lisp.</li>
<li>Mayor extensibilidad mediante scripts.</li>
</ul></li>
<li>1984: Lanzamiento de GNU Emacs.
<ul class="org-ul">
<li>Primer proyecto oficial de GNU.</li>
<li>Escrito en C con Emacs Lisp (Elisp) como lenguaje de extensión.</li>
<li>Licencia libre (precursora de GPL).</li>
</ul></li>
<li>Características clave:
<ul class="org-ul">
<li>Modos mayores/menores para diferentes lenguajes.</li>
<li>Integración con herramientas Unix (shell, compiladores).</li>
<li>Sistema de ayuda interactivo (`C-h`).</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org0ecfff0" class="outline-3">
<h3 id="org0ecfff0">Consolidación y Expansión (1990s)</h3>
<div class="outline-text-3" id="text-org0ecfff0">
<ul class="org-ul">
<li>1991: Emacs 19.
<ul class="org-ul">
<li>Soporte para múltiples plataformas (Unix, VMS, Windows).</li>
<li>Introducción de faces para resaltado de sintaxis.</li>
</ul></li>
<li>1994: XEmacs se separa de GNU Emacs.
<ul class="org-ul">
<li>Enfocado en interfaces gráficas y características experimentales.</li>
<li>Divergencia en la comunidad (XEmacs vs GNU Emacs).</li>
</ul></li>
<li>Características notables:
<ul class="org-ul">
<li>Paquetes externos comienzan a surgir.</li>
<li>Soporte para internacionalización (MULE).</li>
<li>Buffers múltiples y ventanas.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-orgd090a72" class="outline-3">
<h3 id="orgd090a72">Modernización (2000s)</h3>
<div class="outline-text-3" id="text-orgd090a72">
<ul class="org-ul">
<li>2008: Emacs 23.
<ul class="org-ul">
<li>Soporte nativo para Unicode.</li>
<li>Integración con sistemas gráficos (X11, Windows, macOS).</li>
<li>Primeros pasos hacia entornos multimedia.</li>
</ul></li>
<li>Características:
<ul class="org-ul">
<li>Modo Org (2003, oficial en 2008): gestión de tareas, notas y literacidad.</li>
<li>Personalización avanzada mediante temas.</li>
<li>Paquetes como `package.el` (gestor de paquetes inicial).</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org98765a1" class="outline-3">
<h3 id="org98765a1">Emacs Actual (2010s - 2025)</h3>
<div class="outline-text-3" id="text-org98765a1">
<ul class="org-ul">
<li>2012: Emacs 24.
<ul class="org-ul">
<li>Gestor de paquetes oficial (`package.el`).</li>
<li>Soporte para temas gráficos avanzados.</li>
<li>Integración con servidores de paquetes (MELPA, ELPA).</li>
</ul></li>
<li>2014-2016: Surgimiento de distribuciones modernas.
<ul class="org-ul">
<li>Spacemacs (2014): Combina Emacs con Vim, enfoque en ergonomía.</li>
<li>Doom Emacs (2016): Optimizado para rendimiento y simplicidad.</li>
</ul></li>
<li>2019: Emacs 27.
<ul class="org-ul">
<li>JSON nativo y mejor rendimiento.</li>
<li>Soporte para pestañas.</li>
</ul></li>
<li>2023: Emacs 29.
<ul class="org-ul">
<li>Compilación nativa de Elisp (más velocidad).</li>
<li>Integración con LSP (Language Server Protocol) para desarrollo moderno.</li>
</ul></li>
<li>Características actuales:
<ul class="org-ul">
<li>Ecosistema masivo de paquetes (MELPA, NonGNU ELPA).</li>
<li>Modo Org evolucionado: planificación, publicación, código ejecutable.</li>
<li>Integración con Git, Magit (interfaz para Git).</li>
<li>Soporte para entornos remotos (Tramp).</li>
<li>Comunidades activas: Spacemacs, Doom Emacs.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-orgf2e37c5" class="outline-3">
<h3 id="orgf2e37c5">Futuro (Especulativo)</h3>
<div class="outline-text-3" id="text-orgf2e37c5">
<ul class="org-ul">
<li>Mayor integración con IA y herramientas modernas.</li>
<li>Mejoras en rendimiento (compilación nativa, multihilo).</li>
<li>Posible soporte oficial para entornos web (Emacs en navegadores).</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org4e6d040" class="outline-2">
<h2 id="org4e6d040">Características Clave por Década</h2>
<div class="outline-text-2" id="text-org4e6d040">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Década</th>
<th scope="col" class="org-left">Hitos Principales</th>
<th scope="col" class="org-left">Características Innovadoras</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">1970s</td>
<td class="org-left">Creación en TECO</td>
<td class="org-left">Extensibilidad básica, macros</td>
</tr>

<tr>
<td class="org-left">1980s</td>
<td class="org-left">GNU Emacs, Elisp</td>
<td class="org-left">Modos, integración Unix, licencia libre</td>
</tr>

<tr>
<td class="org-left">1990s</td>
<td class="org-left">Emacs 19, XEmacs</td>
<td class="org-left">Resaltado de sintaxis, internacionalización</td>
</tr>

<tr>
<td class="org-left">2000s</td>
<td class="org-left">Emacs 23, Unicode</td>
<td class="org-left">Modo Org, temas gráficos</td>
</tr>

<tr>
<td class="org-left">2010s</td>
<td class="org-left">Emacs 24-27, gestor de paquetes</td>
<td class="org-left">Paquetes modernos, Spacemacs, Doom Emacs</td>
</tr>

<tr>
<td class="org-left">2020s</td>
<td class="org-left">Emacs 29, compilación nativa</td>
<td class="org-left">LSP, rendimiento mejorado, ecosistema amplio</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org63019d6" class="outline-2">
<h2 id="org63019d6">Diagrama de Evolución con Desarrollos Paralelos (PlantUML)</h2>
<div class="outline-text-2" id="text-org63019d6">

<figure id="orgaad033a">
<img src="images/emacs_evolution_parallel.png" alt="emacs_evolution_parallel.png">

</figure>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-cronología.html">cronología</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-evolución.html">evolución</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[cronología]]></category>
  <category><![CDATA[evolución]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-11-cronolog%C3%ADa-y-desarrollo-de-emacs.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-11-cronolog%C3%ADa-y-desarrollo-de-emacs.html</guid>
  <pubDate>Fri, 11 Apr 2025 22:26:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Emacs con Esteroides: Elisp, el Poder Detrás de Emacs]]></title>
  <description><![CDATA[
<div id="outline-container-org9baf7eb" class="outline-2">
<h2 id="org9baf7eb">Introducción</h2>
<div class="outline-text-2" id="text-org9baf7eb">
<p>
Si Emacs es un titán del software libre, Emacs Lisp (Elisp) es el corazón que lo mantiene latiendo. Este lenguaje de programación, creado específicamente para Emacs, es lo que permite a los usuarios transformar un editor de texto en una herramienta <b>con esteroides</b>: personalizable, extensible y prácticamente ilimitada. En este post, exploraremos el origen de Elisp, su evolución cronológica, su uso práctico y cómo sigue siendo la clave del poder de Emacs en 2025. Incluiremos un diagrama cronológico para visualizar su desarrollo.
</p>
</div>
</div>
<div id="outline-container-orge9b2b0a" class="outline-2">
<h2 id="orge9b2b0a">Origen de Emacs Lisp</h2>
<div class="outline-text-2" id="text-orge9b2b0a">
<p>
Elisp nació junto con GNU Emacs, como una evolución de las ideas de extensibilidad que Richard Stallman (RMS) había explorado en el Emacs original.
</p>

<ul class="org-ul">
<li><b>Contexto</b>: En los años 70, el Emacs original usaba macros TECO, un sistema limitado y poco legible. Stallman buscaba algo más potente y accesible.</li>
<li><b>Nacimiento</b>: En 1984, con el lanzamiento de GNU Emacs, Stallman introdujo Elisp como un dialecto de Lisp adaptado para Emacs.</li>
<li><b>Filosofía</b>: Elisp fue diseñado para ser interpretado en tiempo real, permitiendo a los usuarios modificar Emacs mientras lo usaban, un concepto revolucionario en su época.</li>
</ul>
</div>
</div>
<div id="outline-container-org53f0ca8" class="outline-2">
<h2 id="org53f0ca8">Características Clave de Elisp</h2>
<div class="outline-text-2" id="text-org53f0ca8">
<p>
Elisp es un dialecto de Lisp, pero con peculiaridades que lo hacen único:
</p>
<ul class="org-ul">
<li><b>Dinámico</b>: Variables y funciones se pueden redefinir al vuelo.</li>
<li><b>Interactivo</b>: Usa el bucle REPL (`ielm`) para probar código en vivo.</li>
<li><b>Integrado</b>: Todo en Emacs (comandos, modos, configuraciones) está escrito o accesible vía Elisp.</li>
<li><b>Extensible</b>: Los usuarios pueden añadir funcionalidades sin tocar el código fuente.</li>
</ul>
</div>
</div>
<div id="outline-container-org3bd4a51" class="outline-2">
<h2 id="org3bd4a51">Evolución de Emacs Lisp</h2>
<div class="outline-text-2" id="text-org3bd4a51">
<p>
Elisp ha evolucionado junto con Emacs, adaptándose a nuevas necesidades y tecnologías. Aquí están las etapas clave:
</p>
</div>
<div id="outline-container-org23fd31d" class="outline-3">
<h3 id="org23fd31d">Elisp en GNU Emacs (1984)</h3>
<div class="outline-text-3" id="text-org23fd31d">
<ul class="org-ul">
<li>Primera versión integrada en GNU Emacs.</li>
<li>Funcionalidades: Comandos básicos, personalización simple (ej. keybindings).</li>
<li>Limitaciones: Sin soporte gráfico, herramientas rudimentarias.</li>
</ul>
</div>
</div>
<div id="outline-container-org5d29553" class="outline-3">
<h3 id="org5d29553">Soporte Gráfico y Nuevas Librerías (1990s)</h3>
<div class="outline-text-3" id="text-org5d29553">
<ul class="org-ul">
<li>Con la llegada de XEmacs y mejoras en GNU Emacs, Elisp incorporó soporte para interfaces gráficas (X11).</li>
<li>Nuevas funciones: Manipulación de ventanas, menús y barras de herramientas.</li>
</ul>
</div>
</div>
<div id="outline-container-org13c0849" class="outline-3">
<h3 id="org13c0849">Elisp Moderno (2000s)</h3>
<div class="outline-text-3" id="text-org13c0849">
<ul class="org-ul">
<li>Mejoras en rendimiento y estabilidad.</li>
<li>Hitos:
<ul class="org-ul">
<li>2008: Soporte Unicode en Emacs 23, ampliando las capacidades de Elisp con texto internacional.</li>
<li>2012: Introducción de ELPA, facilitando la distribución de paquetes en Elisp.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org789a1a3" class="outline-3">
<h3 id="org789a1a3">Compilación Nativa y Más Allá (2020s)</h3>
<div class="outline-text-3" id="text-org789a1a3">
<ul class="org-ul">
<li>2021: Emacs 28 introduce compilación nativa, acelerando el rendimiento de Elisp.</li>
<li>2025: Emacs 29 mejora el soporte para concurrencia ligera y JSON nativo.</li>
<li>Tendencia: Integración con herramientas modernas (ej. LSP, IA).</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org0990ef8" class="outline-2">
<h2 id="org0990ef8">Cronología: Diagrama de la Evolución de Elisp</h2>
<div class="outline-text-2" id="text-org0990ef8">

<figure id="orga1a6e7d">
<img src="images/elisp-timeline.png" alt="elisp-timeline.png">

</figure>

<ul class="org-ul">
<li><b>Instrucción</b>: Renderiza este diagrama con PlantUML en Emacs para visualizar la evolución de Elisp. Requiere `plantuml-mode`.</li>
</ul>
</div>
</div>
<div id="outline-container-orgbcb077e" class="outline-2">
<h2 id="orgbcb077e">Uso Práctico de Elisp</h2>
<div class="outline-text-2" id="text-orgbcb077e">
<p>
Elisp es el pegamento que une las funcionalidades de Emacs. Aquí algunos ejemplos de su poder:
</p>
</div>
<div id="outline-container-orgbc78696" class="outline-3">
<h3 id="orgbc78696">Personalización Básica</h3>
<div class="outline-text-3" id="text-orgbc78696">
<ul class="org-ul">
<li><p>
Cambiar un atajo de teclado:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(global-set-key (kbd <span style="color: #a44185;">"C-c h"</span>) 'hello-world)
(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">hello-world</span> ()
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (message <span style="color: #a44185;">"&#161;Hola, Emacs con Esteroides!"</span>))
</pre>
</div></li>
<li>Resultado: Presiona `C-c h` y verás un mensaje en la minibuffer.</li>
</ul>
</div>
</div>
<div id="outline-container-org43a211f" class="outline-3">
<h3 id="org43a211f">Creación de Comandos Interactivos</h3>
<div class="outline-text-3" id="text-org43a211f">
<ul class="org-ul">
<li><p>
Ejemplo: Contar palabras en una región:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">count-words-region</span> (start end)
  (<span style="color: #219fd5; font-style: italic;">interactive</span> <span style="color: #a44185;">"r"</span>)
  (message <span style="color: #a44185;">"La regi&#243;n tiene %d palabras"</span> 
           (count-words start end)))
</pre>
</div></li>
<li>Uso: Selecciona texto y ejecuta `M-x count-words-region`.</li>
</ul>
</div>
</div>
<div id="outline-container-orgf725f4f" class="outline-3">
<h3 id="orgf725f4f">Automatización con Org-mode</h3>
<div class="outline-text-3" id="text-orgf725f4f">
<ul class="org-ul">
<li><p>
Generar una tabla dinámica:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">org-insert-date-table</span> ()
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (org-table-create <span style="color: #a44185;">"3x2"</span>)
  (insert <span style="color: #a44185;">"| Fecha | Tarea |\n|-+-|\n| "</span> (format-time-string <span style="color: #a44185;">"%Y-%m-%d"</span>) <span style="color: #a44185;">" | Pendiente |"</span>))
</pre>
</div></li>
<li>Uso: Ejecuta `M-x org-insert-date-table` en un archivo Org.</li>
</ul>
</div>
</div>
<div id="outline-container-orge0d31ea" class="outline-3">
<h3 id="orge0d31ea">Integración Moderna</h3>
<div class="outline-text-3" id="text-orge0d31ea">
<ul class="org-ul">
<li><p>
Conectar con una API (ejemplo ficticio):
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">fetch-weather</span> ()
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (url-retrieve <span style="color: #a44185;">"http://api.weather.example"</span>
                (<span style="color: #219fd5; font-style: italic;">lambda</span> (status)
                  (message <span style="color: #a44185;">"Temperatura: %s"</span> (json-read)))))
</pre>
</div></li>
<li>Nota: Requiere ajustes para una API real.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orga46fc4b" class="outline-2">
<h2 id="orga46fc4b">Elisp en 2025: Poder y Relevancia</h2>
<div class="outline-text-2" id="text-orga46fc4b">
<ul class="org-ul">
<li><b>Rendimiento</b>: La compilación nativa ha hecho que Elisp sea más rápido que nunca.</li>
<li><b>Ecosistema</b>: Miles de paquetes en MELPA y ELPA, todos escritos en Elisp.</li>
<li><b>Futuro</b>: Integración con IA (ej. asistentes como Copilot) y soporte para paradigmas modernos como programación funcional ligera.</li>
</ul>
</div>
</div>
<div id="outline-container-orged63096" class="outline-2">
<h2 id="orged63096">Tareas para el Lector</h2>
<div class="outline-text-2" id="text-orged63096">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Prueba el comando `hello-world` en tu Emacs.</li>
<li class="off"><code>[&#xa0;]</code> Crea tu propio comando en Elisp y compártelo en los comentarios.</li>
<li class="off"><code>[&#xa0;]</code> Renderiza el diagrama cronológico con PlantUML.</li>
</ul>
</div>
</div>
<div id="outline-container-org6a5fa23" class="outline-2">
<h2 id="org6a5fa23">Referencias</h2>
<div class="outline-text-2" id="text-org6a5fa23">
<ul class="org-ul">
<li>Stallman, R. (1987). "GNU Emacs Lisp Reference Manual". GNU Project.</li>
<li>Chassell, R. (2009). "An Introduction to Programming in Emacs Lisp". Free Software Foundation.</li>
<li>Blog: "Elisp: The Magic of Emacs" (2023). Disponible en: <a href="https://emacsrocks.com/elisp-magic">https://emacsrocks.com/elisp-magic</a>.</li>
<li>GNU Emacs. (2025). "Emacs Lisp Documentation". <a href="https://www.gnu.org/software/emacs/elisp">https://www.gnu.org/software/emacs/elisp</a>.</li>
</ul>
</div>
</div>
<div id="outline-container-org29af6b7" class="outline-2">
<h2 id="org29af6b7">Conclusión</h2>
<div class="outline-text-2" id="text-org29af6b7">
<p>
Emacs Lisp es el alma de Emacs, un lenguaje que transforma un editor en una plataforma <b>con esteroides</b>. Desde sus inicios en 1984 hasta las mejoras de 2025, Elisp sigue siendo el secreto detrás de la flexibilidad y el poder de Emacs. ¿Listo para programar tu propio Emacs? Abre un buffer, escribe `(message "¡Empecemos!")` y evalúa con `C-x C-e`.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-elisp.html">elisp</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-programacion.html">programacion</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-software-libre.html">software-libre</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-cronologia.html">cronologia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[elisp]]></category>
  <category><![CDATA[programacion]]></category>
  <category><![CDATA[software-libre]]></category>
  <category><![CDATA[cronologia]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-10-emacs-con-esteroides:-elisp,-el-poder-detr%C3%A1s-de-emacs.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-10-emacs-con-esteroides:-elisp,-el-poder-detr%C3%A1s-de-emacs.html</guid>
  <pubDate>Thu, 10 Apr 2025 11:00:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Emacs con Esteroides: Origen, Evolución y Cronología de un Titán del Código]]></title>
  <description><![CDATA[
<div id="outline-container-org9f74d10" class="outline-2">
<h2 id="org9f74d10">Introducción</h2>
<div class="outline-text-2" id="text-org9f74d10">
<p>
Emacs no es solo un editor de texto; es una filosofía, una herramienta viva y un ecosistema que ha evolucionado durante casi cinco décadas. Desde sus humildes comienzos en los años 70 hasta su papel actual como un entorno de productividad <b>con esteroides</b>, Emacs ha dejado una huella imborrable en el mundo del software. En este post, exploraremos su origen, su evolución cronológica, su uso práctico y cómo sigue siendo relevante en 2025. Además, incluiremos un diagrama cronológico para visualizar su historia.
</p>
</div>
</div>
<div id="outline-container-orga97026a" class="outline-2">
<h2 id="orga97026a">Origen de Emacs</h2>
<div class="outline-text-2" id="text-orga97026a">
<p>
Emacs nació en el corazón del MIT, en una era donde los hackers no eran villanos, sino innovadores apasionados por el código. Su creador, Richard Stallman (RMS), lo concibió como una herramienta extensible y personalizable, inspirada por el editor TECO.
</p>

<ul class="org-ul">
<li><b>Contexto</b>: En los años 70, los editores de texto eran rígidos y limitados. TECO, aunque poderoso, usaba comandos crípticos.</li>
<li><b>Nacimiento</b>: En 1976, Stallman desarrolló la primera versión de Emacs como un conjunto de macros para TECO, añadiendo capacidades de edición en tiempo real.</li>
<li><b>Filosofía</b>: Emacs fue diseñado para ser un editor <b>vivo</b>, donde los usuarios pudieran modificarlo mientras lo usaban, sentando las bases del software libre.</li>
</ul>
</div>
</div>
<div id="outline-container-org1b6e508" class="outline-2">
<h2 id="org1b6e508">Evolución de Emacs</h2>
<div class="outline-text-2" id="text-org1b6e508">
<p>
La historia de Emacs es una mezcla de innovación técnica, bifurcaciones y comunidad. A continuación, desglosamos su evolución en etapas clave.
</p>
</div>
<div id="outline-container-org520fa9a" class="outline-3">
<h3 id="org520fa9a">Emacs Original (1976)</h3>
<div class="outline-text-3" id="text-org520fa9a">
<ul class="org-ul">
<li>Primera implementación en TECO.</li>
<li>Características: Edición en tiempo real, comandos básicos.</li>
<li>Limitaciones: Dependiente de TECO, no portátil.</li>
</ul>
</div>
</div>
<div id="outline-container-orge4c5365" class="outline-3">
<h3 id="orge4c5365">Gosling Emacs (1981)</h3>
<div class="outline-text-3" id="text-orge4c5365">
<ul class="org-ul">
<li>James Gosling (futuro creador de Java) escribió una versión en C, más portable.</li>
<li>Primer Emacs independiente de TECO.</li>
<li>Controversia: Se volvió propietario tras ser comprado por UniPress.</li>
</ul>
</div>
</div>
<div id="outline-container-orgadadc88" class="outline-3">
<h3 id="orgadadc88">GNU Emacs (1984)</h3>
<div class="outline-text-3" id="text-orgadadc88">
<ul class="org-ul">
<li>Stallman lanzó GNU Emacs como respuesta al Gosling Emacs propietario.</li>
<li>Hito: Primera versión del proyecto GNU, bajo la licencia GPL.</li>
<li>Innovación: Introducción de Emacs Lisp como lenguaje de extensión.</li>
</ul>
</div>
</div>
<div id="outline-container-org24055a4" class="outline-3">
<h3 id="org24055a4">Lucid Emacs / XEmacs (1991)</h3>
<div class="outline-text-3" id="text-org24055a4">
<ul class="org-ul">
<li>Bifurcación de GNU Emacs por diferencias en desarrollo.</li>
<li>Enfoque: Mejor integración con interfaces gráficas (X11).</li>
<li>Resultado: Competencia que enriqueció ambos proyectos, aunque XEmacs perdió relevancia con el tiempo.</li>
</ul>
</div>
</div>
<div id="outline-container-orgd1aa5b6" class="outline-3">
<h3 id="orgd1aa5b6">Emacs Moderno (2000s - 2025)</h3>
<div class="outline-text-3" id="text-orgd1aa5b6">
<ul class="org-ul">
<li>Consolidación de GNU Emacs como estándar.</li>
<li>Hitos:
<ul class="org-ul">
<li>2008: Soporte Unicode completo (Emacs 23).</li>
<li>2012: Paquetes con ELPA (Emacs Lisp Package Archive).</li>
<li>2020s: Mejoras en rendimiento (nativo JSON, compilación nativa en Emacs 28 y 29).</li>
</ul></li>
<li>Uso actual: Desde edición de código hasta gestión de correo, Org-mode y más.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgbbe99b8" class="outline-2">
<h2 id="orgbbe99b8">Cronología: Diagrama de la Evolución de Emacs</h2>
<div class="outline-text-2" id="text-orgbbe99b8">

<figure id="orga007b3c">
<img src="images/emacs-timeline.png" alt="emacs-timeline.png">

</figure>

<ul class="org-ul">
<li><b>Instrucción</b>: Renderiza este diagrama con PlantUML en Emacs para ver la línea temporal. Muestra la progresión y las bifurcaciones clave.</li>
</ul>
</div>
</div>
<div id="outline-container-org8b4976e" class="outline-2">
<h2 id="org8b4976e">Uso de Emacs: Más Allá de un Editor</h2>
<div class="outline-text-2" id="text-org8b4976e">
<p>
Emacs ha trascendido su propósito original gracias a su extensibilidad. Aquí algunos usos emblemáticos:
</p>
</div>
<div id="outline-container-orge85319a" class="outline-3">
<h3 id="orge85319a">Edición de Código</h3>
<div class="outline-text-3" id="text-orge85319a">
<ul class="org-ul">
<li>Lenguajes soportados: Prácticamente todos, gracias a modos como `python-mode`, `lsp-mode`, etc.</li>
<li><p>
Ejemplo: Configuración para Python:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">python-mode</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:mode</span> <span style="color: #a44185;">"\\.py\\'"</span>
  <span style="color: #dc3eb7;">:hook</span> (python-mode . lsp))
</pre>
</div></li>
</ul>
</div>
</div>
<div id="outline-container-orgd0392e4" class="outline-3">
<h3 id="orgd0392e4">Org-mode: Productividad con Esteroides</h3>
<div class="outline-text-3" id="text-orgd0392e4">
<ul class="org-ul">
<li>Gestión de tareas, notas, agendas y más.</li>
<li>Ejemplo: Este post está escrito en Org-mode.</li>
<li>Popularidad: Desde académicos hasta desarrolladores lo usan para organizar su vida.</li>
</ul>
</div>
</div>
<div id="outline-container-org9aaa90c" class="outline-3">
<h3 id="org9aaa90c">Correo, IRC y Más</h3>
<div class="outline-text-3" id="text-org9aaa90c">
<ul class="org-ul">
<li>Herramientas como `mu4e` (correo) o `erc` (chat IRC) convierten a Emacs en un centro de comunicaciones.</li>
<li>Filosofía: "Todo en un solo lugar".</li>
</ul>
</div>
</div>
<div id="outline-container-org3bbe518" class="outline-3">
<h3 id="org3bbe518">Personalización</h3>
<div class="outline-text-3" id="text-org3bbe518">
<ul class="org-ul">
<li>Emacs Lisp permite a cada usuario moldear su entorno.</li>
<li><p>
Ejemplo: Tema oscuro básico:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(load-theme 'wombat t)
</pre>
</div></li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org9129c44" class="outline-2">
<h2 id="org9129c44">Emacs en 2025: Relevancia y Futuro</h2>
<div class="outline-text-2" id="text-org9129c44">
<ul class="org-ul">
<li><b>Comunidad</b>: Sigue activa, con actualizaciones regulares (Emacs 29 en desarrollo).
<ul class="org-ul">
<li><b>Tendencias</b>: Integración con IA (ej. Copilot-mode), soporte para herramientas modernas (Docker, Git).</li>
<li><b>Visión</b>: Seguirá siendo el editor elegido por quienes valoran la libertad y el control total.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org0665f6c" class="outline-2">
<h2 id="org0665f6c">Tareas para el Lector</h2>
<div class="outline-text-2" id="text-org0665f6c">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Instalar Emacs y probar Org-mode con este archivo.</li>
<li class="off"><code>[&#xa0;]</code> Renderizar el diagrama cronológico con PlantUML.</li>
<li class="off"><code>[&#xa0;]</code> Explorar un paquete nuevo (sugerencia: `magit` para Git).</li>
</ul>
</div>
</div>
<div id="outline-container-orge7374cd" class="outline-2">
<h2 id="orge7374cd">Referencias</h2>
<div class="outline-text-2" id="text-orge7374cd">
<ul class="org-ul">
<li>Stallman, R. (1981). "EMACS: The Extensible, Customizable Display Editor". MIT AI Lab Memo.</li>
<li>GNU Project. (2025). "GNU Emacs Manual". Disponible en: <a href="https://www.gnu.org/software/emacs/manual/">https://www.gnu.org/software/emacs/manual/</a>.</li>
<li>Chacon, S. (2018). "A Brief History of Emacs". Blog de GitHub.</li>
<li>FSF. (2024). "Emacs Timeline". Free Software Foundation Archives.</li>
</ul>
</div>
</div>
<div id="outline-container-org76cb1ad" class="outline-2">
<h2 id="org76cb1ad">Conclusión</h2>
<div class="outline-text-2" id="text-org76cb1ad">
<p>
Emacs es más que un editor: es un testimonio del poder del software libre y la creatividad humana. Desde 1976 hasta 2025, ha evolucionado de un conjunto de macros a un entorno <b>con esteroides</b> que sigue inspirando. ¿Listo para sumergirte? Abre Emacs, carga este archivo y empieza a explorar.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-historia.html">historia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-software-libre.html">software-libre</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-cronologia.html">cronologia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[historia]]></category>
  <category><![CDATA[software-libre]]></category>
  <category><![CDATA[cronologia]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-10--emacs-con-esteroides:-origen,-evoluci%C3%B3n-y-cronolog%C3%ADa-de-un-tit%C3%A1n-del-c%C3%B3digo.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-10--emacs-con-esteroides:-origen,-evoluci%C3%B3n-y-cronolog%C3%ADa-de-un-tit%C3%A1n-del-c%C3%B3digo.html</guid>
  <pubDate>Thu, 10 Apr 2025 10:49:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Analizando Vulnerabilidades como un Pro: Un Script Potenciado para Emacs Org-mode (ii)]]></title>
  <description><![CDATA[
<div id="outline-container-org5870351" class="outline-2">
<h2 id="org5870351">Introducción</h2>
<div class="outline-text-2" id="text-org5870351">
<p>
¿Alguna vez te has preguntado qué tan seguro está tu laptop? En este post, te llevo de la mano para transformar un script básico de detección de vulnerabilidades en una herramienta poderosa que no solo encuentra CVEs, sino que también evalúa amenazas y las presenta en el glorioso formato Org-mode de Emacs. ¡Prepárate para darle esteroides a tu análisis de seguridad!
</p>

<p>
El reto comenzó con un script que escaneaba paquetes en busca de vulnerabilidades usando la API de Vulners. Pero queríamos más: un reporte detallado con niveles de amenaza y estadísticas, todo listo para brillar en Emacs. Aquí te cuento cómo lo hice, cómo usarlo y qué resultados obtendrás.
</p>
</div>
</div>
<div id="outline-container-org5a48d84" class="outline-2">
<h2 id="org5a48d84">El Punto de Partida</h2>
<div class="outline-text-2" id="text-org5a48d84">
<p>
Primero, teníamos este script básico:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #219fd5; font-style: italic;">while</span> <span style="color: #1857a4;">IFS</span>= read -r line; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">nombre</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | awk '{print $1}'</span>)
    <span style="color: #1857a4;">version</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | awk '{print $2}'</span>)
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"[+] Buscando CVEs para: $nombre $version"</span>
    <span style="color: #1857a4;">query</span>=<span style="color: #a44185;">"${nombre}%20${version}"</span>
    <span style="color: #1857a4;">response</span>=$(<span style="color: #219fd5; font-weight: bold;">curl -s "https://vulners.com/api/v3/search/lucene/?query=$query&amp;size=3"</span>)
    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">... resto del script ...</span>
<span style="color: #219fd5; font-style: italic;">done</span> &lt; <span style="color: #a44185;">"$PACKAGE_LIST"</span>
</pre>
</div>

<p>
Este script lee una lista de paquetes, busca CVEs y genera un archivo con resultados. Funciona, pero le falta punch: no clasifica amenazas ni da detalles jugosos. ¡Hora de mejorarlo!
</p>
</div>
</div>
<div id="outline-container-org9083bb6" class="outline-2">
<h2 id="org9083bb6">Creación del Nuevo Script: Un Monstruo de Seguridad</h2>
<div class="outline-text-2" id="text-org9083bb6">
<p>
Tomé el output del script original y creé un nuevo beast que procesa los CVEs encontrados. Aquí está el resultado:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #1857a4;">OUTPUT</span>=<span style="color: #a44185;">"vulnerability_report.org"</span>
<span style="color: #1857a4;">INPUT_FILE</span>=<span style="color: #a44185;">"$1"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"#+TITLE: Reporte de Amenazas Actuales"</span> &gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"#+DATE: $(</span><span style="color: #219fd5; font-weight: bold;">date '+%Y-%m-%d %H:%M'</span><span style="color: #a44185;">)"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>

<span style="color: #219fd5; font-style: italic;">while</span> <span style="color: #1857a4;">IFS</span>= read -r line; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #219fd5; font-style: italic;">if</span> [[ <span style="color: #a44185;">"$line"</span> =~ ^<span style="color: #a44185;">\*\*</span> ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        <span style="color: #1857a4;">package_info</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | sed 's/\*\* //'</span>)
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** Paquete: $package_info"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"   :PROPERTIES:"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"   :ANALISIS: $(</span><span style="color: #219fd5; font-weight: bold;">date '+%Y-%m-%d'</span><span style="color: #a44185;">)"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"   :END:"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
    <span style="color: #219fd5; font-style: italic;">elif</span> [[ <span style="color: #a44185;">"$line"</span> =~ ^\s*-.*CVE-[0-9]{4}-[0-9]+ ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        <span style="color: #1857a4;">cve</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | grep -o 'CVE-[0-9]\{4\}-[0-9]\+'</span>)
        <span style="color: #1857a4;">response</span>=$(<span style="color: #219fd5; font-weight: bold;">curl -s "https://vulners.com/api/v3/search/id/?id=$cve"</span>)
        <span style="color: #1857a4;">severity</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$response" | grep -oP '"cvss_score":\s*"\K[0-9.]+' || echo "N/A"</span>)
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">... l&#243;gica de amenaza y detalles ...</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
    sleep 1
<span style="color: #219fd5; font-style: italic;">done</span> &lt; <span style="color: #a44185;">"$INPUT_FILE"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Estad&#237;sticas</span>
<span style="color: #1857a4;">critical</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "CR&#205;TICA" "$OUTPUT"</span>)
<span style="color: #1857a4;">medium</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "MEDIA" "$OUTPUT"</span>)
<span style="color: #1857a4;">low</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "BAJA" "$OUTPUT"</span>)
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"* Estad&#237;sticas"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Amenazas Cr&#237;ticas: $critical"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Amenazas Medias: $medium"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Amenazas Bajas: $low"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
</pre>
</div>
</div>
<div id="outline-container-org1138057" class="outline-3">
<h3 id="org1138057">¿Qué hace este script?**</h3>
<div class="outline-text-3" id="text-org1138057">
<ol class="org-ol">
<li>Toma el archivo generado por el script original como entrada.</li>
<li>Consulta detalles de cada CVE usando la API de Vulners.</li>
<li>Clasifica amenazas según el puntaje CVSS:
<ul class="org-ul">
<li>≥ 7.0: <b>CRÍTICA</b></li>
<li>≥ 4.0: <b>MEDIA</b></li>
<li>&lt; 4.0: <b>BAJA</b></li>
</ul></li>
<li>Genera un reporte en Org-mode con secciones, propiedades y estadísticas.</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-org514a1ad" class="outline-2">
<h2 id="org514a1ad">Cómo Usarlo</h2>
<div class="outline-text-2" id="text-org514a1ad">
<p>
Es tan fácil que hasta tu abuela podría ejecutarlo (si usa Emacs, claro):
</p>

<ol class="org-ol">
<li><p>
<b><b>Ejecuta el script original</b></b> para generar tu lista de vulnerabilidades:
</p>
<div class="org-src-container">
<pre class="src src-bash">./scan_vulnerabilities.sh &gt; vuln_output.txt
</pre>
</div></li>

<li><p>
<b><b>Lanza el nuevo script</b></b> pasándole el archivo generado:
</p>
<div class="org-src-container">
<pre class="src src-bash">./threat_analysis.sh vuln_output.txt
</pre>
</div></li>

<li><p>
<b><b>Abre el resultado en Emacs</b></b>:
</p>
<div class="org-src-container">
<pre class="src src-bash">emacs vulnerability_report.org
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-org945543c" class="outline-2">
<h2 id="org945543c">Características Estelares</h2>
<div class="outline-text-2" id="text-org945543c">
<ul class="org-ul">
<li><b><b>Formato Org-mode Nativo</b></b>: Listo para navegar con <code>C-c C-n</code> o exportar a HTML/PDF.</li>
<li><b><b>Clasificación de Amenazas</b></b>: Separa lo crítico de lo trivial.</li>
<li><b><b>Detalles Ricos</b></b>: Severidad, fechas, descripciones por CVE.</li>
<li><b><b>Estadísticas</b></b>: Resumen claro de cuántas amenazas enfrentas.</li>
<li><b><b>Personalizable</b></b>: Ajusta los umbrales de CVSS o añade más campos según necesites.</li>
</ul>
</div>
</div>
<div id="outline-container-org08709cc" class="outline-2">
<h2 id="org08709cc">Resultados que Obtendrás</h2>
<div class="outline-text-2" id="text-org08709cc">
<p>
El output es un archivo <code>vulnerability_report.org</code> que luce así:
</p>

<p>
#+BEGIN<sub>SRC</sub> org
</p>
</div>
</div>
<div id="outline-container-org9a0c987" class="outline-2">
<h2 id="org9a0c987">Resumen de Amenazas</h2>
<div class="outline-text-2" id="text-org9a0c987">
</div>
<div id="outline-container-org1389943" class="outline-3">
<h3 id="org1389943">Paquete: openssl 1.1.1</h3>
<div class="outline-text-3" id="text-org1389943">
<ul class="org-ul">
<li>CVE Analizado: CVE-2023-1234
<ul class="org-ul">
<li>Nivel de Amenaza: CRÍTICA</li>
<li>Severidad CVSS: 7.8</li>
<li>Publicado: 2023-05-01</li>
<li>Descripción: Remote code execution&#x2026;</li>
</ul></li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org1977b47" class="outline-2">
<h2 id="org1977b47">Estadísticas</h2>
<div class="outline-text-2" id="text-org1977b47">
<ul class="org-ul">
<li>Amenazas Críticas: 1</li>
<li>Amenazas Medias: 0</li>
<li>Amenazas Bajas: 0</li>
</ul>
<p>
#+END<sub>SRC</sub>
</p>

<p>
En Emacs, puedes colapsar secciones con <code>TAB</code>, buscar con <code>C-s</code>, o incluso ejecutar comandos desde el buffer con <code>org-babel</code>. ¡Es seguridad con estilo!
</p>
</div>
</div>
<div id="outline-container-org03f123b" class="outline-2">
<h2 id="org03f123b">Conclusión</h2>
<div class="outline-text-2" id="text-org03f123b">
<p>
Con este script, transformamos un escaneo básico en un análisis profesional que vive feliz en Emacs. Ya no solo sabes qué vulnerabilidades tienes, sino qué tan malas son y qué hacer al respecto. ¿Listo para poner tu laptop a prueba? Descarga el script, dale caña y comparte tus resultados en los comentarios.
</p>

<blockquote>
<p>
"La seguridad no es un destino, es un viaje&#x2026; con Org-mode" - Grok 3
</p>
</blockquote>
</div>
</div>
<div id="outline-container-org5b0b31e" class="outline-2">
<h2 id="org5b0b31e">Recursos</h2>
<div class="outline-text-2" id="text-org5b0b31e">
<ul class="org-ul">
<li>[API de Vulners](<a href="https://vulners.com/api/">https://vulners.com/api/</a>)</li>
<li>[Manual de Org-mode](<a href="https://orgmode.org/manual/">https://orgmode.org/manual/</a>)</li>
</ul>

<p>
<a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-08-detecci%C3%B3n-de-vulnerabilidades-en-linux-con-bash-y-org-mode">2025-04-08-detección-de-vulnerabilidades-en-linux-con-bash-y-org-mode</a>
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-script.html">script</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[script]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09-analizando-vulnerabilidades-como-un-pro:-un-script-potenciado-para-emacs-org-mode-(ii).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09-analizando-vulnerabilidades-como-un-pro:-un-script-potenciado-para-emacs-org-mode-(ii).html</guid>
  <pubDate>Wed, 09 Apr 2025 09:45:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Trump y la Guerra de Aranceles 2025: Ganadores, Perdedores y el Caos Global]]></title>
  <description><![CDATA[
<div id="outline-container-org0623482" class="outline-2">
<h2 id="org0623482">Introducción</h2>
<div class="outline-text-2" id="text-org0623482">
<p>
El 8 de abril de 2025, con apenas unas semanas en su segundo mandato como el 47º presidente de Estados Unidos, Donald Trump ha encendido la mecha de una guerra comercial global al imponer aranceles masivos: un 10% general a todas las importaciones, un 104% a China, y tarifas "recíprocas" que alcanzan hasta el 46% en países como Vietnam. ¿El objetivo? "Restaurar la grandeza americana" y equilibrar la balanza comercial. Pero, ¿quién sale ganando y quién perdiendo en este juego de alto riesgo? En este post, analizamos los detalles, respaldados por datos y referencias, y lo presentamos con el poder de Emacs Org-mode. ¡Prepárate para un viaje económico con esteroides!
</p>
</div>
</div>
<div id="outline-container-org2c07cb7" class="outline-2">
<h2 id="org2c07cb7">Contexto: La Decisión de Trump</h2>
<div class="outline-text-2" id="text-org2c07cb7">
<p>
Trump anunció su plan de aranceles el 2 de abril de 2025, en un evento en el Rose Garden, mostrando gráficos y prometiendo "Liberation Day" para la economía estadounidense. Según reportes de Reuters y AP News, el 5 de abril comenzaron a aplicarse los aranceles del 10%, con escaladas previstas: un 50% adicional a China a partir del 9 de abril si no retira sus retaliaciones del 34%. Esta política, más agresiva que la de su primer mandato, busca:
</p>
<ul class="org-ul">
<li>Reducir déficits comerciales históricos.</li>
<li>Revitalizar la industria manufacturera local.</li>
<li>Presionar a aliados y rivales para negociar "deals justos".</li>
</ul>

<p>
Sin embargo, los mercados globales han entrado en pánico, con el S&amp;P 500 cayendo a territorio bajista y protestas en las calles de Washington.
</p>
</div>
</div>
<div id="outline-container-orge9ab192" class="outline-2">
<h2 id="orge9ab192">Metodología del Análisis</h2>
<div class="outline-text-2" id="text-orge9ab192">
<ul class="org-ul">
<li><b><b>Fuentes</b></b>: Noticias recientes de Reuters, AP News, Forbes, y Al Jazeera (hasta el 8 de abril de 2025).</li>
<li><b><b>Criterios</b></b>: Impacto económico directo (costos, empleos), reacciones internacionales, y efectos a largo plazo.</li>
<li><b><b>Herramientas</b></b>: Emacs Org-mode para estructurar, con un gráfico ASCII para visualizar.</li>
</ul>
</div>
</div>
<div id="outline-container-org870cc4b" class="outline-2">
<h2 id="org870cc4b">Ganadores (Winners)</h2>
<div class="outline-text-2" id="text-org870cc4b">
<p>
Aquí están los beneficiados potenciales de esta guerra de aranceles:
</p>
</div>
<div id="outline-container-org5ee5a50" class="outline-3">
<h3 id="org5ee5a50">Trabajadores Manufactureros de EE.UU.</h3>
<div class="outline-text-3" id="text-org5ee5a50">
<ul class="org-ul">
<li><b>Por qué ganan</b>: Trump promete traer empleos de vuelta al Rust Belt (Ohio, Pensilvania) al encarecer importaciones y fomentar producción local.</li>
<li><b>Evidencia</b>: Fox News reporta que congresistas como Michael Rulli ya ven "revitalización" en comunidades industriales.</li>
<li><b>Riesgo</b>: Depende de que las empresas no trasladen costos a consumidores.</li>
</ul>
</div>
</div>
<div id="outline-container-org9f139b1" class="outline-3">
<h3 id="org9f139b1">Industrias del Carbón y Acero</h3>
<div class="outline-text-3" id="text-org9f139b1">
<ul class="org-ul">
<li><b>Por qué ganan</b>: Al Jazeera señala que Trump firmó una orden ejecutiva para duplicar la inversión en carbón, protegido por aranceles a energías extranjeras.</li>
<li><b>Evidencia</b>: Las tarifas del 25% a Canadá y México (por reglas de origen) favorecen el acero local.</li>
<li><b>Riesgo</b>: Competencia con energías renovables sigue siendo un desafío.</li>
</ul>
</div>
</div>
<div id="outline-container-org047ec90" class="outline-3">
<h3 id="org047ec90">Japón e India</h3>
<div class="outline-text-3" id="text-org047ec90">
<ul class="org-ul">
<li><b>Por qué ganan</b>: Fox News destaca que estos países podrían beneficiarse si China y Vietnam pierden mercado, llenando vacíos con productos no tarifados.</li>
<li><b>Evidencia</b>: Japón negocia con el Tesoro (Scott Bessent) para evitar aranceles, mientras India se mantiene al margen.</li>
<li><b>Riesgo</b>: Podrían enfrentar retaliaciones si escalan exportaciones a EE.UU.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org5ef54bf" class="outline-2">
<h2 id="org5ef54bf">Perdedores (Losers)</h2>
<div class="outline-text-2" id="text-org5ef54bf">
<p>
Los aranceles no perdonan, y estos son los más afectados:
</p>
</div>
<div id="outline-container-org40c5373" class="outline-3">
<h3 id="org40c5373">Consumidores Estadounidenses</h3>
<div class="outline-text-3" id="text-org40c5373">
<ul class="org-ul">
<li><b>Por qué pierden</b>: Reuters informa que empresas como Micron y minoristas de ropa ya suben precios o retrasan contrataciones por costos de aranceles.</li>
<li><b>Evidencia</b>: Un 104% a China encarecerá electrónicos y textiles; el 10% general afecta todo lo importado.</li>
<li><b>Impacto</b>: Inflación inminente y menor poder adquisitivo.</li>
</ul>
</div>
</div>
<div id="outline-container-orgeb0372b" class="outline-3">
<h3 id="orgeb0372b">China y Vietnam</h3>
<div class="outline-text-3" id="text-orgeb0372b">
<ul class="org-ul">
<li><b>Por qué pierden</b>: China enfrenta un 104% acumulado, y Vietnam un 46%, paralizando sus exportaciones a EE.UU.</li>
<li><b>Evidencia</b>: The Guardian y NPR reportan que China promete "luchar hasta el final", mientras Vietnam suplica negociaciones (carta de To Lam a Trump).</li>
<li><b>Impacto</b>: Pérdida de mercado y guerra de desgaste económica.</li>
</ul>
</div>
</div>
<div id="outline-container-orgea34521" class="outline-3">
<h3 id="orgea34521">Unión Europea</h3>
<div class="outline-text-3" id="text-orgea34521">
<ul class="org-ul">
<li><b>Por qué pierde</b>: Un 20% a bienes industriales y amenazas a bebidas alcohólicas (Reuters) golpean al bloque ya afectado por autos y metales.</li>
<li><b>Evidencia</b>: Ursula von der Leyen ofrece "cero por cero", pero Trump lo rechaza como insuficiente.</li>
<li><b>Impacto</b>: Tensiones diplomáticas y costos económicos.</li>
</ul>
</div>
</div>
<div id="outline-container-orgd1c8e55" class="outline-3">
<h3 id="orgd1c8e55">Mercados Globales</h3>
<div class="outline-text-3" id="text-orgd1c8e55">
<ul class="org-ul">
<li><b>Por qué pierden</b>: The New York Times y CNBC reportan caídas masivas en bolsas asiáticas (Hang Seng -9.8%) y temores de recesión global.</li>
<li><b>Evidencia</b>: Inversores huyen ante la incertidumbre; el S&amp;P 500 en bear market.</li>
<li><b>Impacto</b>: Volatilidad y desconfianza sistémica.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgdd231bb" class="outline-2">
<h2 id="orgdd231bb">Gráfico de Apoyo: Impacto de los Aranceles</h2>
<div class="outline-text-2" id="text-orgdd231bb">
<div class="org-src-container">
<pre class="src src-ascii">Impacto Econ&#243;mico por Regi&#243;n (Escala 1-10)
+----------------+-------+-------+-------+-------+
| Regi&#243;n         | Costo | Empleo| Mercado| Total |
+----------------+-------+-------+-------+-------+
| EE.UU. (Local) |   3   |   8   |   6   |   17  |
| China          |   9   |   4   |   2   |   15  |
| UE             |   7   |   3   |   4   |   14  |
| Vietnam        |   8   |   3   |   3   |   14  |
| Jap&#243;n/India    |   2   |   5   |   7   |   14  |
+----------------+-------+-------+-------+-------+
* Costo: Incremento de precios (mayor = peor)
* Empleo: Generaci&#243;n de trabajos (mayor = mejor)
* Mercado: Acceso a mercados (mayor = mejor)
</pre>
</div>
<ul class="org-ul">
<li><b>Interpretación</b>: EE.UU. gana en empleos pero paga costos moderados. China sufre alto costo y pérdida de mercado. Japón/India equilibran mejor.</li>
</ul>
</div>
</div>
<div id="outline-container-org1cf9806" class="outline-2">
<h2 id="org1cf9806">Análisis Crítico</h2>
<div class="outline-text-2" id="text-org1cf9806">
<ul class="org-ul">
<li><b><b>A Favor</b></b>: Trump podría lograr un reequilibrio comercial a corto plazo y fortalecer ciertas industrias internas, como promete su equipo (Lutnick, Navarro).</li>
<li><b><b>En Contra</b></b>: Economistas (NYT, CNBC) advierten que aranceles tan amplios recuerdan a Smoot-Hawley (1930), que agravó la Gran Depresión. La inflación y el caos global podrían superar los beneficios.</li>
<li><b><b>Incógnitas</b></b>: ¿Negociará Trump con aliados como Japón o Taiwán (que ofrece "cero aranceles")? ¿Resistirá China el desgaste?</li>
</ul>
</div>
</div>
<div id="outline-container-org3ba41f5" class="outline-2">
<h2 id="org3ba41f5">Referencias</h2>
<div class="outline-text-2" id="text-org3ba41f5">
<ul class="org-ul">
<li>Reuters: "US forges ahead with 104% tariffs on China" (8 abril 2025).</li>
<li>AP News: "Trump threatens more tariffs on China as markets shudder" (7 abril 2025).</li>
<li>Fox News: "The losers and winners of Trump's 'Liberation Day' tariff plan" (6 abril 2025).</li>
<li>The Guardian: "China vows to ‘fight to the end’ against latest Trump tariff threat" (7 abril 2025).</li>
<li>Forbes: "Will Trump Negotiate Tariffs?" (8 abril 2025).</li>
<li>Al Jazeera: "Trump tariffs live: US president vows to revive coal industry" (8 abril 2025).</li>
</ul>
</div>
</div>
<div id="outline-container-orge45b795" class="outline-2">
<h2 id="orge45b795">Conclusión</h2>
<div class="outline-text-2" id="text-orge45b795">
<p>
La guerra de aranceles de Trump es un experimento audaz que podría revitalizar sectores de EE.UU. mientras castiga a rivales como China. Sin embargo, los consumidores y los mercados globales pagan un precio alto, y el riesgo de recesión acecha. En Emacs Org-mode, este análisis se organiza para actuar: usa `C-c C-o` en las URLs de referencias para investigar más o `C-c C-t` para priorizar tareas como "actualizar sistemas ante inflación". ¿Ganará Trump esta apuesta? Solo el tiempo (y los datos) lo dirán.
</p>

<blockquote>
<p>
"Los aranceles son la medicina amarga que Trump receta al mundo, pero ¿curarán o enfermarán más?" - Grok 3
</p>
</blockquote>
</div>
</div>
<div id="outline-container-org175b84a" class="outline-2">
<h2 id="org175b84a">Llamado a la Acción</h2>
<div class="outline-text-2" id="text-org175b84a">
<p>
¿Tu laptop depende de paquetes afectados por esta guerra comercial? Revisa mi post anterior sobre vulnerabilidades y comparte tus pensamientos abajo. ¡Emacs nos une!
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-politica.html">politica</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-economia.html">economia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-trump.html">trump</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-aranceles.html">aranceles</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-opiniones.html">opiniones</a> </div>]]></description>
  <category><![CDATA[politica]]></category>
  <category><![CDATA[economia]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[trump]]></category>
  <category><![CDATA[aranceles]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[opiniones]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09--trump-y-la-guerra-de-aranceles-2025:-ganadores,-perdedores-y-el-caos-global.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09--trump-y-la-guerra-de-aranceles-2025:-ganadores,-perdedores-y-el-caos-global.html</guid>
  <pubDate>Wed, 09 Apr 2025 07:26:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Detección de Vulnerabilidades en Linux con Bash y Org Mode]]></title>
  <description><![CDATA[
<div id="outline-container-org9ce4c31" class="outline-2">
<h2 id="org9ce4c31">Introducción</h2>
<div class="outline-text-2" id="text-org9ce4c31">
<p>
En la administración de sistemas Linux, una de las tareas más críticas es mantener actualizado el sistema y mitigar cualquier <b>vulnerabilidad</b> presente. Una vulnerabilidad es una debilidad en el sistema que puede ser explotada para ganar acceso no autorizado, ejecutar código malicioso o afectar la disponibilidad y confidencialidad del sistema.
</p>

<p>
Este artículo documenta un método simple pero efectivo para identificar vulnerabilidades conocidas (CVE) en paquetes instalados en una distribución basada en Debian/Ubuntu, utilizando:
</p>

<ul class="org-ul">
<li>Herramientas de línea de comandos (Bash, `dpkg`, `curl`)</li>
<li>Consulta a la API de Vulners.com</li>
<li>Documentación automática en formato Org Mode para su exportación a PDF o HTML</li>
</ul>
</div>
</div>
<div id="outline-container-org57862a5" class="outline-2">
<h2 id="org57862a5">Herramientas necesarias</h2>
<div class="outline-text-2" id="text-org57862a5">
<p>
Antes de comenzar, asegúrate de tener instaladas las siguientes utilidades:
</p>

<ul class="org-ul">
<li>`dpkg` (instalado por defecto en Ubuntu)</li>
<li>`curl` para realizar peticiones web</li>
<li>Editor Emacs con soporte para Org Mode</li>
</ul>

<p>
Puedes instalar `curl` así:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt update
sudo apt install curl
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf2320d0" class="outline-2">
<h2 id="orgf2320d0">Extracción del listado de software instalado</h2>
<div class="outline-text-2" id="text-orgf2320d0">
<p>
Primero generamos un listado de los paquetes instalados con sus versiones:
</p>

<div class="org-src-container">
<pre class="src src-bash">dpkg-query -W -f=<span style="color: #005F00;">'${binary:Package} ${Version}\n'</span> &gt; paquetes_instalados.txt
</pre>
</div>

<p>
Este archivo será leído por nuestro script de análisis de vulnerabilidades.
</p>
</div>
</div>
<div id="outline-container-org76a2eb3" class="outline-2">
<h2 id="org76a2eb3">Script de análisis con Bash</h2>
<div class="outline-text-2" id="text-org76a2eb3">
<p>
A continuación, presentamos el script en Bash que se encarga de:
</p>

<ol class="org-ol">
<li>Leer el archivo de paquetes instalados</li>
<li>Buscar cada paquete en la API pública de <a href="https://vulners.com">Vulners</a></li>
<li>Extraer posibles CVEs relacionados</li>
<li>Generar automáticamente un informe en formato Org Mode</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>

<span style="color: #004651;">OUTPUT</span>=<span style="color: #005F00;">"vulnerabilidades.org"</span>
<span style="color: #004651;">PACKAGE_LIST</span>=<span style="color: #005F00;">"paquetes_instalados.txt"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Verifica dependencias</span>
<span style="color: #D70000;">if ! </span><span style="color: #1F55A0;">command</span> -v curl &amp;&gt; /dev/null; <span style="color: #D70000;">then</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Este script requiere 'curl'. Inst&#225;lalo con: sudo apt install curl"</span>
    <span style="color: #D70000;">exit</span> 1
<span style="color: #D70000;">fi</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">T&#237;tulo del archivo Org</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"#+TITLE: An&#225;lisis de Vulnerabilidades del Sistema"</span> &gt; <span style="color: #005F00;">"$OUTPUT"</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"#+DATE: $(</span><span style="color: #1F55A0; font-weight: bold;">date '+%Y-%m-%d'</span><span style="color: #005F00;">)"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"* Resultados de escaneo de vulnerabilidades"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Obtener lista de paquetes instalados</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"[*] Obteniendo lista de paquetes..."</span>
dpkg-query -W -f=<span style="color: #005F00;">'${binary:Package} ${Version}\n'</span> &gt; <span style="color: #005F00;">"$PACKAGE_LIST"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Buscar vulnerabilidades por paquete</span>
<span style="color: #D70000;">while</span> <span style="color: #004651;">IFS</span>= read -r line; <span style="color: #D70000;">do</span>
    <span style="color: #004651;">nombre</span>=$(<span style="color: #1F55A0; font-weight: bold;">echo "$line" | awk '{print $1}'</span>)
    <span style="color: #004651;">version</span>=$(<span style="color: #1F55A0; font-weight: bold;">echo "$line" | awk '{print $2}'</span>)
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"[+] Buscando CVEs para: $nombre $version"</span>

    <span style="color: #004651;">query</span>=<span style="color: #005F00;">"${nombre}%20${version}"</span>
    <span style="color: #004651;">response</span>=$(<span style="color: #1F55A0; font-weight: bold;">curl -s "https://vulners.com/api/v3/search/lucene/?query=$query&amp;size=3"</span>)

    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"** $nombre $version"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>

    <span style="color: #D70000;">if </span><span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"$response"</span> | grep -q <span style="color: #005F00;">'"cvelist":'</span>; <span style="color: #D70000;">then</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   &#8594; Vulnerabilidades encontradas."</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   - Vulnerabilidades encontradas:"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"$response"</span> | grep -oP <span style="color: #005F00;">'"id":\s*"\K(CVE-[0-9\-]+)'</span> | uniq | sed <span style="color: #005F00;">'s/^/     - /'</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
    <span style="color: #D70000;">else</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   &#8594; Sin vulnerabilidades encontradas."</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   - Sin vulnerabilidades encontradas."</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
    <span style="color: #D70000;">fi</span>

    sleep 1  <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Para no sobrecargar el servidor</span>
<span style="color: #D70000;">done</span> &lt; <span style="color: #005F00;">"$PACKAGE_LIST"</span>

<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"[&#10004;] An&#225;lisis completado. Archivo generado: $OUTPUT"</span>
</pre>
</div>

<p>
Para usarlo:
</p>

<div class="org-src-container">
<pre class="src src-bash">chmod +x check_vulnerabilities_org.sh
./check_vulnerabilities_org.sh
</pre>
</div>
</div>
</div>
<div id="outline-container-org1e11a39" class="outline-2">
<h2 id="org1e11a39">Ejemplo de resultados</h2>
<div class="outline-text-2" id="text-org1e11a39">
<p>
A continuación se muestra un extracto real generado automáticamente con el script:
</p>

<p>
#+begin<sub>example</sub>
</p>
</div>
<div id="outline-container-orgac93d32" class="outline-3">
<h3 id="orgac93d32">openssl 3.0.2-0ubuntu1.15</h3>
<div class="outline-text-3" id="text-orgac93d32">
<ul class="org-ul">
<li>Vulnerabilidades encontradas:
<ul class="org-ul">
<li>CVE-2022-0778</li>
<li>CVE-2023-0464</li>
<li>CVE-2023-2650</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org5e1cb18" class="outline-3">
<h3 id="org5e1cb18">firefox 124.0</h3>
<div class="outline-text-3" id="text-org5e1cb18">
<ul class="org-ul">
<li>Vulnerabilidades encontradas:
<ul class="org-ul">
<li>CVE-2024-29943</li>
<li>CVE-2024-29944</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org51f7d0f" class="outline-3">
<h3 id="org51f7d0f">vlc 3.0.16</h3>
<div class="outline-text-3" id="text-org51f7d0f">
<ul class="org-ul">
<li>Sin vulnerabilidades encontradas.</li>
</ul>
<p>
#+end<sub>example</sub>
</p>
</div>
</div>
</div>
<div id="outline-container-orgd156269" class="outline-2">
<h2 id="orgd156269">Exportar resultados a PDF o HTML</h2>
<div class="outline-text-2" id="text-orgd156269">
<p>
Desde Emacs, abre el archivo generado `vulnerabilidades.org` y presiona:
</p>

<ul class="org-ul">
<li>`C-c C-e l o` → Exportar a PDF</li>
<li>`C-c C-e h o` → Exportar a HTML</li>
</ul>

<p>
Esto genera un informe profesional que puedes archivar, compartir o añadir a tu blog.
</p>
</div>
</div>
<div id="outline-container-orgcdbb603" class="outline-2">
<h2 id="orgcdbb603">Recomendaciones</h2>
<div class="outline-text-2" id="text-orgcdbb603">
<ul class="org-ul">
<li>Ejecutar este script regularmente como parte de tus tareas de mantenimiento.</li>
<li>Configurar alertas automáticas de CVE con herramientas como `apticron`, `unattended-upgrades` o `lynis`.</li>
<li>Complementar con escáneres más avanzados como <b>OpenVAS</b> o <b>Lynis</b> para auditorías completas.</li>
</ul>
</div>
</div>
<div id="outline-container-orgca61169" class="outline-2">
<h2 id="orgca61169">Conclusión</h2>
<div class="outline-text-2" id="text-orgca61169">
<p>
La seguridad no es un estado, es un proceso. Automatizar la detección de vulnerabilidades con herramientas simples como Bash, APIs públicas y Org Mode nos permite mantenernos al tanto de riesgos sin depender de soluciones comerciales complejas.
</p>

<p>
Este enfoque demuestra el poder de las herramientas libres combinadas: un sistema Linux, un script Bash y la flexibilidad de Emacs.
</p>
</div>
</div>
<div id="outline-container-org574fc33" class="outline-2">
<h2 id="org574fc33">Recursos</h2>
<div class="outline-text-2" id="text-org574fc33">
<ul class="org-ul">
<li><a href="https://vulners.com">Vulners API</a></li>
<li><a href="https://nvd.nist.gov">National Vulnerability Database</a></li>
<li><a href="https://cve.mitre.org">CVE Mitre</a></li>
<li><a href="https://cisofy.com/lynis/">Lynis Auditor</a></li>
<li><a href="https://www.greenbone.net/">Greenbone/OpenVAS</a></li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-orgmode.html">orgmode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[orgmode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-08-detecci%C3%B3n-de-vulnerabilidades-en-linux-con-bash-y-org-mode.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-08-detecci%C3%B3n-de-vulnerabilidades-en-linux-con-bash-y-org-mode.html</guid>
  <pubDate>Tue, 08 Apr 2025 04:55:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[30 Términos de IA que Están Transformando la Programación en 2025]]></title>
  <description><![CDATA[
<div id="outline-container-org4ebfa5c" class="outline-2">
<h2 id="org4ebfa5c">30 Términos de IA que Están Transformando la Programación en 2025</h2>
<div class="outline-text-2" id="text-org4ebfa5c">
<p>
La inteligencia artificial (IA) está redefiniendo la programación en 2025, con términos como "vibe-coding" liderando el camino. Desde Emacs hasta herramientas como Grok o Copilot, la IA nos permite crear código de manera más intuitiva, rápida y creativa. En este post, exploramos 30 conceptos clave que están moldeando esta era de programación asistida por IA, ideales para potenciar tu flujo de trabajo en Emacs y más allá.
</p>
</div>
<div id="outline-container-orgcb11a5e" class="outline-3">
<h3 id="orgcb11a5e">Lista de Términos</h3>
<div class="outline-text-3" id="text-orgcb11a5e">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Término</th>
<th scope="col" class="org-left">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Vibe-Coding</td>
<td class="org-left">Programación asistida por IA donde describes en lenguaje natural lo que quieres, y la IA genera el código. Popularizado por Andrej Karpathy en 2025.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Prompt Engineering</td>
<td class="org-left">Diseñar instrucciones precisas para obtener respuestas útiles de modelos de IA.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">LLM (Large Language Model)</td>
<td class="org-left">Modelos de lenguaje masivos, como Grok, base de herramientas de generación de código.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">AI-Assisted Programming</td>
<td class="org-left">Programación con ayuda de IA, como GitHub Copilot, para sugerencias y automatización.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Natural Language Programming</td>
<td class="org-left">Codificar describiendo intenciones en lenguaje natural, sin sintaxis técnica estricta.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Code Generation</td>
<td class="org-left">Generación automática de código a partir de descripciones o ejemplos.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">AI Agent</td>
<td class="org-left">Entidades de IA autónomas que escriben código o gestionan tareas.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Low-Code/No-Code</td>
<td class="org-left">Crear aplicaciones con mínima codificación, potenciadas por IA.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Copilot</td>
<td class="org-left">Asistente de IA que sugiere código en tiempo real, popularizado por GitHub Copilot.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">AutoML</td>
<td class="org-left">Automatización de procesos de aprendizaje automático con IA.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Hallucination</td>
<td class="org-left">Cuando la IA genera información incorrecta o inventada, un reto en la generación de código.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Context Window</td>
<td class="org-left">Límite de texto que un modelo de IA puede procesar a la vez.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">SuperWhisper</td>
<td class="org-left">Herramienta de voz a texto para dictar instrucciones a modelos de IA.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Iterative Refinement</td>
<td class="org-left">Mejorar resultados de IA mediante iteraciones de prompts y retroalimentación.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">AI-Driven Development</td>
<td class="org-left">Desarrollo guiado por IA en todas las etapas del software.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Code Review by AI</td>
<td class="org-left">Revisión de código por IA para detectar errores o sugerir mejoras.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Conversational Coding</td>
<td class="org-left">Programar "hablando" con la IA, describiendo problemas y recibiendo soluciones.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">AI Wrapper</td>
<td class="org-left">Aplicaciones que simplifican el uso de modelos de IA para tareas específicas.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Exponential Coding</td>
<td class="org-left">Velocidad exponencial en desarrollo gracias a la IA, ligada a vibe-coding.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Software for One</td>
<td class="org-left">Crear herramientas personalizadas con IA para necesidades individuales.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Few-Shot Learning</td>
<td class="org-left">Técnica donde la IA aprende de pocos ejemplos, útil para personalizar generadores de código.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Zero-Shot Learning</td>
<td class="org-left">Capacidad de la IA para realizar tareas sin entrenamiento previo, aplicada a programación.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Fine-Tuning</td>
<td class="org-left">Ajustar un modelo de IA con datos específicos para mejorar su precisión en tareas como coding.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">AI Pair Programming</td>
<td class="org-left">Colaboración en tiempo real entre humanos y IA para escribir código, como un "compañero".</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Semantic Code Search</td>
<td class="org-left">Búsqueda de código basada en significado, no solo palabras clave, potenciada por IA.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Synthetic Data</td>
<td class="org-left">Datos generados por IA para entrenar modelos o probar software, complementando vibe-coding.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Explainable AI (XAI)</td>
<td class="org-left">IA que explica sus decisiones, útil para depurar código generado automáticamente.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Neural Code Completion</td>
<td class="org-left">Autocompletado de código basado en redes neuronales, más avanzado que reglas estáticas.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">AI-Augmented Debugging</td>
<td class="org-left">Depuración asistida por IA que identifica errores y sugiere correcciones automáticamente.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Hyperautomation</td>
<td class="org-left">Automatización extrema de procesos, incluyendo desarrollo de software, con IA.</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-orgc9156e6" class="outline-3">
<h3 id="orgc9156e6">Reflexión</h3>
<div class="outline-text-3" id="text-orgc9156e6">
<p>
Con 30 términos en la lista, queda claro que la IA no solo acelera la programación, sino que cambia cómo pensamos el código. En Emacs, podemos integrar estas ideas con herramientas como `org-babel` para ejecutar código generado por IA o `org-static-blog` para documentar experimentos. "Vibe-coding" sigue siendo mi favorito por su enfoque en la creatividad, pero ¿cuál te inspira más a ti?
</p>

<p>
[1] Experimenta vibe-coding: describe un script en un bloque de código y pide a Grok que lo genere por ti.
</p>
</div>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ia.html">ia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-vibe-coding.html">vibe-coding</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-programacion.html">programacion</a> </div>]]></description>
  <category><![CDATA[ia]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[vibe-coding]]></category>
  <category><![CDATA[programacion]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-05-30-t%C3%A9rminos-de-ia-que-est%C3%A1n-transformando-la-programaci%C3%B3n-en-2025.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-05-30-t%C3%A9rminos-de-ia-que-est%C3%A1n-transformando-la-programaci%C3%B3n-en-2025.html</guid>
  <pubDate>Sat, 05 Apr 2025 14:42:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Configurar Emacs para creación de Graficos]]></title>
  <description><![CDATA[
<div id="outline-container-org9a98fc1" class="outline-2">
<h2 id="org9a98fc1"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
Uno de los grandes poderes ocultos de Emacs y Org Mode es su capacidad para generar gráficos directamente desde el texto. Esta funcionalidad permite a los usuarios crear visualizaciones sofisticadas sin salir de su editor, manteniendo todo el contenido en archivos de texto plano que son fáciles de versionar y mantener.
</p>

<p>
En este tutorial, exploraremos cómo configurar Emacs para trabajar con diferentes tipos de gráficos directamente desde Org Mode, incluyendo:
</p>

<ul class="org-ul">
<li>Gnuplot para gráficos científicos y estadísticos</li>
<li>Ditaa para diagramas ASCII</li>
<li>Graphviz (DOT) para diagramas estructurales</li>
<li>PlantUML para diagramas UML</li>
</ul>

<p>
Al final de este tutorial, podrás integrar gráficos impresionantes en tus documentos de Org Mode que se exportarán perfectamente a HTML, PDF y otros formatos.
</p>
</div>
</div>
<div id="outline-container-org38a3adf" class="outline-2">
<h2 id="org38a3adf"><span class="section-number-2">2.</span> Requisitos previos</h2>
<div class="outline-text-2" id="text-2">
<p>
Antes de comenzar, asegúrate de tener instalado:
</p>

<ul class="org-ul">
<li>Emacs (versión 27.1 o superior recomendada)</li>
<li>Org Mode (versión 9.4 o superior)</li>
<li>Los programas externos correspondientes para cada tipo de gráfico</li>
</ul>
</div>
</div>
<div id="outline-container-orge24413d" class="outline-2">
<h2 id="orge24413d"><span class="section-number-2">3.</span> Configuración básica de Org Babel</h2>
<div class="outline-text-2" id="text-3">
<p>
Lo primero que necesitamos es configurar Org Babel para permitir la ejecución de bloques de código que generarán nuestros gráficos. Añade este código a tu <code>init.el</code> o <code>.emacs</code>:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Activar Org Babel para los lenguajes que usaremos</span>
(<span style="color: #D70000;">with-eval-after-load</span> 'org
  (org-babel-do-load-languages
   'org-babel-load-languages
   '((emacs-lisp . t)
     (gnuplot . t)
     (ditaa . t)
     (dot . t)
     (plantuml . t)
     (mermaid . t))))

<span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">No pedir confirmaci&#243;n al ejecutar bloques de c&#243;digo</span>
(<span style="color: #D70000;">setq</span> org-confirm-babel-evaluate nil)
</pre>
</div>
</div>
</div>
<div id="outline-container-org172b3d3" class="outline-2">
<h2 id="org172b3d3"><span class="section-number-2">4.</span> Configuración de Gnuplot</h2>
<div class="outline-text-2" id="text-4">
<p>
<a href="https://www.gnuplot.info/">Gnuplot</a> es una herramienta potente para generar gráficos científicos y estadísticos.
</p>
</div>
<div id="outline-container-org0bd11a7" class="outline-3">
<h3 id="org0bd11a7"><span class="section-number-3">4.1.</span> Instalación</h3>
<div class="outline-text-3" id="text-4-1">
<p>
En sistemas basados en Debian/Ubuntu:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt-get install gnuplot
</pre>
</div>

<p>
En macOS con Homebrew:
</p>

<div class="org-src-container">
<pre class="src src-bash">brew install gnuplot
</pre>
</div>
</div>
</div>
<div id="outline-container-org1a9590f" class="outline-3">
<h3 id="org1a9590f"><span class="section-number-3">4.2.</span> Configuración en Emacs</h3>
<div class="outline-text-3" id="text-4-2">
<p>
Instala el paquete <code>gnuplot-mode</code> usando <code>package.el</code>:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">use-package</span> <span style="color: #AF005F;">gnuplot</span>
  <span style="color: #1F55A0;">:ensure</span> t)
</pre>
</div>
</div>
</div>
<div id="outline-container-org8ab48f0" class="outline-3">
<h3 id="org8ab48f0"><span class="section-number-3">4.3.</span> Ejemplo de uso</h3>
<div class="outline-text-3" id="text-4-3">
<p>
Crea un bloque de código en tu archivo Org Mode:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC gnuplot :file ./images/seno-coseno.png :exports both</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> terminal pngcairo size 800,600 enhanced font </span><span style="color: #005F00; background-color: #E9E9F2;">"Arial,12"</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> </span><span style="color: #1F55A0; background-color: #E9E9F2;">title</span><span style="background-color: #E9E9F2;"> </span><span style="color: #005F00; background-color: #E9E9F2;">"Funciones seno y coseno"</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> xlabel </span><span style="color: #005F00; background-color: #E9E9F2;">"x"</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> ylabel </span><span style="color: #005F00; background-color: #E9E9F2;">"y"</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> grid</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> key right bottom</span>
<span style="color: #D70000; background-color: #E9E9F2;">plot</span><span style="background-color: #E9E9F2;"> </span><span style="color: #AF8700; background-color: #E9E9F2;">sin</span><span style="background-color: #E9E9F2;">(x) </span><span style="color: #1F55A0; background-color: #E9E9F2;">title</span><span style="background-color: #E9E9F2;"> </span><span style="color: #005F00; background-color: #E9E9F2;">"sin(x)"</span><span style="background-color: #E9E9F2;"> </span><span style="color: #1F55A0; background-color: #E9E9F2;">with</span><span style="background-color: #E9E9F2;"> </span><span style="color: #AF8700; background-color: #E9E9F2;">lines</span><span style="background-color: #E9E9F2;"> </span><span style="color: #1F55A0; background-color: #E9E9F2;">linewidth</span><span style="background-color: #E9E9F2;"> 2, \</span>
<span style="background-color: #E9E9F2;">     </span><span style="color: #AF8700; background-color: #E9E9F2;">cos</span><span style="background-color: #E9E9F2;">(x) </span><span style="color: #1F55A0; background-color: #E9E9F2;">title</span><span style="background-color: #E9E9F2;"> </span><span style="color: #005F00; background-color: #E9E9F2;">"cos(x)"</span><span style="background-color: #E9E9F2;"> </span><span style="color: #1F55A0; background-color: #E9E9F2;">with</span><span style="background-color: #E9E9F2;"> </span><span style="color: #AF8700; background-color: #E9E9F2;">lines</span><span style="background-color: #E9E9F2;"> </span><span style="color: #1F55A0; background-color: #E9E9F2;">linewidth</span><span style="background-color: #E9E9F2;"> 2 </span><span style="color: #1F55A0; background-color: #E9E9F2;">linecolor</span><span style="background-color: #E9E9F2;"> rgb </span><span style="color: #005F00; background-color: #E9E9F2;">"red"</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>

<p>
Al ejecutar este bloque (con <code>C-c C-c</code>), obtendrás una imagen como esta:
</p>


<figure id="org1d2fd35">
<img src="images/seno-coseno.png" alt="seno-coseno.png">

<figcaption><span class="figure-number">Figure 1: </span>Gráfico de las funciones seno y coseno</figcaption>
</figure>
</div>
</div>
</div>
<div id="outline-container-org56edb83" class="outline-2">
<h2 id="org56edb83"><span class="section-number-2">5.</span> Configuración de Ditaa</h2>
<div class="outline-text-2" id="text-5">
<p>
<a href="http://ditaa.sourceforge.net/">Ditaa</a> convierte diagramas ASCII en imágenes.
</p>
</div>
<div id="outline-container-org2b1868b" class="outline-3">
<h3 id="org2b1868b"><span class="section-number-3">5.1.</span> Instalación</h3>
<div class="outline-text-3" id="text-5-1">
<p>
En sistemas basados en Debian/Ubuntu:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt-get install ditaa
</pre>
</div>

<p>
En macOS con Homebrew:
</p>

<div class="org-src-container">
<pre class="src src-bash">brew install ditaa
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf30a3b5" class="outline-3">
<h3 id="orgf30a3b5"><span class="section-number-3">5.2.</span> Configuración en Emacs</h3>
<div class="outline-text-3" id="text-5-2">
<p>
Debes especificar la ruta al ejecutable de ditaa:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">setq</span> org-ditaa-jar-path <span style="color: #005F00;">"/usr/share/ditaa/ditaa.jar"</span>)  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Ajusta esta ruta seg&#250;n tu sistema</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org2d5ba50" class="outline-3">
<h3 id="org2d5ba50"><span class="section-number-3">5.3.</span> Ejemplo de uso</h3>
<div class="outline-text-3" id="text-5-3">
<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC ditaa :file ./images/diagrama-sistema.png :exports both</span>
<span style="background-color: #E9E9F2;">+---------------+        +---------------+</span>
<span style="background-color: #E9E9F2;">|               |        |               |</span>
<span style="background-color: #E9E9F2;">|  Frontend     +-------&gt;+  API Gateway  |</span>
<span style="background-color: #E9E9F2;">|  (React)      |        |  (Node.js)    |</span>
<span style="background-color: #E9E9F2;">|               |        |               |</span>
<span style="background-color: #E9E9F2;">+-------+-------+        +-------+-------+</span>
<span style="background-color: #E9E9F2;">        ^                        |</span>
<span style="background-color: #E9E9F2;">        |                        v</span>
<span style="background-color: #E9E9F2;">        |                +-------+-------+</span>
<span style="background-color: #E9E9F2;">        |                |               |</span>
<span style="background-color: #E9E9F2;">        +----------------+  Database     |</span>
<span style="background-color: #E9E9F2;">                         |  (PostgreSQL) |</span>
<span style="background-color: #E9E9F2;">                         |               |</span>
<span style="background-color: #E9E9F2;">                         +---------------+</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>

<p>
Esto generará un diagrama como:
</p>


<figure id="orgf5913ed">
<img src="images/diagrama-sistema.png" alt="diagrama-sistema.png">

</figure>
</div>
</div>
</div>
<div id="outline-container-orgbd65f89" class="outline-2">
<h2 id="orgbd65f89"><span class="section-number-2">6.</span> Configuración de Graphviz (DOT)</h2>
<div class="outline-text-2" id="text-6">
<p>
<a href="https://graphviz.org/">Graphviz</a> es excelente para crear diagramas estructurales, como árboles y grafos.
</p>
</div>
<div id="outline-container-org67e27f9" class="outline-3">
<h3 id="org67e27f9"><span class="section-number-3">6.1.</span> Instalación</h3>
<div class="outline-text-3" id="text-6-1">
<p>
En sistemas basados en Debian/Ubuntu:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt-get install graphviz
</pre>
</div>

<p>
En macOS con Homebrew:
</p>

<div class="org-src-container">
<pre class="src src-bash">brew install graphviz
</pre>
</div>
</div>
</div>
<div id="outline-container-org046cd18" class="outline-3">
<h3 id="org046cd18"><span class="section-number-3">6.2.</span> Configuración en Emacs</h3>
<div class="outline-text-3" id="text-6-2">
<p>
No se requiere configuración adicional si Graphviz está en tu PATH.
</p>
</div>
</div>
<div id="outline-container-org8aa5bf8" class="outline-3">
<h3 id="org8aa5bf8"><span class="section-number-3">6.3.</span> Ejemplo de uso</h3>
<div class="outline-text-3" id="text-6-3">
<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC dot :file ./images/arbol-decisiones.png :exports both</span>
<span style="background-color: #E9E9F2;">digraph G {</span>
<span style="background-color: #E9E9F2;">  node [shape=box, style="rounded,filled", fillcolor=lightblue];</span>

<span style="background-color: #E9E9F2;">  A [label="&#191;Llueve?"];</span>
<span style="background-color: #E9E9F2;">  B [label="Llevar paraguas"];</span>
<span style="background-color: #E9E9F2;">  C [label="&#191;Hace fr&#237;o?"];</span>
<span style="background-color: #E9E9F2;">  D [label="Llevar abrigo"];</span>
<span style="background-color: #E9E9F2;">  E [label="Llevar chaqueta ligera"];</span>

<span style="background-color: #E9E9F2;">  A -&gt; B [label="S&#237;"];</span>
<span style="background-color: #E9E9F2;">  A -&gt; C [label="No"];</span>
<span style="background-color: #E9E9F2;">  C -&gt; D [label="S&#237;"];</span>
<span style="background-color: #E9E9F2;">  C -&gt; E [label="No"];</span>
<span style="background-color: #E9E9F2;">}</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>

<p>
Generará:
</p>


<figure id="org0220360">
<img src="images/arbol-decisiones.png" alt="arbol-decisiones.png">

<figcaption><span class="figure-number">Figure 2: </span>Árbol de decisiones sobre el clima</figcaption>
</figure>
</div>
</div>
</div>
<div id="outline-container-org527e3ce" class="outline-2">
<h2 id="org527e3ce"><span class="section-number-2">7.</span> Configuración de PlantUML</h2>
<div class="outline-text-2" id="text-7">
<p>
<a href="https://plantuml.com/">PlantUML</a> es una herramienta para crear diagramas UML a partir de texto.
</p>
</div>
<div id="outline-container-org7b20f7d" class="outline-3">
<h3 id="org7b20f7d"><span class="section-number-3">7.1.</span> Instalación</h3>
<div class="outline-text-3" id="text-7-1">
<p>
PlantUML requiere Java y Graphviz:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Para Debian/Ubuntu</span>
sudo apt-get install default-jre graphviz

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Descargar PlantUML</span>
wget https://sourceforge.net/projects/plantuml/files/plantuml.jar
</pre>
</div>
</div>
</div>
<div id="outline-container-orge16c228" class="outline-3">
<h3 id="orge16c228"><span class="section-number-3">7.2.</span> Configuración en Emacs</h3>
<div class="outline-text-3" id="text-7-2">
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">setq</span> org-plantuml-jar-path <span style="color: #005F00;">"~/ruta/a/plantuml.jar"</span>)  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Ajusta esta ruta</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org2804a65" class="outline-3">
<h3 id="org2804a65"><span class="section-number-3">7.3.</span> Ejemplo de uso</h3>
<div class="outline-text-3" id="text-7-3">
<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC plantuml :file ./images/diagrama-clases.png :exports both</span>
<span style="background-color: #E9E9F2;">@startuml</span>
<span style="background-color: #E9E9F2;">class Usuario {</span>
<span style="background-color: #E9E9F2;">  -id: int</span>
<span style="background-color: #E9E9F2;">  -nombre: String</span>
<span style="background-color: #E9E9F2;">  -email: String</span>
<span style="background-color: #E9E9F2;">  +login(): boolean</span>
<span style="background-color: #E9E9F2;">  +logout(): void</span>
<span style="background-color: #E9E9F2;">}</span>

<span style="background-color: #E9E9F2;">class Producto {</span>
<span style="background-color: #E9E9F2;">  -id: int</span>
<span style="background-color: #E9E9F2;">  -nombre: String</span>
<span style="background-color: #E9E9F2;">  -precio: float</span>
<span style="background-color: #E9E9F2;">  +aplicarDescuento(porcentaje: float): void</span>
<span style="background-color: #E9E9F2;">}</span>

<span style="background-color: #E9E9F2;">class Carrito {</span>
<span style="background-color: #E9E9F2;">  -items: List&lt;Producto&gt;</span>
<span style="background-color: #E9E9F2;">  +agregarProducto(p: Producto): void</span>
<span style="background-color: #E9E9F2;">  +eliminarProducto(id: int): void</span>
<span style="background-color: #E9E9F2;">  +calcularTotal(): float</span>
<span style="background-color: #E9E9F2;">}</span>

<span style="background-color: #E9E9F2;">Usuario "1" -- "0..*" Carrito : tiene &gt;</span>
<span style="background-color: #E9E9F2;">Carrito "1" o-- "0..*" Producto : contiene &gt;</span>
<span style="background-color: #E9E9F2;">@enduml</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>

<p>
Generará:
</p>


<figure id="org2931953">
<img src="images/diagrama-clases.png" alt="diagrama-clases.png">

<figcaption><span class="figure-number">Figure 3: </span>Diagrama de clases para una tienda online</figcaption>
</figure>
</div>
</div>
</div>
<div id="outline-container-orgd5d9e80" class="outline-2">
<h2 id="orgd5d9e80"><span class="section-number-2">8.</span> Configuración de Mermaid</h2>
<div class="outline-text-2" id="text-8">
<p>
<a href="https://mermaid-js.github.io/mermaid/">Mermaid</a> es una herramienta moderna para crear diagramas de flujo, secuencia, Gantt y más.
</p>
</div>
<div id="outline-container-org7ea272d" class="outline-3">
<h3 id="org7ea272d"><span class="section-number-3">8.1.</span> Instalación</h3>
<div class="outline-text-3" id="text-8-1">
<p>
Mermaid requiere Node.js:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Instalar mermaid-cli globalmente</span>
npm install -g @mermaid-js/mermaid-cli
</pre>
</div>
</div>
</div>
<div id="outline-container-org1cf1136" class="outline-3">
<h3 id="org1cf1136"><span class="section-number-3">8.2.</span> Configuración en Emacs</h3>
<div class="outline-text-3" id="text-8-2">
<p>
Primero, instala el paquete <code>ob-mermaid</code>:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">use-package</span> <span style="color: #AF005F;">ob-mermaid</span>
  <span style="color: #1F55A0;">:ensure</span> t
  <span style="color: #1F55A0;">:config</span>
  (<span style="color: #D70000;">setq</span> ob-mermaid-cli-path <span style="color: #005F00;">"/usr/local/bin/mmdc"</span>))  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Ajusta seg&#250;n tu instalaci&#243;n</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org0c254fe" class="outline-3">
<h3 id="org0c254fe"><span class="section-number-3">8.3.</span> Ejemplo de uso</h3>
<div class="outline-text-3" id="text-8-3">
<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC mermaid :file ./images/flujo-trabajo.png :exports both</span>
<span style="color: #D70000; background-color: #E9E9F2;">flowchart</span><span style="background-color: #E9E9F2;"> </span><span style="color: #AF005F; background-color: #E9E9F2;">TD</span>
<span style="background-color: #E9E9F2;">    A[Inicio] </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> B{&#191;Es un bug?}</span>
<span style="background-color: #E9E9F2;">    B </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|S&#237;| C[Reportar en JIRA]</span>
<span style="background-color: #E9E9F2;">    B </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|No| D{&#191;Es una caracter&#237;stica nueva?}</span>
<span style="background-color: #E9E9F2;">    C </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> E[Asignar desarrollador]</span>
<span style="background-color: #E9E9F2;">    D </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|S&#237;| F[Crear propuesta]</span>
<span style="background-color: #E9E9F2;">    D </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|No| G[Documentar como mejora]</span>
<span style="background-color: #E9E9F2;">    F </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> H[Revisi&#243;n por el equipo]</span>
<span style="background-color: #E9E9F2;">    G </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> H</span>
<span style="background-color: #E9E9F2;">    E </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> I[Desarrollo]</span>
<span style="background-color: #E9E9F2;">    H </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> I</span>
<span style="background-color: #E9E9F2;">    I </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> J[Testing]</span>
<span style="background-color: #E9E9F2;">    J </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> K{&#191;Pasa todos los tests?}</span>
<span style="background-color: #E9E9F2;">    K </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|No| I</span>
<span style="background-color: #E9E9F2;">    K </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|S&#237;| L[Despliegue]</span>
<span style="background-color: #E9E9F2;">    L </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> M[Fin]</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org1609664" class="outline-2">
<h2 id="org1609664"><span class="section-number-2">9.</span> Integración con org-static-blog</h2>
<div class="outline-text-2" id="text-9">
<p>
Para utilizar estos gráficos en tu blog creado con <code>org-static-blog</code>, asegúrate de:
</p>

<ol class="org-ol">
<li>Crear una estructura de directorios adecuada para tus imágenes:</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash">mkdir -p ~/ruta/a/tu/blog/images/
</pre>
</div>

<ol class="org-ol">
<li>Configurar <code>org-static-blog</code> para copiar las imágenes al generar el sitio:</li>
</ol>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">use-package</span> <span style="color: #AF005F;">org-static-blog</span>
  <span style="color: #1F55A0;">:ensure</span> t
  <span style="color: #1F55A0;">:config</span>
  (<span style="color: #D70000;">setq</span> org-static-blog-publish-title <span style="color: #005F00;">"Emacs con Esteroides"</span>)
  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Otras configuraciones...</span>

  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Importante: configurar para que copie las im&#225;genes</span>
  (<span style="color: #D70000;">setq</span> org-static-blog-publish-url <span style="color: #005F00;">"https://tu-dominio.com/"</span>)
  (<span style="color: #D70000;">setq</span> org-static-blog-publish-directory <span style="color: #005F00;">"~/ruta/al/directorio/p&#250;blico/"</span>)
  (<span style="color: #D70000;">setq</span> org-static-blog-posts-directory <span style="color: #005F00;">"~/ruta/a/tus/posts/"</span>)
  (<span style="color: #D70000;">setq</span> org-static-blog-drafts-directory <span style="color: #005F00;">"~/ruta/a/tus/borradores/"</span>)
  (<span style="color: #D70000;">setq</span> org-static-blog-enable-tags t)

  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Copiar directorio de im&#225;genes al publicar</span>
  (<span style="color: #D70000;">defun</span> <span style="color: #AF8700;">copy-images-after-publish</span> ()
    (copy-directory <span style="color: #005F00;">"~/ruta/a/tu/blog/images/"</span>
                   (concat org-static-blog-publish-directory <span style="color: #005F00;">"/images/"</span>)
                   t t t))

  (add-hook 'org-static-blog-publish-after-hook 'copy-images-after-publish))
</pre>
</div>

<ol class="org-ol">
<li>Referencia las imágenes correctamente en tus posts de Org Mode:</li>
</ol>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #009B7C; font-weight: bold; text-decoration: underline;"><a href="../images/nombre-del-grafico.png">../images/nombre-del-grafico.png</a></span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org277bc3a" class="outline-2">
<h2 id="org277bc3a"><span class="section-number-2">10.</span> Consejos avanzados</h2>
<div class="outline-text-2" id="text-10">
</div>
<div id="outline-container-orge7a01a7" class="outline-3">
<h3 id="orge7a01a7"><span class="section-number-3">10.1.</span> Ejecutar bloques automáticamente al exportar</h3>
<div class="outline-text-3" id="text-10-1">
<p>
Para asegurarte de que los gráficos siempre estén actualizados al exportar:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">setq</span> org-export-babel-evaluate t)
</pre>
</div>
</div>
</div>
<div id="outline-container-org823235d" class="outline-3">
<h3 id="org823235d"><span class="section-number-3">10.2.</span> Caché de resultados</h3>
<div class="outline-text-3" id="text-10-2">
<p>
Para evitar regenerar gráficos que no han cambiado:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC gnuplot :file ./images/grafico.png :exports both :cache yes</span>
<span style="background-color: #E9E9F2;">;; C&#243;digo del gr&#225;fico</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org3a28adf" class="outline-3">
<h3 id="org3a28adf"><span class="section-number-3">10.3.</span> Personalización de estilos</h3>
<div class="outline-text-3" id="text-10-3">
<p>
Crea un archivo <code>.gnuplot</code> en tu directorio home para personalizar estilos globales:
</p>
</div>
</div>
</div>
<div id="outline-container-org97f66d0" class="outline-2">
<h2 id="org97f66d0"><span class="section-number-2">11.</span> Conclusión</h2>
<div class="outline-text-2" id="text-11">
<p>
Con estas configuraciones, has convertido tu Emacs en una potente herramienta para la creación de gráficos y diagramas integrados directamente en tus documentos de Org Mode. Esta capacidad es especialmente útil para blogs técnicos como "Emacs con Esteroides", permitiéndote mantener todo tu contenido, incluidos los gráficos, como texto plano versionable.
</p>

<p>
La combinación de Org Mode con herramientas como Gnuplot, Ditaa, Graphviz, PlantUML y Mermaid te da un control sin precedentes sobre tus visualizaciones, sin necesidad de recurrir a programas externos complejos o formatos binarios que dificultan el versionado.
</p>

<p>
¿Qué gráficos crearás para tu próximo artículo?
</p>
</div>
</div>
<div id="outline-container-org5698df7" class="outline-2">
<h2 id="org5698df7"><span class="section-number-2">12.</span> Referencias y recursos adicionales</h2>
<div class="outline-text-2" id="text-12">
<ul class="org-ul">
<li><a href="https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-gnuplot.html">Documentación oficial de Org Babel para Gnuplot</a></li>
<li><a href="https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-ditaa.html">Documentación de Org Babel para Ditaa</a></li>
<li><a href="https://graphviz.org/documentation/">Documentación oficial de Graphviz</a></li>
<li><a href="https://plantuml.com/es/">Sitio oficial de PlantUML (en español)</a></li>
<li><a href="https://mermaid-js.github.io/mermaid/#/">Documentación de Mermaid</a></li>
<li><a href="https://github.com/bastibe/org-static-blog">Repositorio de org-static-blog en GitHub</a></li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutorial.html">tutorial</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-gráficos.html">gráficos</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-gnuplot.html">gnuplot</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-plantuml.html">plantuml</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-draft.html">draft</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-gnuplot.html">gnuplot</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ditaa.html">ditaa</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-graphviz.html">graphviz</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-plantuml.html">plantUML</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[tutorial]]></category>
  <category><![CDATA[gráficos]]></category>
  <category><![CDATA[gnuplot]]></category>
  <category><![CDATA[plantuml]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[draft]]></category>
  <category><![CDATA[gnuplot]]></category>
  <category><![CDATA[ditaa]]></category>
  <category><![CDATA[graphviz]]></category>
  <category><![CDATA[plantUML]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-29-configurar-emacs-para-creaci%C3%B3n-de-graficos.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-29-configurar-emacs-para-creaci%C3%B3n-de-graficos.html</guid>
  <pubDate>Sat, 29 Mar 2025 18:56:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Configuración Básica de Emacs con Org-mode: Guía Completa]]></title>
  <description><![CDATA[
<div id="outline-container-org11174f6" class="outline-2">
<h2 id="org11174f6">Configuración Básica de Emacs con Org-mode: Guía Completa</h2>
<div class="outline-text-2" id="text-org11174f6">
<p>
Este documento es una guía extensa para configurar Emacs con Org-mode desde cero, optimizando tu productividad con una herramienta poderosa y flexible. Incluye gráficos, diagramas y un ejemplo básico de `org-capture`. Si eres nuevo en Emacs o quieres perfeccionar tu setup, ¡este es tu punto de partida!
</p>
</div>
</div>
<div id="outline-container-org5836464" class="outline-2">
<h2 id="org5836464">1. Introducción a Emacs y Org-mode</h2>
<div class="outline-text-2" id="text-org5836464">
<p>
Emacs es un editor de texto extensible y personalizable, mientras que Org-mode es un paquete integrado que transforma Emacs en un sistema de organización, toma de notas, gestión de proyectos y más. Juntos, forman una combinación imbatible para flujos de trabajo modernos.
</p>
</div>
<div id="outline-container-org01926f3" class="outline-3">
<h3 id="org01926f3">¿Por qué usar Org-mode?</h3>
<div class="outline-text-3" id="text-org01926f3">
<ul class="org-ul">
<li>Estructura jerárquica para notas y tareas.</li>
<li>Integración con agendas, capturas rápidas y exportación (HTML, PDF, etc.).</li>
<li>Código ejecutable en bloques fuente (literate programming).</li>
</ul>
</div>
</div>
<div id="outline-container-orgc86d67a" class="outline-3">
<h3 id="orgc86d67a">Flujo de trabajo típico</h3>
<div class="outline-text-3" id="text-orgc86d67a">
<p>
Aquí hay un diagrama simple del flujo básico con Org-mode:
</p>


<figure id="orgbb31241">
<img src="images/workflow.png" alt="workflow.png">

</figure>


<ul class="org-ul">
<li><b>Renderiza</b>: Si tienes PlantUML instalado, usa `C-c C-c` en este bloque para generar `workflow.png`.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgb5f8073" class="outline-2">
<h2 id="orgb5f8073">2. Instalación Básica de Emacs</h2>
<div class="outline-text-2" id="text-orgb5f8073">
</div>
<div id="outline-container-orgdf505c8" class="outline-3">
<h3 id="orgdf505c8">Requisitos</h3>
<div class="outline-text-3" id="text-orgdf505c8">
<ul class="org-ul">
<li>Sistema operativo: Linux, macOS o Windows (WSL recomendado en Windows).</li>
<li>Espacio: ~50 MB para Emacs básico.</li>
</ul>
</div>
</div>
<div id="outline-container-org609d2fe" class="outline-3">
<h3 id="org609d2fe">Instalación en Linux</h3>
<div class="outline-text-3" id="text-org609d2fe">
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Ubuntu/Debian</span>
sudo apt update
sudo apt install emacs
<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Verifica versi&#243;n</span>
emacs --version
</pre>
</div>

<ul class="org-ul">
<li>Versión recomendada: 27.1 o superior (marzo 2025: 29.x probable).</li>
</ul>
</div>
</div>
<div id="outline-container-org1e8e72c" class="outline-3">
<h3 id="org1e8e72c">Instalación en macOS</h3>
<div class="outline-text-3" id="text-org1e8e72c">
<div class="org-src-container">
<pre class="src src-bash">brew install emacs
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org3a2e4ee" class="outline-2">
<h2 id="org3a2e4ee">3. Configuración Inicial de Emacs</h2>
<div class="outline-text-2" id="text-org3a2e4ee">
<p>
Emacs usa un archivo de configuración en `~/.emacs.d/init.el`. Vamos a crear uno básico.
</p>
</div>
<div id="outline-container-org81a67c0" class="outline-3">
<h3 id="org81a67c0">Estructura de directorios</h3>
<div class="outline-text-3" id="text-org81a67c0">

<figure id="org9b03bd0">
<img src="images/emacs_dirs.png" alt="emacs_dirs.png">

</figure>
</div>
</div>
<div id="outline-container-org5ee316e" class="outline-3">
<h3 id="org5ee316e">Configuración mínima en init.el</h3>
<div class="outline-text-3" id="text-org5ee316e">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Configuraci&#243;n b&#225;sica de Emacs</span>
(<span style="color: #D70000;">setq</span> inhibit-startup-message t)  <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Sin pantalla de bienvenida</span>
(tool-bar-mode -1)                <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Sin barra de herramientas</span>
(menu-bar-mode -1)                <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Sin barra de men&#250;</span>
(scroll-bar-mode -1)              <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Sin barras de desplazamiento</span>

<span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Configuraci&#243;n de paquetes</span>
(<span style="color: #D70000;">require</span> '<span style="color: #AF005F;">package</span>)
(add-to-list 'package-archives '(<span style="color: #005F00;">"melpa"</span> . <span style="color: #005F00;">"https://melpa.org/packages/"</span>) t)
(package-initialize)

<span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Instalar use-package si no est&#225; presente</span>
(<span style="color: #D70000;">unless</span> (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
(<span style="color: #D70000;">require</span> '<span style="color: #AF005F;">use-package</span>)
(<span style="color: #D70000;">setq</span> use-package-always-ensure t)  <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Descarga autom&#225;tica</span>
</pre>
</div>

<ul class="org-ul">
<li><b>Ejecuta</b>: Guarda esto en `~/.emacs.d/init.el` y reinicia Emacs (`C-x C-c` y vuelve a abrir).</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org1c5bd95" class="outline-2">
<h2 id="org1c5bd95">4. Configuración de Org-mode</h2>
<div class="outline-text-2" id="text-org1c5bd95">
<p>
Org-mode viene integrado en Emacs, pero podemos mejorarlo con ajustes y paquetes adicionales.
</p>
</div>
<div id="outline-container-orgb09f522" class="outline-3">
<h3 id="orgb09f522">Configuración básica de Org-mode</h3>
<div class="outline-text-3" id="text-orgb09f522">
<p>
Añade esto a `init.el`:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Configuraci&#243;n de Org-mode</span>
(<span style="color: #D70000;">use-package</span> <span style="color: #AF005F;">org</span>
  <span style="color: #1F55A0;">:config</span>
  (<span style="color: #D70000;">setq</span> org-startup-indented t)        <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Indentaci&#243;n autom&#225;tica</span>
  (<span style="color: #D70000;">setq</span> org-directory <span style="color: #005F00;">"~/org"</span>)         <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Directorio para archivos .org</span>
  (<span style="color: #D70000;">setq</span> org-default-notes-file <span style="color: #005F00;">"~/org/notes.org"</span>)  <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Archivo por defecto</span>
  (<span style="color: #D70000;">setq</span> org-agenda-files '(<span style="color: #005F00;">"~/org"</span>))   <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Archivos para agenda</span>
  (global-set-key (kbd <span style="color: #005F00;">"C-c a"</span>) 'org-agenda)  <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Atajo para agenda</span>
  (global-set-key (kbd <span style="color: #005F00;">"C-c c"</span>) 'org-capture))  <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Atajo para captura</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgcbc5e79" class="outline-3">
<h3 id="orgcbc5e79">Directorios sugeridos</h3>
<div class="outline-text-3" id="text-orgcbc5e79">
<div class="org-src-container">
<pre class="src src-bash">mkdir -p ~/org
touch ~/org/notes.org
</pre>
</div>
</div>
</div>
<div id="outline-container-orga0a74a8" class="outline-3">
<h3 id="orga0a74a8">Estructura de Org-mode</h3>
<div class="outline-text-3" id="text-orga0a74a8">

<figure id="org05828d7">
<img src="images/org_structure.png" alt="org_structure.png">

</figure>
</div>
</div>
</div>
<div id="outline-container-org0e50722" class="outline-2">
<h2 id="org0e50722">5. Ejemplo Básico de Org-capture</h2>
<div class="outline-text-2" id="text-org0e50722">
<p>
`org-capture` te permite capturar ideas rápidamente sin interrumpir tu flujo. Configurémoslo.
</p>
</div>
<div id="outline-container-orgd3f39c7" class="outline-3">
<h3 id="orgd3f39c7">Configuración de captura en init.el</h3>
<div class="outline-text-3" id="text-orgd3f39c7">
<p>
Añade esto a tu `init.el`:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Configuraci&#243;n de org-capture</span>
(<span style="color: #D70000;">setq</span> org-capture-templates
      '((<span style="color: #005F00;">"t"</span> <span style="color: #005F00;">"Tarea"</span> entry (file <span style="color: #005F00;">"~/org/notes.org"</span>)
         <span style="color: #005F00;">"* TODO %?\n  %U\n  %a"</span>)
        (<span style="color: #005F00;">"n"</span> <span style="color: #005F00;">"Nota"</span> entry (file <span style="color: #005F00;">"~/org/notes.org"</span>)
         <span style="color: #005F00;">"* %?\n  %U\n  %a"</span>)))
</pre>
</div>

<ul class="org-ul">
<li><b>Explicación</b>:
<ul class="org-ul">
<li>`"t"`: Plantilla para tareas (TODO).</li>
<li>`"n"`: Plantilla para notas.</li>
<li>`%?`: Cursor aquí tras capturar.</li>
<li>`%U`: Fecha/hora de creación.</li>
<li>`%a`: Enlace al contexto actual.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org402ff78" class="outline-3">
<h3 id="org402ff78">Uso de org-capture</h3>
<div class="outline-text-3" id="text-org402ff78">
<ol class="org-ol">
<li>Presiona `C-c c`.</li>
<li>Elige `t` (tarea) o `n` (nota).</li>
<li>Escribe y finaliza con `C-c C-c`.</li>
</ol>
</div>
</div>
<div id="outline-container-orgc14bb2e" class="outline-3">
<h3 id="orgc14bb2e">Ejemplo de captura</h3>
<div class="outline-text-3" id="text-orgc14bb2e">
<p>
Imagina que estás trabajando y tienes una idea. Presionas `C-c c n`, escribes "Reunión con equipo", y el resultado en `~/org/notes.org` será:
</p>


<pre class="example" id="org2833642">
- **Reunión con equipo**
  SCHEDULED: &lt;2025-03-27 Thu 10:15&gt;
  :PROPERTIES:
  :CATEGORY: REUNIÓN
  :END:
</pre>
</div>
</div>
</div>
<div id="outline-container-org31c3ac6" class="outline-2">
<h2 id="org31c3ac6">6. Personalización Adicional</h2>
<div class="outline-text-2" id="text-org31c3ac6">
</div>
<div id="outline-container-org74698db" class="outline-3">
<h3 id="org74698db">Temas visuales</h3>
<div class="outline-text-3" id="text-org74698db">
<p>
Instala un tema para mejorar la experiencia:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">use-package</span> <span style="color: #AF005F;">doom-themes</span>
  <span style="color: #1F55A0;">:config</span>
  (load-theme 'doom-one t))
</pre>
</div>
</div>
</div>
<div id="outline-container-org4b4f51a" class="outline-3">
<h3 id="org4b4f51a">Atajos útiles</h3>
<div class="outline-text-3" id="text-org4b4f51a">
<div class="org-src-container">
<pre class="src src-emacs-lisp">(global-set-key (kbd <span style="color: #005F00;">"C-c l"</span>) 'org-store-link)  <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Guardar enlace</span>
(global-set-key (kbd <span style="color: #005F00;">"C-c o"</span>) 'org-open-at-point)  <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Abrir enlace</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org6ba9645" class="outline-3">
<h3 id="org6ba9645">Exportación</h3>
<div class="outline-text-3" id="text-org6ba9645">
<p>
Org-mode exporta a múltiples formatos. Prueba:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #004700;">#+EXPORT_FILE_NAME: mi_documento.html</span>
Crea un documento y usa `C-c C-e h o` para exportar a HTML y abrirlo.
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org9e62f15" class="outline-2">
<h2 id="org9e62f15">7. Ejemplo Completo de Archivo Org</h2>
<div class="outline-text-2" id="text-org9e62f15">
<p>
Aquí hay un archivo de ejemplo para `~/org/notes.org`:
</p>

<p>
#+BEGIN<sub>SRC</sub> org :tangle ~/org/notes.org
</p>
</div>
</div>
<div id="outline-container-orgd799957" class="outline-2">
<h2 id="orgd799957">Tareas</h2>
<div class="outline-text-2" id="text-orgd799957">
</div>
<div id="outline-container-org1fa14fc" class="outline-3">
<h3 id="org1fa14fc"><span class="todo TODO">TODO</span> Comprar víveres</h3>
<div class="outline-text-3" id="text-org1fa14fc">
</div>
</div>
<div id="outline-container-org4ef4be4" class="outline-3">
<h3 id="org4ef4be4"><span class="done DONE">DONE</span> Configurar Emacs</h3>
<div class="outline-text-3" id="text-org4ef4be4">
</div>
</div>
</div>
<div id="outline-container-org0b1a89d" class="outline-2">
<h2 id="org0b1a89d">Notas</h2>
<div class="outline-text-2" id="text-org0b1a89d">
</div>
<div id="outline-container-orga26946a" class="outline-3">
<h3 id="orga26946a">Reunión con equipo</h3>
<div class="outline-text-3" id="text-orga26946a">
<p>
<span class="timestamp-wrapper"><span class="timestamp">[2025-03-27 jue 10:15]</span></span>
</p>
<ul class="org-ul">
<li>Discutir proyecto Emacs.</li>
<li>Planificar siguiente semana.</li>
</ul>
<p>
#+END<sub>SRC</sub>
</p>
</div>
</div>
</div>
<div id="outline-container-orga849acf" class="outline-2">
<h2 id="orga849acf">8. Gráficos y Diagramas Avanzados</h2>
<div class="outline-text-2" id="text-orga849acf">
</div>
<div id="outline-container-org6695ead" class="outline-3">
<h3 id="org6695ead">Diagrama de configuración completa</h3>
<div class="outline-text-3" id="text-org6695ead">

<figure id="org2e8ba04">
<img src="images/full_config.png" alt="full_config.png">

</figure>

<ul class="org-ul">
<li><b>Renderiza</b>: `C-c C-c` para ver cómo fluye todo.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgfd2ac62" class="outline-2">
<h2 id="orgfd2ac62">9. Consejos y Trucos</h2>
<div class="outline-text-2" id="text-orgfd2ac62">
<ul class="org-ul">
<li><b>Navegación</b>: `C-c C-n` (siguiente encabezado), `C-c C-p` (anterior).</li>
<li><b>Tareas</b>: `C-c C-t` para cambiar estado (TODO/DONE).</li>
<li><b>Agenda</b>: `C-c a a` para vista semanal.</li>
<li><b>Tangle</b>: `C-c C-v t` para extraer código a archivos.</li>
</ul>
</div>
</div>
<div id="outline-container-org4070fe4" class="outline-2">
<h2 id="org4070fe4">10. Conclusión</h2>
<div class="outline-text-2" id="text-org4070fe4">
<p>
Con esta configuración básica, tienes un Emacs funcional con Org-mode listo para tomar notas, gestionar tareas y generar contenido. Personalízalo según tus necesidades y explora paquetes como `org-roam` o `org-static-blog` para más potencia. ¿Listo para empezar? Abre Emacs, aplica esta guía y captura tu primera idea con `C-c c`.
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #009B7C; font-weight: bold; text-decoration: underline;"><a href="https://orgmode.org/">Documentaci&#243;n oficial de Org-mode</a></span>
</pre>
</div>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-guía.html">guía</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[tutoriales]]></category>
  <category><![CDATA[guía]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-27-configuraci%C3%B3n-b%C3%A1sica-de-emacs-con-org-mode:-gu%C3%ADa-completa.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-27-configuraci%C3%B3n-b%C3%A1sica-de-emacs-con-org-mode:-gu%C3%ADa-completa.html</guid>
  <pubDate>Thu, 27 Mar 2025 21:44:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Guía Completa para Iniciarse en Emacs (ii)]]></title>
  <description><![CDATA[
<div id="outline-container-org2390b18" class="outline-2">
<h2 id="org2390b18"><span class="section-number-2">1.</span> Introducción a Emacs</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-org438f690" class="outline-3">
<h3 id="org438f690"><span class="section-number-3">1.1.</span> ¿Qué es Emacs?</h3>
<div class="outline-text-3" id="text-1-1">
<p>
Emacs es un editor de texto altamente personalizable y entorno de desarrollo integrado. Más que un simple editor, es una plataforma completa para trabajar con texto, código, documentos y más.
</p>
</div>
</div>
<div id="outline-container-org577c775" class="outline-3">
<h3 id="org577c775"><span class="section-number-3">1.2.</span> Primeros Pasos</h3>
<div class="outline-text-3" id="text-1-2">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Para empezar r&#225;pidamente:</span>
(menu-bar-mode 1)   <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Activar barra de men&#250; (recomendado para principiantes)</span>
(tool-bar-mode 0)   <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Desactivar barra de herramientas</span>
(scroll-bar-mode 0) <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Desactivar barra de desplazamiento</span>
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org38eea4d" class="outline-2">
<h2 id="org38eea4d"><span class="section-number-2">2.</span> Diagrama: Ruta de Aprendizaje Emacs</h2>
<div class="outline-text-2" id="text-2">

<figure id="org855b8b8">
<img src="images/emacs_learning_path_corrected.png" alt="emacs_learning_path_corrected.png">

</figure>
</div>
</div>
<div id="outline-container-org03f4c08" class="outline-2">
<h2 id="org03f4c08"><span class="section-number-2">3.</span> Sección 1: Fundamentos Esenciales</h2>
<div class="outline-text-2" id="text-3">
</div>
<div id="outline-container-org81ac3de" class="outline-3">
<h3 id="org81ac3de"><span class="section-number-3">3.1.</span> Movimiento Básico</h3>
<div class="outline-text-3" id="text-3-1">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Comando</th>
<th scope="col" class="org-left">Tecla</th>
<th scope="col" class="org-left">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Avanzar carácter</td>
<td class="org-left">C-f</td>
<td class="org-left">Mover derecha</td>
</tr>

<tr>
<td class="org-left">Retroceder</td>
<td class="org-left">C-b</td>
<td class="org-left">Mover izquierda</td>
</tr>

<tr>
<td class="org-left">Siguiente línea</td>
<td class="org-left">C-n</td>
<td class="org-left">Mover abajo</td>
</tr>

<tr>
<td class="org-left">Línea anterior</td>
<td class="org-left">C-p</td>
<td class="org-left">Mover arriba</td>
</tr>

<tr>
<td class="org-left">Inicio línea</td>
<td class="org-left">C-a</td>
<td class="org-left">Ir al inicio</td>
</tr>

<tr>
<td class="org-left">Fin línea</td>
<td class="org-left">C-e</td>
<td class="org-left">Ir al final</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org5700597" class="outline-3">
<h3 id="org5700597"><span class="section-number-3">3.2.</span> Comandos Vitales</h3>
<div class="outline-text-3" id="text-3-2">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Guardar archivo: C-x C-s</span>
<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Salir de Emacs: C-x C-c</span>
<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Abrir archivo: C-x C-f</span>
<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Guardar como: C-x C-w</span>
<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Cortar texto: C-w</span>
<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Pegar texto: C-y</span>
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org4fdbd24" class="outline-2">
<h2 id="org4fdbd24"><span class="section-number-2">4.</span> Sección 2: Personalización Básica</h2>
<div class="outline-text-2" id="text-4">
</div>
<div id="outline-container-org2d24ea8" class="outline-3">
<h3 id="org2d24ea8"><span class="section-number-3">4.1.</span> Archivo de Configuración</h3>
<div class="outline-text-3" id="text-4-1">
<p>
Tu archivo ~/.emacs.d/init.el es el corazón de tu configuración:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Ejemplo b&#225;sico de init.el</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> inhibit-startup-screen t)  <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Desactivar pantalla de inicio</span>
(global-linum-mode t)           <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Mostrar n&#250;meros de l&#237;nea</span>
(load-theme 'modus-vivendi t)   <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Tema oscuro</span>
(<span style="color: #219fd5; font-style: italic;">setq-default</span> indent-tabs-mode nil) <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Usar espacios, no tabs</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org5ae8e33" class="outline-3">
<h3 id="org5ae8e33"><span class="section-number-3">4.2.</span> Gestión de Paquetes</h3>
<div class="outline-text-3" id="text-4-2">
<ol class="org-ol">
<li>Configurar MELPA (repositorio de paquetes):</li>
</ol>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">package</span>)
(add-to-list 'package-archives '(<span style="color: #a44185;">"melpa"</span> . <span style="color: #a44185;">"https://melpa.org/packages/"</span>) t)
(package-initialize)
</pre>
</div>

<ol class="org-ol">
<li>Instalar paquetes:</li>
<li>M-x package-install RET [nombre-paquete]</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-org0528160" class="outline-2">
<h2 id="org0528160"><span class="section-number-2">5.</span> Sección 3: Org Mode - Tu Nuevo Mejor Amigo</h2>
<div class="outline-text-2" id="text-5">
</div>
<div id="outline-container-orga0f1d0f" class="outline-3">
<h3 id="orga0f1d0f"><span class="section-number-3">5.1.</span> Conceptos Básicos</h3>
<div class="outline-text-3" id="text-5-1">
<ul class="org-ul">
<li>Jerarquía con * (asteriscos)</li>
<li>Listas con - o +</li>
<li>Código fuente con #+BEGIN<sub>SRC</sub></li>
</ul>
</div>
</div>
<div id="outline-container-orgadcc374" class="outline-3">
<h3 id="orgadcc374"><span class="section-number-3">5.2.</span> Ejemplo de Documento Org</h3>
<div class="outline-text-3" id="text-5-2">
<p>
#+BEGIN<sub>SRC</sub> org
</p>
</div>
</div>
</div>
<div id="outline-container-org3084399" class="outline-2">
<h2 id="org3084399"><span class="section-number-2">6.</span> Tareas Pendientes</h2>
<div class="outline-text-2" id="text-6">
</div>
<div id="outline-container-orgf3a72c3" class="outline-3">
<h3 id="orgf3a72c3"><span class="section-number-3">6.1.</span> Trabajo</h3>
<div class="outline-text-3" id="text-6-1">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Revisar informe</li>
<li class="off"><code>[&#xa0;]</code> Enviar correo a cliente</li>
</ul>
</div>
</div>
<div id="outline-container-org3bc28b2" class="outline-3">
<h3 id="org3bc28b2"><span class="section-number-3">6.2.</span> Personal</h3>
<div class="outline-text-3" id="text-6-2">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Comprar víveres</li>
</ul>
<p>
#+END<sub>SRC</sub>
</p>
</div>
</div>
</div>
<div id="outline-container-org1d2d0c0" class="outline-2">
<h2 id="org1d2d0c0"><span class="section-number-2">7.</span> Recursos Recomendados</h2>
<div class="outline-text-2" id="text-7">
<ol class="org-ol">
<li>Manual oficial: C-h r</li>
<li>Tutorial interactivo: C-h t</li>
<li>Comunidad: /r/emacs en Reddit</li>
<li>Libro: "Mastering Emacs" - Mickey Petersen</li>
</ol>
</div>
</div>
<div id="outline-container-org649cd41" class="outline-2">
<h2 id="org649cd41"><span class="section-number-2">8.</span> Próximos Pasos</h2>
<div class="outline-text-2" id="text-8">
<ol class="org-ol">
<li>Practicar 15 min/día los atajos básicos</li>
<li>Personalizar tu init.el gradualmente</li>
<li>Explorar Org Mode para organización personal</li>
<li>Unirte a la comunidad Emacs</li>
</ol>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">&#218;ltimo consejo: Paciencia y pr&#225;ctica constante</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> learning-curve 'steep-but-rewarding)
</pre>
</div>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-26-gu%C3%ADa-completa-para-iniciarse-en-emacs-(ii).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-26-gu%C3%ADa-completa-para-iniciarse-en-emacs-(ii).html</guid>
  <pubDate>Wed, 26 Mar 2025 08:06:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Configuración básica y mínima para empezar con Emacs (i)]]></title>
  <description><![CDATA[
<div id="outline-container-org9fa2658" class="outline-2">
<h2 id="org9fa2658"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
Emacs es más que un editor: es un entorno poderoso y personalizable. Si estás empezando, una configuración mínima te permite trabajar cómodamente sin abrumarte. Aquí te presento una setup básica, observaciones y un pequeño "how-to" para arrancar con Emacs y esteroides.
</p>
</div>
</div>
<div id="outline-container-org065beec" class="outline-2">
<h2 id="org065beec"><span class="section-number-2">2.</span> Configuración mínima</h2>
<div class="outline-text-2" id="text-2">
<p>
Para empezar, crea o edita tu archivo de configuración en <code>~/.emacs.d/init.el</code>. Aquí tienes un ejemplo básico:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n b&#225;sica de Emacs</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> inhibit-startup-message t)         <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Desactiva la pantalla de bienvenida</span>
(tool-bar-mode -1)                       <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Oculta la barra de herramientas</span>
(menu-bar-mode -1)                       <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Oculta la barra de men&#250;s</span>
(scroll-bar-mode -1)                     <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Oculta la barra de desplazamiento</span>
(global-display-line-numbers-mode t)     <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Muestra n&#250;meros de l&#237;nea</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> make-backup-files nil)             <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Desactiva archivos de respaldo (~)</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> auto-save-default nil)             <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Desactiva guardado autom&#225;tico</span>

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Fuentes y apariencia</span>
(set-face-attribute 'default nil <span style="color: #dc3eb7;">:font</span> <span style="color: #a44185;">"DejaVu Sans Mono-12"</span>) <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Fuente b&#225;sica</span>

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Paquetes b&#225;sicos (usando use-package)</span>
(package-initialize)
(<span style="color: #219fd5; font-style: italic;">unless</span> package-archive-contents
  (package-refresh-contents))
(<span style="color: #219fd5; font-style: italic;">setq</span> package-archives '((<span style="color: #a44185;">"gnu"</span> . <span style="color: #a44185;">"https://elpa.gnu.org/packages/"</span>)
                         (<span style="color: #a44185;">"melpa"</span> . <span style="color: #a44185;">"https://melpa.org/packages/"</span>)))
(<span style="color: #219fd5; font-style: italic;">unless</span> (package-installed-p 'use-package)
  (package-install 'use-package))
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">use-package</span>)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Org Mode b&#225;sico</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-startup-indented t))         <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Indentaci&#243;n autom&#225;tica en Org Mode</span>
</pre>
</div>

<p>
Esto te da un Emacs limpio, con números de línea, sin distracciones y Org Mode listo para usar.
</p>
</div>
</div>
<div id="outline-container-org2c9501c" class="outline-2">
<h2 id="org2c9501c"><span class="section-number-2">3.</span> How-to: Empezar a trabajar</h2>
<div class="outline-text-2" id="text-3">
<ol class="org-ol">
<li>Abre Emacs: <code>emacs &amp;</code> en la terminal o usa el ícono si lo instalaste gráficamente.</li>
<li>Si no existe, crea <code>~/.emacs.d/init.el</code> con <code>C-x C-f ~/.emacs.d/init.el</code>.</li>
<li>Copia y pega el código anterior.</li>
<li>Guarda con <code>C-x C-s</code> y reinicia Emacs (<code>C-x C-c</code> y vuelve a abrirlo).</li>
<li>Prueba Org Mode: abre un archivo <code>.org</code> (<code>C-x C-f prueba.org</code>) y escribe algo como <code>* Tarea 1</code>.</li>
</ol>

<p>
¡Ya estás trabajando con Emacs!
</p>
</div>
</div>
<div id="outline-container-orgfdbcd19" class="outline-2">
<h2 id="orgfdbcd19"><span class="section-number-2">4.</span> Observaciones</h2>
<div class="outline-text-2" id="text-4">
<ul class="org-ul">
<li><b><b>Ligereza</b></b>: Esta configuración es mínima y rápida, ideal para principiantes.</li>
<li><b><b>Escalabilidad</b></b>: Puedes añadir más paquetes (como <code>magit</code> o <code>evil</code>) con <code>use-package</code> cuando estés listo.</li>
<li><b><b>Aprendizaje</b></b>: Los atajos (<code>C-x</code> significa Ctrl+x) son clave; practica con <code>C-h t</code> (tutorial integrado).</li>
<li><b><b>Flexibilidad</b></b>: Cambia la fuente o ajustes según tu gusto en <code>init.el</code>.</li>
</ul>
</div>
</div>
<div id="outline-container-org84e6940" class="outline-2">
<h2 id="org84e6940"><span class="section-number-2">5.</span> Conclusión</h2>
<div class="outline-text-2" id="text-5">
<p>
Con esta base, tienes un Emacs funcional para escribir, organizar y experimentar. Es el primer paso para dominar esta herramienta legendaria. ¿Listo para trabajar con esteroides? ¡Emacs te espera!
</p>

<blockquote>
<p>
"Emacs: donde cada tecla es una puerta a la productividad."
</p>
</blockquote>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-inicio.html">inicio</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-programacion.html">programacion</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-lenguaje.html">lenguaje</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[tutoriales]]></category>
  <category><![CDATA[inicio]]></category>
  <category><![CDATA[programacion]]></category>
  <category><![CDATA[lenguaje]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-26-configuraci%C3%B3n-b%C3%A1sica-y-m%C3%ADnima-para-empezar-con-emacs-(i).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-26-configuraci%C3%B3n-b%C3%A1sica-y-m%C3%ADnima-para-empezar-con-emacs-(i).html</guid>
  <pubDate>Wed, 26 Mar 2025 07:50:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Por Qué Elegí GitHub para Publicar Mi Blog]]></title>
  <description><![CDATA[
<div id="outline-container-orgf9b9516" class="outline-2">
<h2 id="orgf9b9516">Introducción</h2>
<div class="outline-text-2" id="text-orgf9b9516">
<p>
Cuando decidí lanzar mi blog, busqué una solución que fuera económica, adaptable y compatible con mi flujo de trabajo en Emacs. Tras evaluar opciones como WordPress, Medium o servidores privados, opté por GitHub, una plataforma que no solo cumple estos criterios, sino que los supera con creces. En este post, detallo por qué GitHub es mi elección para publicar un blog estático, centrándome en tres pilares: <b><b>gratuidad</b></b>, <b><b>flexibilidad</b></b> y <b><b>facilidad de integración con Emacs</b></b>. Con ejemplos prácticos, datos visuales y reflexiones personales, espero convencerte de que esta combinación es imbatible para blogueros técnicos en 2025.
</p>
</div>
</div>
<div id="outline-container-orga10e69d" class="outline-2">
<h2 id="orga10e69d">¿Qué es GitHub y Por Qué un Blog Estático?</h2>
<div class="outline-text-2" id="text-orga10e69d">
<p>
GitHub es una plataforma de alojamiento de código basada en Git, conocida por su uso en desarrollo colaborativo. Sin embargo, gracias a <b><b>GitHub Pages</b></b>, también permite alojar sitios web estáticos gratis. Un blog estático, generado con herramientas como Org Static Blog, Hugo o Jekyll, convierte archivos de texto (Markdown, Org-mode, etc.) en HTML, eliminando bases de datos y servidores dinámicos. Esta simplicidad lo hace ideal para quienes priorizan control y eficiencia.
</p>
</div>
<div id="outline-container-org3ad575a" class="outline-3">
<h3 id="org3ad575a">Ventajas Iniciales</h3>
<div class="outline-text-3" id="text-org3ad575a">
<ul class="org-ul">
<li>No requiere mantenimiento de servidores.</li>
<li>Compatible con flujos de escritura en texto plano.</li>
<li>Escalable sin costos adicionales.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgffb674b" class="outline-2">
<h2 id="orgffb674b">Razones para Elegir GitHub</h2>
<div class="outline-text-2" id="text-orgffb674b">
<p>
A continuación, analizo los tres motivos clave que me llevaron a elegir GitHub, con detalles técnicos y prácticos.
</p>
</div>
<div id="outline-container-org3fb68f0" class="outline-3">
<h3 id="org3fb68f0">Gratuidad: Publicar Sin Costo</h3>
<div class="outline-text-3" id="text-org3fb68f0">
</div>
<div id="outline-container-org43fdae1" class="outline-4">
<h4 id="org43fdae1">Descripción</h4>
<div class="outline-text-4" id="text-org43fdae1">
<p>
GitHub Pages ofrece alojamiento gratuito para sitios estáticos públicos, sin límites estrictos de ancho de banda o almacenamiento (dentro de uso razonable). Esto contrasta con plataformas como WordPress.com ($4-$45/mes) o servidores VPS ($5-$20/mes en AWS o DigitalOcean).
</p>
</div>
</div>
<div id="outline-container-org9ba5d8b" class="outline-4">
<h4 id="org9ba5d8b">Beneficios</h4>
<div class="outline-text-4" id="text-org9ba5d8b">
<ul class="org-ul">
<li><b><b>Costo Cero</b></b>: Perfecto para blogueros principiantes o experimentales.</li>
<li><b><b>Escalabilidad</b></b>: Según <b>GitHub Stats</b> (2024), soporta millones de visitas mensuales sin cargos.</li>
<li><b><b>Dominio Personalizado</b></b>: Gratis con configuración DNS simple (ej. `tunombre.com`).</li>
</ul>
</div>
</div>
<div id="outline-container-org41bf743" class="outline-4">
<h4 id="org41bf743">Ejemplo Práctico</h4>
<div class="outline-text-4" id="text-org41bf743">
<ul class="org-ul">
<li><b><b>Escenario</b></b>: Quiero lanzar un blog sin invertir dinero.</li>
<li><b><b>Acción</b></b>: Creo un repositorio `username.github.io`, subo archivos HTML generados con Org-mode, y publico en minutos.</li>
<li><b><b>Resultado</b></b>: Blog en línea sin gastar un centavo, a diferencia de $48/año en WordPress Básico.</li>
</ul>
</div>
</div>
<div id="outline-container-org7347c25" class="outline-4">
<h4 id="org7347c25">Limitaciones</h4>
<div class="outline-text-4" id="text-org7347c25">
<ul class="org-ul">
<li>Solo sitios estáticos (sin PHP o bases de datos dinámicas).</li>
<li>Repositorios privados requieren GitHub Pro ($4/mes), pero no son necesarios para blogs públicos.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgdfd2392" class="outline-3">
<h3 id="orgdfd2392">Flexibilidad: Control Total Sobre el Contenido</h3>
<div class="outline-text-3" id="text-orgdfd2392">
</div>
<div id="outline-container-orgcc84075" class="outline-4">
<h4 id="orgcc84075">Descripción</h4>
<div class="outline-text-4" id="text-orgcc84075">
<p>
GitHub permite personalizar cada aspecto del blog mediante control de versiones (Git) y compatibilidad con generadores estáticos. No impone plantillas rígidas ni anuncios, a diferencia de Medium o Blogger.
</p>
</div>
</div>
<div id="outline-container-org36fb88c" class="outline-4">
<h4 id="org36fb88c">Beneficios</h4>
<div class="outline-text-4" id="text-org36fb88c">
<ul class="org-ul">
<li><b><b>Control de Código</b></b>: Edito mi blog como un proyecto de software, con ramas y pull requests.</li>
<li><b><b>Personalización</b></b>: Uso CSS propio, integro CI/CD con GitHub Actions para automatizar publicaciones.</li>
<li><b><b>Portabilidad</b></b>: Puedo migrar mi blog a otra plataforma exportando el repositorio.</li>
</ul>
</div>
</div>
<div id="outline-container-org235c198" class="outline-4">
<h4 id="org235c198">Ejemplo Práctico</h4>
<div class="outline-text-4" id="text-org235c198">
<ul class="org-ul">
<li><b><b>Escenario</b></b>: Quiero probar un nuevo diseño.</li>
<li><b><b>Acción</b></b>: Creo una rama `nuevo-diseño`, edito el CSS en Emacs, hago commit y pruebo en un subdominio temporal (GitHub Actions despliega automáticamente).</li>
<li><b><b>Resultado</b></b>: Cambio implementado en horas, sin restricciones de plantilla como en WordPress.</li>
</ul>
</div>
</div>
<div id="outline-container-org7ca77dd" class="outline-4">
<h4 id="org7ca77dd">Comparación</h4>
<div class="outline-text-4" id="text-org7ca77dd">
<ul class="org-ul">
<li>Medium: $5/mes, diseño limitado, contenido tras paywall.</li>
<li>GitHub: Gratis, diseño 100% editable, contenido siempre accesible.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgd45c397" class="outline-3">
<h3 id="orgd45c397">Facilidad de Integración con Emacs</h3>
<div class="outline-text-3" id="text-orgd45c397">
</div>
<div id="outline-container-orga77c483" class="outline-4">
<h4 id="orga77c483">Descripción</h4>
<div class="outline-text-4" id="text-orga77c483">
<p>
Como usuario de Emacs, GitHub se integra perfectamente con mi flujo de escritura en Org-mode. Con paquetes como `org-static-blog`, `magit` y `ox-html`, escribo, gestiono y publico directamente desde Emacs.
</p>
</div>
</div>
<div id="outline-container-orgcab0984" class="outline-4">
<h4 id="orgcab0984">Beneficios</h4>
<div class="outline-text-4" id="text-orgcab0984">
<ul class="org-ul">
<li><b><b>Escritura en Org-mode</b></b>: Formato ligero, exportable a HTML con un comando (`C-c C-e h h`).</li>
<li><b><b>Control de Versiones con Magit</b></b>: Hago commits y pushes sin salir de Emacs (`C-x g`).</li>
<li><b><b>Automatización</b></b>: Configuro GitHub Actions para generar y desplegar el sitio al hacer push.</li>
</ul>
</div>
</div>
<div id="outline-container-org9be0477" class="outline-4">
<h4 id="org9be0477">Ejemplo Práctico</h4>
<div class="outline-text-4" id="text-org9be0477">
<ul class="org-ul">
<li><b><b>Escenario</b></b>: Escribo un post sobre gestión del tiempo.</li>
<li><b><b>Acción</b></b>:  
<ol class="org-ol">
<li>Creo `post-gestion-tiempo.org` en Emacs.</li>
<li>Escribo en Org-mode con títulos, tablas y código.</li>
<li>Exporto a HTML con `org-static-blog-publish-file`.</li>
<li>Uso Magit para commit (`C-c C-c`) y push (`P p`).</li>
</ol></li>
<li><b><b>Resultado</b></b>: Post publicado en mi blog en &lt;10 minutos, todo desde Emacs.</li>
</ul>
</div>
</div>
<div id="outline-container-orgf006f0a" class="outline-4">
<h4 id="orgf006f0a">Flujo Técnico</h4>
<div class="outline-text-4" id="text-orgf006f0a">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n b&#225;sica en .emacs</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org-static-blog</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-static-blog-publish-title <span style="color: #a44185;">"Mi Blog"</span>)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-static-blog-publish-url <span style="color: #a44185;">"https://username.github.io/"</span>)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-static-blog-publish-directory <span style="color: #a44185;">"~/blog/public/"</span>))
</pre>
</div>
</div>
</div>
</div>
</div>
<div id="outline-container-org1c12c57" class="outline-2">
<h2 id="org1c12c57">Comparación con Otras Plataformas</h2>
<div class="outline-text-2" id="text-org1c12c57">
<table id="orgb616095">
<caption class="t-above"><span class="table-number">Table 1:</span> Comparativa de Plataformas para Blogs</caption>

<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Plataforma</th>
<th scope="col" class="org-left">Costo Mensual</th>
<th scope="col" class="org-left">Flexibilidad Diseño</th>
<th scope="col" class="org-left">Integración Emacs</th>
<th scope="col" class="org-left">Control Contenido</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">GitHub Pages</td>
<td class="org-left">$0</td>
<td class="org-left">Alta</td>
<td class="org-left">Excelente</td>
<td class="org-left">Total</td>
</tr>

<tr>
<td class="org-left">WordPress.com</td>
<td class="org-left">$4-$45</td>
<td class="org-left">Media</td>
<td class="org-left">Baja</td>
<td class="org-left">Limitada</td>
</tr>

<tr>
<td class="org-left">Medium</td>
<td class="org-left">$5</td>
<td class="org-left">Baja</td>
<td class="org-left">Nula</td>
<td class="org-left">Parcial (paywall)</td>
</tr>

<tr>
<td class="org-left">VPS (AWS)</td>
<td class="org-left">$5-$20</td>
<td class="org-left">Muy Alta</td>
<td class="org-left">Media</td>
<td class="org-left">Total</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-orge69386d" class="outline-2">
<h2 id="orge69386d">Gráfico: Costo vs Flexibilidad</h2>
<div class="outline-text-2" id="text-orge69386d">
</div>
</div>
<div id="outline-container-org8923f21" class="outline-2">
<h2 id="org8923f21">Comparación de Plataformas</h2>
<div class="outline-text-2" id="text-org8923f21">
<table>


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Plataforma</th>
<th scope="col" class="org-left">Costo Mensual</th>
<th scope="col" class="org-left">Flexibilidad Diseño</th>
<th scope="col" class="org-left">Integración Emacs</th>
<th scope="col" class="org-left">Control Contenido</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">GitHub Pages</td>
<td class="org-left">$0</td>
<td class="org-left">Alta</td>
<td class="org-left">Excelente</td>
<td class="org-left">Total</td>
</tr>

<tr>
<td class="org-left">WordPress.com</td>
<td class="org-left">$4-$45</td>
<td class="org-left">Media</td>
<td class="org-left">Baja</td>
<td class="org-left">Limitada</td>
</tr>

<tr>
<td class="org-left">Medium</td>
<td class="org-left">$5</td>
<td class="org-left">Baja</td>
<td class="org-left">Nula</td>
<td class="org-left">Parcial (paywall)</td>
</tr>

<tr>
<td class="org-left">VPS (AWS)</td>
<td class="org-left">$5-$20</td>
<td class="org-left">Muy Alta</td>
<td class="org-left">Media</td>
<td class="org-left">Total</td>
</tr>
</tbody>
</table>



<table id="org06e1027">


<colgroup>
<col  class="org-left">

<col  class="org-right">

<col  class="org-right">

<col  class="org-right">

<col  class="org-right">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Plataforma</th>
<th scope="col" class="org-right">Costo Mensual</th>
<th scope="col" class="org-right">Flexibilidad Diseño</th>
<th scope="col" class="org-right">Integración Emacs</th>
<th scope="col" class="org-right">Control Contenido</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">GitHub Pages</td>
<td class="org-right">0</td>
<td class="org-right">3</td>
<td class="org-right">4</td>
<td class="org-right">4</td>
</tr>

<tr>
<td class="org-left">WordPress.com</td>
<td class="org-right">4</td>
<td class="org-right">2</td>
<td class="org-right">1</td>
<td class="org-right">2</td>
</tr>

<tr>
<td class="org-left">Medium</td>
<td class="org-right">5</td>
<td class="org-right">1</td>
<td class="org-right">0</td>
<td class="org-right">1</td>
</tr>

<tr>
<td class="org-left">VPS (AWS)</td>
<td class="org-right">5</td>
<td class="org-right">4</td>
<td class="org-right">2</td>
<td class="org-right">4</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org848bd62" class="outline-2">
<h2 id="org848bd62">Gráfico de Comparación</h2>
<div class="outline-text-2" id="text-org848bd62">

<figure id="org1116c12">
<img src="grafico_github.png" alt="grafico_github.png">

</figure>


<figure id="orgb1a6396">
<img src="images/grafico_github.png" alt="grafico_github.png">

</figure>
</div>
<div id="outline-container-org8b8ce2e" class="outline-3">
<h3 id="org8b8ce2e">Análisis del Gráfico</h3>
<div class="outline-text-3" id="text-org8b8ce2e">
<ul class="org-ul">
<li><b><b>GitHub Pages</b></b>: $0, flexibilidad 9/10 (limitada solo por ser estático).</li>
<li><b><b>WordPress</b></b>: $15 promedio, flexibilidad 5/10 (plantillas restrictivas).</li>
<li><b><b>Medium</b></b>: $5, flexibilidad 3/10 (diseño fijo).</li>
<li><b><b>VPS</b></b>: $12 promedio, flexibilidad 10/10 (pero requiere más configuración).</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org1cf5786" class="outline-2">
<h2 id="org1cf5786">Desafíos y Soluciones</h2>
<div class="outline-text-2" id="text-org1cf5786">
<ul class="org-ul">
<li><b><b>Curva de Aprendizaje</b></b>: Git y Emacs intimidan al inicio.  
<ul class="org-ul">
<li><b>Solución</b>: Tutoriales básicos de Magit y GitHub Pages (5-10 horas de práctica).</li>
</ul></li>
<li><b><b>Limitaciones Estáticas</b></b>: No admite contenido dinámico nativo.  
<ul class="org-ul">
<li><b>Solución</b>: Integro comentarios con Disqus o formularios vía Netlify.</li>
</ul></li>
<li><b><b>Dependencia de GitHub</b></b>: Si falla, pierdo alojamiento.  
<ul class="org-ul">
<li><b>Solución</b>: Respaldo local y opción de migrar a GitLab Pages.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-orgd3e49a1" class="outline-2">
<h2 id="orgd3e49a1">Conclusión</h2>
<div class="outline-text-2" id="text-orgd3e49a1">
<p>
Elegir GitHub para mi blog ha sido una decisión transformadora. Su <b><b>gratuidad</b></b> me permitió empezar sin riesgos financieros, su <b><b>flexibilidad</b></b> me da control creativo absoluto y su <b><b>integración con Emacs</b></b> alinea perfectamente mi pasión por el texto plano con la publicación moderna. Los datos muestran que supera a alternativas pagas en costo y adaptabilidad para proyectos estáticos. Si buscas una plataforma que combine economía, poder y sinergia con herramientas como Emacs, GitHub es la respuesta. Mi blog vive ahora en `username.github.io`, y cada post es un testimonio de esta elección.
</p>
</div>
</div>
<div id="outline-container-orgf537570" class="outline-2">
<h2 id="orgf537570">Referencias</h2>
<div class="outline-text-2" id="text-orgf537570">
<ul class="org-ul">
<li>GitHub. (2024). <b>GitHub Pages Documentation</b>. <a href="https://docs.github.com/en/pages">https://docs.github.com/en/pages</a></li>
<li>Org Static Blog. (2023). <b>Official Repository</b>. <a href="https://github.com/bastibe/org-static-blog">https://github.com/bastibe/org-static-blog</a></li>
<li>Statista. (2024). <b>Web Hosting Market Trends</b>. <a href="https://www.statista.com">https://www.statista.com</a></li>
<li>Emacs Magit. (2024). <b>Magit User Manual</b>. <a href="https://magit.vc/manual/magit/">https://magit.vc/manual/magit/</a></li>
<li>Deloitte. (2023). <b>Cost Analysis of Digital Platforms</b>. <a href="https://www2.deloitte.com">https://www2.deloitte.com</a></li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-github.html">github</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-blog.html">blog</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-free.html">free</a> </div>]]></description>
  <category><![CDATA[github]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[blog]]></category>
  <category><![CDATA[free]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-14-por-qu%C3%A9-eleg%C3%AD-github-para-publicar-mi-blog.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-14-por-qu%C3%A9-eleg%C3%AD-github-para-publicar-mi-blog.html</guid>
  <pubDate>Fri, 14 Mar 2025 14:21:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Generadores de IA por Relevancia y Países (2025)  Perplexity]]></title>
  <description><![CDATA[
<div id="outline-container-org05c1252" class="outline-2">
<h2 id="org05c1252">Clasificación Global de Generadores de IA</h2>
<div class="outline-text-2" id="text-org05c1252">
</div>
<div id="outline-container-org3eb2412" class="outline-3">
<h3 id="org3eb2412">Top 10 Países Líderes en Desarrollo de IA (2025)</h3>
<div class="outline-text-3" id="text-org3eb2412">
<table>


<colgroup>
<col  class="org-right">

<col  class="org-left">

<col  class="org-right">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-right">Rango</th>
<th scope="col" class="org-left">País</th>
<th scope="col" class="org-right">Puntaje Total</th>
<th scope="col" class="org-left">Principales Generadores</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-right">1</td>
<td class="org-left">Estados Unidos</td>
<td class="org-right">70.06</td>
<td class="org-left">GPT-5 (OpenAI), Gemini (Google), Claude (Anthropic)</td>
</tr>

<tr>
<td class="org-right">2</td>
<td class="org-left">China</td>
<td class="org-right">40.17</td>
<td class="org-left">ERNIE 4.0 (Baidu), Tongyi Qianwen (Alibaba)</td>
</tr>

<tr>
<td class="org-right">3</td>
<td class="org-left">Reino Unido</td>
<td class="org-right">27.21</td>
<td class="org-left">DeepMind AlphaFold, BenevolentAI</td>
</tr>

<tr>
<td class="org-right">4</td>
<td class="org-left">India</td>
<td class="org-right">25.54</td>
<td class="org-left">BharatGPT, Jugalbandi (AI4Bharat)</td>
</tr>

<tr>
<td class="org-right">5</td>
<td class="org-left">Singapur</td>
<td class="org-right">22.72</td>
<td class="org-left">AI Singapore, PaSGEN (NUS)</td>
</tr>

<tr>
<td class="org-right">6</td>
<td class="org-left">Francia</td>
<td class="org-right">22.54</td>
<td class="org-left">Mistral AI, Hugging Face</td>
</tr>

<tr>
<td class="org-right">7</td>
<td class="org-left">Corea del Sur</td>
<td class="org-right">20.48</td>
<td class="org-left">HyperCLOVA (Naver), Exaone (KT)</td>
</tr>

<tr>
<td class="org-right">8</td>
<td class="org-left">Alemania</td>
<td class="org-right">18.49</td>
<td class="org-left">Aleph Alpha, DeepL</td>
</tr>

<tr>
<td class="org-right">9</td>
<td class="org-left">Japón</td>
<td class="org-right">18.47</td>
<td class="org-left">Rinna, Fujitsu Kozuchi</td>
</tr>

<tr>
<td class="org-right">10</td>
<td class="org-left">Emiratos Árabes</td>
<td class="org-right">18.15</td>
<td class="org-left">Falcon 180B (TII), Jais (MBZUAI)</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div id="outline-container-org2bcc515" class="outline-2">
<h2 id="org2bcc515">Generadores por Categoría</h2>
<div class="outline-text-2" id="text-org2bcc515">
</div>
<div id="outline-container-orgddc6507" class="outline-3">
<h3 id="orgddc6507">Texto</h3>
<div class="outline-text-3" id="text-orgddc6507">
<table>


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Herramienta</th>
<th scope="col" class="org-left">Empresa</th>
<th scope="col" class="org-left">Países con Mayor Uso (%)</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">ChatGPT</td>
<td class="org-left">OpenAI</td>
<td class="org-left">EE.UU (17%), Alemania (7%), India</td>
</tr>

<tr>
<td class="org-left">Claude</td>
<td class="org-left">Anthropic</td>
<td class="org-left">EE.UU (32%), Canadá (12%)</td>
</tr>

<tr>
<td class="org-left">Gemini</td>
<td class="org-left">Google</td>
<td class="org-left">EE.UU (24%), India (8%), Brasil</td>
</tr>

<tr>
<td class="org-left">ERNIE</td>
<td class="org-left">Baidu</td>
<td class="org-left">China (89%), Singapur (5%)</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-orge141e0d" class="outline-3">
<h3 id="orge141e0d">Imágenes/Vídeo</h3>
<div class="outline-text-3" id="text-orge141e0d">
<table>


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Herramienta</th>
<th scope="col" class="org-left">Tecnología</th>
<th scope="col" class="org-left">Países Líderes</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Midjourney</td>
<td class="org-left">Difusión Estable</td>
<td class="org-left">Israel (21%), Singapur (18%)</td>
</tr>

<tr>
<td class="org-left">Stable Diffusion</td>
<td class="org-left">Stability AI</td>
<td class="org-left">EE.UU (34%), Japón (12%)</td>
</tr>

<tr>
<td class="org-left">Sora</td>
<td class="org-left">OpenAI</td>
<td class="org-left">Hong Kong (29%), EE.UU (13%)</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org4603ed8" class="outline-3">
<h3 id="org4603ed8">Código</h3>
<div class="outline-text-3" id="text-org4603ed8">
<table>


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Herramienta</th>
<th scope="col" class="org-left">Lenguajes</th>
<th scope="col" class="org-left">Países con Mayor Tráfico</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">GitHub Copilot</td>
<td class="org-left">Python/JavaScript</td>
<td class="org-left">EE.UU (22%), Alemania (6%)</td>
</tr>

<tr>
<td class="org-left">Codeium</td>
<td class="org-left">Java/C++</td>
<td class="org-left">Hong Kong (8%), Japón (7%)</td>
</tr>

<tr>
<td class="org-left">Tabnine</td>
<td class="org-left">Multiplataforma</td>
<td class="org-left">India (6%), Brasil (5%)</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div id="outline-container-orgbe73bab" class="outline-2">
<h2 id="orgbe73bab">Tendencias Regionales</h2>
<div class="outline-text-2" id="text-orgbe73bab">
</div>
<div id="outline-container-org8a75c8b" class="outline-3">
<h3 id="org8a75c8b">América del Norte</h3>
<div class="outline-text-3" id="text-org8a75c8b">
<ul class="org-ul">
<li>Dominio de modelos lingüísticos (EE.UU: 78% inversión global en LLMs)</li>
<li>Canadá: Liderazgo en investigación de aprendizaje automático</li>
</ul>
</div>
</div>
<div id="outline-container-orgcc1f15f" class="outline-3">
<h3 id="orgcc1f15f">Asia-Pacífico</h3>
<div class="outline-text-3" id="text-orgcc1f15f">
<ul class="org-ul">
<li>China: 412K patentes IA registradas (2023)</li>
<li>India: Crecimiento del 140% en startups IA (2022-2025)</li>
<li>Singapur: 92% adopción IA en sector financiero</li>
</ul>
</div>
</div>
<div id="outline-container-orgcfc8586" class="outline-3">
<h3 id="orgcfc8586">Europa</h3>
<div class="outline-text-3" id="text-orgcfc8586">
<ul class="org-ul">
<li>Reino Unido: 54% empresas usando IA ética</li>
<li>Francia: 1er lugar en desarrollo de IA open-source</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org139ae6b" class="outline-2">
<h2 id="org139ae6b">Factores Clave de Relevancia</h2>
<div class="outline-text-2" id="text-org139ae6b">
<table>


<colgroup>
<col  class="org-left">

<col  class="org-right">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Criterio</th>
<th scope="col" class="org-right">Ponderación</th>
<th scope="col" class="org-left">Ejemplo</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Inversión Privada</td>
<td class="org-right">35%</td>
<td class="org-left">EE.UU: $58B en 2024</td>
</tr>

<tr>
<td class="org-left">Talento</td>
<td class="org-right">25%</td>
<td class="org-left">India: 1.3M ingenieros IA</td>
</tr>

<tr>
<td class="org-left">Infraestructura</td>
<td class="org-right">20%</td>
<td class="org-left">China: 37 supercomputadores TOP500</td>
</tr>

<tr>
<td class="org-left">Políticas Guber.</td>
<td class="org-right">15%</td>
<td class="org-left">UE: AI Act 2025</td>
</tr>

<tr>
<td class="org-left">Adopción Empresas</td>
<td class="org-right">5%</td>
<td class="org-left">Japón: 68% PYMEs usando IA</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-orgd363589" class="outline-2">
<h2 id="orgd363589">Proyecciones 2025-2030</h2>
<div class="outline-text-2" id="text-orgd363589">
<ul class="org-ul">
<li>Mercado global IA generativa: $207B (CAGR 32%)</li>
<li>Países emergentes: Vietnam (+210%), Nigeria (+175%)</li>
<li>Regulaciones: 89% países tendrán marco legal IA</li>
</ul>
</div>
</div>
<div id="outline-container-orgab1a052" class="outline-2">
<h2 id="orgab1a052">Referencias [1][2][3][4][5][6][7]</h2>
<div class="outline-text-2" id="text-orgab1a052">
<ol class="org-ol">
<li>Stanford HAI (2023). Global AI Index 2024.</li>
<li>LinkedIn AI Report (2025). Top 35 Countries Ranking.</li>
<li>Visual Capitalist (2024). AI Preparedness Index.</li>
<li>Data Science Dojo (2025). AI Advancement Report.</li>
<li>Tortoise Media (2024). Global AI Index.</li>
<li>Cloudflare Radar (2025). Generative AI Traffic Analysis.</li>
<li>ElectronicsHub (2023). Search Interest in Generative AI.</li>
</ol>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-perplexity.html">perplexity</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ia.html">ia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ai.html">ai</a> </div>]]></description>
  <category><![CDATA[perplexity]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[ia]]></category>
  <category><![CDATA[ai]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-13-generadores-de-ia-por-relevancia-y-pa%C3%ADses-(2025)--perplexity.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-13-generadores-de-ia-por-relevancia-y-pa%C3%ADses-(2025)--perplexity.html</guid>
  <pubDate>Thu, 13 Mar 2025 08:49:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Emacs: Historia, Evolución y Futuro]]></title>
  <description><![CDATA[
<div id="outline-container-org682a99b" class="outline-2">
<h2 id="org682a99b"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
Emacs es más que un simple editor de texto: es un ecosistema de extensibilidad, programabilidad y personalización. Desde su creación en la década de 1970, Emacs ha evolucionado hasta convertirse en una de las herramientas más poderosas para la edición de texto, la programación, la gestión del conocimiento y muchas otras tareas.
</p>
</div>
</div>
<div id="outline-container-org6c041c1" class="outline-2">
<h2 id="org6c041c1"><span class="section-number-2">2.</span> Orígenes de Emacs</h2>
<div class="outline-text-2" id="text-2">
<ul class="org-ul">
<li>Emacs nació en el MIT en los años 70, desarrollado por Richard Stallman.</li>
<li>Se inspiró en el editor TECO y las macros de edición.</li>
<li>Fue el primer editor con capacidad para ser completamente extensible mediante macros.</li>
</ul>
</div>
</div>
<div id="outline-container-orgbfb78ec" class="outline-2">
<h2 id="orgbfb78ec"><span class="section-number-2">3.</span> Evolución y Desarrollo</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li><b><b>Emacs original (1976)</b></b>: Basado en TECO, desarrollado en MIT.</li>
<li><b><b>GNU Emacs (1985)</b></b>: Reescrito en C y Lisp, convirtiéndose en software libre.</li>
<li><b><b>XEmacs (1991)</b></b>: Un fork de GNU Emacs con mejoras en interfaz y rendimiento.</li>
<li><b><b>Emacs 21+ (2001 en adelante)</b></b>: Introdujo GUI mejorada, soporte para UTF-8 y múltiples nuevas funciones.</li>
<li><b><b>Emacs 24/25 (2012-2016)</b></b>: Paquetes, integración con Python, soporte para JSON y mejoras en la gestión de procesos.</li>
<li><b><b>Emacs 27+ (2020 en adelante)</b></b>: Mejoras en visualización, compatibilidad con Lisp nativo y optimizaciones de rendimiento.</li>
</ul>
</div>
</div>
<div id="outline-container-org474fd4f" class="outline-2">
<h2 id="org474fd4f"><span class="section-number-2">4.</span> Posibilidades y Características Clave</h2>
<div class="outline-text-2" id="text-4">
<ul class="org-ul">
<li><b><b>Extensibilidad con Emacs Lisp</b></b>: Todo en Emacs puede modificarse con Emacs Lisp.</li>
<li><b><b>Multipropósito</b></b>: Puede usarse como IDE, gestor de notas, cliente de correo, lector de RSS, agenda y más.</li>
<li><b><b>Soporte para múltiples lenguajes</b></b>: Compatible con lenguajes como Python, C, Lisp, JavaScript, entre otros.</li>
<li><b><b>Interfaz personalizable</b></b>: Temas, configuración de atajos y posibilidad de modificar su comportamiento.</li>
</ul>
</div>
</div>
<div id="outline-container-org6f86fd6" class="outline-2">
<h2 id="org6f86fd6"><span class="section-number-2">5.</span> Emacs en el Presente</h2>
<div class="outline-text-2" id="text-5">
<ul class="org-ul">
<li>Sigue siendo ampliamente utilizado en entornos académicos, de programación y en la comunidad del software libre.</li>
<li>Integraciones modernas con Git, Docker, Jupyter y herramientas de desarrollo.</li>
<li>Opciones como Doom Emacs y Spacemacs lo han hecho más accesible para nuevos usuarios.</li>
</ul>
</div>
</div>
<div id="outline-container-org6cd8a1c" class="outline-2">
<h2 id="org6cd8a1c"><span class="section-number-2">6.</span> Futuro de Emacs</h2>
<div class="outline-text-2" id="text-6">
<ul class="org-ul">
<li>Integración con inteligencia artificial y herramientas de automatización.</li>
<li>Mayor optimización en rendimiento para aprovechar CPUs modernas.</li>
<li>Mejoras en la compatibilidad con Wayland y nuevas tecnologías de escritorio.</li>
<li>Mayor enfoque en mejorar la experiencia de usuario sin comprometer su poder.</li>
</ul>
</div>
</div>
<div id="outline-container-orga9372c8" class="outline-2">
<h2 id="orga9372c8"><span class="section-number-2">7.</span> Curva de Aprendizaje</h2>
<div class="outline-text-2" id="text-7">
<ul class="org-ul">
<li><b><b>Alta al inicio</b></b>, ya que requiere memorizar comandos y aprender Emacs Lisp.</li>
<li><b><b>Ventaja a largo plazo</b></b>: Una vez dominado, permite una eficiencia extrema en edición de texto y automatización.</li>
</ul>
</div>
</div>
<div id="outline-container-org8947225" class="outline-2">
<h2 id="org8947225"><span class="section-number-2">8.</span> Pros y Contras de Emacs</h2>
<div class="outline-text-2" id="text-8">
<p>
<b><b>Ventajas:</b></b>
</p>
<ul class="org-ul">
<li>Extremadamente personalizable y potente.</li>
<li>Compatible con casi cualquier flujo de trabajo.</li>
<li>Comunidad activa y en constante desarrollo.</li>
<li>Soporte para plugins y extensiones.</li>
</ul>

<p>
<b><b>Desventajas:</b></b>
</p>
<ul class="org-ul">
<li>Curva de aprendizaje pronunciada.</li>
<li>Puede ser más lento que editores modernos en ciertas configuraciones.</li>
<li>Consumo de memoria superior a editores minimalistas.</li>
</ul>
</div>
</div>
<div id="outline-container-orga8ff038" class="outline-2">
<h2 id="orga8ff038"><span class="section-number-2">9.</span> Conclusión</h2>
<div class="outline-text-2" id="text-9">
<p>
Emacs es una herramienta impresionante que ha resistido la prueba del tiempo gracias a su extensibilidad y flexibilidad. Aunque no es el editor más accesible para principiantes, ofrece posibilidades inigualables para aquellos dispuestos a invertir tiempo en aprenderlo. Su futuro sigue siendo prometedor gracias a la constante contribución de su comunidad y a su capacidad de adaptación a nuevas tecnologías.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-02-27-emacs:-historia,-evoluci%C3%B3n-y-futuro.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-02-27-emacs:-historia,-evoluci%C3%B3n-y-futuro.html</guid>
  <pubDate>Thu, 27 Feb 2025 18:04:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Mi Blog con Emacs y Esteroides: Una Aventura Potenciada por Código y IA]]></title>
  <description><![CDATA[
<div id="outline-container-org0eb157c" class="outline-2">
<h2 id="org0eb157c"><span class="section-number-2">1.</span> Bienvenidos a Mi Blog con Emacs y Esteroides</h2>
<div class="outline-text-2" id="text-1">
<p>
¡Hola, lector! Si has llegado hasta aquí, probablemente compartas mi pasión por la tecnología, el código y la libertad creativa que ofrecen herramientas como Emacs. Este blog, titulado <b>"Mi Blog con Emacs y Esteroides"</b>, no es solo un espacio para compartir ideas, sino una declaración en favor a un editor legendario y una exploración de cómo la inteligencia artificial generativa lo lleva a otro nivel. ¿Listo para el viaje? ¡Sube a bordo!
</p>
</div>
</div>
<div id="outline-container-org30a9dcc" class="outline-2">
<h2 id="org30a9dcc"><span class="section-number-2">2.</span> Emacs: El Corazón de mi Flujo de Trabajo</h2>
<div class="outline-text-2" id="text-2">
<p>
Cuando pienso en Emacs, no veo solo un editor de texto. Veo una navaja suiza digital, un compañero fiel que ha estado en los paquetes estándar de Linux desde tiempos inmemoriales. No es una herramienta pasajera ni una moda; es un pilar de la cultura del software libre, robusto y flexible como pocos. Lo uso para todo: desde escribir código en Python o Lisp hasta tomar notas en Org-mode (¡como este post!), gestionar mi correo con Gnus o incluso relajarme jugando un poco de Tetris cuando el día se pone duro.
</p>

<p>
Mi interés por Emacs nació de su promesa de control total. En un mundo lleno de interfaces rígidas, Emacs me deja moldearlo a mi gusto. ¿Quieres un atajo nuevo? Lo configuras. ¿Una función personalizada? La escribes. ¿Un entorno de escritura que se adapte a tus rarezas? Org-mode te cubre. Y lo mejor: está ahí, listo para instalarse con un simple `sudo apt install emacs` en mi distribución Linux favorita. Es como si el universo del software libre me dijera: "Aquí tienes las llaves, conduce tú".
</p>
</div>
</div>
<div id="outline-container-org9da0a53" class="outline-2">
<h2 id="org9da0a53"><span class="section-number-2">3.</span> Esteroides: El Poder de la IA Generativa</h2>
<div class="outline-text-2" id="text-3">
<p>
Pero, ¿qué pasa con lo de "Esteroides"? Aquí es donde la cosa se pone emocionante. No me conformo con un Emacs estándar (por muy poderoso que sea). He decidido inyectarle una dosis de esteroides digitales mediante la IA generativa. ¿Qué significa esto? Que uso herramientas como modelos de lenguaje avanzados para acelerar mi configuración de Emacs y generar contenido con una chispa extra.
</p>

<p>
Por ejemplo, ¿necesito un script en Emacs Lisp para crear múltiples buffers scratch? En lugar de pasar horas depurando, le pido a la IA que me dé una base sólida y luego la ajusto a mi gusto. ¿Quiero un diseño personalizado para `org-static-blog` (la magia detrás de este sitio)? La IA me ayuda a generar CSS elegante y funcional en minutos. Y cuando se trata de escribir, como este mismo post, la IA me asiste con ideas, estructuras y hasta un toque de estilo, dejándome libre para enfocarme en lo que importa: mis pensamientos.
</p>

<p>
Los "esteroides" son esa capa de potencia que transforma Emacs de un editor excelente a un compañero creativo imparable. Es como si le pusiera un motor turbo a una bicicleta clásica: sigue siendo la misma máquina que amo, pero ahora vuela.
</p>
</div>
</div>
<div id="outline-container-org3749f80" class="outline-2">
<h2 id="org3749f80"><span class="section-number-2">4.</span> Un Blog con Alma y Tecnología</h2>
<div class="outline-text-2" id="text-4">
<p>
Este blog es el resultado de esa combinación. Aquí encontrarás reflexiones sobre Emacs, tutoriales para sacarle el máximo provecho, y experimentos con IA generativa que dan vida a mis palabras. Uso `org-static-blog` para publicar todo desde archivos Org-mode, lo que significa que cada post empieza como un documento vivo en mi Emacs, lleno de notas, enlaces y ajustes, antes de convertirse en las páginas que ves.
</p>

<p>
¿Por qué "Mi Blog con Emacs y Esteroides"? Porque refleja mi viaje: un editor clásico que nunca envejece, potenciado por las herramientas del futuro. Es mi rincón para compartir, aprender y, con suerte, inspirar a otros a explorar este universo de posibilidades.
</p>
</div>
</div>
<div id="outline-container-orgabfad28" class="outline-2">
<h2 id="orgabfad28"><span class="section-number-2">5.</span> ¿Qué viene después?</h2>
<div class="outline-text-2" id="text-5">
<p>
Si te apasiona Emacs, Linux, o la IA, este es tu lugar. Próximamente hablaré de cómo configuro mi `init.el` con ayuda de IA, trucos de Org-mode para la productividad, y quizás alguna locura como generar poesía con Lisp y modelos de lenguaje. ¿Tienes ideas o sugerencias? Escríbeme a <a href="mailto:mybloggingnotes@gmail.com">mybloggingnotes@gmail.com</a>; este blog también es un diálogo.
</p>

<p>
Así que, ponte cómodo, abre tu Emacs (o instálalo si aún no lo tienes), y acompáñame en esta aventura. ¡Con Emacs y un toque de esteroides, el límite es nuestra imaginación!
</p>

<p style="text-align: center; font-size: 0.9em; color: #777;">
<b>Escrito desde Emacs, potenciado por IA, y publicado con `org-static-blog`.</b>
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-blogging.html">blogging</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[blogging]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-02-26-mi-blog-con-emacs-y-esteroides:-una-aventura-potenciada-por-c%C3%B3digo-y-ia.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-02-26-mi-blog-con-emacs-y-esteroides:-una-aventura-potenciada-por-c%C3%B3digo-y-ia.html</guid>
  <pubDate>Wed, 26 Feb 2025 15:16:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Gestionando Dos Blogs Diferentes con org-static-blog en Emacs]]></title>
  <description><![CDATA[
<div id="outline-container-org80378d5" class="outline-2">
<h2 id="org80378d5"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
`org-static-blog` es una herramienta poderosa para crear blogs estáticos desde Emacs, pero por defecto está diseñada para manejar un solo blog. Si quieres trabajar con dos blogs diferentes (por ejemplo, uno personal y otro profesional), necesitas ajustar tu configuración en Emacs 28 para que soporte múltiples instancias. En este artículo, te guiaré paso a paso para lograrlo.
</p>
</div>
</div>
<div id="outline-container-org86d4db5" class="outline-2">
<h2 id="org86d4db5"><span class="section-number-2">2.</span> Estrategia general</h2>
<div class="outline-text-2" id="text-2">
<p>
La clave para manejar dos blogs con `org-static-blog` es usar configuraciones separadas para cada uno, almacenadas en variables distintas, y luego alternar entre ellas según el blog que estés editando o publicando. Esto implica:
</p>
<ul class="org-ul">
<li>Tener directorios separados para posts y publicaciones.</li>
<li>Definir plantillas y parámetros específicos por blog.</li>
<li>Usar funciones personalizadas en Emacs para cambiar entre configuraciones.</li>
</ul>
</div>
</div>
<div id="outline-container-org3a30d71" class="outline-2">
<h2 id="org3a30d71"><span class="section-number-2">3.</span> Configuración inicial</h2>
<div class="outline-text-2" id="text-3">
<p>
Primero, asegúrate de tener `org-static-blog` instalado en Emacs 28 (instálalo con `M-x package-install RET org-static-blog` si no lo has hecho). Luego, organiza tus directorios. Por ejemplo:
</p>
<ul class="org-ul">
<li>Blog 1 (personal): `~/blog-personal/`</li>
<li>Blog 2 (profesional): `~/blog-profesional/`</li>
</ul>

<p>
Dentro de cada directorio, crea subdirectorios para posts y publicaciones:
</p>
<ul class="org-ul">
<li>`~/blog-personal/posts/` y `~/blog-personal/public/`</li>
<li>`~/blog-profesional/posts/` y `~/blog-profesional/public/`</li>
</ul>
</div>
</div>
<div id="outline-container-org7c27211" class="outline-2">
<h2 id="org7c27211"><span class="section-number-2">4.</span> Configurar las variables para cada blog</h2>
<div class="outline-text-2" id="text-4">
<p>
En tu `init.el`, define las configuraciones de ambos blogs usando variables personalizadas. Aquí un ejemplo:
</p>

<p>
```emacs-lisp
;; Configuración para Blog Personal
(defvar my-blog-personal-settings
  '((org-static-blog-publish-title . "Blog Personal")
    (org-static-blog-publish-url . "<a href="https://mi-blog-personal.com/">https://mi-blog-personal.com/</a>")
    (org-static-blog-publish-directory . "~/blog-personal/public/")
    (org-static-blog-posts-directory . "~/blog-personal/posts/")
    (org-static-blog-drafts-directory . "~/blog-personal/drafts/")
    (org-static-blog-page-header . "&lt;h1&gt;Mi Blog Personal&lt;/h1&gt;")
    (org-static-blog-post-template . "&lt;h1&gt;%title&lt;/h1&gt;&lt;div&gt;%date&lt;/div&gt;%content")))
</p>

<p>
;; Configuración para Blog Profesional
(defvar my-blog-pro-settings
  '((org-static-blog-publish-title . "Blog Profesional")
    (org-static-blog-publish-url . "<a href="https://mi-blog-pro.com/">https://mi-blog-pro.com/</a>")
    (org-static-blog-publish-directory . "~/blog-profesional/public/")
    (org-static-blog-posts-directory . "~/blog-profesional/posts/")
    (org-static-blog-drafts-directory . "~/blog-profesional/drafts/")
    (org-static-blog-page-header . "&lt;h1&gt;Trabajo y Tecnología&lt;/h1&gt;")
    (org-static-blog-post-template . "&lt;h1&gt;%title&lt;/h1&gt;&lt;div&gt;%date&lt;/div&gt;&lt;div&gt;Por un experto&lt;/div&gt;%content")))
</p>

<p>
Cada lista asociativa define las variables esenciales de org-static-blog para un blog específico.
</p>

<p>
Crear funciones para alternar configuraciones Necesitas una manera de aplicar la configuración correcta antes de trabajar en un blog. Define funciones en tu init.el para esto:
</p>

<p>
emacs
(defun my-set-blog-personal ()
  "Activa la configuración del blog personal."
  (interactive)
  (dolist (setting my-blog-personal-settings)
    (set (car setting) (cdr setting)))
  (message "Configuración del Blog Personal activada"))
</p>

<p>
(defun my-set-blog-pro ()
  "Activa la configuración del blog profesional."
  (interactive)
  (dolist (setting my-blog-pro-settings)
    (set (car setting) (cdr setting)))
  (message "Configuración del Blog Profesional activada"))
</p>

<p>
M-x my-set-blog-personal configura Emacs para trabajar con el blog personal.
M-x my-set-blog-pro hace lo mismo para el blog profesional.
</p>

<p>
Crear posts para cada blog Ahora puedes crear posts en los directorios correspondientes. Por ejemplo:
</p>
</div>
<div id="outline-container-org18e7e4d" class="outline-3">
<h3 id="org18e7e4d"><span class="section-number-3">4.1.</span> Post para el Blog Personal (~/blog-personal/posts/2025-02-25-viaje.org):</h3>
<div class="outline-text-3" id="text-4-1">
<p>
org
</p>
</div>
</div>
</div>
<div id="outline-container-orgb43fc7e" class="outline-2">
<h2 id="orgb43fc7e"><span class="section-number-2">5.</span> Reflexiones</h2>
<div class="outline-text-2" id="text-5">
<p>
Hoy escribo sobre un viaje reciente que hice&#x2026;
</p>
</div>
<div id="outline-container-org5d1d03c" class="outline-3">
<h3 id="org5d1d03c"><span class="section-number-3">5.1.</span> Post para el Blog Profesional (~/blog-profesional/posts/2025-02-25-proyecto.org):</h3>
<div class="outline-text-3" id="text-5-1">
<p>
org
</p>
</div>
</div>
</div>
<div id="outline-container-org5311826" class="outline-2">
<h2 id="org5311826"><span class="section-number-2">6.</span> Detalles</h2>
<div class="outline-text-2" id="text-6">
<p>
Este post detalla un proyecto técnico en el que estoy trabajando&#x2026;
</p>

<p>
Publicar cada blog Para publicar:
</p>

<p>
Activa la configuración del blog deseado:
    M-x my-set-blog-personal para el personal.
    M-x my-set-blog-pro para el profesional.
Publica:
    M-x org-static-blog-publish-file RET para un archivo específico.
    M-x org-static-blog-publish para regenerar todo el blog.
</p>

<p>
Los archivos HTML se generarán en el directorio public/ correspondiente a cada blog.
</p>

<p>
Personalizar aún más (opcional)
</p>

<p>
Tags por blog: Usa #+TAGS: en los posts de cada blog según tus necesidades (como expliqué en mi respuesta anterior).
Estilos CSS: Añade un archivo CSS diferente en cada org-static-blog-page-header para distinguir visualmente los blogs.
Atajos de teclado: Asigna las funciones a teclas para mayor rapidez, por ejemplo:
emacs
</p>

<p>
(global-set-key (kbd "C-c b p") 'my-set-blog-personal)
(global-set-key (kbd "C-c b r") 'my-set-blog-pro)
</p>

<p>
Solución de problemas
</p>

<p>
Configuración no cambia: Verifica que las funciones my-set-blog-* estén actualizando las variables correctamente (usa C-h v org-static-blog-publish-directory para inspeccionar).
Posts mezclados: Asegúrate de que los directorios de posts sean distintos y que actives la configuración correcta antes de publicar.
Errores de publicación: Confirma que los directorios existen y tienen permisos adecuados.
</p>

<p>
Conclusión Con este método, puedes gestionar dos blogs diferentes en org-static-blog desde Emacs 28 sin conflictos. Alternar entre configuraciones con funciones personalizadas te da flexibilidad y mantiene todo organizado. Es una solución práctica para quienes, como yo, queremos separar temas personales y profesionales sin abandonar nuestro flujo de trabajo en Org-mode. ¿Qué nombres le pondrías a tus dos blogs?
TODO Próximos pasos
</p>

<p>
Probar publicar ambos blogs en un solo comando con un script Elisp.
Añadir un indicador visual en Emacs para saber qué blog está activo.
Explorar cómo sincronizar cada blog con un repositorio Git diferente.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-blogging.html">blogging</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[blogging]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-02-26-gestionando-dos-blogs-diferentes-con-org-static-blog-en-emacs.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-02-26-gestionando-dos-blogs-diferentes-con-org-static-blog-en-emacs.html</guid>
  <pubDate>Wed, 26 Feb 2025 08:37:00 +0100</pubDate>
</item>
</channel>
</rss>
