<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title><![CDATA[Emacs con esteroides - sistema]]></title>
<description><![CDATA[Emacs con esteroides - sistema]]></description>
<link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI//tag-sistema.html</link>
<lastBuildDate>Wed, 28 May 2025 12:56:48 +0200</lastBuildDate>
<item>
  <title><![CDATA[Documentación de Búsqueda de Logs del Sistema con Script]]></title>
  <description><![CDATA[
<div id="outline-container-org9c54988" class="outline-2">
<h2 id="org9c54988">Introducción</h2>
</div>


<div id="outline-container-orgfdfadf7" class="outline-2">
<h2 id="orgfdfadf7">Introducción</h2>
<div class="outline-text-2" id="text-orgfdfadf7">
<p>
Este documento contiene un script en Bash diseñado para buscar archivos de log del sistema en una laptop con Linux. El script explora el directorio `/var/log` en busca de archivos con extensión `.log` y recopila la siguiente información para cada archivo:
</p>
<ul class="org-ul">
<li><b>Nombre del Archivo</b>: La ruta completa del archivo de log.</li>
<li><b>Tamaño</b>: El tamaño del archivo en formato legible (por ejemplo, KB, MB).</li>
<li><b>Última Modificación</b>: La fecha y hora de la última modificación.</li>
<li><b>Crítico</b>: Indica si el log es potencialmente crítico ("Sí" o "No"), basado en palabras clave como "error", "fail", "auth" o "syslog".</li>
</ul>

<p>
Los resultados se ordenan por tamaño de mayor a menor y se presentan en una tabla Org-mode. Los logs marcados como críticos deben revisarse para evaluar posibles problemas del sistema o eventos de seguridad.
</p>
</div>
</div>
<div id="outline-container-orge0722aa" class="outline-2">
<h2 id="orge0722aa">Script en Bash</h2>
<div class="outline-text-2" id="text-orge0722aa">
<p>
El siguiente script en Bash busca archivos de log, los ordena por tamaño y determina si son críticos. Se ha corregido para evitar errores de sintaxis y garantizar compatibilidad.
</p>

<div class="org-src-container">
<pre class="src src-bash"><code><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Definir el directorio de b&#250;squeda de logs</span>
<span style="color: #1857a4;">LOG_DIR</span>=<span style="color: #a44185;">"/var/log"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar si el directorio existe</span>
<span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #219fd5; font-weight: bold;">!</span> -d <span style="color: #a44185;">"$LOG_DIR"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Error: El directorio $LOG_DIR no existe."</span>
  <span style="color: #219fd5; font-style: italic;">exit</span> 1
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Imprimir encabezado de la tabla Org-mode</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"| Nombre del Archivo | Tama&#241;o | &#218;ltima Modificaci&#243;n | Cr&#237;tico |"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"|--------------------|--------|---------------------|---------|"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar archivos .log, recopilar informaci&#243;n, ordenar por tama&#241;o</span>
find <span style="color: #a44185;">"$LOG_DIR"</span> -type f -name <span style="color: #a44185;">"*.log"</span> -exec /bin/bash -c <span style="color: #a44185;">'</span>
<span style="color: #a44185;">  for file; do</span>
<span style="color: #a44185;">    # Obtener tama&#241;o en formato legible</span>
<span style="color: #a44185;">    size=$(</span><span style="color: #219fd5; font-weight: bold;">ls -lh "$file" | awk "{print \$5}"</span><span style="color: #a44185;">)</span>
<span style="color: #a44185;">    # Obtener tama&#241;o en bytes para ordenar</span>
<span style="color: #a44185;">    size_bytes=$(</span><span style="color: #219fd5; font-weight: bold;">ls -l "$file" | awk "{print \$5}"</span><span style="color: #a44185;">)</span>
<span style="color: #a44185;">    # Obtener fecha de &#250;ltima modificaci&#243;n</span>
<span style="color: #a44185;">    last_modified=$(</span><span style="color: #219fd5; font-weight: bold;">stat -c %y "$file" | cut -d. -f1</span><span style="color: #a44185;">)</span>
<span style="color: #a44185;">    # Determinar si el log es cr&#237;tico usando grep</span>
<span style="color: #a44185;">    if echo "$file" | grep -E -i "error|fail|auth|syslog" &gt;/dev/null; then</span>
<span style="color: #a44185;">      critical="S&#237;"</span>
<span style="color: #a44185;">    else</span>
<span style="color: #a44185;">      critical="No"</span>
<span style="color: #a44185;">    fi</span>
<span style="color: #a44185;">    # Imprimir fila con tama&#241;o en bytes para ordenar</span>
<span style="color: #a44185;">    echo "$size_bytes|$file|$size|$last_modified|$critical"</span>
<span style="color: #a44185;">  done</span>
<span style="color: #a44185;">'</span> bash {} + | sort -t<span style="color: #a44185;">"|"</span> -k1 -nr | <span style="color: #219fd5; font-style: italic;">while</span> <span style="color: #1857a4;">IFS</span>=<span style="color: #a44185;">"|"</span> read -r size_bytes file size last_modified critical; <span style="color: #219fd5; font-style: italic;">do</span>
  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Imprimir fila en formato Org-mode, sin el tama&#241;o en bytes</span>
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"| $file | $size | $last_modified | $critical |"</span>
<span style="color: #219fd5; font-style: italic;">done</span>
</code></pre>
</div>

<p>
Para ejecutar el script:
</p>
<ol class="org-ol">
<li>Guarde el script como `buscar<sub>logs.sh</sub>`.</li>
<li>Haga el script ejecutable: `chmod +x buscar<sub>logs.sh</sub>`.</li>
<li>Ejecute el script con: `sudo bash ./buscar<sub>logs.sh</sub> &gt; resultados.org`.</li>
</ol>
</div>
</div>
<div id="outline-container-orgf0f2352" class="outline-2">
<h2 id="orgf0f2352">Resultados</h2>
<div class="outline-text-2" id="text-orgf0f2352">
<p>
La siguiente tabla contiene los resultados del script, ordenados por tamaño de mayor a menor. Los logs marcados como "Crítico: Sí" deben revisarse para una evaluación posterior.
</p>

<div class="org-src-container">
<pre class="src src-org"><code><span style="color: #a44185;">| Nombre del Archivo | Tama&#241;o | &#218;ltima Modificaci&#243;n | Cr&#237;tico |</span>
<span style="color: #a44185;">|--------------------|--------|---------------------|---------|</span>
</code></pre>
</div>
</div>
</div>
<div id="outline-container-org04753bb" class="outline-2">
<h2 id="org04753bb">Notas</h2>
<div class="outline-text-2" id="text-org04753bb">
<ul class="org-ul">
<li><b><b>Ubicación</b></b>: El script busca en `/var/log`. Modifique `LOG<sub>DIR</sub>` en el script para incluir otros directorios si es necesario.</li>
<li><b><b>Permisos</b></b>: Los archivos de log en `/var/log` a menudo requieren permisos de superusuario. Ejecute el script con `sudo bash ./buscar<sub>logs.sh</sub>` para evitar errores de permisos.</li>
<li><b><b>Logs Críticos</b></b>: Los logs marcados como "Crítico: Sí" contienen palabras clave como "error", "fail", "auth" o "syslog". Revise estos archivos para identificar problemas del sistema o eventos de seguridad.</li>
<li><b><b>Actualización de Resultados</b></b>: Copie la salida del script (`resultados.org`) en la sección <b>Resultados</b> para actualizar la tabla.</li>
<li><b><b>Corrección de Errores</b></b>: Se ha reemplazado la sintaxis Bash específica (`=~`) con `grep` para evitar errores de compatibilidad con `sh`.</li>
<li><b><b>Ejecución con Bash</b></b>: Use `sudo bash ./buscar<sub>logs.sh</sub>` en lugar de `sudo ./buscar<sub>logs.sh</sub>` si persisten problemas de sintaxis, para garantizar que se use Bash.</li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-logs.html">logs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-sistema.html">sistema</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> </div>]]></description>
  <category><![CDATA[logs]]></category>
  <category><![CDATA[sistema]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[bash]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-05-28-documentaci-n-de-b-squeda-de-logs-del-sistema-con-script.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-05-28-documentaci-n-de-b-squeda-de-logs-del-sistema-con-script.html</guid>
  <pubDate>Wed, 28 May 2025 12:44:00 +0200</pubDate>
</item>
</channel>
</rss>
