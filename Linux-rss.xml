<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title><![CDATA[Example.com - Linux]]></title>
<description><![CDATA[Example.com - Linux]]></description>
<link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI//tag-linux.html</link>
<lastBuildDate>Sat, 22 Mar 2025 21:06:26 +0100</lastBuildDate>
<item>
  <title><![CDATA[Renombrando Archivos PDF con Fecha de Modificación en Linux]]></title>
  <description><![CDATA[
<div id="outline-container-org82a3701" class="outline-2">
<h2 id="org82a3701"><span class="section-number-2">1.</span> Renombrando Archivos PDF con Fecha de Modificación en Linux</h2>
<div class="outline-text-2" id="text-1">
<p>
¿Tienes una colección de archivos PDF desorganizados y quieres renombrarlos automáticamente con un formato específico? En este post, te mostraré cómo crear un script en <b><b>Bash</b></b> que selecciona un directorio, encuentra todos los archivos `.pdf` que no tengan el prefijo `YYMMDD-nombre.pdf`, y los renombra usando la fecha de modificación del archivo. Este formato es útil para organizar documentos de manera cronológica.
</p>
</div>
<div id="outline-container-orgc63b389" class="outline-3">
<h3 id="orgc63b389"><span class="section-number-3">1.1.</span> Requisitos</h3>
<div class="outline-text-3" id="text-1-1">
<ul class="org-ul">
<li>Un sistema Linux (Ubuntu, Debian, Fedora, etc.).</li>
<li>Conocimientos básicos de terminal y Bash.</li>
<li>Permisos de escritura en el directorio que deseas procesar.</li>
</ul>
</div>
</div>
<div id="outline-container-org2fd6b95" class="outline-3">
<h3 id="org2fd6b95"><span class="section-number-3">1.2.</span> Introducción</h3>
<div class="outline-text-3" id="text-1-2">
<p>
En este post, comparto un script en Bash que automatiza el renombrado de archivos PDF en un directorio específico. El objetivo es identificar aquellos archivos que no tienen el prefijo `YYMMDD-` (donde `YY` son los últimos dos dígitos del año, `MM` el mes de 01 a 12, y `DD` el día de 01 a 31) y renombrarlos usando su fecha de modificación en ese formato. Esto es útil para organizar documentos, como trabajos finales o reportes, manteniendo un estándar claro basado en metadatos del archivo.
</p>
</div>
</div>
<div id="outline-container-org199908d" class="outline-3">
<h3 id="org199908d"><span class="section-number-3">1.3.</span> El Script</h3>
<div class="outline-text-3" id="text-1-3">
<p>
Aquí está el script Bash que realiza esta tarea:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Script para renombrar archivos PDF con fecha de modificaci&#243;n en formato YYMMDD-nombre.pdf</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Verificar si se proporcion&#243; un directorio como argumento</span>
<span style="color: #D70000;">if</span> [ $<span style="color: #004651;">#</span> -ne 1 ]; <span style="color: #D70000;">then</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Uso: $0 &lt;directorio&gt;"</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Ejemplo: $0 /ruta/a/tus/pdfs"</span>
    <span style="color: #D70000;">exit</span> 1
<span style="color: #D70000;">fi</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Asignar el directorio proporcionado</span>
<span style="color: #004651;">DIRECTORY</span>=<span style="color: #005F00;">"$1"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Verificar si el directorio existe</span>
<span style="color: #D70000;">if</span> [ <span style="color: #1F55A0; font-weight: bold;">!</span> -d <span style="color: #005F00;">"$DIRECTORY"</span> ]; <span style="color: #D70000;">then</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Error: El directorio '$DIRECTORY' no existe."</span>
    <span style="color: #D70000;">exit</span> 1
<span style="color: #D70000;">fi</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Cambiar al directorio especificado</span>
<span style="color: #1F55A0;">cd</span> <span style="color: #005F00;">"$DIRECTORY"</span> || {
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Error: No se pudo acceder al directorio '$DIRECTORY'."</span>
    <span style="color: #D70000;">exit</span> 1
}

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Contador para archivos procesados</span>
<span style="color: #004651;">COUNT</span>=0

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Buscar archivos PDF y procesarlos</span>
<span style="color: #D70000;">for</span> file<span style="color: #D70000;"> in</span> *.pdf; <span style="color: #D70000;">do</span>
    <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Verificar si hay archivos PDF en el directorio</span>
    <span style="color: #D70000;">if</span> [ <span style="color: #1F55A0; font-weight: bold;">!</span> -e <span style="color: #005F00;">"$file"</span> ]; <span style="color: #D70000;">then</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"No se encontraron archivos PDF en '$DIRECTORY'."</span>
        <span style="color: #D70000;">exit</span> 0
    <span style="color: #D70000;">fi</span>

    <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Comprobar si el nombre ya tiene el prefijo YYMMDD-</span>
    <span style="color: #D70000;">if</span> [[ <span style="color: #005F00;">"$file"</span> =~ ^[0-9]{6}-.*<span style="color: #005F00;">\.</span>pdf$ ]]; <span style="color: #D70000;">then</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Saltando '$file': ya tiene el formato YYMMDD-."</span>
        <span style="color: #D70000;">continue</span>
    <span style="color: #D70000;">fi</span>

    <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Obtener la fecha de modificaci&#243;n del archivo (YYMMDD)</span>
    <span style="color: #004651;">MOD_DATE</span>=$(<span style="color: #1F55A0; font-weight: bold;">stat -c %y "$file" | cut -d' ' -f1 | sed 's/-//g' | cut -c3-8</span>)

    <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Construir el nuevo nombre con la fecha</span>
    <span style="color: #004651;">NEW_NAME</span>=<span style="color: #005F00;">"${MOD_DATE}-${file}"</span>

    <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Renombrar el archivo</span>
    <span style="color: #D70000;">if</span> mv -n <span style="color: #005F00;">"$file"</span> <span style="color: #005F00;">"$NEW_NAME"</span>; <span style="color: #D70000;">then</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Renombrado: '$file' -&gt; '$NEW_NAME'"</span>
        ((COUNT++))
    <span style="color: #D70000;">else</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Error al renombrar '$file'. Puede que '$NEW_NAME' ya exista."</span>
    <span style="color: #D70000;">fi</span>
<span style="color: #D70000;">done</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Resumen final</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Proceso completado. Archivos renombrados: $COUNT."</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org7779b09" class="outline-3">
<h3 id="org7779b09"><span class="section-number-3">1.4.</span> Explicación del Script</h3>
<div class="outline-text-3" id="text-1-4">
<ul class="org-ul">
<li><b><b>Línea inicial</b></b>: `#!/bin/bash` indica que es un script Bash.</li>
<li><b><b>Verificación de argumentos</b></b>: Comprueba que se pase un directorio como parámetro (`$1`), mostrando un mensaje de uso si falta.</li>
<li><b><b>Validación del directorio</b></b>: Asegura que el directorio exista y sea accesible.</li>
<li><b><b>Bucle sobre PDFs</b></b>: Itera sobre todos los archivos `.pdf` en el directorio:
<ul class="org-ul">
<li>Si no hay PDFs, informa y termina.</li>
<li>Si el archivo ya tiene el prefijo `YYMMDD-` (ej. `250315-documento.pdf`), lo salta.</li>
<li>Usa `stat -c %y` para obtener la fecha de modificación (formato `YYYY-MM-DD`), extrae `YYMMDD` con `sed` y `cut`.</li>
<li>Renombra con `mv -n` (sin sobrescribir si ya existe).</li>
</ul></li>
<li><b><b>Contador</b></b>: Lleva la cuenta de archivos renombrados y muestra un resumen.</li>
</ul>
</div>
</div>
<div id="outline-container-orge0926be" class="outline-3">
<h3 id="orge0926be"><span class="section-number-3">1.5.</span> Uso del Script</h3>
<div class="outline-text-3" id="text-1-5">
<ol class="org-ol">
<li>Guarda el script como `rename<sub>pdfs.sh</sub>`.</li>
<li><p>
Dale permisos de ejecución:
</p>
<div class="org-src-container">
<pre class="src src-bash">chmod +x rename_pdfs.sh
</pre>
</div></li>
<li><p>
Ejecútalo especificando un directorio:
</p>
<div class="org-src-container">
<pre class="src src-bash">./rename_pdfs.sh /ruta/a/tus/pdfs
</pre>
</div>
<p>
Ejemplo de salida:
</p>
<pre class="example" id="orgc723859">
Saltando '250314-informe.pdf': ya tiene el formato YYMMDD-.
Renombrado: 'documento.pdf' -&gt; '250315-documento.pdf'
Proceso completado. Archivos renombrados: 1.
</pre></li>
</ol>
</div>
</div>
<div id="outline-container-orgd962ef1" class="outline-3">
<h3 id="orgd962ef1"><span class="section-number-3">1.6.</span> Notas y Precauciones</h3>
<div class="outline-text-3" id="text-1-6">
<ul class="org-ul">
<li><b><b>Fecha de modificación</b></b>: Depende de la última vez que el archivo fue modificado, no de su creación. Si necesitas la fecha de creación, ajusta usando `stat -c %w` (si el sistema lo soporta).</li>
<li><b><b>Colisiones</b></b>: Usa `-n` en `mv` para evitar sobrescribir archivos existentes; revisa manualmente si hay errores.</li>
<li><b><b>Portabilidad</b></b>: Probado en sistemas Linux con `stat` de GNU coreutils. En macOS, cambia `stat -c %y` por `stat -f %Sm`.</li>
</ul>
</div>
</div>
<div id="outline-container-org18bf31c" class="outline-3">
<h3 id="org18bf31c"><span class="section-number-3">1.7.</span> Conclusión</h3>
<div class="outline-text-3" id="text-1-7">
<p>
Este script es una herramienta práctica para mantener tus PDFs organizados con un estándar basado en fechas. Puedes adaptarlo para otros formatos (`.docx`, `.txt`) cambiando `*.pdf` por el patrón deseado. ¡Automatiza y simplifica tu gestión de archivos en Linux!
</p>
</div>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">Linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-script.html">script</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-pdf.html">pdf</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-renombrar.html">renombrar</a> </div>]]></description>
  <category><![CDATA[Linux]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[script]]></category>
  <category><![CDATA[pdf]]></category>
  <category><![CDATA[renombrar]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-15-renombrando-archivos-pdf-con-fecha-de-modificaci%C3%B3n-en-linux.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-15-renombrando-archivos-pdf-con-fecha-de-modificaci%C3%B3n-en-linux.html</guid>
  <pubDate>Sat, 15 Mar 2025 19:35:00 +0100</pubDate>
</item>
</channel>
</rss>
