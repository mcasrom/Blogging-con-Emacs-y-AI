<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title><![CDATA[Emacs con esteroides - seguridad]]></title>
<description><![CDATA[Emacs con esteroides - seguridad]]></description>
<link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI//tag-seguridad.html</link>
<lastBuildDate>Wed, 11 Jun 2025 20:38:37 +0200</lastBuildDate>
<item>
  <title><![CDATA[Refuerzo Rápido de Ciberseguridad para tu Laptop Linux Semantica]]></title>
  <description><![CDATA[
<div id="outline-container-orge0809a7" class="outline-2">
<h2 id="orge0809a7">Introducción</h2>
<div class="outline-text-2" id="text-orge0809a7">
<p>
La seguridad digital no termina tras aplicar un firewall y endurecer el sistema. Es fundamental <b>analizar lo que está ocurriendo</b> en nuestros registros de sistema, porque ahí se esconden muchas pistas sobre accesos sospechosos, ataques de fuerza bruta o errores de configuración que podrían explotarse.
</p>

<p>
Esta guía incluye:
</p>
<ul class="org-ul">
<li>Un script de refuerzo rápido de seguridad.</li>
<li>Un análisis semántico de logs básicos del sistema (`auth.log`, `syslog`, `journalctl`).</li>
<li>Exportación de hallazgos clave a un fichero de texto para revisión o envío automático.</li>
</ul>
</div>
</div>
<div id="outline-container-orgb1290ef" class="outline-2">
<h2 id="orgb1290ef">Diagrama de flujo de seguridad</h2>
<div class="outline-text-2" id="text-orgb1290ef">

<figure id="org81e865e">
<img src="images/diagrama_seguridad_total.png" alt="diagrama_seguridad_total.png">

</figure>
</div>
</div>
<div id="outline-container-org3cb1147" class="outline-2">
<h2 id="org3cb1147">Análisis semántico de logs del sistema</h2>
<div class="outline-text-2" id="text-org3cb1147">
<p>
Usaremos `journalctl`, `grep`, y expresiones regulares para extraer:
</p>

<ul class="org-ul">
<li>Inicios de sesión fallidos y exitosos.</li>
<li>Intentos de login como root.</li>
<li>Reinicios sospechosos o caídas de servicios.</li>
<li>Errores frecuentes o advertencias de seguridad.</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash"><code><span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"&#128269; An&#225;lisis sem&#225;ntico b&#225;sico de logs:"</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"-------------------------------------"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Revisar fallos de login</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"&#128204; Fallos de login detectados:"</span>
journalctl -xe | grep -Ei <span style="color: #005F00;">"failed password|authentication failure"</span> | tail -n 10

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Intentos de login como root</span>
<span style="color: #1F55A0;">echo</span> -e <span style="color: #005F00;">"\n&#128680; Intentos de login como root:"</span>
grep <span style="color: #005F00;">"root"</span> /var/log/auth.log | grep <span style="color: #005F00;">"Failed"</span> | tail -n 10

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Servicios ca&#237;dos o reiniciados</span>
<span style="color: #1F55A0;">echo</span> -e <span style="color: #005F00;">"\n&#9888;&#65039; Servicios con errores recientes:"</span>
journalctl -p err -xb | tail -n 10

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Inicios de sesi&#243;n exitosos recientes</span>
<span style="color: #1F55A0;">echo</span> -e <span style="color: #005F00;">"\n&#9989; Inicios de sesi&#243;n exitosos:"</span>
last -n 5
</code></pre>
</div>
</div>
</div>
<div id="outline-container-orgce010f1" class="outline-2">
<h2 id="orgce010f1">Exportar informe de amenazas detectadas</h2>
<div class="outline-text-2" id="text-orgce010f1">
<div class="org-src-container">
<pre class="src src-bash"><code><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Guardando informe de seguridad en ~/informe_seguridad.txt..."</span>
{
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Informe de Seguridad - $(</span><span style="color: #1F55A0; font-weight: bold;">date</span><span style="color: #005F00;">)"</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"-------------------------------"</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"FALLOS DE LOGIN:"</span>
    journalctl -xe | grep -Ei <span style="color: #005F00;">"failed password|authentication failure"</span> | tail -n 10
    <span style="color: #1F55A0;">echo</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"INTENTOS DE LOGIN COMO ROOT:"</span>
    grep <span style="color: #005F00;">"root"</span> /var/log/auth.log | grep <span style="color: #005F00;">"Failed"</span> | tail -n 10
    <span style="color: #1F55A0;">echo</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"ERRORES CR&#205;TICOS EN EL SISTEMA:"</span>
    journalctl -p err -xb | tail -n 10
    <span style="color: #1F55A0;">echo</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"INICIOS DE SESI&#211;N EXITOSOS:"</span>
    last -n 5
} &gt; ~/informe_seguridad.txt
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Informe generado en ~/informe_seguridad.txt"</span>
</code></pre>
</div>

<p>
<b><b>Ejecutar:</b></b>
</p>

<p>
```bash
chmod +x exportar<sub>logs.sh</sub>
./exportar<sub>logs.sh</sub>
</p>

<p>
<a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-11-script-refuerzo-r-pido-de-ciberseguridad-para-tu-laptop-linux">2025-06-11-script-refuerzo-r-pido-de-ciberseguridad-para-tu-laptop-linux</a>
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ciberseguridad.html">ciberseguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-logs.html">logs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-automatización.html">automatización</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-orgmode.html">orgmode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[ciberseguridad]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[logs]]></category>
  <category><![CDATA[automatización]]></category>
  <category><![CDATA[orgmode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-11-refuerzo-r-pido-de-ciberseguridad-para-tu-laptop-linux-semantica.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-11-refuerzo-r-pido-de-ciberseguridad-para-tu-laptop-linux-semantica.html</guid>
  <pubDate>Wed, 11 Jun 2025 20:28:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Script Refuerzo Rápido de Ciberseguridad para tu Laptop Linux]]></title>
  <description><![CDATA[
<div id="outline-container-org54159eb" class="outline-2">
<h2 id="org54159eb">Introducción</h2>
<div class="outline-text-2" id="text-org54159eb">
<p>
En el mundo actual, donde la movilidad y la conectividad son constantes, proteger tu laptop Linux es esencial. Ya sea que uses tu equipo para trabajar, estudiar o simplemente navegar, estás expuesto a amenazas comunes como escaneos de puertos, ataques por fuerza bruta y servicios mal configurados.
</p>

<p>
Este post te guiará a través de un enfoque automatizado para aplicar medidas básicas de ciberseguridad en tu laptop Linux usando un único script en Bash. Ideal para quienes desean una solución rápida, efectiva y sin complicaciones.
</p>
</div>
</div>
<div id="outline-container-org73f7ce3" class="outline-2">
<h2 id="org73f7ce3">Diagrama del flujo del script</h2>
<div class="outline-text-2" id="text-org73f7ce3">
<p>
El siguiente diagrama PlantUML resume el proceso que sigue el script paso a paso:
</p>


<figure id="org6ec299d">
<img src="images/diagrama_refuerzo.png" alt="diagrama_refuerzo.png">

</figure>
</div>
</div>
<div id="outline-container-org19dd17a" class="outline-2">
<h2 id="org19dd17a">Objetivo del script</h2>
<div class="outline-text-2" id="text-org19dd17a">
<p>
Este script realiza las siguientes acciones:
</p>

<ul class="org-ul">
<li>Actualiza tu sistema a la última versión estable.</li>
<li>Configura y activa el firewall UFW con reglas seguras.</li>
<li>Instala y activa `fail2ban` para bloquear ataques por fuerza bruta.</li>
<li>Aplica endurecimiento básico de red con `sysctl`.</li>
<li>Revisa los permisos de tu carpeta `.ssh`.</li>
</ul>
</div>
</div>
<div id="outline-container-orgfc1d6fe" class="outline-2">
<h2 id="orgfc1d6fe">Requisitos</h2>
<div class="outline-text-2" id="text-orgfc1d6fe">
<ul class="org-ul">
<li>Sistema Linux basado en Debian (Ubuntu, Mint) o Arch.</li>
<li>Acceso de superusuario (sudo).</li>
<li>Conexión a internet.</li>
</ul>
</div>
</div>
<div id="outline-container-org0861e20" class="outline-2">
<h2 id="org0861e20">Guía de instalación</h2>
<div class="outline-text-2" id="text-org0861e20">
<p>
<b><b>Paso 1: Crear el script</b></b>
</p>

<p>
Crea un archivo llamado <code>refuerzo_basico.sh</code> con el siguiente contenido:
</p>

<div class="org-src-container">
<pre class="src src-bash"><code><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>
<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Reforzamiento b&#225;sico de ciberseguridad para Linux</span>
<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Autor: Mike (geoemacs.netlify.app)</span>

<span style="color: #1F55A0;">set</span> -e

<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"&#128272; Iniciando proceso de refuerzo de seguridad para tu laptop Linux..."</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">1. Actualizar el sistema</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"&#128230; Actualizando el sistema..."</span>
<span style="color: #D70000;">if </span><span style="color: #1F55A0;">command</span> -v apt &gt;/dev/null; <span style="color: #D70000;">then</span>
    sudo apt update &amp;&amp; sudo apt upgrade -y
<span style="color: #D70000;">elif </span><span style="color: #1F55A0;">command</span> -v pacman &gt;/dev/null; <span style="color: #D70000;">then</span>
    sudo pacman -Syu --noconfirm
<span style="color: #D70000;">fi</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">2. Activar y configurar firewall (UFW)</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"&#128737;&#65039; Configurando firewall con UFW..."</span>
sudo apt install -y ufw 2&gt;/dev/null || <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"ufw ya instalado o no disponible"</span>
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow OpenSSH
sudo ufw enable

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">3. Instalar y activar fail2ban</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"&#128683; Instalando fail2ban..."</span>
sudo apt install -y fail2ban 2&gt;/dev/null || <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"fail2ban ya instalado o no disponible"</span>
sudo systemctl enable --now fail2ban

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">4. Fortalecer configuraci&#243;n de red</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"&#127760; Aplicando configuraciones de red con sysctl..."</span>
sudo tee /etc/sysctl.d/99-hardening.conf &gt; /dev/null &lt;&lt;EOF
<span style="color: #005F00;"># Evitar redirecciones IP</span>
<span style="color: #005F00;">net.ipv4.conf.all.accept_redirects = 0</span>
<span style="color: #005F00;">net.ipv6.conf.all.accept_redirects = 0</span>
<span style="color: #005F00;"># Evitar ataques de spoofing</span>
<span style="color: #005F00;">net.ipv4.conf.all.rp_filter = 1</span>
<span style="color: #005F00;"># Deshabilitar paquetes de fuente falsa</span>
<span style="color: #005F00;">net.ipv4.conf.all.send_redirects = 0</span>
<span style="color: #005F00;">EOF</span>

sudo sysctl --system

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">5. Revisar permisos cr&#237;ticos</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"&#128270; Revisando permisos de archivos cr&#237;ticos..."</span>
sudo chmod 700 ~/.ssh
sudo chmod 600 ~/.ssh/authorized_keys 2&gt;/dev/null || true
sudo chown -R $(<span style="color: #1F55A0; font-weight: bold;">whoami</span>):$(<span style="color: #1F55A0; font-weight: bold;">whoami</span>) ~/.ssh

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">6. Reporte r&#225;pido</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"&#9989; Revisi&#243;n r&#225;pida:"</span>
sudo ufw status
systemctl status fail2ban | grep Active
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"&#128074; Reforzamiento b&#225;sico completado."</span>
</code></pre>
</div>

<p>
<b><b>Paso 2: Dar permisos y ejecutar</b></b>
</p>

<div class="org-src-container">
<pre class="src src-shell"><code>chmod +x refuerzo_basico.sh
./refuerzo_basico.sh
</code></pre>
</div>

<p>
<b><b>Paso 3: Comprobación final</b></b>
</p>

<div class="org-src-container">
<pre class="src src-shell"><code>sudo ufw status
sudo fail2ban-client status
</code></pre>
</div>
</div>
</div>
<div id="outline-container-org1d9efc7" class="outline-2">
<h2 id="org1d9efc7">Conclusión</h2>
<div class="outline-text-2" id="text-org1d9efc7">
<p>
Este script proporciona un refuerzo básico pero poderoso que puede aplicarse en menos de 5 minutos. Ideal para laptops personales o equipos recién instalados. Si deseas un nivel más avanzado de hardening, puedes complementar con herramientas como <b>lynis</b>, <b>rkhunter</b> o políticas AppArmor/SELinux.
</p>
</div>
</div>
<div id="outline-container-org890666c" class="outline-2">
<h2 id="org890666c">Referencias</h2>
<div class="outline-text-2" id="text-org890666c">
<ul class="org-ul">
<li><a href="https://wiki.ubuntu.com/UncomplicatedFirewall">https://wiki.ubuntu.com/UncomplicatedFirewall</a></li>
<li><a href="https://www.fail2ban.org/">https://www.fail2ban.org/</a></li>
<li><a href="https://www.kernel.org/doc/html/latest/admin-guide/sysctl/index.html">https://www.kernel.org/doc/html/latest/admin-guide/sysctl/index.html</a></li>
<li><a href="https://cisofy.com/lynis/">https://cisofy.com/lynis/</a></li>
<li><a href="https://github.com/mcasrom/geo-ia">https://github.com/mcasrom/geo-ia</a></li>
</ul>
</div>
</div>
<div id="outline-container-org4b93b55" class="outline-2">
<h2 id="org4b93b55">Comentarios finales</h2>
<div class="outline-text-2" id="text-org4b93b55">
<p>
¿Te gustaría extender esto con análisis semántico de logs, informes PDF automáticos o notificaciones vía Telegram cuando se detecte actividad sospechosa? ¡Próximamente!
</p>

<p>
<a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-11-refuerzo-r-pido-de-ciberseguridad-para-tu-laptop-linux-semantica">- 2025-06-11-refuerzo-r-pido-de-ciberseguridad-para-tu-laptop-linux-semantica</a>
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-script.html">script</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-firewall.html">firewall</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ufw.html">ufw</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-fail2ban.html">fail2ban</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-sysctl.html">sysctl</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-hardening.html">hardening</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-laptop.html">laptop</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[script]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[firewall]]></category>
  <category><![CDATA[ufw]]></category>
  <category><![CDATA[fail2ban]]></category>
  <category><![CDATA[sysctl]]></category>
  <category><![CDATA[hardening]]></category>
  <category><![CDATA[laptop]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-11-script-refuerzo-r-pido-de-ciberseguridad-para-tu-laptop-linux.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-11-script-refuerzo-r-pido-de-ciberseguridad-para-tu-laptop-linux.html</guid>
  <pubDate>Wed, 11 Jun 2025 20:14:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Sistema Completo de Monitoreo de Integridad en Linux con Hashes]]></title>
  <description><![CDATA[
<div id="outline-container-orge73d82b" class="outline-2">
<h2 id="orge73d82b">Introducción</h2>
<div class="outline-text-2" id="text-orge73d82b">
<p>
Sistema completo para detectar modificaciones no autorizadas en sistemas Linux mediante hashes criptográficos, con almacenamiento seguro y control de versiones.
</p>
</div>
<div id="outline-container-orgfaa68a2" class="outline-3">
<h3 id="orgfaa68a2">Diagrama del Sistema Completo:</h3>
<div class="outline-text-3" id="text-orgfaa68a2">

<figure id="orgd64b8e7">
<img src="images/sistema-completo.png" alt="sistema-completo.png">

</figure>

<p>
<br>
</p>
</div>
</div>
</div>
<div id="outline-container-org5a5f59c" class="outline-2">
<h2 id="org5a5f59c">Fase 1: Creación del Script Base</h2>
<div class="outline-text-2" id="text-org5a5f59c">
</div>
<div id="outline-container-org8d122b8" class="outline-3">
<h3 id="org8d122b8">Script de Generación de Hashes (`monitor<sub>integridad.sh</sub>`):</h3>
<div class="outline-text-3" id="text-org8d122b8">
<div class="org-src-container">
<pre class="src src-bash"><code><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>
<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Generaci&#243;n inicial de hashes</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Configuraci&#243;n b&#225;sica</span>
<span style="color: #004651;">TARGETS</span>=(
    /bin
    /sbin
    /usr/bin
    /usr/sbin
    /etc
    /lib/modules
    /etc/init.d
)

<span style="color: #AF8700;">generate_hashes</span>() {
    <span style="color: #1F55A0;">local</span> <span style="color: #004651;">output_file</span>=$<span style="color: #004651;">1</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"# Hashes de Integridad - $(</span><span style="color: #1F55A0; font-weight: bold;">date</span><span style="color: #005F00;">)"</span> &gt; <span style="color: #005F00;">"$output_file"</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"# Sistema: $(</span><span style="color: #1F55A0; font-weight: bold;">uname -a</span><span style="color: #005F00;">)"</span> &gt;&gt; <span style="color: #005F00;">"$output_file"</span>

    <span style="color: #D70000;">for</span> target<span style="color: #D70000;"> in</span> <span style="color: #005F00;">"${TARGETS[@]}"</span>; <span style="color: #D70000;">do</span>
        <span style="color: #D70000;">if</span> [ -e <span style="color: #005F00;">"$target"</span> ]; <span style="color: #D70000;">then</span>
            <span style="color: #1F55A0;">echo</span> -e <span style="color: #005F00;">"\n# Directorio: $target"</span> &gt;&gt; <span style="color: #005F00;">"$output_file"</span>
            find <span style="color: #005F00;">"$target"</span> -type f -exec sha256sum {} <span style="color: #005F00;">\;</span> &gt;&gt; <span style="color: #005F00;">"$output_file"</span>
        <span style="color: #D70000;">fi</span>
    <span style="color: #D70000;">done</span>
}

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Uso b&#225;sico</span>
<span style="color: #004651;">OUTPUT_FILE</span>=<span style="color: #005F00;">"hashes_base.sha256"</span>
generate_hashes <span style="color: #005F00;">"$OUTPUT_FILE"</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Hashes generados en $OUTPUT_FILE"</span>
</code></pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orgc97f3fe" class="outline-2">
<h2 id="orgc97f3fe">Fase 2: Almacenamiento Seguro con Control de Versiones</h2>
<div class="outline-text-2" id="text-orgc97f3fe">
</div>
<div id="outline-container-org41f3dbc" class="outline-3">
<h3 id="org41f3dbc">Estructura de Directorios:</h3>
<div class="outline-text-3" id="text-org41f3dbc">

<figure id="orgeb69ed3">
<img src="images/estructura-almacenamiento.png" alt="estructura-almacenamiento.png">

</figure>

<p>
<br>
</p>
</div>
</div>
<div id="outline-container-org8c7884a" class="outline-3">
<h3 id="org8c7884a">Script Mejorado con Almacenamiento Seguro:</h3>
<div class="outline-text-3" id="text-org8c7884a">
<div class="org-src-container">
<pre class="src src-bash"><code><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>
<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Configuraci&#243;n de almacenamiento seguro</span>
<span style="color: #004651;">VAULT_DIR</span>=<span style="color: #005F00;">"/var/log/integridad/vault"</span>
<span style="color: #004651;">CONFIG_DIR</span>=<span style="color: #005F00;">"/var/log/integridad/config"</span>
<span style="color: #004651;">LOG_FILE</span>=<span style="color: #005F00;">"/var/log/integridad/logs/integridad.log"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Inicializaci&#243;n</span>
mkdir -p {$<span style="color: #004651;">VAULT_DIR</span>/hashes,$<span style="color: #004651;">VAULT_DIR</span>/firmas,$<span style="color: #004651;">VAULT_DIR</span>/backups,$<span style="color: #004651;">CONFIG_DIR</span>}
<span style="color: #004651;">TIMESTAMP</span>=$(<span style="color: #1F55A0; font-weight: bold;">date +%Y%m%d_%H%M%S</span>)
<span style="color: #004651;">HASH_FILE</span>=<span style="color: #005F00;">"$VAULT_DIR/hashes/$TIMESTAMP.sha256"</span>
<span style="color: #004651;">SIG_FILE</span>=<span style="color: #005F00;">"$VAULT_DIR/firmas/$TIMESTAMP.sig"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Funci&#243;n de generaci&#243;n mejorada</span>
<span style="color: #AF8700;">generate_hashes</span>() {
    <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">... (funci&#243;n anterior mejorada)</span>
    <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">A&#241;ade metadatos adicionales</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"# Metadata:"</span> &gt;&gt; <span style="color: #005F00;">"$HASH_FILE"</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"# Generated: $(</span><span style="color: #1F55A0; font-weight: bold;">date --iso-8601=seconds</span><span style="color: #005F00;">)"</span> &gt;&gt; <span style="color: #005F00;">"$HASH_FILE"</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"# Hostname: $(</span><span style="color: #1F55A0; font-weight: bold;">hostname -f</span><span style="color: #005F00;">)"</span> &gt;&gt; <span style="color: #005F00;">"$HASH_FILE"</span>
}

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Firmado y backup</span>
gpg --batch --yes --detach-sign --armor <span style="color: #005F00;">\</span>
    -o <span style="color: #005F00;">"$SIG_FILE"</span> <span style="color: #005F00;">"$HASH_FILE"</span>

tar czf - <span style="color: #005F00;">"$HASH_FILE"</span> <span style="color: #005F00;">"$SIG_FILE"</span> | <span style="color: #005F00;">\</span>
gpg --batch --encrypt --recipient <span style="color: #005F00;">"security@example.com"</span> <span style="color: #005F00;">\</span>
&gt; <span style="color: #005F00;">"$VAULT_DIR/backups/$TIMESTAMP.tar.gpg"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Control de versiones</span>
git -C <span style="color: #005F00;">"/var/log/integridad"</span> add vault/
git -C <span style="color: #005F00;">"/var/log/integridad"</span> commit -m <span style="color: #005F00;">"Update $TIMESTAMP"</span> <span style="color: #005F00;">\</span>
&gt;&gt; <span style="color: #005F00;">"$LOG_FILE"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Rotaci&#243;n (conservar 30 d&#237;as)</span>
find <span style="color: #005F00;">"$VAULT_DIR/hashes"</span> -mtime +30 -delete
find <span style="color: #005F00;">"$VAULT_DIR/firmas"</span> -mtime +30 -delete
</code></pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org89418ad" class="outline-2">
<h2 id="org89418ad">Fase 3: Verificación y Monitoreo</h2>
<div class="outline-text-2" id="text-org89418ad">
</div>
<div id="outline-container-org8652a3e" class="outline-3">
<h3 id="org8652a3e">Script de Verificación (`verificar<sub>integridad.sh</sub>`):</h3>
<div class="outline-text-3" id="text-org8652a3e">
<div class="org-src-container">
<pre class="src src-bash"><code><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>
<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Par&#225;metros configurables</span>
<span style="color: #004651;">REFERENCE</span>=<span style="color: #005F00;">"${1:-$(</span><span style="color: #1F55A0; font-weight: bold;">ls -t /var/log/integridad/vault/hashes/*.sha256 | head -2 | tail -1</span><span style="color: #005F00;">)}"</span>
<span style="color: #004651;">CURRENT</span>=<span style="color: #005F00;">"/tmp/current_hashes.$$.sha256"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Generar hashes actuales</span>
monitor_integridad.sh --quick <span style="color: #005F00;">"$CURRENT"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Comparaci&#243;n avanzada</span>
<span style="color: #004651;">diff_output</span>=<span style="color: #005F00;">"/var/log/integridad/diff_$(</span><span style="color: #1F55A0; font-weight: bold;">date +%s</span><span style="color: #005F00;">).diff"</span>
diff -u &lt;(sort <span style="color: #005F00;">"$REFERENCE"</span>) &lt;(sort <span style="color: #005F00;">"$CURRENT"</span>) &gt; <span style="color: #005F00;">"$diff_output"</span>

<span style="color: #D70000;">if</span> [ -s <span style="color: #005F00;">"$diff_output"</span> ]; <span style="color: #D70000;">then</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"ALERTA: Cambios detectados"</span> &gt;&amp;2
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Detalles en $diff_output"</span> &gt;&amp;2
    <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Opcional: Enviar email de alerta</span>
<span style="color: #D70000;">else</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"OK: No se detectaron cambios"</span>
    rm <span style="color: #005F00;">"$diff_output"</span>
<span style="color: #D70000;">fi</span>

rm <span style="color: #005F00;">"$CURRENT"</span>
</code></pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orgd2adbc7" class="outline-2">
<h2 id="orgd2adbc7">Fase 4: Automatización con Cron</h2>
<div class="outline-text-2" id="text-orgd2adbc7">
</div>
<div id="outline-container-orgf990722" class="outline-3">
<h3 id="orgf990722">Configuración recomendada:</h3>
<div class="outline-text-3" id="text-orgf990722">
<div class="org-src-container">
<pre class="src src-cron"><code># Ejemplo crontab para root
0 3 * * * /usr/local/bin/monitor_integridad.sh &gt;&gt; /var/log/integridad/cron.log 2&gt;&amp;1
0 4 * * 0 /usr/local/bin/verificar_integridad.sh /var/log/integridad/vault/hashes/last_known_good.sha256
</code></pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org42df2f4" class="outline-2">
<h2 id="org42df2f4">Tablas de Referencia Rápida</h2>
<div class="outline-text-2" id="text-org42df2f4">
</div>
<div id="outline-container-orgd5f91c2" class="outline-3">
<h3 id="orgd5f91c2">Comparación de Estrategias de Almacenamiento:</h3>
<div class="outline-text-3" id="text-orgd5f91c2">
<table border="1" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Estrategia</th>
<th scope="col" class="org-left">Ventajas</th>
<th scope="col" class="org-left">Desventajas</th>
<th scope="col" class="org-left">Uso Recomendado</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Local plano</td>
<td class="org-left">Simple</td>
<td class="org-left">Sin versionado</td>
<td class="org-left">Pruebas iniciales</td>
</tr>

<tr>
<td class="org-left">Git</td>
<td class="org-left">Historial completo</td>
<td class="org-left">Requiere mantenimiento</td>
<td class="org-left">Entornos desarrollo</td>
</tr>

<tr>
<td class="org-left">GPG + Backup</td>
<td class="org-left">Máxima seguridad</td>
<td class="org-left">Complejidad configuración</td>
<td class="org-left">Producción crítica</td>
</tr>
</tbody>
</table>

<p>
<br>
</p>
</div>
</div>
<div id="outline-container-org003c75b" class="outline-3">
<h3 id="org003c75b">Política de Retención:</h3>
<div class="outline-text-3" id="text-org003c75b">
<table border="1" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Tipo Archivo</th>
<th scope="col" class="org-left">Retención</th>
<th scope="col" class="org-left">Compresión</th>
<th scope="col" class="org-left">Encriptación</th>
<th scope="col" class="org-left">Ejemplo</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Hashes brutos</td>
<td class="org-left">30 días</td>
<td class="org-left">No</td>
<td class="org-left">No</td>
<td class="org-left">hashes<sub>20231115.sha256</sub></td>
</tr>

<tr>
<td class="org-left">Firmas GPG</td>
<td class="org-left">30 días</td>
<td class="org-left">No</td>
<td class="org-left">No</td>
<td class="org-left">hashes<sub>20231115.sig</sub></td>
</tr>

<tr>
<td class="org-left">Backups</td>
<td class="org-left">1 año</td>
<td class="org-left">Sí</td>
<td class="org-left">Sí</td>
<td class="org-left">backup<sub>20231115.tar.gpg</sub></td>
</tr>

<tr>
<td class="org-left">Logs</td>
<td class="org-left">6 meses</td>
<td class="org-left">Sí</td>
<td class="org-left">No</td>
<td class="org-left">integridad.log.1.gz</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div id="outline-container-org2d248ff" class="outline-2">
<h2 id="org2d248ff">Integración con Emacs</h2>
<div class="outline-text-2" id="text-org2d248ff">
<p>
Para gestión desde Emacs:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><code>(<span style="color: #D70000;">defun</span> <span style="color: #AF8700;">integrity-monitor-run</span> ()
  <span style="color: #004700; font-style: italic;">"Ejecutar monitor de integridad"</span>
  (<span style="color: #D70000;">interactive</span>)
  (async-shell-command <span style="color: #005F00;">"monitor_integridad.sh"</span> <span style="color: #005F00;">"*Integrity Monitor*"</span>))

(<span style="color: #D70000;">defun</span> <span style="color: #AF8700;">integrity-verify</span> (<span style="color: #1F55A0;">&amp;optional</span> ref-file)
  <span style="color: #004700; font-style: italic;">"Verificar integridad contra referencia"</span>
  (<span style="color: #D70000;">interactive</span> <span style="color: #005F00;">"fArchivo de referencia: "</span>)
  (<span style="color: #D70000;">let</span> ((cmd (format <span style="color: #005F00;">"verificar_integridad.sh %s"</span> (<span style="color: #D70000;">or</span> ref-file <span style="color: #005F00;">""</span>))))
  (compile cmd))
</code></pre>
</div>
</div>
</div>
<div id="outline-container-org6712c4f" class="outline-2">
<h2 id="org6712c4f">Conclusión</h2>
<div class="outline-text-2" id="text-org6712c4f">
<p>
Este sistema completo proporciona:
</p>
<ol class="org-ol">
<li>Generación segura de hashes</li>
<li>Almacenamiento con control de versiones</li>
<li>Verificación automatizada</li>
<li>Historial auditado</li>
</ol>
</div>
<div id="outline-container-org5e15b93" class="outline-3">
<h3 id="org5e15b93">Próximos pasos:</h3>
<div class="outline-text-3" id="text-org5e15b93">
<ul class="org-ul">
<li>Implementar notificaciones por email</li>
<li>Configurar almacenamiento remoto</li>
<li>Integrar con sistemas SIEM</li>
</ul>


<figure id="org3e9f40a">
<img src="images/workflow-final.png" alt="workflow-final.png">

</figure>
</div>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-hashes.html">hashes</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-integridad.html">integridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-monitoreo.html">monitoreo</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-deteccion-cambios.html">deteccion-cambios</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-gpg.html">gpg</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-git.html">git</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-almacenamiento-seguro.html">almacenamiento-seguro</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[hashes]]></category>
  <category><![CDATA[integridad]]></category>
  <category><![CDATA[monitoreo]]></category>
  <category><![CDATA[deteccion-cambios]]></category>
  <category><![CDATA[gpg]]></category>
  <category><![CDATA[git]]></category>
  <category><![CDATA[almacenamiento-seguro]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-09-sistema-completo-de-monitoreo-de-integridad-en-linux-con-hashes.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-09-sistema-completo-de-monitoreo-de-integridad-en-linux-con-hashes.html</guid>
  <pubDate>Mon, 09 Jun 2025 18:55:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Explorando VPNs: Orígenes, Evolución, Beneficios y Configuración de una VPN Gratuita en Linux]]></title>
  <description><![CDATA[
<div id="outline-container-org5610a4a" class="outline-2">
<h2 id="org5610a4a">Introducción a las VPNs</h2>
<div class="outline-text-2" id="text-org5610a4a">
<p>
Las Redes Privadas Virtuales (VPNs, por sus siglas en inglés) se han convertido en herramientas esenciales para proteger la privacidad y la seguridad en línea en un mundo cada vez más conectado. Una VPN crea un túnel seguro y cifrado entre tu dispositivo y un servidor remoto, ocultando tu dirección IP y protegiendo tus datos de miradas indiscretas. Este artículo explora los orígenes, el desarrollo y las razones para usar VPNs, sus capacidades de protección y ofrece una guía práctica para configurar una VPN gratuita en Linux utilizando Emacs Org-mode para la documentación y PlantUML para visualizaciones. Ya seas un entusiasta de la privacidad o un usuario de Linux buscando mejorar tu seguridad, esta guía ofrece un enfoque detallado impulsado por Emacs para entender e implementar VPNs.
</p>
</div>
</div>
<div id="outline-container-orga8fc52a" class="outline-2">
<h2 id="orga8fc52a">Orígenes y Evolución de las VPNs</h2>
<div class="outline-text-2" id="text-orga8fc52a">
</div>
<div id="outline-container-org80bf0c7" class="outline-3">
<h3 id="org80bf0c7">Orígenes</h3>
<div class="outline-text-3" id="text-org80bf0c7">
<p>
El concepto de las VPNs surgió en la década de 1990, cuando las organizaciones buscaban formas seguras de conectar oficinas remotas y empleados a través de la internet pública. En 1996, Gurdeep Singh-Pall, un empleado de Microsoft, desarrolló el Protocolo de Túnel Punto a Punto (PPTP), uno de los primeros protocolos de VPN. El PPTP permitía la transmisión segura de datos a través de internet al encapsular paquetes de datos en un túnel seguro, marcando el nacimiento de las VPNs modernas.
</p>
</div>
</div>
<div id="outline-container-org8595bcd" class="outline-3">
<h3 id="org8595bcd">Desarrollo</h3>
<div class="outline-text-3" id="text-org8595bcd">
<p>
A lo largo de los años, la tecnología de las VPNs evolucionó significativamente:
</p>
<ul class="org-ul">
<li><b><b>1990s</b></b>: PPTP y el Protocolo de Túnel de Capa 2 (L2TP) sentaron las bases para el acceso remoto seguro.</li>
<li><b><b>2000s</b></b>: La introducción de OpenVPN, un protocolo de VPN de código abierto, ofreció un cifrado robusto y flexibilidad, ganando popularidad entre empresas e individuos.</li>
<li><b><b>2010s</b></b>: El auge de los servicios de VPN para consumidores, como NordVPN, ExpressVPN y Mullvad, abordó preocupaciones crecientes sobre privacidad en línea, vigilancia y restricciones geográficas.</li>
<li><b><b>2020s</b></b>: Protocolos modernos como WireGuard surgieron, ofreciendo un rendimiento más rápido y una seguridad más sólida. Las VPNs descentralizadas (dVPNs) también ganaron terreno, aprovechando blockchain para soluciones de privacidad entre pares [].</li>
</ul>

<p>
Hoy en día, millones de personas usan VPNs para proteger su privacidad, eludir la censura y acceder a contenido restringido. Las soluciones de código abierto y las VPNs gratuitas han hecho que esta tecnología sea accesible para los usuarios de Linux, alineándose con la ética de código abierto de la comunidad de Emacs.
</p>
</div>
</div>
</div>
<div id="outline-container-org5c74589" class="outline-2">
<h2 id="org5c74589">¿Por Qué Usar una VPN? Razones y Motivaciones Clave</h2>
<div class="outline-text-2" id="text-org5c74589">
<p>
Las VPNs cumplen múltiples propósitos, siendo valiosas para usuarios de Linux, desarrolladores y defensores de la privacidad. A continuación, se presenta una tabla que resume las principales razones para usar una VPN, con explicaciones detalladas:
</p>

<p>
<br>
</p>

<table border="2" rules="all" frame="box">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Razón</th>
<th scope="col" class="org-left">Descripción</th>
<th scope="col" class="org-left">Ejemplo de Caso de Uso</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Protección de Privacidad</td>
<td class="org-left">Oculta tu dirección IP, evitando que ISPs y sitios web rastreen tu ubicación o actividades.</td>
<td class="org-left">Ocultar hábitos de navegación de los ISPs.</td>
</tr>

<tr>
<td class="org-left">Seguridad de Datos</td>
<td class="org-left">Cifra los datos para protegerlos contra escuchas en redes Wi-Fi públicas o inseguras.</td>
<td class="org-left">Proteger datos en una red Wi-Fi de una cafetería.</td>
</tr>

<tr>
<td class="org-left">Elusión de Censura</td>
<td class="org-left">Supera restricciones gubernamentales o institucionales para acceder a contenido bloqueado.</td>
<td class="org-left">Acceder a sitios de noticias en regiones restringidas.</td>
</tr>

<tr>
<td class="org-left">Superar Restricciones Geográficas</td>
<td class="org-left">Desbloquea contenido bloqueado por región, como servicios de streaming o sitios web.</td>
<td class="org-left">Ver Netflix de EE.UU. desde el extranjero.</td>
</tr>

<tr>
<td class="org-left">Anonimato</td>
<td class="org-left">Reduce la trazabilidad, protegiendo contra anuncios dirigidos o perfiles.</td>
<td class="org-left">Investigación o activismo anónimo.</td>
</tr>
</tbody>
</table>

<p>
<br>
</p>

<p>
<b><b>Diagrama PlantUML: Casos de Uso de VPNs</b></b>
Para visualizar las relaciones entre los casos de uso de las VPNs, aquí hay un diagrama de componentes en PlantUML:
</p>


<figure id="orgc472623">
<img src="images/casos-uso-vpn.png" alt="casos-uso-vpn.png">

</figure>

<p>
<br>
</p>

<p>
Este diagrama ilustra cómo un usuario interactúa con varios servicios de VPN para lograr resultados específicos, renderizado sin problemas en Org-mode con PlantUML.
</p>
</div>
</div>
<div id="outline-container-orgc85a936" class="outline-2">
<h2 id="orgc85a936">¿Qué Protegen las VPNs?</h2>
<div class="outline-text-2" id="text-orgc85a936">
<p>
Las VPNs ofrecen múltiples capas de protección, cruciales para usuarios de Linux que manejan datos sensibles o trabajan en entornos de código abierto. La siguiente tabla detalla qué protegen las VPNs:
</p>

<p>
<br>
</p>

<table border="2" rules="all" frame="box">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Aspecto Protegido</th>
<th scope="col" class="org-left">Cómo lo Protegen las VPNs</th>
<th scope="col" class="org-left">Importancia para Usuarios de Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Dirección IP</td>
<td class="org-left">Oculta tu IP real con la IP del servidor VPN, escondiendo tu ubicación.</td>
<td class="org-left">Evita el rastreo durante contribuciones de código abierto.</td>
</tr>

<tr>
<td class="org-left">Transmisión de Datos</td>
<td class="org-left">Usa cifrado (e.g., AES-256, ChaCha20) para asegurar datos en tránsito.</td>
<td class="org-left">Protege código o datos enviados por redes públicas.</td>
</tr>

<tr>
<td class="org-left">Consultas DNS</td>
<td class="org-left">Enruta las solicitudes DNS a través de la VPN para evitar fugas a ISPs.</td>
<td class="org-left">Garantiza privacidad en búsquedas de dominios.</td>
</tr>

<tr>
<td class="org-left">Identidad en Línea</td>
<td class="org-left">Reduce la trazabilidad al anonimizar tu huella digital.</td>
<td class="org-left">Crucial para desarrolladores enfocados en privacidad.</td>
</tr>

<tr>
<td class="org-left">Fugas WebRTC e IPv6</td>
<td class="org-left">Bloquea WebRTC e IPv6 para evitar exposición de datos no intencional.</td>
<td class="org-left">Mejora la seguridad en sistemas Linux modernos.</td>
</tr>
</tbody>
</table>

<p>
<b><b>Diagrama PlantUML: Capas de Protección de VPN</b></b>
Aquí hay un diagrama de secuencia en PlantUML que muestra cómo una VPN protege el flujo de datos de un usuario de Linux:
</p>


<figure id="orga6793ce">
<img src="images/secuencia-proteccion-vpn.png" alt="secuencia-proteccion-vpn.png">

</figure>

<p>
<br>
</p>

<p>
Este diagrama muestra el flujo de datos seguro desde un cliente Linux a través de un servidor VPN hasta un sitio web objetivo, asegurando una comunicación cifrada.
</p>
</div>
</div>
<div id="outline-container-orgd9e5e0e" class="outline-2">
<h2 id="orgd9e5e0e">Estado Actual de las VPNs (2025)</h2>
<div class="outline-text-2" id="text-orgd9e5e0e">
<p>
A partir de 2025, las VPNs continúan evolucionando:
</p>
<ul class="org-ul">
<li><b><b>Protocolos</b></b>: WireGuard se ha convertido en un estándar por su velocidad y seguridad, superando a protocolos más antiguos como OpenVPN en muchos casos [].</li>
<li><b><b>VPNs Gratuitas</b></b>: Servicios como ProtonVPN y FreePN ofrecen niveles gratuitos con limitaciones, ideales para usuarios de Linux que buscan soluciones rentables [].</li>
<li><b><b>VPNs Descentralizadas</b></b>: Proyectos como ArgoVPN y Sentinel aprovechan redes entre pares para un acceso resistente a la censura [].</li>
<li><b><b>Soporte para Linux</b></b>: Aunque algunos proveedores tienen retrasos en el soporte para Linux (e.g., problemas con la GUI de ProtonVPN), herramientas de código abierto como OpenVPN y WireGuard son bien soportadas [].</li>
</ul>

<p>
Los usuarios de Emacs pueden aprovechar Org-mode para documentar configuraciones de VPN e integrar PlantUML para visualizar configuraciones de red, mejorando la productividad y la claridad.
</p>
</div>
</div>
<div id="outline-container-org9064cd0" class="outline-2">
<h2 id="org9064cd0">Instalación y Uso de una VPN Gratuita en Linux: Ejemplo con ProtonVPN</h2>
<div class="outline-text-2" id="text-org9064cd0">
<p>
ProtonVPN ofrece un nivel gratuito compatible con Linux, lo que lo convierte en una excelente opción para usuarios de Emacs. A continuación, se presenta una guía paso a paso para instalar y usar ProtonVPN en una distribución de Linux (e.g., Ubuntu/Debian), con Org-mode para documentación y PlantUML para visualización.
</p>

<p>
<b><b>Paso 1: Instalar ProtonVPN</b></b>
ProtonVPN proporciona un cliente CLI para Linux, que se integra bien con los flujos de trabajo de Emacs. Sigue estos pasos:
</p>

<ol class="org-ol">
<li><b><b>Descargar el Paquete CLI de ProtonVPN</b></b>:
<ul class="org-ul">
<li>Visita el sitio web oficial de ProtonVPN y descarga el paquete `.deb` para sistemas basados en Debian o sigue las instrucciones para otras distribuciones.</li>
<li><p>
Comando:
</p>
<div class="org-src-container">
<pre class="src src-sh"><code>wget https://repo.protonvpn.com/debian/dists/stable/main/binary-all/protonvpn-stable-release_1.0.3-3_all.deb
sudo dpkg -i protonvpn-stable-release_1.0.3-3_all.deb
sudo apt update
sudo apt install -y proton-vpn-gnome-desktop
</code></pre>
</div></li>
</ul></li>

<li><b><b>Instalar Dependencias</b></b>:
<ul class="org-ul">
<li><p>
Asegúrate de que OpenVPN y NetworkManager estén instalados:
</p>
<div class="org-src-container">
<pre class="src src-sh"><code>sudo apt install -y openvpn network-manager-openvpn
</code></pre>
</div></li>
</ul></li>

<li><b><b>Iniciar Sesión en ProtonVPN</b></b>:
<ul class="org-ul">
<li><p>
Inicializa el cliente CLI de ProtonVPN:
</p>
<div class="org-src-container">
<pre class="src src-sh"><code>protonvpn-cli login &lt;tu-usuario-de-protonvpn&gt;
</code></pre>
</div></li>
<li>Sigue las indicaciones para ingresar tu contraseña.</li>
</ul></li>

<li><b><b>Conectar a un Servidor VPN</b></b>:
<ul class="org-ul">
<li><p>
Conéctate al servidor gratuito más rápido:
</p>
<div class="org-src-container">
<pre class="src src-sh"><code>protonvpn-cli connect --fastest
</code></pre>
</div></li>
</ul></li>
</ol>

<p>
<b><b>Paso 2: Verificar la Conexión</b></b>
</p>
<ul class="org-ul">
<li><p>
Comprueba tu dirección IP para confirmar que la VPN está activa:
</p>
<div class="org-src-container">
<pre class="src src-sh"><code>curl https://api.ipify.org
</code></pre>
</div></li>
<li>La salida debe ser diferente a tu IP real, indicando que la VPN está funcionando.</li>
</ul>

<p>
<b><b>Paso 3: Documentar en Org-mode</b></b>
Los usuarios de Emacs pueden documentar la configuración en un archivo Org-mode para una referencia fácil y publicación en GitHub. Aquí hay un fragmento de ejemplo en Org-mode:
</p>

<p>
#+BEGIN<sub>SRC</sub> org
</p>
</div>
</div>
<div id="outline-container-org5f4a1bc" class="outline-2">
<h2 id="org5f4a1bc">Configuración de ProtonVPN en Linux</h2>
<div class="outline-text-2" id="text-org5f4a1bc">
</div>
<div id="outline-container-org2da52dc" class="outline-3">
<h3 id="org2da52dc">Instalación</h3>
<div class="outline-text-3" id="text-org2da52dc">
<div class="org-src-container">
<pre class="src src-sh"><code>sudo apt install -y proton-vpn-gnome-desktop openvpn network-manager-openvpn
protonvpn-cli login &lt;usuario&gt;
protonvpn-cli connect --fastest
</code></pre>
</div>
</div>
</div>
<div id="outline-container-org1a3ee6c" class="outline-3">
<h3 id="org1a3ee6c">Verificación</h3>
<div class="outline-text-3" id="text-org1a3ee6c">
<div class="org-src-container">
<pre class="src src-sh"><code>curl https://api.ipify.org
</code></pre>
</div>
<p>
#+END<sub>SRC</sub>
</p>

<p>
<b><b>Paso 4: Visualizar con PlantUML</b></b>
Para ilustrar el proceso de conexión de ProtonVPN, usa este diagrama de actividad en PlantUML:
</p>


<figure id="org8f51587">
<img src="images/flujo-protonvpn.png" alt="flujo-protonvpn.png">

</figure>

<p>
<br>
</p>

<p>
<b><b>Paso 5: Publicar en GitHub</b></b>
Para publicar este artículo en GitHub:
</p>
<ol class="org-ol">
<li>Guarda la configuración de ProtonVPN como `vpn-blog-post-es.org` en tu repositorio.</li>
<li>Usa un generador de sitios estáticos como Hugo o Jekyll con soporte para Org-mode (e.g., `ox-hugo`) para convertir el archivo Org a HTML.</li>
<li>Sube el repositorio a GitHub, asegurándote de que los diagramas PlantUML se rendericen usando una Acción de GitHub [].</li>
</ol>

<p>
<b><b>Flujo de Trabajo de GitHub para PlantUML</b></b>
</p>
<div class="org-src-container">
<pre class="src src-yaml"><code><span style="color: #004651;">name</span>: Renderizar Diagramas PlantUML
<span style="color: #AF005F;">on</span>: [push]
<span style="color: #004651;">jobs</span>:
  <span style="color: #004651;">build</span>:
    <span style="color: #004651;">runs-on</span>: ubuntu-latest
    <span style="color: #004651;">steps</span>:
    - <span style="color: #004651;">uses</span>: actions/checkout@v3
    - <span style="color: #004651;">name</span>: Renderizar PlantUML
      <span style="color: #004651;">uses</span>: docker://plantuml/plantuml
      <span style="color: #004651;">run</span>: |
        <span style="color: #005F00;">for file in *.org; do</span>
<span style="color: #005F00;">          java -jar /plantuml.jar -tpng $file</span>
<span style="color: #005F00;">        done</span>
    - <span style="color: #004651;">name</span>: Confirmar Diagramas
      <span style="color: #004651;">run</span>: |
        git config --global user.name <span style="color: #005F00;">"GitHub Action"</span>
        git config --global user.email <span style="color: #005F00;">"action@github.com"</span>
<span style="color: #005F00;">        git add *.png</span>
        git commit -m <span style="color: #005F00;">"Agregar diagramas PlantUML renderizados"</span>
<span style="color: #005F00;">        git push</span>
</code></pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org80c515c" class="outline-2">
<h2 id="org80c515c">Mejores Prácticas para el Uso de VPNs en Linux</h2>
<div class="outline-text-2" id="text-org80c515c">
<ul class="org-ul">
<li><b><b>Verificar Fugas</b></b>: Usa herramientas como `dnsleaktest.com` para asegurarte de que no haya fugas de DNS o IP [].</li>
<li><b><b>Activar Kill Switch</b></b>: Configura tu cliente VPN para bloquear el acceso a internet si la VPN se desconecta.</li>
<li><b><b>Usar Herramientas de Código Abierto</b></b>: Prefiere protocolos de VPN de código abierto como OpenVPN o WireGuard por su transparencia [].</li>
<li><b><b>Actualizaciones Regulares</b></b>: Mantén actualizados tu cliente VPN y tu sistema para corregir vulnerabilidades.</li>
<li><b><b>Integración con Emacs</b></b>: Usa Org-mode para crear scripts y automatizar conexiones VPN, e.g., con `org-babel` para ejecutar comandos de shell.</li>
</ul>
</div>
</div>
<div id="outline-container-org869cacf" class="outline-2">
<h2 id="org869cacf">Conclusión</h2>
<div class="outline-text-2" id="text-org869cacf">
<p>
Las VPNs son herramientas poderosas para mejorar la privacidad y la seguridad en Linux, con una rica historia y avances continuos. Al aprovechar VPNs gratuitas como ProtonVPN y documentar configuraciones con Emacs Org-mode y PlantUML, los usuarios de Linux pueden mantener flujos de trabajo seguros y bien documentados. Publicar en GitHub asegura que tu conocimiento se comparta con la comunidad de código abierto, alineándose con la filosofía de colaboración y transparencia de Emacs.
</p>
</div>
</div>
<div id="outline-container-org41d04a1" class="outline-2">
<h2 id="org41d04a1">Referencias</h2>
<div class="outline-text-2" id="text-org41d04a1">
<div class="org-src-container">
<pre class="src src-org"><code>- [Web:1] Publicaci&#243;n de Reddit sobre la hoja de ruta de ProtonVPN, <span style="color: #009B7C; font-weight: bold; text-decoration: underline;"><a href="https://www.reddit.com/r/ProtonVPN/comments/yn3m0y/the_proton_vpn_roadmap/">https://www.reddit.com/r/ProtonVPN/comments/yn3m0y/the_proton_vpn_roadmap/</a></span>
- [Web:6] Gu&#237;a de CNET sobre servicios VPN, <span style="color: #009B7C; font-weight: bold; text-decoration: underline;"><a href="https://www.cnet.com/tech/services-and-software/best-vpn/">https://www.cnet.com/tech/services-and-software/best-vpn/</a></span>
- [Web:14] Repositorio de GitHub sobre Awesome VPN Network, <span style="color: #009B7C; font-weight: bold; text-decoration: underline;"><a href="https://github.com/GNU-Linux-libre/Awesome-VPN-Network">https://github.com/GNU-Linux-libre/Awesome-VPN-Network</a></span>
- [Web:15] Repositorio de GitHub de OpenVPN, <span style="color: #009B7C; font-weight: bold; text-decoration: underline;"><a href="https://github.com/OpenVPN/openvpn">https://github.com/OpenVPN/openvpn</a></span>
- [Web:20] Gu&#237;a de Inicio R&#225;pido de PlantUML, <span style="color: #009B7C; font-weight: bold; text-decoration: underline;"><a href="https://plantuml.com">https://plantuml.com</a></span>
</code></pre>
</div>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-vpn.html">vpn</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-privacidad.html">privacidad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-software-libre.html">software-libre</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-plantuml.html">plantuml</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-github.html">github</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[vpn]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[privacidad]]></category>
  <category><![CDATA[software-libre]]></category>
  <category><![CDATA[plantuml]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[github]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-08-explorando-vpns-or-genes-evoluci-n-beneficios-y-configuraci-n-de-una-vpn-gratuita-en-linux.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-08-explorando-vpns-or-genes-evoluci-n-beneficios-y-configuraci-n-de-una-vpn-gratuita-en-linux.html</guid>
  <pubDate>Sun, 08 Jun 2025 23:16:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[¿Formo Parte de una Botnet? Guía Avanzada de Detección y Prevención en Linux]]></title>
  <description><![CDATA[
<div id="outline-container-org6ec2f7a" class="outline-2">
<h2 id="org6ec2f7a">Introducción</h2>
<div class="outline-text-2" id="text-org6ec2f7a">
<p>
Una <b>botnet</b> es una red de dispositivos comprometidos que, sin el conocimiento del usuario, son controlados remotamente por atacantes para ejecutar acciones maliciosas como ataques DDoS, minería de criptomonedas, envío masivo de spam, escaneo de redes o distribución de malware.
</p>

<p>
Ubuntu, por ser un sistema Linux ampliamente utilizado, no es inmune. Si bien su arquitectura ofrece robustez, un sistema desactualizado, mal configurado o con software vulnerable puede ser fácilmente absorbido por una botnet.
</p>

<p>
En esta guía analizamos en profundidad cómo detectar señales de compromiso, qué herramientas usar, cómo interpretar sus salidas, y qué medidas tomar en caso de confirmarse una infección.
</p>



<figure id="orgca0a880">
<img src="images/detect-botnet.png" alt="detect-botnet.png">

</figure>
</div>
</div>
<div id="outline-container-orgf90135a" class="outline-2">
<h2 id="orgf90135a">Indicadores de Compromiso en Sistemas Ubuntu</h2>
<div class="outline-text-2" id="text-orgf90135a">
</div>
<div id="outline-container-org5d4d138" class="outline-3">
<h3 id="org5d4d138">Comportamiento del sistema</h3>
<div class="outline-text-3" id="text-org5d4d138">
<ul class="org-ul">
<li>Consumo anormal de CPU/RAM sin procesos legítimos que lo justifiquen.</li>
<li>Congelamientos o lentitud inesperada, especialmente tras el arranque.</li>
<li>Reducción de espacio en disco sin archivos visibles que lo expliquen.</li>
<li>Nuevas conexiones de red o puertos abiertos sin que se haya instalado ningún servicio.</li>
</ul>
</div>
</div>
<div id="outline-container-orga3735ae" class="outline-3">
<h3 id="orga3735ae">Análisis forense inicial</h3>
<div class="outline-text-3" id="text-orga3735ae">
<p>
Usa `uptime` y `last` para identificar sesiones prolongadas y tiempos de actividad sospechosos.
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>uptime
last
</code></pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org2ca65ee" class="outline-2">
<h2 id="org2ca65ee">Revisión Detallada del Sistema</h2>
<div class="outline-text-2" id="text-org2ca65ee">
</div>
<div id="outline-container-orgf2c0610" class="outline-3">
<h3 id="orgf2c0610">1. Monitorización de Procesos</h3>
<div class="outline-text-3" id="text-orgf2c0610">
<div class="org-src-container">
<pre class="src src-bash"><code>ps aux --sort=-%cpu | head
top
htop
</code></pre>
</div>

<p>
Busca procesos con nombres engañosos como:
</p>
<ul class="org-ul">
<li>`kworker/0:0` falsos (cuando hay varios iguales).</li>
<li>`crond` o `sshd` duplicados.</li>
<li>Procesos binarios ejecutados desde `/tmp`, `/dev/shm` o `/var/tmp`.</li>
</ul>
</div>
</div>
<div id="outline-container-org5f71543" class="outline-3">
<h3 id="org5f71543">2. Conexiones de Red Activas</h3>
<div class="outline-text-3" id="text-org5f71543">
<div class="org-src-container">
<pre class="src src-bash"><code>sudo ss -pant
sudo netstat -plant
</code></pre>
</div>

<p>
Analiza conexiones a IPs externas en puertos altos (4444, 6667, 1337), típicos en botnets. Complementa con `whois` o `ipinfo.io` para identificar destinos.
</p>
</div>
</div>
<div id="outline-container-orgf58bd27" class="outline-3">
<h3 id="orgf58bd27">3. Escaneo de Rootkits</h3>
<div class="outline-text-3" id="text-orgf58bd27">
<div class="org-src-container">
<pre class="src src-bash"><code>sudo apt install chkrootkit rkhunter
sudo chkrootkit
sudo rkhunter --update &amp;&amp; sudo rkhunter --checkall
</code></pre>
</div>

<p>
Estos buscan manipulaciones en binarios del sistema, hooks en bibliotecas, rootkits en el kernel y alteraciones de permisos.
</p>
</div>
</div>
<div id="outline-container-orgfef2f19" class="outline-3">
<h3 id="orgfef2f19">4. Revisión del Sistema de Archivos</h3>
<div class="outline-text-3" id="text-orgfef2f19">
<p>
Busca binarios ejecutables en ubicaciones sospechosas:
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>find / -type f -perm -111 -exec ls -l {} <span style="color: #a44185;">\;</span> 2&gt;/dev/null | grep -E <span style="color: #a44185;">"/tmp|/var/tmp|/dev/shm"</span>
</code></pre>
</div>

<p>
Revisa scripts automatizados en cron que podrían persistir malware:
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>crontab -l
ls -la /etc/cron.*
</code></pre>
</div>
</div>
</div>
<div id="outline-container-orgb8ec3b5" class="outline-3">
<h3 id="orgb8ec3b5">5. Análisis de Logs</h3>
<div class="outline-text-3" id="text-orgb8ec3b5">
<div class="org-src-container">
<pre class="src src-bash"><code>journalctl -xe | grep -i ssh
grep -i <span style="color: #a44185;">"reverse shell"</span> /var/log/*
</code></pre>
</div>

<p>
Busca conexiones entrantes inesperadas, cambios de permisos, autenticaciones fallidas repetidas o sesiones abiertas fuera del horario normal.
</p>
</div>
</div>
<div id="outline-container-org6a02bc9" class="outline-3">
<h3 id="org6a02bc9">6. Inspección de Tráfico de Red</h3>
<div class="outline-text-3" id="text-org6a02bc9">
<p>
Puedes usar `tcpdump` o `wireshark` para analizar tráfico en tiempo real.
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>sudo tcpdump -i any -n port not 22 and not 80 and not 443
</code></pre>
</div>

<p>
Busca patrones de beaconing o actividad periódica hacia una misma IP.
</p>
</div>
</div>
<div id="outline-container-org5ecb906" class="outline-3">
<h3 id="org5ecb906">7. Auditoría del Sistema</h3>
<div class="outline-text-3" id="text-org5ecb906">
<div class="org-src-container">
<pre class="src src-bash"><code>sudo apt install lynis
sudo lynis audit system
</code></pre>
</div>

<p>
Lynis proporciona un informe completo sobre la postura de seguridad del sistema, servicios activos, vulnerabilidades y configuraciones débiles.
</p>
</div>
</div>
</div>
<div id="outline-container-org7165f76" class="outline-2">
<h2 id="org7165f76">Comprobación de Persistencia y Escalada</h2>
<div class="outline-text-2" id="text-org7165f76">
<p>
Revisa scripts de inicio del sistema:
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>ls -la /etc/init.d/
ls -la ~/.config/autostart/
cat ~/.bashrc | grep -i curl
</code></pre>
</div>

<p>
Algunas botnets modifican `.bashrc`, `.profile` o `.bash<sub>profile</sub>` para reactivar malware tras el reinicio.
</p>
</div>
</div>
<div id="outline-container-org39b0493" class="outline-2">
<h2 id="org39b0493">Evaluación de la Configuración de Red</h2>
<div class="outline-text-2" id="text-org39b0493">
<p>
Verifica los DNS configurados:
</p>

<div class="org-src-container">
<pre class="src src-bash"><code>cat /etc/resolv.conf
</code></pre>
</div>

<p>
DNS no confiables pueden ser usados para redirigir tráfico legítimo hacia dominios de control.
</p>
</div>
</div>
<div id="outline-container-org87ca2e7" class="outline-2">
<h2 id="org87ca2e7">Herramientas Recomendadas Adicionales</h2>
<div class="outline-text-2" id="text-org87ca2e7">
<table border="2" rules="all" frame="all">
<caption class="t-above"><span class="table-number">Table 1:</span> Tabla de herramientas Recomendadadas Adicionales</caption>

<colgroup>
<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Herramienta</th>
<th scope="col" class="org-left">Propósito</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left"><b>ufw</b></td>
<td class="org-left">Firewall de configuración sencilla</td>
</tr>

<tr>
<td class="org-left"><b>fail2ban</b></td>
<td class="org-left">Protección contra fuerza bruta</td>
</tr>

<tr>
<td class="org-left"><b>logwatch</b></td>
<td class="org-left">Reportes automáticos de actividad sospechosa</td>
</tr>

<tr>
<td class="org-left"><b>AppArmor</b></td>
<td class="org-left">Contención de procesos potencialmente maliciosos</td>
</tr>

<tr>
<td class="org-left"><b>clamav</b></td>
<td class="org-left">Análisis antivirus</td>
</tr>
</tbody>
</table>

<p>
<br>
</p>

<table border="2" rules="all" frame="all">
<caption class="t-above"><span class="table-number">Table 2:</span> Tabla de herramientas y señales de detección de botnets en Ubuntu</caption>

<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left"><b>Categoría</b></th>
<th scope="col" class="org-left"><b>Herramienta/Comando</b></th>
<th scope="col" class="org-left"><b>Objetivo</b></th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Análisis de procesos</td>
<td class="org-left">`ps`, `top`, `htop`</td>
<td class="org-left">Detectar procesos ocultos o sospechosos</td>
</tr>

<tr>
<td class="org-left">Conexiones de red</td>
<td class="org-left">`ss`, `netstat`, `tcpdump`</td>
<td class="org-left">Ver conexiones activas y destinos externos</td>
</tr>

<tr>
<td class="org-left">Rootkits y malware</td>
<td class="org-left">`chkrootkit`, `rkhunter`</td>
<td class="org-left">Escaneo de rootkits conocidos</td>
</tr>

<tr>
<td class="org-left">Sistema de archivos</td>
<td class="org-left">`find`, `ls`, `strings`</td>
<td class="org-left">Binarios ocultos en carpetas temporales</td>
</tr>

<tr>
<td class="org-left">Persistencia y cron</td>
<td class="org-left">`crontab`, `systemctl`</td>
<td class="org-left">Ver tareas automatizadas sospechosas</td>
</tr>

<tr>
<td class="org-left">Logs del sistema</td>
<td class="org-left">`journalctl`, `logwatch`</td>
<td class="org-left">Detectar comportamientos anómalos</td>
</tr>

<tr>
<td class="org-left">Auditoría de seguridad</td>
<td class="org-left">`lynis`, `clamav`</td>
<td class="org-left">Estado general de seguridad</td>
</tr>

<tr>
<td class="org-left">Protección y prevención</td>
<td class="org-left">`ufw`, `AppArmor`, `fail2ban`</td>
<td class="org-left">Cortafuegos, defensa y contención</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-orga10c30b" class="outline-2">
<h2 id="orga10c30b">Medidas a Tomar en Caso de Sospecha</h2>
<div class="outline-text-2" id="text-orga10c30b">
<ol class="org-ol">
<li><b><b>Desconexión inmediata</b></b> del sistema de redes públicas o internas.</li>
<li><b><b>Respaldo</b></b> de archivos críticos (documentos, claves, configuraciones).</li>
<li>Análisis con <b>chkrootkit</b>, <b>rkhunter</b>, <b>clamav</b>, y revisión manual de procesos y logs.</li>
<li>Si hay evidencia de infección: realizar una <b>reinstalación limpia del sistema</b> desde medios verificados.</li>
<li>Cambiar contraseñas desde un sistema limpio, incluyendo SSH, correo, VPN, etc.</li>
<li>Verificar cuentas SSH en `~/.ssh/authorized<sub>keys</sub>` y rotar llaves si se sospecha compromiso.</li>
<li>Informar a otros administradores o usuarios si el sistema ha participado en ataques (por ética y cumplimiento legal).</li>
</ol>
</div>
</div>
<div id="outline-container-orgff72b1a" class="outline-2">
<h2 id="orgff72b1a">Medidas Preventivas Recomendadas</h2>
<div class="outline-text-2" id="text-orgff72b1a">
<ul class="org-ul">
<li><p>
Mantén el sistema actualizado:  
</p>
<div class="org-src-container">
<pre class="src src-bash"><code>sudo apt update &amp;&amp; sudo apt upgrade -y  
</code></pre>
</div></li>
<li><p>
Configura reglas estrictas con `ufw`:  
</p>
<div class="org-src-container">
<pre class="src src-bash"><code>sudo ufw default deny incoming  
sudo ufw allow ssh  
sudo ufw enable  
</code></pre>
</div></li>
<li>Activa `AppArmor` y configura perfiles para servicios expuestos.</li>
<li>Utiliza llaves SSH en lugar de contraseñas.</li>
<li>Limita el número de servicios activos. Usa `systemctl` para desactivar lo innecesario.</li>
<li>Monitoriza periódicamente con scripts personalizados, <b>tripwire</b>, o herramientas como <b>osquery</b>.</li>
</ul>
</div>
</div>
<div id="outline-container-orgfb1d5e3" class="outline-2">
<h2 id="orgfb1d5e3">Conclusión</h2>
<div class="outline-text-2" id="text-orgfb1d5e3">
<p>
Detectar si tu máquina Ubuntu forma parte de una botnet no es trivial, pero tampoco imposible. Con una mentalidad proactiva y un enfoque sistemático, puedes identificar señales claras de compromiso y tomar medidas para mitigar el riesgo. Un sistema comprometido no debe confiarse ni "limpiarse por partes": la única forma segura de eliminar una botnet es formatear, reinstalar, y adoptar mejores prácticas.
</p>

<p>
La seguridad no es un estado, es un proceso. Inicia hoy una cultura de vigilancia digital.
</p>
</div>
</div>
<div id="outline-container-org07a0eca" class="outline-2">
<h2 id="org07a0eca">Referencias</h2>
<div class="outline-text-2" id="text-org07a0eca">
<ul class="org-ul">
<li><a href="https://wiki.ubuntu.com/Security">https://wiki.ubuntu.com/Security</a></li>
<li><a href="https://cisofy.com/lynis/">https://cisofy.com/lynis/</a></li>
<li><a href="https://github.com/rkhunter/rkhunter">https://github.com/rkhunter/rkhunter</a></li>
<li><a href="https://www.clamav.net/">https://www.clamav.net/</a></li>
</ul>

<blockquote>
<p>
“No hay sistemas seguros, solo sistemas vigilados.”  
— Parafraseando a Bruce Schneier
</p>
</blockquote>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ubuntu.html">ubuntu</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-botnet.html">botnet</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-análisis.html">análisis</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-herramientas.html">herramientas</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-prevención.html">prevención</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[ubuntu]]></category>
  <category><![CDATA[botnet]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[análisis]]></category>
  <category><![CDATA[herramientas]]></category>
  <category><![CDATA[prevención]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-05--formo-parte-de-una-botnet-gu-a-avanzada-de-detecci-n-y-prevenci-n-en-linux.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-05--formo-parte-de-una-botnet-gu-a-avanzada-de-detecci-n-y-prevenci-n-en-linux.html</guid>
  <pubDate>Thu, 05 Jun 2025 14:24:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Notas sobre Gestión de Seguridad en un Laptop]]></title>
  <description><![CDATA[
<div id="outline-container-org752d291" class="outline-2">
<h2 id="org752d291">Introducción</h2>
<div class="outline-text-2" id="text-org752d291">
<p>
Este documento organiza las tareas y prácticas para proteger una laptop con Linux frente a ciberamenazas. Utiliza Org-mode para programar revisiones, registrar configuraciones y ejecutar scripts de seguridad.
</p>
</div>
</div>
<div id="outline-container-orgd5b8257" class="outline-2">
<h2 id="orgd5b8257">Medidas Generales de Seguridad</h2>
<div class="outline-text-2" id="text-orgd5b8257">
</div>
<div id="outline-container-org82dd273" class="outline-3">
<h3 id="org82dd273">Actualizaciones del Sistema</h3>
<div class="outline-text-3" id="text-org82dd273">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Verificar actualizaciones del sistema
SCHEDULED: <span class="timestamp-wrapper"><span class="timestamp">&lt;2025-06-10 mar 09:00 +1w&gt;</span></span>
<ul class="org-ul">
<li>Ejecutar <code>sudo apt update &amp;&amp; sudo apt upgrade</code> (Debian/Ubuntu) o <code>sudo dnf upgrade</code> (Fedora)</li>
<li>Comprobar paquetes obsoletos: <code>apt list --upgradable</code></li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org61c2468" class="outline-3">
<h3 id="org61c2468">Cortafuegos</h3>
<div class="outline-text-3" id="text-org61c2468">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Revisar estado de ufw
SCHEDULED: <span class="timestamp-wrapper"><span class="timestamp">&lt;2025-06-15 dom +1m&gt;</span></span>
<ul class="org-ul">
<li>Ejecutar <code>sudo ufw status</code></li>
<li>Configurar reglas: <code>sudo ufw allow ssh</code></li>
</ul></li>
<li class="off"><code>[&#xa0;]</code> Verificar reglas activas</li>
</ul>
</div>
</div>
<div id="outline-container-orgfcbedea" class="outline-3">
<h3 id="orgfcbedea">Contraseñas</h3>
<div class="outline-text-3" id="text-orgfcbedea">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Actualizar contraseñas críticas
DEADLINE: <span class="timestamp-wrapper"><span class="timestamp">&lt;2025-07-01 mar&gt;</span></span>
<ul class="org-ul">
<li>Usar <code>pass</code> o <code>pwgen -s 20 1</code> para generar contraseñas seguras</li>
</ul></li>
<li class="off"><code>[&#xa0;]</code> Verificar 2FA en cuentas críticas</li>
</ul>
</div>
</div>
<div id="outline-container-org13f587e" class="outline-3">
<h3 id="org13f587e">Cifrado de Disco</h3>
<div class="outline-text-3" id="text-org13f587e">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Verificar respaldo de datos cifrados
SCHEDULED: <span class="timestamp-wrapper"><span class="timestamp">&lt;2025-06-15 dom +2w&gt;</span></span>
<ul class="org-ul">
<li>Confirmar que el respaldo está cifrado</li>
<li>Usar <code>cryptsetup luksFormat /dev/sdX</code> para nuevas particiones</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-orgb0619c7" class="outline-3">
<h3 id="orgb0619c7">Software y Permisos</h3>
<div class="outline-text-3" id="text-orgb0619c7">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Revisar software instalado
<ul class="org-ul">
<li>Ejecutar <code>dpkg -l</code> para listar paquetes</li>
<li>Verificar firmas GPG de nuevos paquetes</li>
</ul></li>
<li class="off"><code>[&#xa0;]</code> Comprobar permisos: <code>ls -l</code></li>
</ul>
</div>
</div>
<div id="outline-container-orge9e92e5" class="outline-3">
<h3 id="orge9e92e5">Monitoreo de Red y Procesos</h3>
<div class="outline-text-3" id="text-orge9e92e5">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Escanear procesos
SCHEDULED: <span class="timestamp-wrapper"><span class="timestamp">&lt;2025-06-07 sáb +1w&gt;</span></span>
<ul class="org-ul">
<li>Usar <code>htop</code> o <code>ps aux</code> para revisar procesos sospechosos</li>
<li>Escanear red con <code>nmap localhost</code></li>
</ul></li>
<li class="off"><code>[&#xa0;]</code> Revisar logs: <code>sudo journalctl -p 3 -xb</code></li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orge3e1035" class="outline-2">
<h2 id="orge3e1035">Seguridad Específica en Linux</h2>
<div class="outline-text-2" id="text-orge3e1035">
</div>
<div id="outline-container-org54eee0c" class="outline-3">
<h3 id="org54eee0c">SELinux/AppArmor</h3>
<div class="outline-text-3" id="text-org54eee0c">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Verificar configuración
SCHEDULED: <span class="timestamp-wrapper"><span class="timestamp">&lt;2025-06-20 vie&gt;</span></span>
<ul class="org-ul">
<li>Comprobar estado: <code>sestatus</code> (SELinux) o <code>sudo apparmor_status</code> (AppArmor)</li>
<li>Revisar perfiles activos</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org3e7ada5" class="outline-3">
<h3 id="org3e7ada5">Seguridad de Arranque</h3>
<div class="outline-text-3" id="text-org3e7ada5">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Configurar seguridad de GRUB
DEADLINE: <span class="timestamp-wrapper"><span class="timestamp">&lt;2025-06-10 mar&gt;</span></span>
<ul class="org-ul">
<li>Establecer contraseña en GRUB</li>
<li>Verificar Secure Boot</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org7884c17" class="outline-3">
<h3 id="org7884c17">VPN y Navegación Segura</h3>
<div class="outline-text-3" id="text-org7884c17">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Revisar configuración de VPN
SCHEDULED: <span class="timestamp-wrapper"><span class="timestamp">&lt;2025-06-05 jue +1m&gt;</span></span>
<ul class="org-ul">
<li>Confirmar conexión VPN activa (ProtonVPN o Mullvad)</li>
<li>Actualizar extensiones del navegador (uBlock Origin, HTTPS Everywhere)</li>
</ul></li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgf892f70" class="outline-2">
<h2 id="orgf892f70">Respaldo de Datos</h2>
<div class="outline-text-2" id="text-orgf892f70">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Realizar respaldo completo
SCHEDULED: <span class="timestamp-wrapper"><span class="timestamp">&lt;2025-06-30 lun +1m&gt;</span></span>
<ul class="org-ul">
<li>Ejecutar <code>rsync -avh /home/usuario /ruta/respaldo</code></li>
<li>Verificar integridad con <code>sha256sum</code></li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org5a16bfb" class="outline-2">
<h2 id="org5a16bfb">Diagrama de Medidas de Seguridad</h2>
<div class="outline-text-2" id="text-org5a16bfb">

<figure id="orgf0efd3f">
<img src="images/seguridad_diagrama.png" alt="seguridad_diagrama.png" width="800px">

</figure>
</div>
</div>
<div id="outline-container-org1a511e7" class="outline-2">
<h2 id="org1a511e7">Scripts de Seguridad</h2>
<div class="outline-text-2" id="text-org1a511e7">
<div class="org-src-container">
<pre class="src src-sh"><code><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Script para verificar actualizaciones</span>
sudo apt update
apt list --upgradable
</code></pre>
</div>
</div>
</div>
<div id="outline-container-org117e187" class="outline-2">
<h2 id="org117e187">Configuración de Emacs</h2>
<div class="outline-text-2" id="text-org117e187">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Configurar acceso rápido a este archivo
<ul class="org-ul">
<li><p>
Agregar a <code>~/.emacs.d/init.el</code>:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp"><code>(global-set-key (kbd <span style="color: #a44185;">"C-c s"</span>) (<span style="color: #219fd5; font-style: italic;">lambda</span> () (<span style="color: #219fd5; font-style: italic;">interactive</span>) (find-file <span style="color: #a44185;">"~/.emacs.d/seguridad.org"</span>)))
</code></pre>
</div></li>
</ul></li>
<li class="off"><code>[&#xa0;]</code> Habilitar Org-agenda
<ul class="org-ul">
<li>Configurar: <code>(setq org-agenda-files '("~/.emacs.d/seguridad.org"))</code></li>
<li>Activar log: <code>(setq org-agenda-start-with-log-mode t)</code></li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org21a5568" class="outline-2">
<h2 id="org21a5568">Notas Adicionales</h2>
<div class="outline-text-2" id="text-org21a5568">
<ul class="org-ul">
<li>Consultar documentación: <code>man cryptsetup</code>, <code>man ufw</code></li>
<li>Buscar en foros de Linux o X para consejos actualizados</li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ciberamenazas.html">ciberamenazas</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-laptop.html">laptop</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[ciberamenazas]]></category>
  <category><![CDATA[laptop]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-03-notas-sobre-gesti-n-de-seguridad-en-un-laptop.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-06-03-notas-sobre-gesti-n-de-seguridad-en-un-laptop.html</guid>
  <pubDate>Tue, 03 Jun 2025 09:35:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Auditoría y generación de contraseñas seguras en Emacs]]></title>
  <description><![CDATA[
<nav id="table-of-contents" role="doc-toc">
<h2>Table of Contents</h2>
<div id="text-table-of-contents" role="doc-toc">
<ul>
<li><a href="#org056c602">1. Introducción</a></li>
<li><a href="#org45b1212">2. ¿Por qué usarlo?</a></li>
<li><a href="#org4740a4e">3. Funcionalidades principales</a></li>
<li><a href="#org91e040d">4. Código fuente del módulo</a></li>
<li><a href="#org6dbfed0">5. Diagrama del flujo de auditoría (PlantUML)</a></li>
<li><a href="#orgc74f9cf">6. Cómo usarlo</a></li>
<li><a href="#org7b5dc06">7. Próximos pasos</a></li>
<li><a href="#org8eb1ee6">8. Recomendaciones finales</a></li>
<li><a href="#org765587d">9. Conclusión</a></li>
</ul>
</div>
</nav>
<div id="outline-container-org056c602" class="outline-2">
<h2 id="org056c602"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
En esta entrada presento <code>password-audit.el</code>, un módulo para Emacs que permite auditar contraseñas, generar claves seguras y verificar la complejidad mínima exigida. También añade soporte opcional para el gestor de contraseñas <code>pass</code> desde la terminal.
</p>
</div>
</div>
<div id="outline-container-org45b1212" class="outline-2">
<h2 id="org45b1212"><span class="section-number-2">2.</span> ¿Por qué usarlo?</h2>
<div class="outline-text-2" id="text-2">
<p>
Con frecuencia usamos contraseñas débiles o repetidas. Este módulo ayuda a evaluar si una contraseña es vulnerable, y ofrece recomendaciones inmediatas para mejorarla.
</p>
</div>
</div>
<div id="outline-container-org4740a4e" class="outline-2">
<h2 id="org4740a4e"><span class="section-number-2">3.</span> Funcionalidades principales</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li>Auditoría de longitud, complejidad y patrones inseguros.</li>
<li>Generación de contraseñas seguras.</li>
<li>Integración con `pass` para analizar contraseñas almacenadas.</li>
</ul>
</div>
</div>
<div id="outline-container-org91e040d" class="outline-2">
<h2 id="org91e040d"><span class="section-number-2">4.</span> Código fuente del módulo</h2>
<div class="outline-text-2" id="text-4">
<div class="org-src-container">
<pre class="src src-emacs-lisp">  <span style="color: #8195b0; font-style: italic;">;;; </span><span style="color: #8195b0; font-style: italic;">password-audit.el --- Auditor&#237;a de contrase&#241;as + integraci&#243;n con pass -*- lexical-binding: t; -*-</span>

  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Author: Mike</span>
  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Version: 1.1</span>
  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Package-Requires: ((emacs "24.3") (cl-lib "0.5"))</span>
  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Keywords: security, password, audit</span>
  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">License: MIT</span>

(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">cl-lib</span>)

(<span style="color: #219fd5; font-style: italic;">defvar</span> <span style="color: #1857a4;">audit-password-sequences</span> '(<span style="color: #a44185;">"abc"</span> <span style="color: #a44185;">"123"</span> <span style="color: #a44185;">"qwe"</span> <span style="color: #a44185;">"password"</span> <span style="color: #a44185;">"qaz"</span>)
  <span style="color: #60a8a1; font-style: italic;">"Lista de secuencias comunes que deben evitarse en contrase&#241;as."</span>)

(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">audit-password-strength</span> (password)
  <span style="color: #60a8a1; font-style: italic;">"Audita la fortaleza de una contrase&#241;a y sugiere mejoras."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span> <span style="color: #a44185;">"sContrase&#241;a a auditar: "</span>)
  (<span style="color: #219fd5; font-style: italic;">let*</span> ((length (length password))
         (has-uppercase (string-match-p <span style="color: #a44185;">"[A-Z]"</span> password))
         (has-lowercase (string-match-p <span style="color: #a44185;">"[a-z]"</span> password))
         (has-numbers (string-match-p <span style="color: #a44185;">"[0-9]"</span> password))
         (has-symbols (string-match-p <span style="color: #a44185;">"[</span><span style="color: #219fd5; font-weight: bold;">^</span><span style="color: #a44185;">a-zA-Z0-9]"</span> password))
         (has-sequences (cl-some (<span style="color: #219fd5; font-style: italic;">lambda</span> (seq)
                                   (string-match-p (regexp-quote seq) password))
                                 audit-password-sequences))
         (score 0)
         (feedback '()))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Evaluaci&#243;n de longitud</span>
    (<span style="color: #219fd5; font-style: italic;">cond</span>
     ((&lt; length 8)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud cr&#237;tica: menos de 8 caracteres."</span> feedback))
     ((&lt; length 12)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud insuficiente: menos de 12 caracteres."</span> feedback)
      (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score))
     ((&lt; length 16)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud aceptable: entre 12-16 caracteres."</span> feedback)
      (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score 2))
     (t
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud excelente: m&#225;s de 16 caracteres."</span> feedback)
      (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score 3)))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Evaluaci&#243;n de complejidad</span>
    (<span style="color: #219fd5; font-style: italic;">when</span> has-uppercase (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene may&#250;sculas [+]"</span> feedback))
    (<span style="color: #219fd5; font-style: italic;">when</span> has-lowercase (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene min&#250;sculas [+]"</span> feedback))
    (<span style="color: #219fd5; font-style: italic;">when</span> has-numbers   (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene n&#250;meros [+]"</span> feedback))
    (<span style="color: #219fd5; font-style: italic;">when</span> has-symbols   (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene s&#237;mbolos especiales [+]"</span> feedback))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Penalizaciones</span>
    (<span style="color: #219fd5; font-style: italic;">when</span> has-sequences
      (<span style="color: #219fd5; font-style: italic;">cl-decf</span> score)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene secuencias comunes (ej: abc, 123) [-]"</span> feedback))

    (<span style="color: #219fd5; font-style: italic;">when</span> (string-match-p (regexp-quote (user-login-name)) password)
      (<span style="color: #219fd5; font-style: italic;">cl-decf</span> score 2)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene tu nombre de usuario [-]"</span> feedback))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Limitar puntuaci&#243;n m&#225;xima</span>
    (<span style="color: #219fd5; font-style: italic;">setq</span> score (min score 10))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Mostrar resultados</span>
    (<span style="color: #219fd5; font-style: italic;">with-output-to-temp-buffer</span> <span style="color: #a44185;">"*Password Audit*"</span>
      (pop-to-buffer <span style="color: #a44185;">"*Password Audit*"</span>)
      (erase-buffer)
      (insert <span style="color: #a44185;">"=== AUDITOR&#205;A DE SEGURIDAD DE CONTRASE&#209;A ===\n\n"</span>)
      (insert (format <span style="color: #a44185;">"Puntuaci&#243;n: %d/10\n\n"</span> score))
      (insert <span style="color: #a44185;">"An&#225;lisis:\n"</span>)
      (<span style="color: #219fd5; font-style: italic;">dolist</span> (item (reverse feedback))
        (insert (format <span style="color: #a44185;">"&#8226; %s\n"</span> item)))
      (insert <span style="color: #a44185;">"\nRecomendaciones:\n"</span>)
      (<span style="color: #219fd5; font-style: italic;">cond</span>
       ((&lt; score 4)
        (insert <span style="color: #a44185;">"&#9888;&#65039; Contrase&#241;a D&#201;BIL - Se recomienda cambio inmediato\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Use la funci&#243;n `generate-strong-password`\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Longitud m&#237;nima sugerida: 16 caracteres\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Incluir letras, n&#250;meros y s&#237;mbolos\n"</span>))
       ((&lt; score 7)
        (insert <span style="color: #a44185;">"&#9888;&#65039; Contrase&#241;a MODERADA - Se recomienda mejora\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Considere alargarla\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; A&#241;adir caracteres variados\n"</span>))
       (t
        (insert <span style="color: #a44185;">"&#9989; Contrase&#241;a FUERTE - Cumple con los est&#225;ndares\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Cambiarla peri&#243;dicamente\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; No reutilizarla en otros servicios\n"</span>)))
      (insert <span style="color: #a44185;">"\n=== FIN DEL AN&#193;LISIS ===\n"</span>))))

(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">generate-strong-password</span> (<span style="color: #dc3eb7;">&amp;optional</span> length)
  <span style="color: #60a8a1; font-style: italic;">"Genera una contrase&#241;a aleatoria de LENGTH caracteres (m&#237;nimo 16)."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span> <span style="color: #a44185;">"nLongitud de la contrase&#241;a (m&#237;nimo 16): "</span>)
  (<span style="color: #219fd5; font-style: italic;">let*</span> ((chars <span style="color: #a44185;">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()_-+=&lt;&gt;?"</span>)
         (len (max 16 (<span style="color: #219fd5; font-style: italic;">or</span> length 16)))
         (pass (<span style="color: #219fd5; font-style: italic;">cl-loop</span> repeat len
                        concat (string (elt chars (random (length chars)))))))
    (kill-new pass)
    (message <span style="color: #a44185;">"Contrase&#241;a copiada al portapapeles: %s"</span> pass)))

(<span style="color: #219fd5; font-style: italic;">provide</span> '<span style="color: #2f86d2;">password-audit</span>)

<span style="color: #8195b0; font-style: italic;">;;; </span><span style="color: #8195b0; font-style: italic;">password-audit.el ends here</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org6dbfed0" class="outline-2">
<h2 id="org6dbfed0"><span class="section-number-2">5.</span> Diagrama del flujo de auditoría (PlantUML)</h2>
<div class="outline-text-2" id="text-5">

<figure id="org8a1ac7f">
<img src="images/password-audit-diagram.png" alt="password-audit-diagram.png">

</figure>
</div>
</div>
<div id="outline-container-orgc74f9cf" class="outline-2">
<h2 id="orgc74f9cf"><span class="section-number-2">6.</span> Cómo usarlo</h2>
<div class="outline-text-2" id="text-6">
<ul class="org-ul">
<li><p>
Carga el archivo con:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(load <span style="color: #a44185;">"~/ruta/a/password-audit.el"</span>)
</pre>
</div></li>

<li>Ejecuta:
<ul class="org-ul">
<li><code>M-x audit-password-strength</code> para auditar manualmente.</li>
<li><code>M-x generate-strong-password</code> para crear contraseñas seguras.</li>
<li><code>M-x audit-password-from-pass</code> para auditar claves almacenadas en <code>pass</code>.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org7b5dc06" class="outline-2">
<h2 id="org7b5dc06"><span class="section-number-2">7.</span> Próximos pasos</h2>
<div class="outline-text-2" id="text-7">
<p>
Estoy trabajando en:
</p>
<ul class="org-ul">
<li>Exportación de reportes en Org.</li>
<li>Clasificación automática por fortaleza.</li>
<li>Versión interactiva con botones y enlaces.</li>
</ul>
</div>
</div>
<div id="outline-container-org8eb1ee6" class="outline-2">
<h2 id="org8eb1ee6"><span class="section-number-2">8.</span> Recomendaciones finales</h2>
<div class="outline-text-2" id="text-8">
<ul class="org-ul">
<li>No reutilices contraseñas en diferentes servicios.</li>
<li>Usa frases largas y mezcla diferentes tipos de caracteres.</li>
<li>Guarda tus contraseñas en un gestor seguro, como <code>pass</code>, <code>KeePassXC</code> o incluso con una integración segura en Emacs.</li>
</ul>
</div>
</div>
<div id="outline-container-org765587d" class="outline-2">
<h2 id="org765587d"><span class="section-number-2">9.</span> Conclusión</h2>
<div class="outline-text-2" id="text-9">
<p>
Gracias a este pequeño módulo puedes mejorar tu higiene digital sin salir de Emacs. ¡Haz de Emacs tu central de seguridad también!
</p>


<p>
¿Tienes sugerencias? Déjalas en los comentarios o en GitHub.
</p>

<p>
&#x2014;
</p>

<p>
<b>Hecho con Emacs y café ☕ por Mike</b>
</p>

<hr>
<p><em>Este artículo forma parte de la serie "Seguridad con Emacs" en <strong>Emacs con Esteroides</strong>.</em></p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-contraseñas.html">contraseñas</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-pass.html">pass</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-orgmode.html">orgmode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[contraseñas]]></category>
  <category><![CDATA[pass]]></category>
  <category><![CDATA[orgmode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-24-auditor%C3%ADa-y-generaci%C3%B3n-de-contrase%C3%B1as-seguras-en-emacs.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-24-auditor%C3%ADa-y-generaci%C3%B3n-de-contrase%C3%B1as-seguras-en-emacs.html</guid>
  <pubDate>Thu, 24 Apr 2025 05:49:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Gestión de Contraseñas Fuertes con Emacs: Seguridad Digital para el Usuario Exigente]]></title>
  <description><![CDATA[
<div id="outline-container-org9b80c02" class="outline-2">
<h2 id="org9b80c02">Introducción</h2>
<div class="outline-text-2" id="text-org9b80c02">
<p>
En la era digital actual, donde las brechas de seguridad y los robos de datos son cada vez más comunes, la importancia de contar con contraseñas fuertes se ha convertido en un pilar fundamental de nuestra seguridad en línea. Como usuarios avanzados de Emacs, tenemos a nuestra disposición un potente entorno que puede ayudarnos no solo a crear contraseñas robustas, sino también a gestionar todo nuestro sistema de autenticación de manera eficiente y segura.
</p>

<p>
Este artículo explorará en profundidad la creación y gestión de contraseñas fuertes, analizando tanto las ventajas como los inconvenientes de diferentes enfoques, y proporcionará soluciones prácticas basadas en Emacs y scripts de Bash que potenciarán significativamente nuestra seguridad digital.
</p>
</div>
</div>
<div id="outline-container-orgd12406a" class="outline-2">
<h2 id="orgd12406a">¿Qué hace que una contraseña sea fuerte?</h2>
<div class="outline-text-2" id="text-orgd12406a">
<p>
Antes de adentrarnos en las herramientas y métodos de generación, es esencial comprender qué características definen a una contraseña como "fuerte":
</p>
</div>
<div id="outline-container-orgf8be08a" class="outline-3">
<h3 id="orgf8be08a">Complejidad</h3>
<div class="outline-text-3" id="text-orgf8be08a">
<p>
Una contraseña verdaderamente robusta debe incluir:
</p>

<ul class="org-ul">
<li>Letras mayúsculas y minúsculas</li>
<li>Números</li>
<li>Símbolos especiales (@, #, $, %, etc.)</li>
<li>Sin palabras reconocibles del diccionario</li>
<li>Sin patrones obvios (como "123456" o "qwerty")</li>
</ul>
</div>
</div>
<div id="outline-container-org779155c" class="outline-3">
<h3 id="org779155c">Longitud</h3>
<div class="outline-text-3" id="text-org779155c">
<p>
La longitud es posiblemente el factor más importante:
</p>

<ul class="org-ul">
<li>Las contraseñas de 8 caracteres ya no se consideran seguras</li>
<li>El estándar actual recomienda un mínimo de 12 caracteres</li>
<li>Para información crítica, 16 o más caracteres es lo recomendable</li>
</ul>
</div>
</div>
<div id="outline-container-org12a36c9" class="outline-3">
<h3 id="org12a36c9">Aleatoriedad</h3>
<div class="outline-text-3" id="text-org12a36c9">
<p>
La verdadera seguridad proviene de la aleatoriedad:
</p>

<ul class="org-ul">
<li>Las contraseñas generadas aleatoriamente son exponencialmente más seguras</li>
<li>La aleatoriedad humana es predecible y sigue patrones inconscientes</li>
<li>Las herramientas de generación algorítmica ofrecen aleatorización real</li>
</ul>
</div>
</div>
<div id="outline-container-orgffb8006" class="outline-3">
<h3 id="orgffb8006">Unicidad</h3>
<div class="outline-text-3" id="text-orgffb8006">
<p>
Cada servicio o cuenta debe tener una contraseña única:
</p>

<ul class="org-ul">
<li>La reutilización de contraseñas es el error más común y peligroso</li>
<li>Una brecha en un servicio no debería comprometer otras cuentas</li>
<li>La gestión de múltiples contraseñas requiere sistemas organización</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org03d9c40" class="outline-2">
<h2 id="org03d9c40">Ventajas de las contraseñas fuertes</h2>
<div class="outline-text-2" id="text-org03d9c40">
<p>
Las contraseñas robustas proporcionan numerosos beneficios que van más allá de la simple protección de acceso:
</p>
</div>
<div id="outline-container-orgc2fab23" class="outline-3">
<h3 id="orgc2fab23">Resistencia a ataques de fuerza bruta</h3>
<div class="outline-text-3" id="text-orgc2fab23">
<p>
Los ataques de fuerza bruta consisten en probar sistemáticamente todas las combinaciones posibles hasta encontrar la correcta. Una contraseña fuerte:
</p>

<ul class="org-ul">
<li>Aumenta exponencialmente el tiempo necesario para descifrarla</li>
<li>Puede requerir años o incluso siglos de procesamiento computacional</li>
<li>Hace que el ataque sea prácticamente inviable por su costo computacional</li>
</ul>
</div>
</div>
<div id="outline-container-org3a95f79" class="outline-3">
<h3 id="org3a95f79">Protección contra ataques de diccionario</h3>
<div class="outline-text-3" id="text-org3a95f79">
<p>
Estos ataques prueban palabras comunes y sus variaciones:
</p>

<ul class="org-ul">
<li>Las contraseñas aleatorias no aparecen en diccionarios</li>
<li>La mezcla de caracteres especiales complica estos ataques</li>
<li>La ausencia de palabras reconocibles elimina puntos de entrada lógicos</li>
</ul>
</div>
</div>
<div id="outline-container-org0aa3f60" class="outline-3">
<h3 id="org0aa3f60">Defensa ante ingeniería social</h3>
<div class="outline-text-3" id="text-org0aa3f60">
<p>
Muchos ataques se basan en información personal fácilmente obtenible:
</p>

<ul class="org-ul">
<li>Las contraseñas generadas aleatoriamente no contienen información personal</li>
<li>Los atacantes no pueden deducirlas a partir de datos públicos</li>
<li>Se elimina la vulnerabilidad asociada a fechas, nombres o preferencias personales</li>
</ul>
</div>
</div>
<div id="outline-container-orgf200193" class="outline-3">
<h3 id="orgf200193">Mayor tiempo de protección</h3>
<div class="outline-text-3" id="text-orgf200193">
<p>
Las contraseñas fuertes permanecen seguras por más tiempo:
</p>

<ul class="org-ul">
<li>Resisten avances en capacidad computacional</li>
<li>Se mantienen vigentes incluso si las técnicas de ataque mejoran</li>
<li>Proporcionan un margen de seguridad ante la evolución tecnológica</li>
</ul>
</div>
</div>
<div id="outline-container-orgae8b501" class="outline-3">
<h3 id="orgae8b501">Cumplimiento de políticas de seguridad</h3>
<div class="outline-text-3" id="text-orgae8b501">
<p>
Las organizaciones y servicios tienen requisitos cada vez más estrictos:
</p>

<ul class="org-ul">
<li>Las contraseñas robustas suelen cumplir automáticamente estas políticas</li>
<li>Se evitan problemas de compatibilidad con sistemas corporativos o gubernamentales</li>
<li>Se facilita el cumplimiento normativo en entornos regulados</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org7b35707" class="outline-2">
<h2 id="org7b35707">Inconvenientes de las contraseñas fuertes</h2>
<div class="outline-text-2" id="text-org7b35707">
<p>
Sin embargo, la implementación de contraseñas robustas también presenta algunos desafíos:
</p>
</div>
<div id="outline-container-orgd068be3" class="outline-3">
<h3 id="orgd068be3">Dificultad para memorizarlas</h3>
<div class="outline-text-3" id="text-orgd068be3">
<p>
El principal inconveniente es la memorización:
</p>

<ul class="org-ul">
<li>Las contraseñas aleatorias complejas son difíciles de recordar</li>
<li>Tener múltiples contraseñas diferentes aumenta esta dificultad</li>
<li>La complejidad puede llevar al usuario a anotar las contraseñas físicamente</li>
</ul>
</div>
</div>
<div id="outline-container-org2fb2d76" class="outline-3">
<h3 id="org2fb2d76">Riesgo de pérdida de acceso</h3>
<div class="outline-text-3" id="text-org2fb2d76">
<p>
Si se olvida una contraseña compleja:
</p>

<ul class="org-ul">
<li>Los procesos de recuperación pueden ser complicados</li>
<li>Algunos sistemas podrían quedar inaccesibles permanentemente</li>
<li>La frustración podría llevar a crear respaldos inseguros</li>
</ul>
</div>
</div>
<div id="outline-container-orge0c2511" class="outline-3">
<h3 id="orge0c2511">Problemas de compatibilidad</h3>
<div class="outline-text-3" id="text-orge0c2511">
<p>
No todos los sistemas aceptan contraseñas muy complejas:
</p>

<ul class="org-ul">
<li>Algunos servicios limitan los caracteres especiales permitidos</li>
<li>Ciertos sistemas imponen límites de longitud máxima</li>
<li>Plataformas legacy podrían tener restricciones técnicas</li>
</ul>
</div>
</div>
<div id="outline-container-org7c8868c" class="outline-3">
<h3 id="org7c8868c">Inconvenientes prácticos</h3>
<div class="outline-text-3" id="text-org7c8868c">
<p>
El uso diario presenta desafíos adicionales:
</p>

<ul class="org-ul">
<li>Escribir contraseñas complejas puede ser tedioso, especialmente en dispositivos móviles</li>
<li>La introducción manual aumenta el riesgo de errores tipográficos</li>
<li>Los cambios frecuentes de contraseña multiplican estos problemas</li>
</ul>
</div>
</div>
<div id="outline-container-orgeebb2ed" class="outline-3">
<h3 id="orgeebb2ed">Fricción con la experiencia de usuario</h3>
<div class="outline-text-3" id="text-orgeebb2ed">
<p>
La seguridad excesiva puede afectar la usabilidad:
</p>

<ul class="org-ul">
<li>Puede aumentar el tiempo de acceso a los servicios</li>
<li>Podría generar frustración en usuarios menos técnicos</li>
<li>El equilibrio entre seguridad y conveniencia es delicado</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgf8fd8b4" class="outline-2">
<h2 id="orgf8fd8b4">Generación de contraseñas fuertes con Bash</h2>
<div class="outline-text-2" id="text-orgf8fd8b4">
<p>
Una solución pragmática para generar contraseñas robustas es utilizar scripts de Bash en sistemas Unix/Linux. A continuación, presentamos un script completo que permite generar contraseñas altamente seguras con diferentes configuraciones:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">strong-password-generator.sh - Generador de contrase&#241;as seguras</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Autor: Emacs con Esteroides</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Fecha: 2025-04-23</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Uso: ./strong-password-generator.sh [longitud] [complejidad]</span>
<span style="color: #8195b0; font-style: italic;">#   </span><span style="color: #8195b0; font-style: italic;">longitud: n&#250;mero de caracteres (por defecto: 16)</span>
<span style="color: #8195b0; font-style: italic;">#   </span><span style="color: #8195b0; font-style: italic;">complejidad: 1=b&#225;sica, 2=media, 3=alta, 4=extrema (por defecto: 3)</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Colores para mejor visualizaci&#243;n</span>
<span style="color: #1857a4;">RED</span>=<span style="color: #a44185;">'\033[0;31m'</span>
<span style="color: #1857a4;">GREEN</span>=<span style="color: #a44185;">'\033[0;32m'</span>
<span style="color: #1857a4;">BLUE</span>=<span style="color: #a44185;">'\033[0;34m'</span>
<span style="color: #1857a4;">YELLOW</span>=<span style="color: #a44185;">'\033[0;33m'</span>
<span style="color: #1857a4;">NC</span>=<span style="color: #a44185;">'\033[0m'</span> <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">No Color</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Banner</span>
<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${BLUE}"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#9556;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9559;"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#9553;                                               &#9553;"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#9553;   GENERADOR DE CONTRASE&#209;AS ULTRA-SEGURAS      &#9553;"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#9553;   Para usuarios de Emacs con Esteroides       &#9553;"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#9553;                                               &#9553;"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#9562;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9552;&#9565;"</span>
<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${NC}"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Valores por defecto</span>
<span style="color: #1857a4;">PASSWORD_LENGTH</span>=${<span style="color: #1857a4;">1</span>:-16}
<span style="color: #1857a4;">COMPLEXITY_LEVEL</span>=${<span style="color: #1857a4;">2</span>:-3}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Validar entrada</span>
<span style="color: #219fd5; font-style: italic;">if</span> <span style="color: #219fd5; font-weight: bold;">!</span> [[ <span style="color: #a44185;">"$PASSWORD_LENGTH"</span> =~ ^[0-9]+$ ]]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}Error: La longitud debe ser un n&#250;mero entero.${NC}"</span>
    <span style="color: #219fd5; font-style: italic;">exit</span> 1
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #219fd5; font-style: italic;">if</span> [[ <span style="color: #a44185;">"$PASSWORD_LENGTH"</span> -lt 8 ]]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}Advertencia: Se recomienda una longitud m&#237;nima de 12 caracteres.${NC}"</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Continuando con longitud $PASSWORD_LENGTH..."</span>
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #219fd5; font-style: italic;">if</span> <span style="color: #219fd5; font-weight: bold;">!</span> [[ <span style="color: #a44185;">"$COMPLEXITY_LEVEL"</span> =~ ^[1-4]$ ]]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}Error: El nivel de complejidad debe ser 1, 2, 3 o 4.${NC}"</span>
    <span style="color: #219fd5; font-style: italic;">exit</span> 1
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Definir conjuntos de caracteres seg&#250;n nivel de complejidad</span>
<span style="color: #219fd5; font-style: italic;">case</span> $<span style="color: #1857a4;">COMPLEXITY_LEVEL</span><span style="color: #219fd5; font-style: italic;"> in</span>
    1) <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">B&#225;sico: letras y n&#250;meros</span>
        <span style="color: #1857a4;">CHAR_SET</span>=<span style="color: #a44185;">"a-zA-Z0-9"</span>
        <span style="color: #1857a4;">DESCRIPTION</span>=<span style="color: #a44185;">"b&#225;sica (letras y n&#250;meros)"</span>
        ;;
    2) <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Medio: a&#241;ade algunos s&#237;mbolos comunes</span>
        <span style="color: #1857a4;">CHAR_SET</span>=<span style="color: #a44185;">"a-zA-Z0-9!@#$%^&amp;*"</span>
        <span style="color: #1857a4;">DESCRIPTION</span>=<span style="color: #a44185;">"media (letras, n&#250;meros y s&#237;mbolos comunes)"</span>
        ;;
    3) <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Alto: amplia gama de s&#237;mbolos</span>
        <span style="color: #1857a4;">CHAR_SET</span>=<span style="color: #a44185;">"a-zA-Z0-9!@#$%^&amp;*()_+-=[]{}|;:,.&lt;&gt;?/~"</span>
        <span style="color: #1857a4;">DESCRIPTION</span>=<span style="color: #a44185;">"alta (amplia gama de caracteres)"</span>
        ;;
    4) <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Extremo: incluye caracteres Unicode</span>
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generamos con todo y a&#241;adimos caracteres Unicode</span>
        <span style="color: #1857a4;">CHAR_SET</span>=<span style="color: #a44185;">"a-zA-Z0-9!@#$%^&amp;*()_+-=[]{}|;:,.&lt;&gt;?/~\"\\\`"</span>
        <span style="color: #1857a4;">DESCRIPTION</span>=<span style="color: #a44185;">"extrema (incluyendo caracteres especiales avanzados)"</span>
        ;;
<span style="color: #219fd5; font-style: italic;">esac</span>

<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}Generando contrase&#241;a con:${NC}"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#8226; Longitud: $PASSWORD_LENGTH caracteres"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#8226; Complejidad: $DESCRIPTION"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para generar la contrase&#241;a</span>
<span style="color: #dc3eb7;">generate_password</span>() {
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">length</span>=$<span style="color: #1857a4;">1</span>
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">charset</span>=$<span style="color: #1857a4;">2</span>
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">complexity</span>=$<span style="color: #1857a4;">3</span>

    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Base64 da buena entrop&#237;a</span>
    <span style="color: #219fd5; font-style: italic;">if</span> [[ $<span style="color: #1857a4;">complexity</span> -eq 4 ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Para nivel extremo, incluimos algunos caracteres Unicode</span>
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generamos una contrase&#241;a base</span>
        <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">base_password</span>=$(<span style="color: #219fd5; font-weight: bold;">LC_ALL=C tr -dc "$charset" &lt; /dev/urandom | head -c $(($length - 3</span>)))
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">A&#241;adimos 3 caracteres Unicode comunes pero poco usados en contrase&#241;as</span>
        <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">unicode_chars</span>=$(<span style="color: #219fd5; font-weight: bold;">echo -e "\u2603\u03A9\u2764"</span>)
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"${base_password}${unicode_chars}"</span> | fold -w1 | shuf | tr -d <span style="color: #a44185;">'\n'</span> | head -c $<span style="color: #1857a4;">length</span>
    <span style="color: #219fd5; font-style: italic;">else</span>
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Para otros niveles usamos el conjunto definido</span>
        <span style="color: #1857a4;">LC_ALL</span>=C tr -dc <span style="color: #a44185;">"$charset"</span> &lt; /dev/urandom | head -c $<span style="color: #1857a4;">length</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generar contrase&#241;a</span>
<span style="color: #1857a4;">PASSWORD</span>=$(<span style="color: #219fd5; font-weight: bold;">generate_password $PASSWORD_LENGTH "$CHAR_SET" $COMPLEXITY_LEVEL</span>)

<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${GREEN}Contrase&#241;a generada:${NC}"</span>
<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${BLUE}$PASSWORD${NC}"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Evaluaci&#243;n de la fortaleza</span>
<span style="color: #1857a4;">STRENGTH</span>=0
[[ ${#<span style="color: #1857a4;">PASSWORD</span>} -ge 12 ]] &amp;&amp; ((<span style="color: #1857a4;">STRENGTH</span>+=1))
[[ ${#<span style="color: #1857a4;">PASSWORD</span>} -ge 16 ]] &amp;&amp; ((<span style="color: #1857a4;">STRENGTH</span>+=1))
[[ <span style="color: #a44185;">"$PASSWORD"</span> =~ [A-Z] ]] &amp;&amp; ((<span style="color: #1857a4;">STRENGTH</span>+=1))
[[ <span style="color: #a44185;">"$PASSWORD"</span> =~ [a-z] ]] &amp;&amp; ((<span style="color: #1857a4;">STRENGTH</span>+=1))
[[ <span style="color: #a44185;">"$PASSWORD"</span> =~ [0-9] ]] &amp;&amp; ((<span style="color: #1857a4;">STRENGTH</span>+=1))
[[ <span style="color: #a44185;">"$PASSWORD"</span> =~ [^a-zA-Z0-9] ]] &amp;&amp; ((<span style="color: #1857a4;">STRENGTH</span>+=1))

<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${GREEN}Evaluaci&#243;n de fortaleza:${NC}"</span>
<span style="color: #219fd5; font-style: italic;">case</span> $<span style="color: #1857a4;">STRENGTH</span><span style="color: #219fd5; font-style: italic;"> in</span>
    6) <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}&#9733;&#9733;&#9733;&#9733;&#9733; Excelente${NC} - Pr&#225;cticamente imposible de romper"</span> ;;
    5) <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}&#9733;&#9733;&#9733;&#9733;&#9734; Muy buena${NC} - Extremadamente dif&#237;cil de comprometer"</span> ;;
    4) <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}&#9733;&#9733;&#9733;&#9734;&#9734; Buena${NC} - Resistente a la mayor&#237;a de ataques"</span> ;;
    3) <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}&#9733;&#9733;&#9734;&#9734;&#9734; Moderada${NC} - Ofrece protecci&#243;n b&#225;sica"</span> ;;
    *) <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}&#9733;&#9734;&#9734;&#9734;&#9734; D&#233;bil${NC} - Considere aumentar la complejidad"</span> ;;
<span style="color: #219fd5; font-style: italic;">esac</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Estimaci&#243;n del tiempo para romperla (muy aproximada)</span>
<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${GREEN}Tiempo estimado para romper mediante fuerza bruta:${NC}"</span>
<span style="color: #1857a4;">COMBINATIONS</span>=0
<span style="color: #219fd5; font-style: italic;">case</span> $<span style="color: #1857a4;">COMPLEXITY_LEVEL</span><span style="color: #219fd5; font-style: italic;"> in</span>
    1) <span style="color: #1857a4;">CHAR_COUNT</span>=62 ;; <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">a-z, A-Z, 0-9</span>
    2) <span style="color: #1857a4;">CHAR_COUNT</span>=71 ;; <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">+9 s&#237;mbolos comunes</span>
    3) <span style="color: #1857a4;">CHAR_COUNT</span>=95 ;; <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">ASCII imprimible est&#225;ndar</span>
    4) <span style="color: #1857a4;">CHAR_COUNT</span>=105 ;; <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Con algunos caracteres adicionales</span>
<span style="color: #219fd5; font-style: italic;">esac</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">F&#243;rmula b&#225;sica: combinaciones = conjunto^longitud</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Convertimos a notaci&#243;n cient&#237;fica para evitar desbordamientos</span>
<span style="color: #1857a4;">EXPONENT</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$PASSWORD_LENGTH * l($CHAR_COUNT</span><span style="color: #a44185;">)/l(10)"</span> | bc -l | awk <span style="color: #a44185;">'{printf "%.2f", $1}'</span>)
<span style="color: #1857a4;">CRACK_TIME</span>=<span style="color: #a44185;">""</span>

<span style="color: #219fd5; font-style: italic;">if</span> (( $(<span style="color: #219fd5; font-weight: bold;">echo "$EXPONENT &lt; 9" | bc -l</span>) )); <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #1857a4;">CRACK_TIME</span>=<span style="color: #a44185;">"Horas o d&#237;as"</span>
<span style="color: #219fd5; font-style: italic;">elif</span> (( $(<span style="color: #219fd5; font-weight: bold;">echo "$EXPONENT &lt; 12" | bc -l</span>) )); <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #1857a4;">CRACK_TIME</span>=<span style="color: #a44185;">"Meses"</span>
<span style="color: #219fd5; font-style: italic;">elif</span> (( $(<span style="color: #219fd5; font-weight: bold;">echo "$EXPONENT &lt; 15" | bc -l</span>) )); <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #1857a4;">CRACK_TIME</span>=<span style="color: #a44185;">"A&#241;os"</span>
<span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #1857a4;">CRACK_TIME</span>=<span style="color: #a44185;">"Siglos o milenios"</span>
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#8226; Combinaciones posibles: ~10^$EXPONENT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#8226; Tiempo aproximado: $CRACK_TIME (con hardware actual)"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Guardar en el portapapeles si est&#225; disponible xclip o xsel</span>
<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${GREEN}Acciones adicionales:${NC}"</span>
<span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v xclip &gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"$PASSWORD"</span> | xclip -selection clipboard
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#8226; Contrase&#241;a copiada al portapapeles (xclip)"</span>
<span style="color: #219fd5; font-style: italic;">elif </span><span style="color: #dc3eb7;">command</span> -v xsel &gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"$PASSWORD"</span> | xsel -b
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#8226; Contrase&#241;a copiada al portapapeles (xsel)"</span>
<span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#8226; Instale xclip o xsel para copiar autom&#225;ticamente al portapapeles"</span>
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"&#8226; Use ${YELLOW}Ctrl+Y${NC} para pegar esta contrase&#241;a en Emacs (despu&#233;s de copiarla)"</span>

<span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${BLUE}Para usar desde Emacs, a&#241;ada este script a su init.el${NC}"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Consulte la secci&#243;n 'Integraci&#243;n con Emacs' en el blog Emacs con Esteroides"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">""</span>
</pre>
</div>

<p>
Este script ofrece:
</p>

<ul class="org-ul">
<li>Generación de contraseñas con distintos niveles de complejidad</li>
<li>Evaluación de la fortaleza de la contraseña generada</li>
<li>Estimación del tiempo necesario para romperla mediante fuerza bruta</li>
<li>Integración con el portapapeles para facilitar su uso</li>
<li>Feedback visual mediante colores y formato amigable</li>
</ul>
</div>
</div>
<div id="outline-container-org8621c78" class="outline-2">
<h2 id="org8621c78">Integración con Emacs</h2>
<div class="outline-text-2" id="text-org8621c78">
<p>
Ahora que contamos con un potente generador de contraseñas, vamos a integrarlo en nuestro entorno Emacs para maximizar su utilidad.
</p>
</div>
<div id="outline-container-org0a047cf" class="outline-3">
<h3 id="org0a047cf">Configuración básica</h3>
<div class="outline-text-3" id="text-org0a047cf">
<p>
Podemos agregar el siguiente código a nuestro archivo <code>init.el</code> para crear una función que genere contraseñas directamente desde Emacs:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para generar contrase&#241;as fuertes desde Emacs</span>
(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">generate-strong-password</span> (length complexity)
  <span style="color: #60a8a1; font-style: italic;">"Genera una contrase&#241;a fuerte usando nuestro script personalizado.</span>
<span style="color: #60a8a1; font-style: italic;">LENGTH es la longitud de la contrase&#241;a.</span>
<span style="color: #60a8a1; font-style: italic;">COMPLEXITY es el nivel de complejidad (1-4)."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span> 
   (list 
    (read-number <span style="color: #a44185;">"Longitud de la contrase&#241;a: "</span> 16)
    (read-number <span style="color: #a44185;">"Nivel de complejidad (1-4): "</span> 3)))

  (<span style="color: #219fd5; font-style: italic;">let</span> ((script-path <span style="color: #a44185;">"~/bin/strong-password-generator.sh"</span>))
    (<span style="color: #219fd5; font-style: italic;">if</span> (file-exists-p script-path)
        (<span style="color: #219fd5; font-style: italic;">let</span> ((password 
               (string-trim 
                (shell-command-to-string 
                 (format <span style="color: #a44185;">"%s %d %d"</span> script-path length complexity)))))
          <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Insertar en el buffer actual o mostrar en minibuffer</span>
          (<span style="color: #219fd5; font-style: italic;">if</span> (use-region-p)
              (<span style="color: #219fd5; font-style: italic;">progn</span>
                (delete-region (region-beginning) (region-end))
                (insert password)
                (message <span style="color: #a44185;">"Contrase&#241;a insertada en el buffer"</span>))
            (kill-new password)
            (message <span style="color: #a44185;">"Contrase&#241;a copiada al kill-ring: %s"</span> password)))
      (message <span style="color: #a44185;">"Script no encontrado en %s. Verifique la ruta."</span> script-path))))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Atajo de teclado para generar contrase&#241;as r&#225;pidamente</span>
(global-set-key (kbd <span style="color: #a44185;">"C-c p"</span>) 'generate-strong-password)
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf2cc1a1" class="outline-3">
<h3 id="orgf2cc1a1">Integración con passwords.el</h3>
<div class="outline-text-3" id="text-orgf2cc1a1">
<p>
Para una gestión más completa, podemos aprovechar la biblioteca estándar <code>auth-source.el</code> de Emacs para almacenar y recuperar contraseñas de forma segura:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Integraci&#243;n con auth-source para gesti&#243;n de contrase&#241;as</span>
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">auth-source</span>)

(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">save-password-to-auth-source</span> (host user password)
  <span style="color: #60a8a1; font-style: italic;">"Guarda una contrase&#241;a en auth-source para el HOST y USER especificados."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span>
   (list
    (read-string <span style="color: #a44185;">"Host/Servicio: "</span>)
    (read-string <span style="color: #a44185;">"Usuario: "</span>)
    (read-string <span style="color: #a44185;">"Contrase&#241;a: "</span> nil nil nil t)))  <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">No mostrar la contrase&#241;a</span>

  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Crear entrada en auth-source</span>
  (<span style="color: #219fd5; font-style: italic;">let</span> ((auth-sources '(<span style="color: #a44185;">"~/.authinfo.gpg"</span>)))
    (auth-source-forget-all-cached)
    (<span style="color: #219fd5; font-style: italic;">let</span> ((entry (list <span style="color: #dc3eb7;">:host</span> host <span style="color: #dc3eb7;">:user</span> user <span style="color: #dc3eb7;">:secret</span> password)))
      (auth-source-save-behavior nil)
      (auth-source-save-new entry)
      (message <span style="color: #a44185;">"Contrase&#241;a guardada para %s@%s"</span> user host))))

(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">generate-and-save-password</span> (host user length complexity)
  <span style="color: #60a8a1; font-style: italic;">"Genera una contrase&#241;a fuerte y la guarda en auth-source."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span>
   (list
    (read-string <span style="color: #a44185;">"Host/Servicio: "</span>)
    (read-string <span style="color: #a44185;">"Usuario: "</span>)
    (read-number <span style="color: #a44185;">"Longitud de la contrase&#241;a: "</span> 16)
    (read-number <span style="color: #a44185;">"Nivel de complejidad (1-4): "</span> 3)))

  (<span style="color: #219fd5; font-style: italic;">let*</span> ((script-path <span style="color: #a44185;">"~/bin/strong-password-generator.sh"</span>)
         (password
          (string-trim
           (shell-command-to-string
            (format <span style="color: #a44185;">"%s %d %d"</span> script-path length complexity)))))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Guardar en auth-source</span>
    (save-password-to-auth-source host user password)

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Tambi&#233;n copiar al kill-ring para uso inmediato</span>
    (kill-new password)
    (message <span style="color: #a44185;">"Contrase&#241;a generada y guardada para %s@%s (copiada al kill-ring)"</span> user host)))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para recuperar contrase&#241;as</span>
(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">get-password-from-auth-source</span> (host user)
  <span style="color: #60a8a1; font-style: italic;">"Recupera una contrase&#241;a desde auth-source."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span>
   (list
    (read-string <span style="color: #a44185;">"Host/Servicio: "</span>)
    (read-string <span style="color: #a44185;">"Usuario: "</span>)))

  (<span style="color: #219fd5; font-style: italic;">let*</span> ((auth-info (car (auth-source-search <span style="color: #dc3eb7;">:host</span> host <span style="color: #dc3eb7;">:user</span> user)))
         (password (<span style="color: #219fd5; font-style: italic;">if</span> auth-info
                      (<span style="color: #219fd5; font-style: italic;">let</span> ((secret (plist-get auth-info <span style="color: #dc3eb7;">:secret</span>)))
                        (<span style="color: #219fd5; font-style: italic;">if</span> (functionp secret)
                            (funcall secret)
                          secret))
                    nil)))

    (<span style="color: #219fd5; font-style: italic;">if</span> password
        (<span style="color: #219fd5; font-style: italic;">progn</span>
          (kill-new password)
          (message <span style="color: #a44185;">"Contrase&#241;a recuperada y copiada al kill-ring"</span>))
      (message <span style="color: #a44185;">"No se encontr&#243; contrase&#241;a para %s@%s"</span> user host))))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Atajo para generar y guardar</span>
(global-set-key (kbd <span style="color: #a44185;">"C-c P"</span>) 'generate-and-save-password)
</pre>
</div>
</div>
</div>
<div id="outline-container-org7edf7b6" class="outline-3">
<h3 id="org7edf7b6">Integración con pass (Password Store)</h3>
<div class="outline-text-3" id="text-org7edf7b6">
<p>
Para usuarios de <code>pass</code> (el estándar Unix para gestión de contraseñas), ofrecemos también una integración con este sistema:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Integraci&#243;n con Password Store (pass)</span>
(<span style="color: #219fd5; font-style: italic;">when</span> (executable-find <span style="color: #a44185;">"pass"</span>)
  (<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">auth-source-pass</span>)
  (auth-source-pass-enable)

  (<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">generate-password-and-store-in-pass</span> (path length complexity)
    <span style="color: #60a8a1; font-style: italic;">"Genera una contrase&#241;a fuerte y la almacena usando pass."</span>
    (<span style="color: #219fd5; font-style: italic;">interactive</span>
     (list
      (read-string <span style="color: #a44185;">"Ruta en pass (ej. email/gmail.com): "</span>)
      (read-number <span style="color: #a44185;">"Longitud de la contrase&#241;a: "</span> 16)
      (read-number <span style="color: #a44185;">"Nivel de complejidad (1-4): "</span> 3)))

    (<span style="color: #219fd5; font-style: italic;">let*</span> ((script-path <span style="color: #a44185;">"~/bin/strong-password-generator.sh"</span>)
           (password
            (string-trim
             (shell-command-to-string
              (format <span style="color: #a44185;">"%s %d %d"</span> script-path length complexity)))))

      <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Almacenar en pass</span>
      (shell-command-to-string (format <span style="color: #a44185;">"echo '</span><span style="color: #2f86d2;">%s</span><span style="color: #a44185;">' | pass insert -e '</span><span style="color: #2f86d2;">%s</span><span style="color: #a44185;">'"</span> password path))

      <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Copiar al kill-ring</span>
      (kill-new password)
      (message <span style="color: #a44185;">"Contrase&#241;a generada y almacenada en pass: %s (copiada al kill-ring)"</span> path)))

  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Atajo para la funci&#243;n de pass</span>
  (global-set-key (kbd <span style="color: #a44185;">"C-c M-p"</span>) 'generate-password-and-store-in-pass))
</pre>
</div>
</div>
</div>
<div id="outline-container-orgd7e8c2e" class="outline-3">
<h3 id="orgd7e8c2e">Integración avanzada con org-mode</h3>
<div class="outline-text-3" id="text-orgd7e8c2e">
<p>
Para los amantes de <code>org-mode</code>, podemos crear un sistema completo de gestión de contraseñas aprovechando sus capacidades:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Gesti&#243;n de contrase&#241;as con org-mode (cifrado)</span>
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">org-crypt</span>)
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">epa-file</span>)
(epa-file-enable)
(org-crypt-use-before-save-magic)
(<span style="color: #219fd5; font-style: italic;">setq</span> org-tags-exclude-from-inheritance (<span style="color: #219fd5; font-style: italic;">quote</span> (<span style="color: #a44185;">"crypt"</span>)))
(<span style="color: #219fd5; font-style: italic;">setq</span> org-crypt-key user-mail-address)  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Usar tu clave GPG</span>

(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">create-password-entry-in-org</span> ()
  <span style="color: #60a8a1; font-style: italic;">"Crea una entrada para una contrase&#241;a en un archivo org cifrado."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (<span style="color: #219fd5; font-style: italic;">let*</span> ((org-password-file <span style="color: #a44185;">"~/org/passwords.org.gpg"</span>)
         (host (read-string <span style="color: #a44185;">"Servicio/Sitio: "</span>))
         (user (read-string <span style="color: #a44185;">"Usuario/Email: "</span>))
         (notes (read-string <span style="color: #a44185;">"Notas adicionales: "</span>))
         (length (read-number <span style="color: #a44185;">"Longitud de la contrase&#241;a: "</span> 16))
         (complexity (read-number <span style="color: #a44185;">"Nivel de complejidad (1-4): "</span> 3))
         (script-path <span style="color: #a44185;">"~/bin/strong-password-generator.sh"</span>)
         (password
          (string-trim
           (shell-command-to-string
            (format <span style="color: #a44185;">"%s %d %d"</span> script-path length complexity)))))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Crear o abrir el archivo</span>
    (<span style="color: #219fd5; font-style: italic;">unless</span> (file-exists-p org-password-file)
      (<span style="color: #219fd5; font-style: italic;">with-temp-file</span> org-password-file
        (insert <span style="color: #a44185;">"#+TITLE: Base de datos de contrase&#241;as seguras\n"</span>)
        (insert <span style="color: #a44185;">"#+AUTHOR: "</span> user-full-name <span style="color: #a44185;">"\n"</span>)
        (insert <span style="color: #a44185;">"#+STARTUP: content\n\n"</span>)))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">A&#241;adir nueva entrada</span>
    (find-file org-password-file)
    (goto-char (point-max))
    (insert (format <span style="color: #a44185;">"\n* %s %s\n"</span> host (format-time-string <span style="color: #a44185;">"(%Y-%m-%d)"</span>)))
    (insert (format <span style="color: #a44185;">"  :PROPERTIES:\n"</span>))
    (insert (format <span style="color: #a44185;">"  :CREATED: %s\n"</span> (format-time-string <span style="color: #a44185;">"[%Y-%m-%d %a %H:%M]"</span>)))
    (insert (format <span style="color: #a44185;">"  :USER: %s\n"</span> user))
    (insert (format <span style="color: #a44185;">"  :END:\n"</span>))
    (insert (format <span style="color: #a44185;">"** Credenciales :crypt:\n"</span>))
    (insert (format <span style="color: #a44185;">"- Usuario: %s\n"</span> user))
    (insert (format <span style="color: #a44185;">"- Contrase&#241;a: %s\n"</span> password))
    (insert (format <span style="color: #a44185;">"- Generada: %s\n"</span> (format-time-string <span style="color: #a44185;">"%Y-%m-%d"</span>)))
    (insert (format <span style="color: #a44185;">"- Longitud: %d caracteres\n"</span> length))
    (insert (format <span style="color: #a44185;">"- Complejidad: nivel %d\n"</span> complexity))
    (<span style="color: #219fd5; font-style: italic;">when</span> (not (string= notes <span style="color: #a44185;">""</span>))
      (insert (format <span style="color: #a44185;">"** Notas\n%s\n"</span> notes)))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Cifrar inmediatamente la secci&#243;n</span>
    (org-encrypt-entry)
    (save-buffer)

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Copiar al kill-ring</span>
    (kill-new password)
    (message <span style="color: #a44185;">"Entrada creada para %s y contrase&#241;a copiada al kill-ring"</span> host)))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Atajo para crear entradas de contrase&#241;as en org</span>
(global-set-key (kbd <span style="color: #a44185;">"C-c M-P"</span>) 'create-password-entry-in-org)
</pre>
</div>
</div>
</div>
<div id="outline-container-org24dbc58" class="outline-3">
<h3 id="org24dbc58">Uso con Dired</h3>
<div class="outline-text-3" id="text-org24dbc58">
<p>
Para una integración aún más completa, podemos agregar un marcador en Dired para ejecutar nuestro generador:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Integraci&#243;n con Dired</span>
(<span style="color: #219fd5; font-style: italic;">with-eval-after-load</span> 'dired
  (define-key dired-mode-map (kbd <span style="color: #a44185;">";p"</span>) 
    (<span style="color: #219fd5; font-style: italic;">lambda</span> ()
      (<span style="color: #219fd5; font-style: italic;">interactive</span>)
      (<span style="color: #219fd5; font-style: italic;">let</span> ((default-directory dired-directory))
        (generate-strong-password 16 3)))))
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orgd16a3fd" class="outline-2">
<h2 id="orgd16a3fd">Buenas prácticas para la gestión de contraseñas</h2>
<div class="outline-text-2" id="text-orgd16a3fd">
<p>
Además de generar contraseñas fuertes, es importante seguir algunas buenas prácticas para maximizar nuestra seguridad:
</p>
</div>
<div id="outline-container-org430a57e" class="outline-3">
<h3 id="org430a57e">Rotación periódica</h3>
<div class="outline-text-3" id="text-org430a57e">
<ul class="org-ul">
<li>Cambiar contraseñas críticas cada 3-6 meses</li>
<li>No reutilizar contraseñas anteriores</li>
<li>Automatizar recordatorios con <code>org-agenda</code></li>
</ul>
</div>
</div>
<div id="outline-container-org823f7f2" class="outline-3">
<h3 id="org823f7f2">Autenticación de dos factores (2FA)</h3>
<div class="outline-text-3" id="text-org823f7f2">
<ul class="org-ul">
<li>Complementar contraseñas con un segundo factor de autenticación</li>
<li>Configurar apps como Google Authenticator o Authy</li>
<li>Posible integración con <code>auth-source-xoauth2.el</code></li>
</ul>
</div>
</div>
<div id="outline-container-orgc3ede33" class="outline-3">
<h3 id="orgc3ede33">Sistema de clasificación</h3>
<div class="outline-text-3" id="text-orgc3ede33">
<ul class="org-ul">
<li>Categorizar contraseñas según su nivel de sensibilidad</li>
<li>Ajustar la complejidad según la importancia del servicio</li>
<li>Documentar políticas personales en un archivo <code>org</code> cifrado</li>
</ul>
</div>
</div>
<div id="outline-container-org733d40a" class="outline-3">
<h3 id="org733d40a">Respaldo seguro</h3>
<div class="outline-text-3" id="text-org733d40a">
<ul class="org-ul">
<li>Mantener copias cifradas de las contraseñas más importantes</li>
<li>Considerar soluciones físicas como claves de respaldo o papel</li>
<li>Establecer procedimientos de recuperación documentados</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org332580d" class="outline-2">
<h2 id="org332580d">Diagrama: Arquitectura del sistema de gestión de contraseñas</h2>
<div class="outline-text-2" id="text-org332580d">
<p>
El siguiente diagrama PlantUML ilustra la arquitectura completa del sistema de gestión de contraseñas que hemos descrito:
</p>


<figure id="org30e220e">
<img src="images/password-system-architecture.png" alt="password-system-architecture.png">

</figure>
</div>
</div>
<div id="outline-container-org49846be" class="outline-2">
<h2 id="org49846be">Comparativa de enfoques de gestión de contraseñas</h2>
<div class="outline-text-2" id="text-org49846be">
<p>
Para poner en perspectiva nuestra solución, comparemos diferentes enfoques para la gestión de contraseñas:
</p>

<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Enfoque</th>
<th scope="col" class="org-left">Pros</th>
<th scope="col" class="org-left">Contras</th>
<th scope="col" class="org-left">Integración con Emacs</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Memoria humana</td>
<td class="org-left">No requiere herramientas</td>
<td class="org-left">Limitado en cantidad y complejidad</td>
<td class="org-left">N/A</td>
</tr>

<tr>
<td class="org-left">Anotación física</td>
<td class="org-left">Simple, no hackeable remotamente</td>
<td class="org-left">Riesgo de pérdida, acceso físico</td>
<td class="org-left">N/A</td>
</tr>

<tr>
<td class="org-left">Navegador web</td>
<td class="org-left">Conveniente, automático</td>
<td class="org-left">Seguridad variable, portabilidad limitada</td>
<td class="org-left">Débil</td>
</tr>

<tr>
<td class="org-left">Gestor comercial (LastPass)</td>
<td class="org-left">Fácil de usar, multiplataforma</td>
<td class="org-left">Dependencia de terceros, posibles brechas</td>
<td class="org-left">Generalmente nula</td>
</tr>

<tr>
<td class="org-left">Password Store (pass)</td>
<td class="org-left">Open source, basado en GPG, CLI</td>
<td class="org-left">Requiere configuración, menos GUI</td>
<td class="org-left">Excelente (auth-source-pass)</td>
</tr>

<tr>
<td class="org-left">KeePass/KeePassXC</td>
<td class="org-left">Open source, cifrado local</td>
<td class="org-left">Sincronización manual</td>
<td class="org-left">Moderada (plugins disponibles)</td>
</tr>

<tr>
<td class="org-left">Nuestro sistema con Emacs</td>
<td class="org-left">Personalizable, integrado, cifrado</td>
<td class="org-left">Curva de aprendizaje, configuración</td>
<td class="org-left">Total (nativo)</td>
</tr>

<tr>
<td class="org-left">Biometría</td>
<td class="org-left">Conveniente, único</td>
<td class="org-left">Limitaciones hardware, no cambiable</td>
<td class="org-left">Limitada (requiere hardware)</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org6aa52b2" class="outline-2">
<h2 id="org6aa52b2">Personalizaciones avanzadas del generador de contraseñas</h2>
<div class="outline-text-2" id="text-org6aa52b2">
<p>
Nuestro script de generación de contraseñas puede personalizarse aún más para satisfacer necesidades específicas:
</p>
</div>
<div id="outline-container-orgb96344a" class="outline-3">
<h3 id="orgb96344a">Patrones de contraseñas memorizables</h3>
<div class="outline-text-3" id="text-orgb96344a">
<p>
A veces necesitamos contraseñas que, siendo seguras, también sean memorizables. Podemos modificar nuestro script para generar contraseñas basadas en patrones:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">memorable-password-generator.sh</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Definir conjuntos de palabras (esto ser&#237;a mucho m&#225;s extenso en una implementaci&#243;n real)</span>
<span style="color: #1857a4;">ADJECTIVES</span>=(<span style="color: #a44185;">"r&#225;pido"</span> <span style="color: #a44185;">"alegre"</span> <span style="color: #a44185;">"verde"</span> <span style="color: #a44185;">"brillante"</span> <span style="color: #a44185;">"suave"</span> <span style="color: #a44185;">"&#225;spero"</span> <span style="color: #a44185;">"dulce"</span> <span style="color: #a44185;">"amargo"</span> <span style="color: #a44185;">"fuerte"</span> <span style="color: #a44185;">"d&#233;bil"</span>)
<span style="color: #1857a4;">NOUNS</span>=(<span style="color: #a44185;">"tigre"</span> <span style="color: #a44185;">"monta&#241;a"</span> <span style="color: #a44185;">"oc&#233;ano"</span> <span style="color: #a44185;">"jard&#237;n"</span> <span style="color: #a44185;">"libro"</span> <span style="color: #a44185;">"pluma"</span> <span style="color: #a44185;">"casa"</span> <span style="color: #a44185;">"estrella"</span> <span style="color: #a44185;">"fuego"</span> <span style="color: #a44185;">"nube"</span>)
<span style="color: #1857a4;">VERBS</span>=(<span style="color: #a44185;">"corre"</span> <span style="color: #a44185;">"salta"</span> <span style="color: #a44185;">"nada"</span> <span style="color: #a44185;">"vuela"</span> <span style="color: #a44185;">"escribe"</span> <span style="color: #a44185;">"lee"</span> <span style="color: #a44185;">"canta"</span> <span style="color: #a44185;">"baila"</span> <span style="color: #a44185;">"r&#237;e"</span> <span style="color: #a44185;">"llora"</span>)

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generar componentes aleatorios</span>
<span style="color: #dc3eb7;">get_random_element</span>() {
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">array</span>=(<span style="color: #a44185;">"$@"</span>)
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"${array[RANDOM % ${#array[@]}]}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generar una contrase&#241;a memorable</span>
<span style="color: #dc3eb7;">generate_memorable_password</span>() {
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">adj</span>=$(<span style="color: #219fd5; font-weight: bold;">get_random_element "${ADJECTIVES[@]}"</span>)
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">noun</span>=$(<span style="color: #219fd5; font-weight: bold;">get_random_element "${NOUNS[@]}"</span>)
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">verb</span>=$(<span style="color: #219fd5; font-weight: bold;">get_random_element "${VERBS[@]}"</span>)
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">num</span>=$(<span style="color: #219fd5; font-weight: bold;">(RANDOM % 1000</span>))
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">special_chars</span>=(<span style="color: #a44185;">"!"</span> <span style="color: #a44185;">"@"</span> <span style="color: #a44185;">"#"</span> <span style="color: #a44185;">"$"</span> <span style="color: #a44185;">"%"</span> <span style="color: #a44185;">"&amp;"</span> <span style="color: #a44185;">"*"</span>)
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">special</span>=$(<span style="color: #219fd5; font-weight: bold;">get_random_element "${special_chars[@]}"</span>)

    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Capitalizar primera letra de cada palabra para mayor seguridad</span>
    <span style="color: #1857a4;">adj</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$adj" | sed 's/\(.\</span><span style="color: #a44185;">)/\u\1/'</span>)
    <span style="color: #1857a4;">noun</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$noun" | sed 's/\(.\</span><span style="color: #a44185;">)/\u\1/'</span>)
    <span style="color: #1857a4;">verb</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$verb" | sed 's/\(.\</span><span style="color: #a44185;">)/\u\1/'</span>)

    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"${adj}${special}${noun}${num}${verb}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generar y mostrar</span>
<span style="color: #1857a4;">PASSWORD</span>=$(<span style="color: #219fd5; font-weight: bold;">generate_memorable_password</span>)
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Contrase&#241;a memorable generada: $PASSWORD"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Esta contrase&#241;a es m&#225;s f&#225;cil de recordar pero sigue siendo segura."</span>
</pre>
</div>

<p>
Integramos esta funcionalidad en Emacs:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">generate-memorable-password</span> ()
  <span style="color: #60a8a1; font-style: italic;">"Genera una contrase&#241;a memorable pero segura."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (<span style="color: #219fd5; font-style: italic;">let</span> ((script-path <span style="color: #a44185;">"~/bin/memorable-password-generator.sh"</span>))
    (<span style="color: #219fd5; font-style: italic;">if</span> (file-exists-p script-path)
        (<span style="color: #219fd5; font-style: italic;">let</span> ((password 
               (string-trim 
                (shell-command-to-string script-path))))
          (kill-new password)
          (message <span style="color: #a44185;">"Contrase&#241;a memorable generada y copiada: %s"</span> password))
      (message <span style="color: #a44185;">"Script no encontrado en %s"</span> script-path))))

(global-set-key (kbd <span style="color: #a44185;">"C-c m"</span>) 'generate-memorable-password)
</pre>
</div>
</div>
</div>
<div id="outline-container-org077f6d8" class="outline-3">
<h3 id="org077f6d8">Generador de frases de contraseña (diceware)</h3>
<div class="outline-text-3" id="text-org077f6d8">
<p>
Las frases de contraseña ofrecen alta entropía siendo más memorizables:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">passphrase-generator.sh</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Simulamos dados para seleccionar palabras del diccionario diceware</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">En una implementaci&#243;n real, usar&#237;amos un diccionario completo</span>
<span style="color: #1857a4;">DICEWARE_DICT</span>=(
    <span style="color: #a44185;">"abaco"</span> <span style="color: #a44185;">"badajo"</span> <span style="color: #a44185;">"cabra"</span> <span style="color: #a44185;">"dados"</span> <span style="color: #a44185;">"efecto"</span> <span style="color: #a44185;">"f&#225;bula"</span> <span style="color: #a44185;">"gacela"</span> <span style="color: #a44185;">"hacedor"</span>
    <span style="color: #a44185;">"icono"</span> <span style="color: #a44185;">"jab&#243;n"</span> <span style="color: #a44185;">"kiosco"</span> <span style="color: #a44185;">"labio"</span> <span style="color: #a44185;">"maceta"</span> <span style="color: #a44185;">"nadar"</span> <span style="color: #a44185;">"oasis"</span> <span style="color: #a44185;">"pacto"</span>
    <span style="color: #a44185;">"queso"</span> <span style="color: #a44185;">"r&#225;bano"</span> <span style="color: #a44185;">"s&#225;bana"</span> <span style="color: #a44185;">"tabla"</span> <span style="color: #a44185;">"&#250;nico"</span> <span style="color: #a44185;">"vac&#237;o"</span> <span style="color: #a44185;">"wafle"</span> <span style="color: #a44185;">"xil&#243;fono"</span>
    <span style="color: #a44185;">"yeso"</span> <span style="color: #a44185;">"zarza"</span> <span style="color: #a44185;">"&#225;guila"</span> <span style="color: #a44185;">"b&#250;ho"</span> <span style="color: #a44185;">"c&#225;liz"</span> <span style="color: #a44185;">"d&#225;til"</span> <span style="color: #a44185;">"&#233;lite"</span> <span style="color: #a44185;">"f&#233;nix"</span>
    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Este diccionario ser&#237;a mucho m&#225;s extenso en la realidad</span>
)

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generar frase de contrase&#241;a</span>
<span style="color: #dc3eb7;">generate_passphrase</span>() {
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">num_words</span>=$<span style="color: #1857a4;">1</span>
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">passphrase</span>=<span style="color: #a44185;">""</span>
    <span style="color: #dc3eb7;">local</span> <span style="color: #1857a4;">separator</span>=$<span style="color: #1857a4;">2</span>

    <span style="color: #219fd5; font-style: italic;">for</span> ((<span style="color: #1857a4;">i</span>=0; i&lt;num_words; i++)); <span style="color: #219fd5; font-style: italic;">do</span>
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Seleccionar palabra aleatoria</span>
        <span style="color: #1857a4;">index</span>=$(<span style="color: #219fd5; font-weight: bold;">(RANDOM % ${#DICEWARE_DICT[@]}</span>))
        <span style="color: #1857a4;">word</span>=${<span style="color: #1857a4;">DICEWARE_DICT</span>[$<span style="color: #1857a4;">index</span>]}

        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">A&#241;adir capitalizaci&#243;n aleatoria para mayor seguridad</span>
        <span style="color: #219fd5; font-style: italic;">if</span> ((RANDOM % 2)); <span style="color: #219fd5; font-style: italic;">then</span>
            <span style="color: #1857a4;">word</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$word" | sed 's/\(.\</span><span style="color: #a44185;">)/\u\1/'</span>)
        <span style="color: #219fd5; font-style: italic;">fi</span>

        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">A&#241;adir a la frase</span>
        <span style="color: #219fd5; font-style: italic;">if</span> [[ -n <span style="color: #a44185;">"$passphrase"</span> ]]; <span style="color: #219fd5; font-style: italic;">then</span>
            <span style="color: #1857a4;">passphrase</span>=<span style="color: #a44185;">"${passphrase}${separator}${word}"</span>
        <span style="color: #219fd5; font-style: italic;">else</span>
            <span style="color: #1857a4;">passphrase</span>=$<span style="color: #1857a4;">word</span>
        <span style="color: #219fd5; font-style: italic;">fi</span>
    <span style="color: #219fd5; font-style: italic;">done</span>

    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">A&#241;adir un n&#250;mero aleatorio al final</span>
    <span style="color: #1857a4;">passphrase</span>=<span style="color: #a44185;">"${passphrase}${separator}$(</span><span style="color: #219fd5; font-weight: bold;">($RANDOM % 100</span><span style="color: #a44185;">))"</span>

    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"$passphrase"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Generar y mostrar</span>
<span style="color: #1857a4;">NUM_WORDS</span>=${<span style="color: #1857a4;">1</span>:-4}
<span style="color: #1857a4;">SEPARATOR</span>=${<span style="color: #1857a4;">2</span>:--}
<span style="color: #1857a4;">PASSPHRASE</span>=$(<span style="color: #219fd5; font-weight: bold;">generate_passphrase $NUM_WORDS $SEPARATOR</span>)

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Frase de contrase&#241;a generada: $PASSPHRASE"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Esta frase tiene alta entrop&#237;a pero es m&#225;s f&#225;cil de recordar."</span>
</pre>
</div>

<p>
Y la correspondiente integración en Emacs:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">generate-passphrase</span> (words separator)
  <span style="color: #60a8a1; font-style: italic;">"Genera una frase de contrase&#241;a usando el m&#233;todo diceware.</span>
<span style="color: #60a8a1; font-style: italic;">WORDS es el n&#250;mero de palabras a incluir.</span>
<span style="color: #60a8a1; font-style: italic;">SEPARATOR es el car&#225;cter separador entre palabras."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span>
   (list
    (read-number <span style="color: #a44185;">"N&#250;mero de palabras: "</span> 4)
    (read-string <span style="color: #a44185;">"Separador: "</span> <span style="color: #a44185;">"-"</span>)))

  (<span style="color: #219fd5; font-style: italic;">let</span> ((script-path <span style="color: #a44185;">"~/bin/passphrase-generator.sh"</span>))
    (<span style="color: #219fd5; font-style: italic;">if</span> (file-exists-p script-path)
        (<span style="color: #219fd5; font-style: italic;">let</span> ((passphrase 
               (string-trim 
                (shell-command-to-string 
                 (format <span style="color: #a44185;">"%s %d %s"</span> script-path words separator)))))
          (kill-new passphrase)
          (message <span style="color: #a44185;">"Frase de contrase&#241;a generada y copiada: %s"</span> passphrase))
      (message <span style="color: #a44185;">"Script no encontrado en %s"</span> script-path))))

(global-set-key (kbd <span style="color: #a44185;">"C-c f"</span>) 'generate-passphrase)
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orgad83263" class="outline-2">
<h2 id="orgad83263">Estrategias de migración a contraseñas fuertes</h2>
<div class="outline-text-2" id="text-orgad83263">
<p>
La transición a un sistema de contraseñas fuertes puede parecer abrumadora. Aquí hay un enfoque gradual que facilita la adopción:
</p>
</div>
<div id="outline-container-org49b6640" class="outline-3">
<h3 id="org49b6640">Plan por fases</h3>
<div class="outline-text-3" id="text-org49b6640">
<ol class="org-ol">
<li><b>Fase 1: Inventario</b>
<ul class="org-ul">
<li>Crear un inventario completo de cuentas y servicios</li>
<li>Clasificar por importancia y sensibilidad</li>
<li>Usar org-mode para organizar este inventario</li>
</ul></li>

<li><b>Fase 2: Infraestructura</b>
<ul class="org-ul">
<li>Configurar las herramientas necesarias (scripts, GPG, integraciones)</li>
<li>Establecer las políticas de complejidad según categorías</li>
<li>Preparar sistemas de respaldo</li>
</ul></li>

<li><b>Fase 3: Migración priorizada</b>
<ul class="org-ul">
<li>Comenzar con cuentas financieras y críticas</li>
<li>Continuar con cuentas de correo y principales servicios</li>
<li>Finalizar con cuentas de menor importancia</li>
</ul></li>

<li><b>Fase 4: Revisión y mantenimiento</b>
<ul class="org-ul">
<li>Establecer calendario de rotación</li>
<li>Configurar recordatorios en org-agenda</li>
<li>Realizar auditorías periódicas de seguridad</li>
</ul></li>
</ol>
</div>
</div>
<div id="outline-container-org1263d81" class="outline-3">
<h3 id="org1263d81">Script de auditoría de contraseñas</h3>
<div class="outline-text-3" id="text-org1263d81">
<p>
El siguiente script en Emacs Lisp ayuda a evaluar la seguridad de las contraseñas existentes:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">audit-password-strength</span> (password)
  <span style="color: #60a8a1; font-style: italic;">"Audita la fortaleza de una contrase&#241;a y sugiere mejoras."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span> <span style="color: #a44185;">"sContrase&#241;a a auditar: "</span>)

  (<span style="color: #219fd5; font-style: italic;">let</span> ((length (length password))
        (has-uppercase (string-match-p <span style="color: #a44185;">"[A-Z]"</span> password))
        (has-lowercase (string-match-p <span style="color: #a44185;">"[a-z]"</span> password))
        (has-numbers (string-match-p <span style="color: #a44185;">"[0-9]"</span> password))
        (has-symbols (string-match-p <span style="color: #a44185;">"[</span><span style="color: #219fd5; font-weight: bold;">^</span><span style="color: #a44185;">a-zA-Z0-9]"</span> password))
        (has-sequences (string-match-p <span style="color: #a44185;">"</span><span style="color: #219fd5; font-weight: bold;">\\</span><span style="color: #219fd5; font-weight: bold;">(</span><span style="color: #a44185;">abc</span><span style="color: #219fd5; font-weight: bold;">\\</span><span style="color: #219fd5; font-weight: bold;">|</span><span style="color: #a44185;">123</span><span style="color: #219fd5; font-weight: bold;">\\</span><span style="color: #219fd5; font-weight: bold;">|</span><span style="color: #a44185;">qwe</span><span style="color: #219fd5; font-weight: bold;">\\</span><span style="color: #219fd5; font-weight: bold;">)</span><span style="color: #a44185;">"</span> password))
        (score 0)
        (feedback '()))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Evaluaci&#243;n de longitud</span>
    (<span style="color: #219fd5; font-style: italic;">cond</span>
     ((&lt; length 8)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud cr&#237;tica: menos de 8 caracteres."</span> feedback))
     ((&lt; length 12)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud insuficiente: menos de 12 caracteres."</span> feedback)
      (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score))
     ((&lt; length 16)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud aceptable: entre 12-16 caracteres."</span> feedback)
      (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score 2))
     (t
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Longitud excelente: m&#225;s de 16 caracteres."</span> feedback)
      (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score 3)))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Evaluaci&#243;n de complejidad</span>
    (<span style="color: #219fd5; font-style: italic;">when</span> has-uppercase (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene may&#250;sculas [+]"</span> feedback))
    (<span style="color: #219fd5; font-style: italic;">when</span> has-lowercase (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene min&#250;sculas [+]"</span> feedback))
    (<span style="color: #219fd5; font-style: italic;">when</span> has-numbers (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene n&#250;meros [+]"</span> feedback))
    (<span style="color: #219fd5; font-style: italic;">when</span> has-symbols (<span style="color: #219fd5; font-style: italic;">cl-incf</span> score) (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene s&#237;mbolos especiales [+]"</span> feedback))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Penalizaciones</span>
    (<span style="color: #219fd5; font-style: italic;">when</span> has-sequences
      (<span style="color: #219fd5; font-style: italic;">cl-decf</span> score)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene secuencias predecibles (ej: abc, 123) [-]"</span> feedback))

    (<span style="color: #219fd5; font-style: italic;">when</span> (string-match-p (regexp-quote (user-login-name)) password)
      (<span style="color: #219fd5; font-style: italic;">cl-decf</span> score 2)
      (<span style="color: #219fd5; font-style: italic;">push</span> <span style="color: #a44185;">"Contiene tu nombre de usuario [-]"</span> feedback))

    <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Mostrar resultados</span>
    (<span style="color: #219fd5; font-style: italic;">with-output-to-temp-buffer</span> <span style="color: #a44185;">"*Password Audit*"</span>
      (switch-to-buffer <span style="color: #a44185;">"*Password Audit*"</span>)
      (erase-buffer)
      (insert <span style="color: #a44185;">"=== AUDITOR&#205;A DE SEGURIDAD DE CONTRASE&#209;A ===\n\n"</span>)
      (insert (format <span style="color: #a44185;">"Puntuaci&#243;n: %d/10\n\n"</span> score))
      (insert <span style="color: #a44185;">"An&#225;lisis:\n"</span>)
      (<span style="color: #219fd5; font-style: italic;">dolist</span> (item (reverse feedback))
        (insert (format <span style="color: #a44185;">"&#8226; %s\n"</span> item)))

      (insert <span style="color: #a44185;">"\nRecomendaciones:\n"</span>)
      (<span style="color: #219fd5; font-style: italic;">cond</span>
       ((&lt; score 4)
        (insert <span style="color: #a44185;">"&#9888;&#65039; Contrase&#241;a D&#201;BIL - Se recomienda cambio inmediato\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Utilice la funci&#243;n generate-strong-password para crear una nueva\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Aumente la longitud a m&#237;nimo 16 caracteres\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Incluya caracteres de todas las categor&#237;as\n"</span>))
       ((&lt; score 7)
        (insert <span style="color: #a44185;">"&#9888;&#65039; Contrase&#241;a MODERADA - Se recomienda mejora\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Considere aumentar la longitud\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; A&#241;ada el tipo de caracteres que faltan\n"</span>))
       (t
        (insert <span style="color: #a44185;">"&#9989; Contrase&#241;a FUERTE - Cumple con los est&#225;ndares recomendados\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Recuerde cambiarla peri&#243;dicamente\n"</span>)
        (insert <span style="color: #a44185;">"&#8226; Aseg&#250;rese de no reutilizarla en otros servicios\n"</span>)))

      (insert <span style="color: #a44185;">"\n=== FIN DEL AN&#193;LISIS ===\n"</span>))))

(global-set-key (kbd <span style="color: #a44185;">"C-c C-p a"</span>) 'audit-password-strength)
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org9de327c" class="outline-2">
<h2 id="org9de327c">Recursos adicionales</h2>
<div class="outline-text-2" id="text-org9de327c">
<p>
Para profundizar en la seguridad de contraseñas y su gestión con Emacs, recomendamos consultar:
</p>
</div>
<div id="outline-container-orga335b13" class="outline-3">
<h3 id="orga335b13">Paquetes de Emacs relacionados</h3>
<div class="outline-text-3" id="text-orga335b13">
<ul class="org-ul">
<li><code>auth-source.el</code> - Sistema base para autenticación</li>
<li><code>auth-source-pass.el</code> - Integración con pass</li>
<li><code>password-store.el</code> - Interfaz alternativa para pass</li>
<li><code>org-crypt.el</code> - Cifrado selectivo en org-mode</li>
<li><code>password-generator.el</code> - Generador simple de contraseñas</li>
<li><code>gpg-encrypt.el</code> - Utilidades para cifrado con GPG</li>
</ul>
</div>
</div>
<div id="outline-container-org39660a0" class="outline-3">
<h3 id="org39660a0">Lecturas recomendadas</h3>
<div class="outline-text-3" id="text-org39660a0">
<ul class="org-ul">
<li>"Practical Cryptography" por Niels Ferguson y Bruce Schneier</li>
<li>"Password Strength" en el NIST Special Publication 800-63B</li>
<li>"The Emacs Auth-Source Library" en la documentación oficial de Emacs</li>
<li>"Diceware Passphrase Home" por Arnold Reinhold</li>
</ul>
</div>
</div>
<div id="outline-container-org4e82b7b" class="outline-3">
<h3 id="org4e82b7b">Herramientas complementarias</h3>
<div class="outline-text-3" id="text-org4e82b7b">
<ul class="org-ul">
<li><code>pass</code> - El estándar Unix para gestores de contraseñas</li>
<li><code>gpg</code> - GNU Privacy Guard para cifrado</li>
<li><code>xclip</code> / <code>xsel</code> - Utilidades para acceso al portapapeles</li>
<li><code>pwgen</code> - Generador alternativo de contraseñas</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org86fd205" class="outline-2">
<h2 id="org86fd205">Conclusión</h2>
<div class="outline-text-2" id="text-org86fd205">
<p>
La seguridad de nuestras contraseñas no es una preocupación menor en la era digital. Con las herramientas adecuadas y un enfoque sistemático, podemos transformar esta necesidad en una fortaleza. Emacs, con su flexibilidad y capacidad de integración, nos proporciona el entorno perfecto para implementar un sistema de gestión de contraseñas personalizado, seguro y eficiente.
</p>

<p>
Al combinar scripts de Bash para la generación de contraseñas con las capacidades de cifrado y organización de Emacs, hemos creado un ecosistema completo que nos permite:
</p>

<ul class="org-ul">
<li>Generar contraseñas con diferentes niveles de complejidad según nuestras necesidades</li>
<li>Almacenar de forma segura nuestras credenciales utilizando cifrado GPG</li>
<li>Recuperar fácilmente las contraseñas cuando las necesitamos</li>
<li>Auditar y mantener nuestra seguridad digital de forma proactiva</li>
</ul>

<p>
Esta solución, adaptada específicamente para usuarios avanzados de Emacs, demuestra una vez más la versatilidad de este editor: mucho más que una herramienta para escribir texto, es una plataforma completa para la productividad y la seguridad digital.
</p>

<p>
En un mundo donde las amenazas digitales crecen día a día, tomar el control de nuestra seguridad con herramientas que conocemos y podemos personalizar representa una ventaja significativa. Las contraseñas fuertes son solo el comienzo; es el sistema completo alrededor de ellas lo que marca la diferencia.
</p>

<p>
Como diría Richard Stallman: "La libertad en el software es también la libertad de controlar tu propia seguridad".
</p>

<p>
¡Mantén tus contraseñas fuertes y tus buffers de Emacs siempre a mano!
</p>
</div>
</div>
<div id="outline-container-org584a746" class="outline-2">
<h2 id="org584a746">Nota sobre la ejecución del script</h2>
<div class="outline-text-2" id="text-org584a746">
<p>
Para utilizar el script de generación de contraseñas presentado en este artículo:
</p>

<ol class="org-ol">
<li>Copia el código Bash en un archivo llamado <code>strong-password-generator.sh</code></li>
<li>Guárdalo en <code>~/bin/</code> (o modifica las rutas en el código Emacs)</li>
<li>Asegúrate de hacerlo ejecutable:</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash">chmod +x ~/bin/strong-password-generator.sh
</pre>
</div>

<ol class="org-ol">
<li>Añade las configuraciones de Emacs a tu <code>init.el</code></li>
<li>Reinicia Emacs o evalúa el código con <code>M-x eval-buffer</code></li>
</ol>

<p>
A partir de ese momento, podrás generar contraseñas seguras con <code>C-c p</code> y aprovechar todas las funcionalidades descritas en este artículo.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-contraseñas.html">contraseñas</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-criptografía.html">criptografía</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[contraseñas]]></category>
  <category><![CDATA[criptografía]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-23-gesti%C3%B3n-de-contrase%C3%B1as-fuertes-con-emacs:-seguridad-digital-para-el-usuario-exigente.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-23-gesti%C3%B3n-de-contrase%C3%B1as-fuertes-con-emacs:-seguridad-digital-para-el-usuario-exigente.html</guid>
  <pubDate>Wed, 23 Apr 2025 04:45:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Instalación y Uso Completo de Pass: El Gestor de Contraseñas Estándar de Unix]]></title>
  <description><![CDATA[
<div id="outline-container-org916df15" class="outline-2">
<h2 id="org916df15">Introducción a Pass: El gestor de contraseñas estándar de Unix</h2>
<div class="outline-text-2" id="text-org916df15">
<p>
<code>pass</code> (también conocido como "password-store") es una herramienta simple pero potente para gestionar contraseñas en sistemas Linux y Unix. Diseñado bajo la filosofía Unix de "hacer una cosa y hacerla bien", <code>pass</code> proporciona una interfaz de línea de comandos ligera para almacenar, recuperar y gestionar contraseñas de forma segura.
</p>

<p>
Las principales ventajas de <code>pass</code> incluyen:
</p>

<ul class="org-ul">
<li><b>Simplicidad</b>: Interfaz de línea de comandos intuitiva</li>
<li><b>Seguridad</b>: Cifrado GPG para todas las contraseñas</li>
<li><b>Flexibilidad</b>: Almacenamiento basado en archivos que puede sincronizarse fácilmente</li>
<li><b>Extensibilidad</b>: Numerosas extensiones disponibles</li>
<li><b>Integración</b>: Compatible con diferentes herramientas y flujos de trabajo</li>
</ul>

<p>
Este artículo guiará al lector a través de la instalación, configuración y uso diario de <code>pass</code>, desde operaciones básicas hasta escenarios avanzados.
</p>


<figure id="org1f75759">
<img src="images/pass-architecture.png" alt="pass-architecture.png">

</figure>
</div>
</div>
<div id="outline-container-orga8750df" class="outline-2">
<h2 id="orga8750df">Instalación</h2>
<div class="outline-text-2" id="text-orga8750df">
</div>
<div id="outline-container-orgc033a5c" class="outline-3">
<h3 id="orgc033a5c">Requisitos previos</h3>
<div class="outline-text-3" id="text-orgc033a5c">
<p>
Antes de instalar <code>pass</code>, necesitamos asegurarnos de tener GnuPG instalado, ya que <code>pass</code> lo utiliza para el cifrado:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">En distribuciones basadas en Debian/Ubuntu</span>
sudo apt update
sudo apt install gnupg2

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">En distribuciones basadas en Red Hat/Fedora</span>
sudo dnf install gnupg2

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">En Arch Linux</span>
sudo pacman -S gnupg
</pre>
</div>
</div>
</div>
<div id="outline-container-org39eabc1" class="outline-3">
<h3 id="org39eabc1">Instalación de Pass</h3>
<div class="outline-text-3" id="text-org39eabc1">
<p>
La instalación de <code>pass</code> es sencilla en la mayoría de las distribuciones Linux:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">En distribuciones basadas en Debian/Ubuntu</span>
sudo apt install pass

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">En distribuciones basadas en Red Hat/Fedora</span>
sudo dnf install pass

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">En Arch Linux</span>
sudo pacman -S pass

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">En openSUSE</span>
sudo zypper install password-store
</pre>
</div>
</div>
</div>
<div id="outline-container-org139fe0e" class="outline-3">
<h3 id="org139fe0e">Generación de una clave GPG (si aún no tienes una)</h3>
<div class="outline-text-3" id="text-org139fe0e">
<p>
Para usar <code>pass</code>, necesitas una clave GPG. Si ya tienes una, puedes saltarte este paso. Si no, puedes crear una con el siguiente comando:
</p>

<div class="org-src-container">
<pre class="src src-bash">gpg --full-generate-key
</pre>
</div>

<p>
Sigue las instrucciones para crear tu clave. Recomendaciones:
</p>
<ul class="org-ul">
<li>Tipo de clave: RSA and RSA (predeterminado)</li>
<li>Tamaño de clave: 4096 bits</li>
<li>Expiración: depende de tus necesidades (1-2 años es una buena práctica)</li>
<li>Introduce tu nombre, correo electrónico y un comentario opcional</li>
<li>Establece una contraseña segura para proteger tu clave privada</li>
</ul>

<p>
Para verificar que tu clave se ha creado correctamente:
</p>

<div class="org-src-container">
<pre class="src src-bash">gpg --list-secret-keys --keyid-format LONG
</pre>
</div>

<p>
Anota el ID de tu clave GPG (una cadena alfanumérica larga) que aparece después de "sec rsa4096/". Lo necesitarás para inicializar <code>pass</code>.
</p>
</div>
</div>
</div>
<div id="outline-container-org075bc13" class="outline-2">
<h2 id="org075bc13">Configuración inicial</h2>
<div class="outline-text-2" id="text-org075bc13">
</div>
<div id="outline-container-org2c9532a" class="outline-3">
<h3 id="org2c9532a">Inicialización del almacén de contraseñas</h3>
<div class="outline-text-3" id="text-org2c9532a">
<p>
Inicializa tu almacén de contraseñas con el ID de tu clave GPG:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass init <span style="color: #a44185;">"TU_ID_DE_CLAVE_GPG"</span>
</pre>
</div>

<p>
Ejemplo con un ID ficticio:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass init <span style="color: #a44185;">"8F2A0B5C3D9E7F61"</span>
</pre>
</div>

<p>
Esto creará un directorio <code>~/.password-store/</code> donde se almacenarán tus contraseñas cifradas.
</p>
</div>
</div>
<div id="outline-container-orgf247dd3" class="outline-3">
<h3 id="orgf247dd3">Configuración del entorno</h3>
<div class="outline-text-3" id="text-orgf247dd3">
<p>
Aunque no es estrictamente necesario, puedes añadir la siguiente línea a tu archivo <code>~/.bashrc</code> o <code>~/.zshrc</code> para habilitar el autocompletado:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #dc3eb7;">source</span> /usr/share/bash-completion/completions/pass
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orgb4bf5db" class="outline-2">
<h2 id="orgb4bf5db">Uso básico</h2>
<div class="outline-text-2" id="text-orgb4bf5db">
</div>
<div id="outline-container-org0b09b58" class="outline-3">
<h3 id="org0b09b58">Insertar una contraseña</h3>
<div class="outline-text-3" id="text-org0b09b58">
<p>
Para añadir una nueva contraseña:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass insert categor&#237;a/nombre-servicio
</pre>
</div>

<p>
Por ejemplo:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass insert email/gmail
</pre>
</div>

<p>
El sistema te pedirá que introduzcas la contraseña dos veces para confirmación.
</p>

<p>
Si quieres añadir información adicional, como nombre de usuario, URL, etc., usa la bandera <code>-m</code> (multiline):
</p>

<div class="org-src-container">
<pre class="src src-bash">pass insert -m email/gmail
</pre>
</div>

<p>
Esto abrirá un editor de texto donde puedes introducir toda la información:
</p>

<pre class="example" id="org6ecf3bf">
Mi_contraseña_segura
usuario: miusuario@gmail.com
url: https://gmail.com
recuperación: +123456789
notas: Esta es mi cuenta principal
</pre>
</div>
</div>
<div id="outline-container-org474cfbc" class="outline-3">
<h3 id="org474cfbc">Generar una contraseña aleatoria</h3>
<div class="outline-text-3" id="text-org474cfbc">
<p>
Pass puede generar contraseñas seguras y aleatorias:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass generate categor&#237;a/nombre-servicio longitud
</pre>
</div>

<p>
Ejemplo:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass generate banco/santander 16
</pre>
</div>

<p>
Esto generará una contraseña de 16 caracteres y la almacenará cifrada. Para generar una contraseña sin caracteres especiales:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass generate banco/santander 16 -n
</pre>
</div>
</div>
</div>
<div id="outline-container-org8689940" class="outline-3">
<h3 id="org8689940">Recuperar una contraseña</h3>
<div class="outline-text-3" id="text-org8689940">
<p>
Para mostrar una contraseña:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass categor&#237;a/nombre-servicio
</pre>
</div>

<p>
Por ejemplo:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass email/gmail
</pre>
</div>

<p>
Esto mostrará el contenido del archivo desencriptado en la terminal.
</p>
</div>
</div>
<div id="outline-container-org2aec7c8" class="outline-3">
<h3 id="org2aec7c8">Copiar al portapapeles</h3>
<div class="outline-text-3" id="text-org2aec7c8">
<p>
Para evitar mostrar la contraseña en la pantalla, puedes copiarla directamente al portapapeles:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass -c categor&#237;a/nombre-servicio
</pre>
</div>

<p>
Por defecto, esto copiará solo la primera línea (la contraseña) y se borrará automáticamente del portapapeles después de 45 segundos.
</p>
</div>
</div>
<div id="outline-container-org8d90f81" class="outline-3">
<h3 id="org8d90f81">Listar las contraseñas almacenadas</h3>
<div class="outline-text-3" id="text-org8d90f81">
<p>
Para ver todas tus contraseñas organizadas en un árbol:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass
</pre>
</div>

<p>
O para ver una categoría específica:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass categor&#237;a/
</pre>
</div>
</div>
</div>
<div id="outline-container-org310fb6f" class="outline-3">
<h3 id="org310fb6f">Buscar contraseñas</h3>
<div class="outline-text-3" id="text-org310fb6f">
<p>
Para buscar una contraseña:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass find t&#233;rmino-b&#250;squeda
</pre>
</div>

<p>
Por ejemplo:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass find gmail
</pre>
</div>
</div>
</div>
<div id="outline-container-orgbe57c7e" class="outline-3">
<h3 id="orgbe57c7e">Editar una contraseña existente</h3>
<div class="outline-text-3" id="text-orgbe57c7e">
<p>
Para modificar una contraseña o la información asociada:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass edit categor&#237;a/nombre-servicio
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf9fa42e" class="outline-3">
<h3 id="orgf9fa42e">Eliminar una contraseña</h3>
<div class="outline-text-3" id="text-orgf9fa42e">
<p>
Para eliminar una contraseña:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass rm categor&#237;a/nombre-servicio
</pre>
</div>

<p>
Si quieres eliminar toda una categoría:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass rm -r categor&#237;a/
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org82c5d73" class="outline-2">
<h2 id="org82c5d73">Gestión avanzada</h2>
<div class="outline-text-2" id="text-org82c5d73">
</div>
<div id="outline-container-org8aee514" class="outline-3">
<h3 id="org8aee514">Control de versiones con Git</h3>
<div class="outline-text-3" id="text-org8aee514">
<p>
Pass puede utilizar Git para llevar un control de versiones de tus contraseñas, lo que facilita la sincronización entre dispositivos y tener un historial de cambios.
</p>

<p>
Para inicializar Git en tu almacén de contraseñas:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass git init
</pre>
</div>

<p>
Cada vez que realices cambios, Pass automáticamente hará commit de ellos. Para ver el historial:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass git log
</pre>
</div>

<p>
Para configurar un repositorio remoto:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass git remote add origin git@github.com:usuario/passwords-store.git
pass git push -u origin master
</pre>
</div>

<p>
<b>IMPORTANTE</b>: Asegúrate de que tu repositorio remoto sea privado, aunque las contraseñas estén cifradas.
</p>

<p>
Para sincronizar cambios desde otro dispositivo:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass git pull
</pre>
</div>
</div>
</div>
<div id="outline-container-orgbbcb3a8" class="outline-3">
<h3 id="orgbbcb3a8">Trabajo con múltiples claves GPG</h3>
<div class="outline-text-3" id="text-orgbbcb3a8">
<p>
Puedes compartir contraseñas específicas con otras personas cifrándolas con múltiples claves GPG:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass init -p categor&#237;a/compartido ID_CLAVE_GPG_1 ID_CLAVE_GPG_2
</pre>
</div>

<p>
Esto cifrará todas las contraseñas en esa categoría para ambas claves GPG, permitiendo que ambos usuarios puedan desencriptarlas.
</p>
</div>
</div>
<div id="outline-container-org3c28195" class="outline-3">
<h3 id="org3c28195">Exportación e importación</h3>
<div class="outline-text-3" id="text-org3c28195">
<p>
Para exportar una contraseña o categoría:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass export &gt; passwords-backup.txt
</pre>
</div>

<p>
<b>ADVERTENCIA</b>: Este archivo contendrá todas tus contraseñas en texto plano. Trátalo con extremo cuidado.
</p>

<p>
Para importar:
</p>

<div class="org-src-container">
<pre class="src src-bash">cat passwords-backup.txt | pass import
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orge16134c" class="outline-2">
<h2 id="orge16134c">Extensiones de Pass</h2>
<div class="outline-text-2" id="text-orge16134c">
<p>
Una de las grandes ventajas de <code>pass</code> es su extensibilidad. Algunas extensiones populares incluyen:
</p>
</div>
<div id="outline-container-orgaf9ab69" class="outline-3">
<h3 id="orgaf9ab69">pass-otp: Gestión de códigos OTP</h3>
<div class="outline-text-3" id="text-orgaf9ab69">
<p>
Permite gestionar tokens OTP (One-Time Password) para autenticación de dos factores:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Instalaci&#243;n en Debian/Ubuntu</span>
sudo apt install pass-extension-otp

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">En Arch Linux</span>
sudo pacman -S pass-otp
</pre>
</div>

<p>
Para añadir un token OTP:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass otp insert categor&#237;a/servicio-otp
</pre>
</div>

<p>
Luego introduce la clave secreta o el URI del OTP.
</p>

<p>
Para generar un código OTP:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass otp categor&#237;a/servicio-otp
</pre>
</div>
</div>
</div>
<div id="outline-container-org7e22a2c" class="outline-3">
<h3 id="org7e22a2c">pass-import: Importar desde otros gestores</h3>
<div class="outline-text-3" id="text-org7e22a2c">
<p>
Permite importar contraseñas desde otros gestores como KeePass, LastPass, etc.:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Instalaci&#243;n</span>
pip install pass-import

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejemplo de importaci&#243;n desde KeePass</span>
pass import keepass archivo.kdbx
</pre>
</div>
</div>
</div>
<div id="outline-container-org838f806" class="outline-3">
<h3 id="org838f806">Aplicaciones móviles</h3>
<div class="outline-text-3" id="text-org838f806">
<ul class="org-ul">
<li>Android: Password Store (utiliza OpenKeychain para GPG)</li>
<li>iOS: Pass for iOS</li>
</ul>
</div>
</div>
<div id="outline-container-orga5fa18d" class="outline-3">
<h3 id="orga5fa18d">Interfaces gráficas</h3>
<div class="outline-text-3" id="text-orga5fa18d">
<ul class="org-ul">
<li>QtPass: Interfaz gráfica multiplataforma</li>
<li>passmenu: Script simple para integración con dmenu</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Instalaci&#243;n de QtPass en Debian/Ubuntu</span>
sudo apt install qtpass
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org70abba5" class="outline-2">
<h2 id="org70abba5">Ejemplos prácticos</h2>
<div class="outline-text-2" id="text-org70abba5">
</div>
<div id="outline-container-orgdc34544" class="outline-3">
<h3 id="orgdc34544">Flujo de trabajo para gestionar contraseñas web</h3>
<div class="outline-text-3" id="text-orgdc34544">
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear una estructura organizada</span>
pass
&#9500;&#9472;&#9472; email
&#9474;   &#9500;&#9472;&#9472; gmail
&#9474;   &#9500;&#9472;&#9472; trabajo
&#9474;   &#9492;&#9472;&#9472; personal
&#9500;&#9472;&#9472; banco
&#9474;   &#9500;&#9472;&#9472; santander
&#9474;   &#9492;&#9472;&#9472; bbva
&#9500;&#9472;&#9472; social
&#9474;   &#9500;&#9472;&#9472; twitter
&#9474;   &#9500;&#9472;&#9472; facebook
&#9474;   &#9492;&#9472;&#9472; linkedin
&#9492;&#9472;&#9472; trabajo
    &#9500;&#9472;&#9472; vpn
    &#9500;&#9472;&#9472; gitlab
    &#9492;&#9472;&#9472; jira
</pre>
</div>
</div>
</div>
<div id="outline-container-orgc1820f9" class="outline-3">
<h3 id="orgc1820f9">Ejemplo de gestión de credenciales SSH</h3>
<div class="outline-text-3" id="text-orgc1820f9">
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Almacenar una frase de contrase&#241;a SSH</span>
pass insert ssh/laptop-trabajo

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Usar en combinaci&#243;n con ssh-agent</span>
<span style="color: #dc3eb7;">export</span> <span style="color: #1857a4;">SSH_ASKPASS</span>=<span style="color: #a44185;">"/usr/bin/pass-ssh-askpass"</span>
pass show -c ssh/laptop-trabajo
ssh-add ~/.ssh/id_rsa
</pre>
</div>
</div>
</div>
<div id="outline-container-orgb9f12d6" class="outline-3">
<h3 id="orgb9f12d6">Configuración de contraseñas compartidas en equipo</h3>
<div class="outline-text-3" id="text-orgb9f12d6">
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear estructura para contrase&#241;as de equipo</span>
pass
&#9500;&#9472;&#9472; personal (cifrado solo con mi clave)
&#9492;&#9472;&#9472; equipo (cifrado con m&#250;ltiples claves)
    &#9500;&#9472;&#9472; wifi-oficina
    &#9500;&#9472;&#9472; servidor-prod
    &#9492;&#9472;&#9472; cuenta-aws
</pre>
</div>
</div>
</div>
<div id="outline-container-org1874d6a" class="outline-3">
<h3 id="org1874d6a">Rotación periódica de contraseñas</h3>
<div class="outline-text-3" id="text-org1874d6a">
<p>
Script para ayudar a rotar contraseñas periódicamente:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">rotate-passwords.sh</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Lista de contrase&#241;as a rotar</span>
<span style="color: #1857a4;">passwords</span>=(
  <span style="color: #a44185;">"email/gmail"</span>
  <span style="color: #a44185;">"banco/santander"</span>
  <span style="color: #a44185;">"trabajo/vpn"</span>
)

<span style="color: #219fd5; font-style: italic;">for</span> p<span style="color: #219fd5; font-style: italic;"> in</span> <span style="color: #a44185;">"${passwords[@]}"</span>; <span style="color: #219fd5; font-style: italic;">do</span>
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Rotando $p..."</span>
  <span style="color: #1857a4;">new_pass</span>=$(<span style="color: #219fd5; font-weight: bold;">pass generate -f "$p" 20</span>)
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Nueva contrase&#241;a para $p: $new_pass"</span>
  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Aqu&#237; podr&#237;as a&#241;adir c&#243;digo para actualizar la contrase&#241;a en el servicio correspondiente</span>
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"============================================="</span>
<span style="color: #219fd5; font-style: italic;">done</span>

pass git push
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org5f7c224" class="outline-2">
<h2 id="org5f7c224">Mejores prácticas de seguridad</h2>
<div class="outline-text-2" id="text-org5f7c224">
</div>
<div id="outline-container-org26ec2f6" class="outline-3">
<h3 id="org26ec2f6">Protección de la clave maestra</h3>
<div class="outline-text-3" id="text-org26ec2f6">
<p>
Tu clave GPG es el único punto de acceso a todas tus contraseñas. Protégela adecuadamente:
</p>

<ul class="org-ul">
<li>Usa una frase de contraseña larga y segura</li>
<li>Considera guardar una copia de seguridad de tu clave GPG en un lugar físico seguro</li>
<li>Evalúa el uso de una smartcard o token de seguridad como YubiKey para almacenar tu clave GPG</li>
</ul>
</div>
</div>
<div id="outline-container-org9cfae98" class="outline-3">
<h3 id="org9cfae98">Copias de seguridad</h3>
<div class="outline-text-3" id="text-org9cfae98">
<p>
Aunque Git proporciona cierto nivel de respaldo, es recomendable:
</p>

<ul class="org-ul">
<li>Exportar regularmente tus claves GPG (pública y privada)</li>
<li>Mantener copias de seguridad de <code>~/.password-store</code> en medios externos</li>
<li>Considerar el cifrado de tus copias de seguridad</li>
</ul>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Exportar clave GPG</span>
gpg --export-secret-keys --armor TU_ID_CLAVE &gt; mi_clave_privada.asc
gpg --export --armor TU_ID_CLAVE &gt; mi_clave_publica.asc

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Hacer copia de seguridad del almac&#233;n</span>
tar -czf password-store-backup.tar.gz -C ~/ .password-store/
gpg -e -r TU_ID_CLAVE password-store-backup.tar.gz
</pre>
</div>
</div>
</div>
<div id="outline-container-orga6f2250" class="outline-3">
<h3 id="orga6f2250">Auditoría de contraseñas</h3>
<div class="outline-text-3" id="text-orga6f2250">
<p>
Revisa periódicamente tus contraseñas para detectar duplicados o contraseñas débiles:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Listar todas las contrase&#241;as (&#161;ten cuidado!)</span>
find ~/.password-store -name <span style="color: #a44185;">"*.gpg"</span> -type f | <span style="color: #219fd5; font-style: italic;">while </span><span style="color: #dc3eb7;">read</span> file; <span style="color: #219fd5; font-style: italic;">do</span>
  <span style="color: #1857a4;">name</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$file" | sed -e "s|$(dirname ~/.password-store/</span><span style="color: #a44185;">)/||"</span> -e <span style="color: #a44185;">"s|.gpg$||"</span>)
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"$name: $(</span><span style="color: #219fd5; font-weight: bold;">pass show "$name" 2&gt;/dev/null | head -n1</span><span style="color: #a44185;">)"</span>
<span style="color: #219fd5; font-style: italic;">done</span> &gt; /tmp/password-audit.txt
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf6f2a9b" class="outline-3">
<h3 id="orgf6f2a9b">Integración con herramientas de auditoría</h3>
<div class="outline-text-3" id="text-orgf6f2a9b">
<p>
Puedes usar herramientas como <code>pass-audit</code> para verificar si tus contraseñas han sido comprometidas:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Instalaci&#243;n</span>
pip install pass-audit

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar contrase&#241;as filtradas usando HaveIBeenPwned</span>
pass audit
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org8d08052" class="outline-2">
<h2 id="org8d08052">Solución de problemas comunes</h2>
<div class="outline-text-2" id="text-org8d08052">
</div>
<div id="outline-container-org0df69dd" class="outline-3">
<h3 id="org0df69dd">Error de descifrado</h3>
<div class="outline-text-3" id="text-org0df69dd">
<p>
Si encuentras errores como "gpg: decryption failed: No secret key":
</p>

<ol class="org-ol">
<li><p>
Verifica que estás usando la clave GPG correcta:
</p>
<div class="org-src-container">
<pre class="src src-bash">gpg --list-secret-keys
</pre>
</div></li>

<li><p>
Asegúrate de que la clave no ha expirado:
</p>
<div class="org-src-container">
<pre class="src src-bash">gpg --edit-key TU_ID_CLAVE
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-org4a5e354" class="outline-3">
<h3 id="org4a5e354">Conflictos de Git</h3>
<div class="outline-text-3" id="text-org4a5e354">
<p>
Si tienes conflictos al sincronizar entre dispositivos:
</p>

<div class="org-src-container">
<pre class="src src-bash">pass git pull
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Si hay conflictos</span>
pass git mergetool
pass git commit
pass git push
</pre>
</div>
</div>
</div>
<div id="outline-container-org74ec746" class="outline-3">
<h3 id="org74ec746">Problemas de permisos</h3>
<div class="outline-text-3" id="text-org74ec746">
<p>
Si encuentras errores de permisos:
</p>

<div class="org-src-container">
<pre class="src src-bash">chmod 700 ~/.password-store
find ~/.password-store -type d -exec chmod 700 {} <span style="color: #a44185;">\;</span>
find ~/.password-store -type f -exec chmod 600 {} <span style="color: #a44185;">\;</span>
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orgd9df94e" class="outline-2">
<h2 id="orgd9df94e">Diagrama de Arquitectura y Flujo de Pass</h2>
</div>

<div id="outline-container-org0342255" class="outline-2">
<h2 id="org0342255">Leyenda y Explicación</h2>
<div class="outline-text-2" id="text-org0342255">
<p>
Este diagrama muestra la arquitectura y flujo de trabajo de Pass, el gestor de contraseñas estándar de Unix:
</p>
</div>
<div id="outline-container-org423de98" class="outline-3">
<h3 id="org423de98">Componentes principales</h3>
<div class="outline-text-3" id="text-org423de98">
<ul class="org-ul">
<li><b>Usuario</b>: Interactúa con Pass mediante comandos CLI</li>
<li><b>Pass CLI</b>: La interfaz de línea de comandos que procesa las operaciones</li>
<li><b>GPG</b>: Proporciona el cifrado/descifrado usando claves pública/privada</li>
<li><b>Almacén de Contraseñas</b>: Estructura jerárquica de archivos cifrados</li>
<li><b>Git</b>: Opcional, proporciona control de versiones y sincronización</li>
<li><b>Extensiones y Aplicaciones</b>: Amplían la funcionalidad base</li>
</ul>
</div>
</div>
<div id="outline-container-org5018ece" class="outline-3">
<h3 id="org5018ece">Flujos de trabajo principales</h3>
<div class="outline-text-3" id="text-org5018ece">
<ol class="org-ol">
<li><b>Almacenamiento de contraseñas:</b>
<ul class="org-ul">
<li>El usuario ejecuta un comando para insertar/generar contraseña</li>
<li>Pass llama a GPG para cifrar los datos con la clave pública</li>
<li>El archivo cifrado se guarda en la estructura del almacén</li>
<li>Si Git está habilitado, se crea un commit automáticamente</li>
</ul></li>

<li><b>Recuperación de contraseñas:</b>
<ul class="org-ul">
<li>El usuario solicita una contraseña específica</li>
<li>Pass localiza el archivo cifrado correspondiente</li>
<li>GPG descifra el contenido usando la clave privada</li>
<li>La contraseña se muestra o copia al portapapeles</li>
</ul></li>
</ol>
</div>
</div>
<div id="outline-container-orgf00749e" class="outline-3">
<h3 id="orgf00749e">Ventajas del diseño</h3>
<div class="outline-text-3" id="text-orgf00749e">
<ul class="org-ul">
<li><b>Seguridad</b>: Las contraseñas nunca se almacenan en texto plano</li>
<li><b>Flexibilidad</b>: Estructura jerárquica personalizable</li>
<li><b>Portabilidad</b>: Fácil sincronización entre dispositivos</li>
<li><b>Extensibilidad</b>: Sistema modular con múltiples extensiones</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgddffaf2" class="outline-2">
<h2 id="orgddffaf2">Notas técnicas adicionales</h2>
<div class="outline-text-2" id="text-orgddffaf2">
<ul class="org-ul">
<li>El diagrama PlantUML se puede renderizar en Emacs usando org-babel-execute-src-block</li>
<li>Para visualizar el diagrama, necesitas tener configurado PlantUML en tu entorno Emacs</li>
<li>Configuración recomendada para org-mode y PlantUML:</li>
</ul>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n para PlantUML en Emacs</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">plantuml-mode</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> plantuml-default-exec-mode 'jar)
  (<span style="color: #219fd5; font-style: italic;">setq</span> plantuml-jar-path <span style="color: #a44185;">"/ruta/a/plantuml.jar"</span>)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-plantuml-jar-path <span style="color: #a44185;">"/ruta/a/plantuml.jar"</span>))

(org-babel-do-load-languages
 'org-babel-load-languages
 '((plantuml . t)))
</pre>
</div>
</div>
</div>
<div id="outline-container-org292ac1c" class="outline-2">
<h2 id="org292ac1c">Conclusión</h2>
<div class="outline-text-2" id="text-org292ac1c">
<p>
<code>pass</code> es una herramienta poderosa y flexible para la gestión de contraseñas en entornos Unix/Linux. Su enfoque basado en la filosofía Unix lo hace ideal para usuarios que prefieren la línea de comandos y valoran la simplicidad, seguridad y extensibilidad.
</p>

<p>
Aunque puede tener una curva de aprendizaje inicial para usuarios no familiarizados con GPG o la línea de comandos, los beneficios a largo plazo en términos de seguridad y flexibilidad compensan ampliamente este esfuerzo inicial.
</p>

<p>
Al adoptar <code>pass</code>, estás eligiendo una solución de código abierto, bien mantenida y respetada en la comunidad de seguridad, que te da control total sobre tus datos más sensibles.
</p>
</div>
</div>
<div id="outline-container-org0813139" class="outline-2">
<h2 id="org0813139">Referencias y recursos adicionales</h2>
<div class="outline-text-2" id="text-org0813139">
<ul class="org-ul">
<li><a href="https://www.passwordstore.org/">Sitio web oficial de pass</a></li>
<li><a href="https://git.zx2c4.com/password-store/about/">Documentación completa</a></li>
<li><a href="https://github.com/topics/pass-extension">Extensiones disponibles en GitHub</a></li>
<li><a href="https://git.zx2c4.com/password-store/tree/contrib">Scripts y contribuciones de la comunidad</a></li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-pass.html">pass</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-password.html">password</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-contraseñas.html">contraseñas</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[pass]]></category>
  <category><![CDATA[password]]></category>
  <category><![CDATA[tutoriales]]></category>
  <category><![CDATA[contraseñas]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-21-instalaci%C3%B3n-y-uso-completo-de-pass:-el-gestor-de-contrase%C3%B1as-est%C3%A1ndar-de-unix.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-21-instalaci%C3%B3n-y-uso-completo-de-pass:-el-gestor-de-contrase%C3%B1as-est%C3%A1ndar-de-unix.html</guid>
  <pubDate>Mon, 21 Apr 2025 10:42:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Verificación en Dos Pasos (2FA): Seguridad Reforzada en Emacs con Esteroides]]></title>
  <description><![CDATA[
<div id="outline-container-orgab4d2fc" class="outline-2">
<h2 id="orgab4d2fc">Introducción a la Verificación en Dos Pasos (2FA)</h2>
<div class="outline-text-2" id="text-orgab4d2fc">
<p>
La verificación en dos pasos, también conocida como autenticación de dos factores (2FA), es un método de seguridad que requiere dos formas de identificación para acceder a una cuenta o sistema. En lugar de depender únicamente de una contraseña, 2FA agrega una capa adicional, como un código temporal enviado a un dispositivo o generado por una aplicación. En el contexto de Emacs, donde manejamos configuraciones sensibles o integramos servicios como correo o APIs, implementar 2FA puede ser crucial.
</p>


<figure id="org56038d1">
<img src="images/2fsa.png" alt="2fsa.png" width="50%">

</figure>
</div>
</div>
<div id="outline-container-orgc6242bc" class="outline-2">
<h2 id="orgc6242bc">¿Qué es 2FA y cómo funciona?</h2>
<div class="outline-text-2" id="text-orgc6242bc">
<p>
2FA combina dos de los siguientes factores:
</p>
<ol class="org-ol">
<li><b><b>Algo que sabes</b></b>: Una contraseña o PIN.</li>
<li><b><b>Algo que tienes</b></b>: Un dispositivo físico (smartphone, token físico) que recibe o genera un código.</li>
<li><b><b>Algo que eres</b></b>: Biometría (huella dactilar, reconocimiento facial), aunque menos común en 2FA estándar.</li>
</ol>

<p>
Por ejemplo, al iniciar sesión en un servicio, introduces tu contraseña (primer factor) y luego un código temporal enviado por SMS, correo, o generado por una app como Google Authenticator (segundo factor).
</p>
</div>
</div>
<div id="outline-container-org6d0f6de" class="outline-2">
<h2 id="org6d0f6de">Ventajas de 2FA</h2>
<div class="outline-text-2" id="text-org6d0f6de">
<ul class="org-ul">
<li><b><b>Mayor seguridad</b></b>: Incluso si alguien obtiene tu contraseña, no puede acceder sin el segundo factor.</li>
<li><b><b>Protección contra ataques comunes</b></b>: Reduce el riesgo de phishing, keyloggers o credenciales robadas.</li>
<li><b><b>Fácil integración en Emacs</b></b>: Herramientas como <code>auth-source</code> y paquetes como <code>oath</code> permiten gestionar tokens 2FA directamente desde Emacs.</li>
<li><b><b>Adaptabilidad</b></b>: Compatible con múltiples plataformas (correo, GitHub, servicios en la nube).</li>
</ul>
</div>
</div>
<div id="outline-container-org555c22f" class="outline-2">
<h2 id="org555c22f">Inconvenientes de 2FA</h2>
<div class="outline-text-2" id="text-org555c22f">
<ul class="org-ul">
<li><b><b>Dependencia de dispositivos</b></b>: Si pierdes tu smartphone o no tienes acceso al segundo factor, puedes quedar bloqueado.</li>
<li><b><b>Complejidad adicional</b></b>: Configurar y usar 2FA puede ser intimidante para usuarios no técnicos.</li>
<li><b><b>Tiempo</b></b>: Ingresar un segundo factor alarga el proceso de inicio de sesión.</li>
<li><b><b>Vulnerabilidades específicas</b></b>: Los ataques de ingeniería social (como SIM swapping) pueden comprometer métodos como SMS.</li>
</ul>
</div>
</div>
<div id="outline-container-org75d9544" class="outline-2">
<h2 id="org75d9544">Futuro de 2FA</h2>
<div class="outline-text-2" id="text-org75d9544">
<p>
El futuro de 2FA apunta hacia métodos más seguros y cómodos:
</p>
<ul class="org-ul">
<li><b><b>Claves de hardware</b></b>: Dispositivos como YubiKey o Titan Security Key están ganando popularidad por su resistencia a ataques remotos.</li>
<li><b><b>Autenticación sin contraseña</b></b>: Tecnologías como WebAuthn permiten usar dispositivos como autenticadores principales, eliminando la necesidad de contraseñas.</li>
<li><b><b>Biometría avanzada</b></b>: Aunque plantea preocupaciones de privacidad, la biometría podría integrarse más en 2FA.</li>
<li><b><b>Mejor integración en Emacs</b></b>: Paquetes como <code>pass</code> o <code>auth-source</code> podrían evolucionar para soportar claves de hardware o WebAuthn directamente.</li>
</ul>
</div>
</div>
<div id="outline-container-org58e7503" class="outline-2">
<h2 id="org58e7503">Diagrama del Proceso de Autenticación 2FA</h2>
<div class="outline-text-2" id="text-org58e7503">

<figure id="orgefcee64">
<img src="images/2fa-proceso.png" alt="2fa-proceso.png">

</figure>
</div>
</div>
<div id="outline-container-orgf270532" class="outline-2">
<h2 id="orgf270532">¿Qué hacer si no puedes recibir el segundo token?</h2>
<div class="outline-text-2" id="text-orgf270532">
<p>
Si no puedes recibir el segundo factor (por ejemplo, no tienes acceso a tu smartphone o SMS), existen alternativas:
</p>
<ol class="org-ol">
<li><b><b>Códigos de respaldo</b></b>: Muchos servicios ofrecen códigos de recuperación generados al activar 2FA. Guárdalos en un lugar seguro, como un administrador de contraseñas integrado en Emacs (<code>pass</code> o <code>password-store</code>).</li>
<li><b><b>Apps de autenticación offline</b></b>: Aplicaciones como FreeOTP o Aegis generan códigos sin necesidad de conexión a internet.</li>
<li><b><b>Claves de hardware</b></b>: Un dispositivo físico como YubiKey no depende de SMS ni smartphones.</li>
<li><b><b>Contacto con soporte</b></b>: Algunos servicios permiten recuperar la cuenta mediante verificación manual, aunque puede ser lento.</li>
<li><b><b>Configuración previa en Emacs</b></b>: Usa <code>auth-source</code> para almacenar credenciales de respaldo o scripts que automaticen la recuperación.</li>
</ol>
</div>
</div>
<div id="outline-container-org4b80e17" class="outline-2">
<h2 id="org4b80e17">Cómo implementar 2FA en Emacs</h2>
<div class="outline-text-2" id="text-org4b80e17">
<p>
Para usuarios de Emacs, integrar 2FA es sencillo con paquetes como:
</p>
<ul class="org-ul">
<li><b><b><code>oath</code></b></b>: Genera códigos TOTP (Time-based One-Time Password) desde Emacs.</li>
<li><b><b><code>pass</code></b></b>: Administra contraseñas y códigos de respaldo.</li>
<li><b><b><code>notmuch</code> o <code>mu4e</code></b></b>: Configura 2FA para cuentas de correo.</li>
</ul>

<p>
Ejemplo de uso con <code>oath</code>:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">require</span> '<span style="color: #AF005F;">oath</span>)
(oath-generate <span style="color: #005F00;">"tu-clave-secreta-aqui"</span>) <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Genera un c&#243;digo TOTP</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org3405208" class="outline-2">
<h2 id="org3405208">Conclusión</h2>
<div class="outline-text-2" id="text-org3405208">
<p>
La verificación en dos pasos es una herramienta esencial para proteger tus cuentas y flujos de trabajo en Emacs. Aunque tiene inconvenientes, las ventajas superan ampliamente los riesgos, especialmente en un mundo donde las amenazas cibernéticas son comunes. Configura 2FA, guarda códigos de respaldo y explora paquetes de Emacs para integrarlo en tu entorno. El futuro de 2FA promete ser más seguro y fluido, y Emacs estará listo para adaptarse.
</p>

<blockquote>
<p>
"La seguridad no es un destino, es un viaje. ¡Que Emacs sea tu compañero en él!" – Emacs con Esteroides
</p>
</blockquote>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-2fa.html">2FA</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-autenticación.html">autenticación</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">Emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[2FA]]></category>
  <category><![CDATA[autenticación]]></category>
  <category><![CDATA[Emacs]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-20-verificaci%C3%B3n-en-dos-pasos-(2fa):-seguridad-reforzada-en-emacs-con-esteroides.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-20-verificaci%C3%B3n-en-dos-pasos-(2fa):-seguridad-reforzada-en-emacs-con-esteroides.html</guid>
  <pubDate>Sun, 20 Apr 2025 03:18:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[VPNs: Protección, Privacidad y Alternativas en Linux]]></title>
  <description><![CDATA[
<div id="outline-container-org8eb79cc" class="outline-2">
<h2 id="org8eb79cc">¿Qué es una VPN y por qué deberías considerarla?</h2>
<div class="outline-text-2" id="text-org8eb79cc">
<p>
Las Redes Privadas Virtuales (VPN, por sus siglas en inglés) se han convertido en una herramienta esencial para cualquier usuario que valore su privacidad y seguridad en línea. Una VPN crea un túnel encriptado entre tu dispositivo y un servidor remoto, enmascarando tu dirección IP y cifrando todo tu tráfico de internet.
</p>

<p>
En un mundo donde la vigilancia masiva, los ataques cibernéticos y la recopilación indiscriminada de datos son cada vez más comunes, las VPNs se presentan como un escudo protector para tus actividades en línea.
</p>
</div>
</div>
<div id="outline-container-org36fb274" class="outline-2">
<h2 id="org36fb274">Diagrama explicativo: Funcionamiento de una VPN</h2>
<div class="outline-text-2" id="text-org36fb274">

<figure id="org92a43e0">
<img src="images/vpn_diagrama.png" alt="vpn_diagrama.png">

</figure>
</div>
</div>
<div id="outline-container-orgdd55dbb" class="outline-2">
<h2 id="orgdd55dbb">Ventajas de utilizar una VPN</h2>
<div class="outline-text-2" id="text-orgdd55dbb">
</div>
<div id="outline-container-org74ffa34" class="outline-3">
<h3 id="org74ffa34">Privacidad mejorada</h3>
<div class="outline-text-3" id="text-org74ffa34">
<ul class="org-ul">
<li>Oculta tu dirección IP real</li>
<li>Enmascara tu ubicación física</li>
<li>Dificulta el rastreo de tu actividad en línea</li>
<li>Reduce la recopilación de datos por parte de ISPs y sitios web</li>
</ul>
</div>
</div>
<div id="outline-container-orgd7763b1" class="outline-3">
<h3 id="orgd7763b1">Seguridad reforzada</h3>
<div class="outline-text-3" id="text-orgd7763b1">
<ul class="org-ul">
<li>Encriptación de datos (generalmente AES-256)</li>
<li>Protección en redes Wi-Fi públicas</li>
<li>Reducción del riesgo de ataques Man-in-the-Middle</li>
<li>Protección contra la inyección de anuncios maliciosos</li>
</ul>
</div>
</div>
<div id="outline-container-org76bf6bd" class="outline-3">
<h3 id="org76bf6bd">Libertad de acceso</h3>
<div class="outline-text-3" id="text-org76bf6bd">
<ul class="org-ul">
<li>Evasión de censura gubernamental</li>
<li>Acceso a contenido geo-restringido</li>
<li>Bypass de restricciones de red corporativas o educativas</li>
<li>Conexión a servicios bloqueados regionalmente</li>
</ul>
</div>
</div>
<div id="outline-container-org4224711" class="outline-3">
<h3 id="org4224711">Rendimiento de red</h3>
<div class="outline-text-3" id="text-org4224711">
<ul class="org-ul">
<li>Posible evasión de throttling por parte de los ISPs</li>
<li>Rutas de red potencialmente más optimizadas</li>
<li>Reducción de la latencia en ciertos casos específicos</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org566d453" class="outline-2">
<h2 id="org566d453">Inconvenientes y limitaciones</h2>
<div class="outline-text-2" id="text-org566d453">
</div>
<div id="outline-container-orgb1273ad" class="outline-3">
<h3 id="orgb1273ad">Impacto en la velocidad</h3>
<div class="outline-text-3" id="text-orgb1273ad">
<ul class="org-ul">
<li>Reducción general de la velocidad debido al procesamiento adicional</li>
<li>Latencia aumentada por la distancia física al servidor VPN</li>
<li>Posibles cuellos de botella en servidores congestionados</li>
<li>Rendimiento variable según la calidad del proveedor</li>
</ul>
</div>
</div>
<div id="outline-container-org070639b" class="outline-3">
<h3 id="org070639b">Consideraciones legales y de privacidad</h3>
<div class="outline-text-3" id="text-org070639b">
<ul class="org-ul">
<li>No todas las VPNs mantienen políticas estrictas de no-logs</li>
<li>Algunos proveedores pueden cooperar con autoridades</li>
<li>Jurisdicciones problemáticas (países con leyes de retención de datos)</li>
<li>Posible venta de datos de usuario en servicios gratuitos</li>
</ul>
</div>
</div>
<div id="outline-container-org69cb054" class="outline-3">
<h3 id="org69cb054">Limitaciones técnicas</h3>
<div class="outline-text-3" id="text-org69cb054">
<ul class="org-ul">
<li>No garantiza el anonimato completo</li>
<li>Algunas páginas pueden detectar y bloquear el tráfico VPN</li>
<li>Posibles filtraciones de DNS o WebRTC</li>
<li>Compatibilidad limitada con ciertos servicios o aplicaciones</li>
</ul>
</div>
</div>
<div id="outline-container-org9ef8dec" class="outline-3">
<h3 id="org9ef8dec">Costos y confiabilidad</h3>
<div class="outline-text-3" id="text-org9ef8dec">
<ul class="org-ul">
<li>Los servicios de calidad suelen ser de pago</li>
<li>Opciones gratuitas con limitaciones significativas</li>
<li>Dependencia del proveedor para mantener la seguridad</li>
<li>Posibles caídas de servicio</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org5acc0c4" class="outline-2">
<h2 id="org5acc0c4">Opciones gratuitas de VPN para Linux</h2>
<div class="outline-text-2" id="text-org5acc0c4">
<p>
A pesar de que las opciones de pago suelen ofrecer mejor servicio, existen alternativas gratuitas que pueden ser adecuadas para usuarios de Linux:
</p>
</div>
<div id="outline-container-orge755f62" class="outline-3">
<h3 id="orge755f62">ProtonVPN Free</h3>
<div class="outline-text-3" id="text-orge755f62">
<ul class="org-ul">
<li>Desarrollado por los creadores de ProtonMail</li>
<li>Sin límites de datos</li>
<li>Política estricta de no registro</li>
<li>Servidores en tres países</li>
<li>Instalación: <code>sudo apt install openvpn</code> y descarga de configuración desde su sitio web</li>
</ul>
</div>
</div>
<div id="outline-container-orgb363cd9" class="outline-3">
<h3 id="orgb363cd9">Windscribe</h3>
<div class="outline-text-3" id="text-orgb363cd9">
<ul class="org-ul">
<li>10GB de datos mensuales gratuitos</li>
<li>Servidores en 10 países en el plan gratuito</li>
<li>Cliente nativo para Linux</li>
<li>Instalación: Descargar el cliente desde su sitio web o usar OpenVPN</li>
</ul>
</div>
</div>
<div id="outline-container-orgd969b3d" class="outline-3">
<h3 id="orgd969b3d">Hide.me</h3>
<div class="outline-text-3" id="text-orgd969b3d">
<ul class="org-ul">
<li>10GB mensuales en la versión gratuita</li>
<li>5 ubicaciones de servidores</li>
<li>Sin registro de actividad</li>
<li>Configuración a través de NetworkManager con OpenVPN</li>
</ul>
</div>
</div>
<div id="outline-container-orgc145892" class="outline-3">
<h3 id="orgc145892">OpenVPN + VPNGate</h3>
<div class="outline-text-3" id="text-orgc145892">
<ul class="org-ul">
<li>Proyecto educativo de la Universidad de Tsukuba</li>
<li>Red de servidores voluntarios</li>
<li>Completamente gratuito</li>
<li>Instalación: <code>sudo apt install openvpn network-manager-openvpn-gnome</code></li>
</ul>
</div>
</div>
<div id="outline-container-orgf7ae0ea" class="outline-3">
<h3 id="orgf7ae0ea">WireGuard + Algo VPN</h3>
<div class="outline-text-3" id="text-orgf7ae0ea">
<ul class="org-ul">
<li>Opción auto-hospedada</li>
<li>Control total sobre tus datos</li>
<li>Requiere un servidor VPS (hay opciones económicas)</li>
<li>Instalación: <code>sudo apt install wireguard</code></li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org0a956b7" class="outline-2">
<h2 id="org0a956b7">Implementación práctica en Linux</h2>
<div class="outline-text-2" id="text-org0a956b7">
</div>
<div id="outline-container-orga45da91" class="outline-3">
<h3 id="orga45da91">Utilizando OpenVPN (método universal)</h3>
<div class="outline-text-3" id="text-orga45da91">
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Instalar OpenVPN</span>
sudo apt install openvpn network-manager-openvpn-gnome

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Para iniciar una conexi&#243;n desde terminal con archivo de configuraci&#243;n</span>
sudo openvpn --config /ruta/al/archivo.ovpn

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Para configurar desde NetworkManager</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">1. Abrir configuraci&#243;n de red</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">2. A&#241;adir nueva VPN -&gt; Importar desde archivo</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">3. Seleccionar el archivo .ovpn descargado</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org9603455" class="outline-3">
<h3 id="org9603455">Configurando WireGuard</h3>
<div class="outline-text-3" id="text-org9603455">
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Instalar WireGuard</span>
sudo apt install wireguard

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear archivo de configuraci&#243;n</span>
sudo nano /etc/wireguard/wg0.conf

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Contenido b&#225;sico de configuraci&#243;n:</span>
[Interface]
PrivateKey = TU_CLAVE_PRIVADA
Address = 10.0.0.2/24
DNS = 1.1.1.1, 1.0.0.1

[Peer]
PublicKey = CLAVE_PUBLICA_DEL_SERVIDOR
AllowedIPs = 0.0.0.0/0, ::/0
Endpoint = servidor.vpn.com:51820
PersistentKeepalive = 25

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Activar la conexi&#243;n</span>
sudo wg-quick up wg0

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Desactivar la conexi&#243;n</span>
sudo wg-quick down wg0
</pre>
</div>
</div>
</div>
<div id="outline-container-org5b28958" class="outline-3">
<h3 id="org5b28958">Verificación de la conexión VPN</h3>
<div class="outline-text-3" id="text-org5b28958">
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar tu IP p&#250;blica actual</span>
curl ifconfig.me

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar si hay fugas de DNS</span>
dig +short myip.opendns.com @resolver1.opendns.com

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar el estado de conexi&#243;n WireGuard</span>
sudo wg show

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ver las conexiones activas de OpenVPN</span>
sudo systemctl status openvpn*
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org20eb999" class="outline-2">
<h2 id="org20eb999">Recomendaciones para maximizar seguridad</h2>
<div class="outline-text-2" id="text-org20eb999">
<ol class="org-ol">
<li>Utiliza un kill switch para evitar filtración de datos si la VPN cae</li>
<li>Verifica regularmente que no haya fugas de DNS o WebRTC</li>
<li>Combina la VPN con el navegador Tor para mayor anonimato</li>
<li>Utiliza DNS encriptados (DoH o DoT) junto con tu VPN</li>
<li>Revisa las políticas de privacidad de tu proveedor VPN</li>
<li>Considera servicios que acepten pagos en criptomonedas</li>
<li>Usa la extensión uBlock Origin junto con tu VPN</li>
</ol>
</div>
</div>
<div id="outline-container-org019d76b" class="outline-2">
<h2 id="org019d76b">Casos de uso específicos</h2>
<div class="outline-text-2" id="text-org019d76b">
</div>
<div id="outline-container-orgba35208" class="outline-3">
<h3 id="orgba35208">Para desarrolladores</h3>
<div class="outline-text-3" id="text-orgba35208">
<ul class="org-ul">
<li>Acceso seguro a servidores remotos</li>
<li>Pruebas de aplicaciones en diferentes regiones</li>
<li>Bypass de restricciones de API geográficas</li>
<li>Protección al utilizar repositorios y paquetes</li>
</ul>
</div>
</div>
<div id="outline-container-orgae86c02" class="outline-3">
<h3 id="orgae86c02">Para usuarios generales</h3>
<div class="outline-text-3" id="text-orgae86c02">
<ul class="org-ul">
<li>Navegación segura en redes públicas</li>
<li>Protección frente a rastreo de ISPs</li>
<li>Acceso a contenido multimedia internacional</li>
<li>Descarga segura de archivos P2P</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org04d5344" class="outline-2">
<h2 id="org04d5344">Conclusión</h2>
<div class="outline-text-2" id="text-org04d5344">
<p>
Las VPNs representan una capa fundamental de protección en el panorama digital actual, especialmente para usuarios conscientes de la privacidad como los que utilizan Linux. Aunque no son una solución perfecta ni proporcionan anonimato absoluto, ofrecen beneficios sustanciales que superan sus limitaciones.
Si valoras tu privacidad pero tienes un presupuesto limitado, las opciones gratuitas mencionadas pueden ser un buen punto de partida. Sin embargo, para usuarios que requieran mayor rendimiento, variedad de servidores o características avanzadas, las soluciones de pago suelen ofrecer un mejor equilibrio.
Como usuarios de Emacs y Linux, tenemos la ventaja de contar con numerosas herramientas para implementar, automatizar y gestionar nuestras conexiones VPN, incluso integrándolas en nuestro flujo de trabajo con Org-mode o scripts personalizados.
</p>

<p>
¿Has tenido experiencia con alguna VPN específica en Linux? ¿Tienes alguna configuración especial que quieras compartir? Déjanos tus comentarios.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-vpn.html">vpn</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-privacidad.html">privacidad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-open.html">open</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-source.html">source</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[vpn]]></category>
  <category><![CDATA[privacidad]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[open]]></category>
  <category><![CDATA[source]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-18--vpns:-protecci%C3%B3n,-privacidad-y-alternativas-en-linux.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-18--vpns:-protecci%C3%B3n,-privacidad-y-alternativas-en-linux.html</guid>
  <pubDate>Fri, 18 Apr 2025 10:20:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Monitorización rápida de vulnerabilidades en Ubuntu desde Emacs (i)]]></title>
  <description><![CDATA[
<div id="outline-container-org58c6a89" class="outline-2">
<h2 id="org58c6a89">Introducción</h2>
<div class="outline-text-2" id="text-org58c6a89">
<p>
¿Quieres una forma sencilla y rápida de hacer un chequeo de seguridad a tu sistema desde tu entorno Emacs? Aquí tienes un script en bash que podrás ejecutar desde la terminal o Emacs usando `shell-command`, y que además genera un log y un archivo `.org` con los resultados.
</p>
</div>
</div>
<div id="outline-container-orgf561e67" class="outline-2">
<h2 id="orgf561e67">PlantUML Diagram for "scan<sub>seguridad.sh</sub>" Workflow</h2>
<div class="outline-text-2" id="text-orgf561e67">
<p>
This diagram represents the sequence of operations performed by the `scan<sub>seguridad.sh</sub>` script to monitor system security and generate logs and Org Mode reports.
</p>


<figure id="org82693ad">
<img src="images/scan_seguridad_diagram.png" alt="scan_seguridad_diagram.png" width="500px" height="500px">

</figure>
</div>
</div>
<div id="outline-container-org0ea2fb0" class="outline-2">
<h2 id="org0ea2fb0">Herramientas necesarias</h2>
<div class="outline-text-2" id="text-org0ea2fb0">
<p>
Este script usará:
</p>

<ul class="org-ul">
<li>`nmap` (para escanear puertos locales)</li>
<li>`netstat` o `ss` (interfaces y conexiones)</li>
<li>`curl` (para detectar IP pública y posibles amenazas)</li>
<li>`whois`, `ip`, `free`, `top` o `ps`</li>
<li>`chkrootkit` o `rkhunter` (si los tienes instalados)</li>
<li>`fail2ban-client` (opcional)</li>
</ul>

<p>
Si alguna herramienta no está instalada, el script la sugerirá automáticamente.
</p>

<p>
Puedes instalar las básicas con:
</p>

<div class="org-src-container">
<pre class="src src-shell">sudo apt update &amp;&amp; sudo apt install nmap curl whois net-tools chkrootkit -y
</pre>
</div>
</div>
</div>
<div id="outline-container-org6b259eb" class="outline-2">
<h2 id="org6b259eb">🚀 Script de análisis rápido</h2>
<div class="outline-text-2" id="text-org6b259eb">
<p>
Guarda este archivo como <code>scan_seguridad.sh</code> y ejecútalo como superusuario:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #1857a4;">LOGFILE</span>=<span style="color: #a44185;">"$HOME/seguridad/logs/seguridad_$(</span><span style="color: #219fd5; font-weight: bold;">date +%F_%H%M</span><span style="color: #a44185;">).log"</span>
<span style="color: #1857a4;">ORGFILE</span>=<span style="color: #a44185;">"$HOME/seguridad/reportes/seguridad_$(</span><span style="color: #219fd5; font-weight: bold;">date +%F_%H%M</span><span style="color: #a44185;">).org"</span>
mkdir -p <span style="color: #a44185;">"$(</span><span style="color: #219fd5; font-weight: bold;">dirname "$LOGFILE"</span><span style="color: #a44185;">)"</span>
mkdir -p <span style="color: #a44185;">"$(</span><span style="color: #219fd5; font-weight: bold;">dirname "$ORGFILE"</span><span style="color: #a44185;">)"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"* Informe de seguridad generado el $(</span><span style="color: #219fd5; font-weight: bold;">date</span><span style="color: #a44185;">)"</span> &gt; <span style="color: #a44185;">"$ORGFILE"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"------------------------------------------"</span> &gt; <span style="color: #a44185;">"$LOGFILE"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#129504; Memoria y carga del sistema"</span> | tee -a <span style="color: #a44185;">"$ORGFILE"</span> &gt;&gt; <span style="color: #a44185;">"$LOGFILE"</span>
free -h | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
uptime | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#127760; Interfaces de red activas"</span> | tee -a <span style="color: #a44185;">"$ORGFILE"</span> &gt;&gt; <span style="color: #a44185;">"$LOGFILE"</span>
ip addr show | grep inet | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#128272; Puertos abiertos (localhost)"</span> | tee -a <span style="color: #a44185;">"$ORGFILE"</span> &gt;&gt; <span style="color: #a44185;">"$LOGFILE"</span>
nmap -sT -p- 127.0.0.1 | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#128373;&#65039; Conexiones activas sospechosas"</span> | tee -a <span style="color: #a44185;">"$ORGFILE"</span> &gt;&gt; <span style="color: #a44185;">"$LOGFILE"</span>
ss -tunap | grep -v <span style="color: #a44185;">"127.0.0.1"</span> | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#128680; IP p&#250;blica y an&#225;lisis b&#225;sico"</span> | tee -a <span style="color: #a44185;">"$ORGFILE"</span> &gt;&gt; <span style="color: #a44185;">"$LOGFILE"</span>
<span style="color: #1857a4;">IP</span>=$(<span style="color: #219fd5; font-weight: bold;">curl -s ifconfig.me</span>)
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"IP p&#250;blica: $IP"</span> | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
whois <span style="color: #a44185;">"$IP"</span> | grep -iE <span style="color: #a44185;">"org|country|name"</span> | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#128269; An&#225;lisis rootkits (chkrootkit si disponible)"</span> | tee -a <span style="color: #a44185;">"$ORGFILE"</span> &gt;&gt; <span style="color: #a44185;">"$LOGFILE"</span>
<span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v chkrootkit &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    chkrootkit | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
<span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"chkrootkit no instalado. Inst&#225;lalo con: sudo apt install chkrootkit"</span> | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#128202; Procesos sospechosos (m&#225;s consumo CPU)"</span> | tee -a <span style="color: #a44185;">"$ORGFILE"</span> &gt;&gt; <span style="color: #a44185;">"$LOGFILE"</span>
ps aux --sort=-%cpu | head -n 10 | tee -a <span style="color: #a44185;">"$LOGFILE"</span> | sed <span style="color: #a44185;">'s/^/    /'</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** &#9989; Recomendaciones generales"</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Verifica puertos abiertos innecesarios"</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Usa firewalld o ufw para cerrar conexiones"</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Revisa procesos con consumo elevado"</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Instala y configura fail2ban si es un servidor expuesto"</span> &gt;&gt; <span style="color: #a44185;">"$ORGFILE"</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgbb93516" class="outline-2">
<h2 id="orgbb93516">✅ Cómo usarlo desde Emacs</h2>
<div class="outline-text-2" id="text-orgbb93516">
<p>
Puedes ejecutar el script directamente desde Emacs con:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(shell-command <span style="color: #a44185;">"bash ~/scan_seguridad.sh"</span>)
</pre>
</div>

<p>
O también añadirlo a una función interactiva personalizada.
</p>
</div>
</div>
<div id="outline-container-org68d470d" class="outline-2">
<h2 id="org68d470d">📂 Logs generados</h2>
<div class="outline-text-2" id="text-org68d470d">
<ul class="org-ul">
<li>Archivo `.log` con todos los comandos ejecutados.</li>
<li>Archivo `.org` con formato limpio para visualizar y exportar desde Org Mode.</li>
</ul>
</div>
</div>
<div id="outline-container-org682b3cf" class="outline-2">
<h2 id="org682b3cf">🚧 Futuras mejoras</h2>
<div class="outline-text-2" id="text-org682b3cf">
<ul class="org-ul">
<li>Clasificación automática de amenazas</li>
<li>Exportación a HTML para informe web</li>
<li>Envío por correo o Telegram</li>
</ul>

<p>
¡La seguridad también se hace desde Emacs! 😉
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-orgmode.html">orgmode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-script.html">script</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[orgmode]]></category>
  <category><![CDATA[script]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-17--monitorizaci-n-r-pida-de-vulnerabilidades-en-ubuntu-desde-emacs-i-.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-17--monitorizaci-n-r-pida-de-vulnerabilidades-en-ubuntu-desde-emacs-i-.html</guid>
  <pubDate>Thu, 17 Apr 2025 06:46:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Fortaleciendo la Seguridad Informática con Snort y AIDE: Guía Completa]]></title>
  <description><![CDATA[
<div id="outline-container-orgc52fbcf" class="outline-2">
<h2 id="orgc52fbcf">Introducción</h2>
<div class="outline-text-2" id="text-orgc52fbcf">
<p>
La seguridad informática es un aspecto fundamental para cualquier sistema, especialmente en la era digital actual donde las amenazas evolucionan constantemente. En esta guía detallada, exploraremos dos herramientas esenciales para complementar tu estrategia de seguridad: <b>Snort</b> y <b>AIDE</b>.
</p>

<ul class="org-ul">
<li><b>Snort</b>: Un sistema de detección y prevención de intrusiones (IDS/IPS) basado en red que analiza el tráfico en tiempo real para identificar patrones sospechosos.</li>
<li><b>AIDE</b> (Advanced Intrusion Detection Environment): Una herramienta de detección de intrusiones basada en host que monitorea la integridad de los archivos del sistema.</li>
</ul>

<p>
La combinación de estas herramientas proporciona una defensa en profundidad, permitiéndote detectar tanto intrusiones a nivel de red como modificaciones no autorizadas en tus archivos del sistema.
</p>


<figure id="org611842f">
<img src="images/arquitectura-seguridad.png" alt="arquitectura-seguridad.png">

</figure>
</div>
</div>
<div id="outline-container-org55d4434" class="outline-2">
<h2 id="org55d4434">Parte 1: Instalación y Configuración de Snort</h2>
<div class="outline-text-2" id="text-org55d4434">
</div>
<div id="outline-container-orge3efe91" class="outline-3">
<h3 id="orge3efe91">¿Qué es Snort?</h3>
<div class="outline-text-3" id="text-orge3efe91">
<p>
Snort es un sistema de detección y prevención de intrusiones (IDS/IPS) de código abierto, creado por Martin Roesch en 1998. Esta poderosa herramienta analiza el tráfico de red en tiempo real, comparándolo con una base de datos de reglas para identificar posibles ataques, escaneos, exploits y otras actividades maliciosas.
</p>

<p>
Snort puede funcionar en tres modos principales:
</p>
<ol class="org-ol">
<li><b>Modo Sniffer</b>: Simplemente lee los paquetes de la red y los muestra en pantalla.</li>
<li><b>Modo Registro de Paquetes</b>: Guarda los paquetes en el disco para análisis posterior.</li>
<li><b>Modo NIDS</b> (Network Intrusion Detection System): Analiza el tráfico de red en busca de coincidencias con patrones predefinidos.</li>
<li><b>Modo NIPS</b> (Network Intrusion Prevention System): Además de detectar, puede bloquear activamente tráfico malicioso.</li>
</ol>
</div>
</div>
<div id="outline-container-org4a543f2" class="outline-3">
<h3 id="org4a543f2">Requisitos Previos</h3>
<div class="outline-text-3" id="text-org4a543f2">
<p>
Antes de instalar Snort, asegúrate de contar con:
</p>

<ul class="org-ul">
<li>Sistema operativo Linux (esta guía usa Ubuntu/Debian, pero puede adaptarse)</li>
<li>Privilegios de administrador (sudo/root)</li>
<li>Conexión a Internet para descargar paquetes</li>
<li>Libpcap (biblioteca para captura de paquetes)</li>
<li>DAQ (Data Acquisition Library)</li>
</ul>
</div>
</div>
<div id="outline-container-org5fb90e7" class="outline-3">
<h3 id="org5fb90e7">Instalación de Snort en Debian/Ubuntu</h3>
<div class="outline-text-3" id="text-org5fb90e7">
<p>
Primero, instalemos las dependencias necesarias:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt update
sudo apt install -y build-essential libpcap-dev libpcre3-dev libnet1-dev <span style="color: #a44185;">\</span>
zlib1g-dev luajit hwloc libdnet-dev libdumbnet-dev bison flex liblzma-dev <span style="color: #a44185;">\</span>
openssl libssl-dev libnghttp2-dev libluajit-5.1-dev pkg-config libhwloc-dev <span style="color: #a44185;">\</span>
cmake cpputest
</pre>
</div>

<p>
A continuación, instalamos Snort desde los repositorios (aunque también veremos cómo compilarlo desde el código fuente):
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt install -y snort
</pre>
</div>

<p>
Durante la instalación, se te pedirá configurar tu red local. Introduce el rango de direcciones de tu red (por ejemplo, 192.168.1.0/24).
</p>
</div>
</div>
<div id="outline-container-org671a1aa" class="outline-3">
<h3 id="org671a1aa">Instalación desde el código fuente (alternativa)</h3>
<div class="outline-text-3" id="text-org671a1aa">
<p>
Para tener la versión más reciente, puedes compilar Snort desde el código fuente:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Descargar y compilar DAQ</span>
<span style="color: #dc3eb7;">cd</span> ~/Downloads
wget https://github.com/snort3/libdaq/archive/refs/tags/v3.0.12.tar.gz
tar -xzvf v3.0.12.tar.gz
<span style="color: #dc3eb7;">cd</span> libdaq-3.0.12/
./bootstrap
./configure
make
sudo make install

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Descargar y compilar Snort</span>
<span style="color: #dc3eb7;">cd</span> ~/Downloads
wget https://github.com/snort3/snort3/archive/refs/tags/3.1.76.0.tar.gz
tar -xzvf 3.1.76.0.tar.gz
<span style="color: #dc3eb7;">cd</span> snort3-3.1.76.0/
./configure_cmake.sh --prefix=/usr/local --enable-tcmalloc
<span style="color: #dc3eb7;">cd</span> build
make
sudo make install
sudo ldconfig

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar la instalaci&#243;n</span>
snort -V
</pre>
</div>
</div>
</div>
<div id="outline-container-org22a5aac" class="outline-3">
<h3 id="org22a5aac">Configuración Básica de Snort</h3>
<div class="outline-text-3" id="text-org22a5aac">
<p>
El archivo principal de configuración se encuentra en `/etc/snort/snort.conf` (o en `/usr/local/etc/snort/snort.conf` si compilaste desde el código fuente). Vamos a realizar algunas configuraciones básicas:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo cp /etc/snort/snort.conf /etc/snort/snort.conf.bak  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear backup</span>
sudo nano /etc/snort/snort.conf
</pre>
</div>

<p>
Dentro del archivo, busca y modifica las siguientes secciones:
</p>

<p>
<b>Configuración de red</b>: Define tu red local para que Snort pueda diferenciar entre tráfico interno y externo.
</p>
<div class="org-src-container">
<pre class="src src-bash">ipvar HOME_NET 192.168.1.0/24
ipvar EXTERNAL_NET !$<span style="color: #1857a4;">HOME_NET</span>
</pre>
</div>

<p>
<b>Rutas de reglas</b>: Asegúrate de que las rutas a los archivos de reglas sean correctas.
</p>
<div class="org-src-container">
<pre class="src src-bash">var RULE_PATH /etc/snort/rules
var SO_RULE_PATH /etc/snort/so_rules
var PREPROC_RULE_PATH /etc/snort/preproc_rules
</pre>
</div>

<p>
<b>Preprocesadores</b>: Habilita los preprocesadores necesarios según tus necesidades:
</p>
<div class="org-src-container">
<pre class="src src-bash">preprocessor frag3_global: max_frags 65536
preprocessor frag3_engine: policy windows detect_anomalies
preprocessor stream5_global: track_tcp yes, track_udp yes
</pre>
</div>

<p>
<b>Reglas</b>: Descomenta las reglas que deseas utilizar:
</p>
<div class="org-src-container">
<pre class="src src-bash">include $<span style="color: #1857a4;">RULE_PATH</span>/local.rules
include $<span style="color: #1857a4;">RULE_PATH</span>/bad-traffic.rules
include $<span style="color: #1857a4;">RULE_PATH</span>/exploit.rules
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">... otras reglas seg&#250;n necesidades ...</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org3ca258b" class="outline-3">
<h3 id="org3ca258b">Creación de Reglas Personalizadas</h3>
<div class="outline-text-3" id="text-org3ca258b">
<p>
Las reglas de Snort son extremadamente poderosas y flexibles. Vamos a crear algunas reglas personalizadas en el archivo `/etc/snort/rules/local.rules`:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/snort/rules/local.rules
</pre>
</div>

<p>
Añade estas reglas de ejemplo:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Alerta por escaneo de puertos</span>
alert tcp any any -&gt; $<span style="color: #1857a4;">HOME_NET</span> any (msg:<span style="color: #a44185;">"Posible escaneo de puertos TCP"</span>; flags:S; threshold: type threshold, track by_src, count 50, seconds 60; sid:1000001; rev:1;)
</pre>
</div>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Alerta por intentos de acceso SSH m&#250;ltiples</span>
alert tcp any any -&gt; $<span style="color: #1857a4;">HOME_NET</span> 22 (msg:<span style="color: #a44185;">"Posible ataque de fuerza bruta SSH"</span>; flow:to_server; threshold: type threshold, track by_src, count 5, seconds 60; sid:1000002; rev:1;)
</pre>
</div>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Alerta por acceso a la p&#225;gina de administraci&#243;n</span>
alert tcp any any -&gt; $<span style="color: #1857a4;">HOME_NET</span> 80 (msg:<span style="color: #a44185;">"Acceso a panel de administraci&#243;n"</span>; content:<span style="color: #a44185;">"GET /admin"</span>; nocase; sid:1000003; rev:1;)
</pre>
</div>
</div>
</div>
<div id="outline-container-orgcb4c5a9" class="outline-3">
<h3 id="orgcb4c5a9">Verificación de la Configuración</h3>
<div class="outline-text-3" id="text-orgcb4c5a9">
<p>
Antes de iniciar Snort, verifica que tu configuración no tenga errores:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo snort -T -c /etc/snort/snort.conf
</pre>
</div>

<p>
Si todo está correcto, deberías ver "Snort successfully validated the configuration!"
</p>
</div>
</div>
<div id="outline-container-org92320c0" class="outline-3">
<h3 id="org92320c0">Ejecución de Snort</h3>
<div class="outline-text-3" id="text-org92320c0">
<p>
Para ejecutar Snort en modo IDS:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo snort -A console -q -c /etc/snort/snort.conf -D
</pre>
</div>

<p>
Opciones comunes:
</p>
<ul class="org-ul">
<li>`-A console`: Muestra las alertas en la consola</li>
<li>`-q`: Modo silencioso</li>
<li>`-c`: Ruta al archivo de configuración</li>
<li>`-D`: Ejecutar como demonio</li>
</ul>

<p>
Para ejecutar Snort en modo IPS (usando NFQ):
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo snort -c /etc/snort/snort.conf -Q --daq nfq --daq-var <span style="color: #1857a4;">queue</span>=1
</pre>
</div>
</div>
</div>
<div id="outline-container-orgdec95e9" class="outline-3">
<h3 id="orgdec95e9">Configuración como Servicio</h3>
<div class="outline-text-3" id="text-orgdec95e9">
<p>
Para que Snort se inicie automáticamente al arrancar el sistema:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/systemd/system/snort.service
</pre>
</div>

<p>
Añade el siguiente contenido:
</p>

<div class="org-src-container">
<pre class="src src-bash">[Unit]
<span style="color: #1857a4;">Description</span>=Snort NIDS Daemon
<span style="color: #1857a4;">After</span>=network.target

[Service]
<span style="color: #1857a4;">Type</span>=simple
<span style="color: #1857a4;">ExecStart</span>=/usr/sbin/snort -c /etc/snort/snort.conf -D
<span style="color: #1857a4;">Restart</span>=on-failure

[Install]
<span style="color: #1857a4;">WantedBy</span>=multi-user.target
</pre>
</div>


<p>
Habilita e inicia el servicio:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo systemctl enable snort.service
sudo systemctl start snort.service
sudo systemctl status snort.service
</pre>
</div>
</div>
</div>
<div id="outline-container-orgdbb5052" class="outline-3">
<h3 id="orgdbb5052">Visualización con diagrama PlantUML</h3>
<div class="outline-text-3" id="text-orgdbb5052">
<p>
El flujo de trabajo de Snort puede representarse visualmente:
</p>


<figure id="org02ef8d8">
<img src="images/flujo-snort.png" alt="flujo-snort.png">

</figure>
</div>
</div>
</div>
<div id="outline-container-orgb698de7" class="outline-2">
<h2 id="orgb698de7">Parte 2: Instalación y Configuración de AIDE</h2>
<div class="outline-text-2" id="text-orgb698de7">
</div>
<div id="outline-container-org8fbecb6" class="outline-3">
<h3 id="org8fbecb6">¿Qué es AIDE?</h3>
<div class="outline-text-3" id="text-org8fbecb6">
<p>
AIDE (Advanced Intrusion Detection Environment) es una herramienta de detección de intrusiones basada en host que verifica la integridad de los archivos del sistema. Funciona creando una base de datos de los atributos de los archivos y directorios, como permisos, timestamps, checksums y contenido. Posteriormente, puede detectar cualquier cambio no autorizado en estos atributos.
</p>

<p>
AIDE es especialmente útil para:
</p>
<ul class="org-ul">
<li>Detectar modificaciones no autorizadas en archivos críticos del sistema</li>
<li>Identificar instalaciones de rootkits o backdoors</li>
<li>Verificar la integridad del sistema tras un incidente de seguridad</li>
<li>Cumplir con requisitos de auditoría y conformidad</li>
</ul>
</div>
</div>
<div id="outline-container-orgadf285a" class="outline-3">
<h3 id="orgadf285a">Instalación de AIDE</h3>
<div class="outline-text-3" id="text-orgadf285a">
<p>
En sistemas Debian/Ubuntu:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt update
sudo apt install -y aide
</pre>
</div>

<p>
En sistemas basados en Red Hat (RHEL, CentOS, Fedora):
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo yum install -y aide
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">o con dnf</span>
sudo dnf install -y aide
</pre>
</div>
</div>
</div>
<div id="outline-container-org1e4fd00" class="outline-3">
<h3 id="org1e4fd00">Configuración Básica de AIDE</h3>
<div class="outline-text-3" id="text-org1e4fd00">
<p>
El archivo principal de configuración se encuentra en `/etc/aide/aide.conf`. Vamos a realizar una configuración básica:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo cp /etc/aide/aide.conf /etc/aide/aide.conf.bak  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear backup</span>
sudo nano /etc/aide/aide.conf
</pre>
</div>

<p>
El archivo contiene definiciones de grupos de reglas y los directorios/archivos a los que aplicarlas. Aquí hay algunos ejemplos importantes:
</p>

<div class="org-src-container">
<pre class="src src-bash">
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Definici&#243;n de grupos de reglas</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">NORMAL = checksums + atributos de archivo + permisos</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">DATAONLY = solo checksums</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">LOGS = como NORMAL pero permitiendo cambios en el tama&#241;o</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">...</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Directorios/archivos a monitorear</span>
/etc NORMAL
/bin NORMAL
/sbin NORMAL
/usr NORMAL
/boot NORMAL
/root NORMAL
<span style="color: #219fd5; font-weight: bold;">!</span>/var/log/.*  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Excluir logs - pueden cambiar frecuentemente</span>
<span style="color: #219fd5; font-weight: bold;">!</span>/var/spool/.* <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Excluir spool</span>
<span style="color: #219fd5; font-weight: bold;">!</span>/var/tmp/.* <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Excluir temporales</span>

</pre>
</div>
</div>
</div>
<div id="outline-container-orgf7d9ce6" class="outline-3">
<h3 id="orgf7d9ce6">Personalización de la Configuración</h3>
<div class="outline-text-3" id="text-orgf7d9ce6">
<p>
Vamos a personalizar la configuración para adaptarla a nuestras necesidades:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/aide/aide.conf
</pre>
</div>

<p>
Añade o modifica estas líneas según tus necesidades:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Definici&#243;n personalizada de grupos de reglas</span>
MyGroup = sha256+ftype+p+u+g+n+acl+xattrs

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Directorios espec&#237;ficos a monitorear con mayor atenci&#243;n</span>
/etc/ssh MyGroup
/etc/pam.d MyGroup
/etc/sudoers MyGroup
/etc/shadow MyGroup

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Archivos de configuraci&#243;n de Snort</span>
/etc/snort MyGroup

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Excluir directorios que cambian frecuentemente</span>
<span style="color: #219fd5; font-weight: bold;">!</span>/var/lib/mysql/.*
<span style="color: #219fd5; font-weight: bold;">!</span>/home/usuario/descargas/.*
</pre>
</div>
</div>
</div>
<div id="outline-container-org1c1ee8b" class="outline-3">
<h3 id="org1c1ee8b">Inicialización de la Base de Datos de AIDE</h3>
<div class="outline-text-3" id="text-org1c1ee8b">
<p>
Antes de usar AIDE, necesitamos inicializar su base de datos:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo aideinit
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">o alternativamente</span>
sudo aide --init
</pre>
</div>

<p>
Esto puede tomar tiempo dependiendo del tamaño de tu sistema. Una vez completado, la base de datos se creará en un archivo temporal (generalmente `/var/lib/aide/aide.db.new`). Necesitamos moverla al lugar correcto:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db
</pre>
</div>
</div>
</div>
<div id="outline-container-orgeec7e3a" class="outline-3">
<h3 id="orgeec7e3a">Ejecución Manual de Verificaciones</h3>
<div class="outline-text-3" id="text-orgeec7e3a">
<p>
Para ejecutar una verificación manualmente:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo aide --check
</pre>
</div>

<p>
Este comando comparará el estado actual del sistema con la base de datos almacenada y mostrará cualquier discrepancia.
</p>
</div>
</div>
<div id="outline-container-org0f8d893" class="outline-3">
<h3 id="org0f8d893">Actualización de la Base de Datos</h3>
<div class="outline-text-3" id="text-org0f8d893">
<p>
Después de realizar cambios legítimos en el sistema (como actualizaciones de software), debemos actualizar la base de datos de AIDE:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo aide --update
sudo mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db
</pre>
</div>
</div>
</div>
<div id="outline-container-org154d214" class="outline-3">
<h3 id="org154d214">Automatización con Cron</h3>
<div class="outline-text-3" id="text-org154d214">
<p>
Para automatizar las verificaciones regulares, configuremos una tarea cron:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/cron.daily/aide-check
</pre>
</div>

<p>
Añade este contenido:
</p>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificaci&#243;n diaria con AIDE</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ruta para almacenar informes</span>
<span style="color: #1857a4;">REPORT_DIR</span>=<span style="color: #a44185;">"/var/log/aide"</span>
<span style="color: #1857a4;">REPORT_FILE</span>=<span style="color: #a44185;">"$REPORT_DIR/aide-$(</span><span style="color: #219fd5; font-weight: bold;">date +%Y%m%d-%H%M%S</span><span style="color: #a44185;">).log"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear directorio si no existe</span>
mkdir -p $<span style="color: #1857a4;">REPORT_DIR</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar verificaci&#243;n</span>
/usr/bin/aide --check &gt; $<span style="color: #1857a4;">REPORT_FILE</span> 2&gt;&amp;1

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Si hay cambios, enviar por correo (opcional)</span>
<span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">?</span> -ne 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Se detectaron cambios en el sistema. Ver $REPORT_FILE para detalles."</span> | <span style="color: #a44185;">\</span>
    mail -s <span style="color: #a44185;">"Alerta de AIDE: cambios detectados"</span> admin@example.com
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #219fd5; font-style: italic;">exit</span> 0
</pre>
</div>

<p>
Haz el script ejecutable:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/cron.daily/aide-check
</pre>
</div>

<p>
También es buena práctica actualizar la base de datos periódicamente:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/cron.weekly/aide-update
</pre>
</div>

<p>
Añade este contenido:
</p>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Actualizaci&#243;n semanal de la base de datos de AIDE</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar actualizaci&#243;n</span>
/usr/bin/aide --update

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Mover la nueva base de datos</span>
mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db

<span style="color: #219fd5; font-style: italic;">exit</span> 0
</pre>
</div>

<p>
Haz el script ejecutable:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/cron.weekly/aide-update
</pre>
</div>
</div>
</div>
<div id="outline-container-orgbd39a86" class="outline-3">
<h3 id="orgbd39a86">Visualización con diagrama PlantUML</h3>
<div class="outline-text-3" id="text-orgbd39a86">
<p>
El flujo de trabajo de AIDE puede representarse visualmente:
</p>


<figure id="orgf20e6b4">
<img src="images/flujo-aide.png" alt="flujo-aide.png">

</figure>
</div>
</div>
</div>
<div id="outline-container-org22551e4" class="outline-2">
<h2 id="org22551e4">Parte 3: Integración de Snort y AIDE para una Defensa Completa</h2>
<div class="outline-text-2" id="text-org22551e4">
</div>
<div id="outline-container-orgc01f187" class="outline-3">
<h3 id="orgc01f187">Estrategia de Defensa en Profundidad</h3>
<div class="outline-text-3" id="text-orgc01f187">
<p>
La combinación de Snort y AIDE proporciona una defensa en profundidad para tu sistema:
</p>

<ol class="org-ol">
<li><b>Snort</b> actúa como primera línea de defensa, monitoreando el tráfico de red y detectando posibles intentos de intrusión antes de que lleguen a comprometer el sistema.</li>

<li><b>AIDE</b> funciona como última línea de defensa, verificando si algún archivo del sistema ha sido modificado, lo que indicaría una posible intrusión exitosa.</li>
</ol>

<p>
Esta estrategia aplica el principio de defensa en profundidad: múltiples capas de seguridad que se complementan para proteger tus sistemas.
</p>
</div>
</div>
<div id="outline-container-orgf6e7931" class="outline-3">
<h3 id="orgf6e7931">Integración a Nivel de Alertas</h3>
<div class="outline-text-3" id="text-orgf6e7931">
<p>
Podemos integrar las alertas de ambas herramientas para tener una vista unificada de posibles incidentes de seguridad:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/aide/aide.sh
</pre>
</div>

<p>
Crea un script que combine los resultados:
</p>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Script para integrar las alertas de Snort y AIDE</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Directorios de logs</span>
<span style="color: #1857a4;">SNORT_LOG</span>=<span style="color: #a44185;">"/var/log/snort/alert"</span>
<span style="color: #1857a4;">AIDE_LOG</span>=<span style="color: #a44185;">"/var/log/aide/aide-$(</span><span style="color: #219fd5; font-weight: bold;">date +%Y%m%d</span><span style="color: #a44185;">).log"</span>
<span style="color: #1857a4;">COMBINED_LOG</span>=<span style="color: #a44185;">"/var/log/security/combined-$(</span><span style="color: #219fd5; font-weight: bold;">date +%Y%m%d</span><span style="color: #a44185;">).log"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear directorio si no existe</span>
mkdir -p /var/log/security

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar verificaci&#243;n de AIDE</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Ejecutando verificaci&#243;n de AIDE..."</span> &gt; $<span style="color: #1857a4;">COMBINED_LOG</span>
/usr/bin/aide --check &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span> 2&gt;&amp;1
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">""</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">A&#241;adir &#250;ltimas alertas de Snort</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#218;ltimas alertas de Snort:"</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>
tail -n 50 $<span style="color: #1857a4;">SNORT_LOG</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">""</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Analizar para detectar correlaciones</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"An&#225;lisis de correlaci&#243;n:"</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>
grep -i <span style="color: #a44185;">"modified"</span> $<span style="color: #1857a4;">AIDE_LOG</span> &gt; /tmp/aide_modified.tmp
<span style="color: #219fd5; font-style: italic;">while </span><span style="color: #dc3eb7;">read</span> line; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">file</span>=$(<span style="color: #219fd5; font-weight: bold;">echo $line | awk '{print $2}'</span>)
    grep -i <span style="color: #a44185;">"$file"</span> $<span style="color: #1857a4;">SNORT_LOG</span> &gt;&gt; $<span style="color: #1857a4;">COMBINED_LOG</span>
<span style="color: #219fd5; font-style: italic;">done</span> &lt; /tmp/aide_modified.tmp

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Enviar informe (opcional)</span>
cat $<span style="color: #1857a4;">COMBINED_LOG</span> | mail -s <span style="color: #a44185;">"Informe de Seguridad Diario"</span> admin@example.com

<span style="color: #219fd5; font-style: italic;">exit</span> 0
</pre>
</div>

<p>
Haz el script ejecutable y configúralo como tarea cron diaria:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/aide/aide.sh
sudo nano /etc/cron.daily/security-check
</pre>
</div>

<p>
Añade este contenido:
</p>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
/etc/aide/aide.sh
</pre>
</div>

<p>
Haz el script ejecutable:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/cron.daily/security-check
</pre>
</div>
</div>
</div>
<div id="outline-container-orgb0c877a" class="outline-3">
<h3 id="orgb0c877a">Visualización con diagrama PlantUML</h3>
<div class="outline-text-3" id="text-orgb0c877a">
<p>
La integración entre Snort y AIDE puede representarse visualmente:
</p>


<figure id="orgdd0bbbe">
<img src="images/integracion-snort-aide.png" alt="integracion-snort-aide.png">

</figure>
</div>
</div>
</div>
<div id="outline-container-org8de54e5" class="outline-2">
<h2 id="org8de54e5">Parte 4: Mejores Prácticas y Mantenimiento</h2>
<div class="outline-text-2" id="text-org8de54e5">
</div>
<div id="outline-container-org9885b7c" class="outline-3">
<h3 id="org9885b7c">Actualización de Reglas de Snort</h3>
<div class="outline-text-3" id="text-org9885b7c">
<p>
Las reglas de Snort deben actualizarse regularmente para detectar las últimas amenazas:
</p>

<ol class="org-ol">
<li><b>Suscripción a Reglas</b>: Considera una suscripción a Snort VRT para obtener las últimas reglas comerciales.</li>

<li><b>Reglas de la Comunidad</b>: Alternativamente, puedes usar reglas gratuitas de la comunidad.</li>

<li><b>Actualización Automática</b>: Configura un script para actualizar las reglas periódicamente:</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/cron.daily/update-snort-rules
</pre>
</div>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Actualizaci&#243;n diaria de reglas de Snort</span>

<span style="color: #dc3eb7;">cd</span> /etc/snort/rules
wget -q https://www.snort.org/rules/community -O community.tar.gz
tar -xzf community.tar.gz
rm community.tar.gz

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Reiniciar Snort para aplicar las nuevas reglas</span>
systemctl restart snort.service
</pre>
</div>

<p>
Haz el script ejecutable:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/cron.daily/update-snort-rules
</pre>
</div>
</div>
</div>
<div id="outline-container-org4971c25" class="outline-3">
<h3 id="org4971c25">Ajuste y Optimización de Rendimiento</h3>
<div class="outline-text-3" id="text-org4971c25">
<p>
Para optimizar el rendimiento de Snort:
</p>

<p>
<b>Ajusta los preprocesadores</b>: Habilita solo los preprocesadores necesarios para tu entorno.
</p>

<p>
<b>Optimiza la memoria</b>: Ajusta los parámetros de memoria según tus recursos disponibles.
</p>
<div class="org-src-container">
<pre class="src src-bash">config detection: search-method ac-bnfa
config detection: max_queue_events 5
</pre>
</div>

<p>
<b>Filtra tráfico irrelevante</b>: Usa BPF (Berkeley Packet Filter) para filtrar tráfico que no necesitas analizar:
</p>
<div class="org-src-container">
<pre class="src src-bash">config bpf_file: /etc/snort/bpf.conf


En <span style="color: #219fd5; font-weight: bold;">`/etc/snort/bpf.conf`</span>:

not port 53 and not port 80
</pre>
</div>
</div>
</div>
<div id="outline-container-org92e7f11" class="outline-3">
<h3 id="org92e7f11">Copia de Seguridad y Recuperación</h3>
<div class="outline-text-3" id="text-org92e7f11">
<p>
Realizar copias de seguridad regulares de tus configuraciones:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo nano /etc/cron.weekly/security-backup
</pre>
</div>

<p>
bash
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Copia de seguridad semanal de configuraciones de seguridad</span>

<span style="color: #1857a4;">BACKUP_DIR</span>=<span style="color: #a44185;">"/backup/security/$(</span><span style="color: #219fd5; font-weight: bold;">date +%Y%m%d</span><span style="color: #a44185;">)"</span>
mkdir -p $<span style="color: #1857a4;">BACKUP_DIR</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Backup de configuraci&#243;n de Snort</span>
tar -czf $<span style="color: #1857a4;">BACKUP_DIR</span>/snort-config.tar.gz /etc/snort

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Backup de configuraci&#243;n de AIDE</span>
cp /etc/aide/aide.conf $<span style="color: #1857a4;">BACKUP_DIR</span>/
cp /var/lib/aide/aide.db $<span style="color: #1857a4;">BACKUP_DIR</span>/

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Backup de logs (opcional)</span>
tar -czf $<span style="color: #1857a4;">BACKUP_DIR</span>/security-logs.tar.gz /var/log/snort /var/log/aide

<span style="color: #219fd5; font-style: italic;">exit</span> 0
</pre>
</div>


<p>
Haz el script ejecutable:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo chmod +x /etc/cron.weekly/security-backup
</pre>
</div>
</div>
</div>
<div id="outline-container-org2f92bbe" class="outline-3">
<h3 id="org2f92bbe">Pruebas de Efectividad</h3>
<div class="outline-text-3" id="text-org2f92bbe">
<p>
Es importante probar regularmente la efectividad de tu configuración:
</p>

<ol class="org-ol">
<li><b>Para Snort</b>: Utiliza herramientas como `nmap` o `hping3` para generar tráfico sospechoso de forma controlada y verifica que Snort lo detecte.</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Desde otra m&#225;quina (&#161;NO desde producci&#243;n!)</span>
sudo nmap -sS -p 1-1000 [IP-objetivo]
</pre>
</div>

<ol class="org-ol">
<li><b>Para AIDE</b>: Realiza cambios controlados en archivos monitoreados y verifica que AIDE los detecte.</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Modificar un archivo monitoreado</span>
sudo touch /etc/test-file
sudo aide --check  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Deber&#237;a mostrar el cambio</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org2853484" class="outline-3">
<h3 id="org2853484">Plan de Respuesta a Incidentes</h3>
<div class="outline-text-3" id="text-org2853484">
<p>
Desarrolla un plan simple de respuesta a incidentes:
</p>

<ol class="org-ol">
<li><b>Detección</b>: Monitoreo constante de logs y alertas.</li>
<li><b>Contención</b>: Procedimientos para aislar sistemas comprometidos.</li>
<li><b>Erradicación</b>: Eliminación de amenazas identificadas.</li>
<li><b>Recuperación</b>: Restauración de sistemas a un estado seguro.</li>
<li><b>Lecciones aprendidas</b>: Documentación y mejora continua.</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-org171b1d7" class="outline-2">
<h2 id="org171b1d7">Conclusión</h2>
<div class="outline-text-2" id="text-org171b1d7">
<p>
La combinación de Snort (IDS/IPS basado en red) y AIDE (verificación de integridad basada en host) proporciona una estrategia de defensa en profundidad para proteger tus sistemas informáticos. Mientras Snort vigila el perímetro y detecta intentos de intrusión, AIDE verifica que ningún archivo crítico haya sido modificado sin autorización.
</p>

<p>
La configuración e integración adecuada de estas herramientas, junto con un mantenimiento regular y pruebas periódicas, te permitirá mantener un nivel de seguridad robusto frente a las constantes amenazas del entorno digital.
</p>

<p>
Recuerda que la seguridad informática es un proceso continuo, no un producto. Mantente actualizado sobre las últimas amenazas y técnicas de protección, y adapta tu estrategia de seguridad en consecuencia.
</p>
</div>
</div>
<div id="outline-container-orgd7376b9" class="outline-2">
<h2 id="orgd7376b9">Referencias y Recursos Adicionales</h2>
<div class="outline-text-2" id="text-orgd7376b9">
<ul class="org-ul">
<li><a href="https://www.snort.org/">Sitio oficial de Snort</a></li>
<li><a href="https://github.com/aide/aide">Repositorio de AIDE en GitHub</a></li>
<li><a href="https://www.snort.org/documents/snort-users-manual">Manual de usuario de Snort</a></li>
<li><a href="https://aide.github.io/">Documentación de AIDE</a></li>
<li><a href="https://www.sans.org/security-resources/">Recursos de seguridad de SANS Institute</a></li>
</ul>
</div>
</div>
<div id="outline-container-org2b4e454" class="outline-2">
<h2 id="org2b4e454">Notas para el Editor de Emacs</h2>
<div class="outline-text-2" id="text-org2b4e454">
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-informática.html">informática</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-nort.html">nort</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-aide.html">AIDE</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ids.html">IDS</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ips.html">IPS</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-detección.html">detección</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-intrusiones.html">intrusiones</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-monitoreo.html">monitoreo</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-integridad.html">integridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[informática]]></category>
  <category><![CDATA[nort]]></category>
  <category><![CDATA[AIDE]]></category>
  <category><![CDATA[IDS]]></category>
  <category><![CDATA[IPS]]></category>
  <category><![CDATA[detección]]></category>
  <category><![CDATA[intrusiones]]></category>
  <category><![CDATA[monitoreo]]></category>
  <category><![CDATA[integridad]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-16--fortaleciendo-la-seguridad-inform-tica-con-snort-y-aide-gu-a-completa.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-16--fortaleciendo-la-seguridad-inform-tica-con-snort-y-aide-gu-a-completa.html</guid>
  <pubDate>Wed, 16 Apr 2025 04:17:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Guía Práctica: Configuración de UFW en Ubuntu con Scripts y Org Mode]]></title>
  <description><![CDATA[
<div id="outline-container-org43d23bd" class="outline-2">
<h2 id="org43d23bd">Introducción</h2>
<div class="outline-text-2" id="text-org43d23bd">
<p>
La seguridad es un aspecto crítico para cualquier servidor Linux. UFW (Uncomplicated Firewall) proporciona una interfaz simplificada para configurar un firewall robusto en sistemas Ubuntu. En este artículo, nos centraremos en la parte práctica: cómo crear, configurar y ejecutar un script de configuración de UFW, todo gestionado desde Emacs con Org Mode.
</p>

<p>
Este enfoque práctico te permitirá:
</p>
<ul class="org-ul">
<li>Documentar tu configuración de seguridad</li>
<li>Automatizar la implementación de reglas</li>
<li>Mantener un registro de los cambios realizados</li>
<li>Compartir fácilmente tu configuración con otros administradores</li>
</ul>

<p>
Está diseñado para administradores de sistemas y entusiastas de Linux que utilizan Emacs como parte de su flujo de trabajo.
</p>


<figure id="org668b759">
<img src="images/ufw-components.png" alt="ufw-components.png">

</figure>
</div>
</div>
<div id="outline-container-orga6af4d7" class="outline-2">
<h2 id="orga6af4d7">Prerrequisitos</h2>
<div class="outline-text-2" id="text-orga6af4d7">
<p>
Antes de comenzar, asegúrate de tener:
</p>

<ul class="org-ul">
<li>Ubuntu 22.04 LTS o superior</li>
<li>Emacs 27+ con Org Mode</li>
<li>Acceso root o privilegios sudo</li>
<li>UFW instalado (<code>sudo apt install ufw</code>)</li>
<li>Conexión SSH configurada (si trabajas remotamente)</li>
</ul>
</div>
</div>
<div id="outline-container-orgfe01919" class="outline-2">
<h2 id="orgfe01919">Creación del Script en Org Mode</h2>
<div class="outline-text-2" id="text-orgfe01919">
<p>
Comenzaremos creando un archivo Org Mode que contendrá nuestro script y documentación. En Emacs:
</p>

<ol class="org-ol">
<li>Crea un nuevo archivo: <code>C-x C-f ~/firewall-config.org RET</code></li>
<li>Añade la estructura básica del documento</li>
</ol>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #637c9d;">#+TITLE:</span> <span style="color: #dc3eb7; font-weight: bold;">Configuraci&#243;n de UFW para Servidores Ubuntu</span>
<span style="color: #637c9d;">#+AUTHOR:</span> <span style="color: #dc3eb7;">Tu Nombre</span>
<span style="color: #637c9d;">#+DATE:</span> <span style="color: #dc3eb7;">2025-04-15</span>
<span style="color: #60a8a1;">#+PROPERTY: header-args:bash :tangle ufw-secure-config.sh :comments both</span>

<span style="color: #2f86d2; font-weight: bold;">* Descripci&#243;n del Script</span>
Este script configura UFW en Ubuntu para proteger contra amenazas comunes,
incluyendo botnets, ataques de fuerza bruta y escaneos de puertos. Est&#225;
dise&#241;ado para servidores de producci&#243;n con exposici&#243;n a Internet.

<span style="color: #2f86d2; font-weight: bold;">* Script de Configuraci&#243;n</span>
<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Cabecera y verificaciones iniciales</span>
</pre>
</div>

<p>
El atributo <code>:tangle ufw-secure-config.sh</code> indica a Org Mode que extraiga (tangle) el código en un archivo ejecutable cuando lo solicitemos.
</p>
</div>
</div>
<div id="outline-container-org024ee21" class="outline-2">
<h2 id="org024ee21">Desarrollo del Script de Configuración UFW</h2>
<div class="outline-text-2" id="text-org024ee21">
<p>
Ahora desarrollaremos el script por secciones, añadiendo cada parte como un bloque de código Org Babel. Esto nos permite tener el script documentado y listo para ejecutar.
</p>
</div>
<div id="outline-container-org4e7dc53" class="outline-3">
<h3 id="org4e7dc53">Sección 1: Cabecera y verificaciones</h3>
<div class="outline-text-3" id="text-org4e7dc53">
<p>
Añade este bloque después de la sección "Cabecera y verificaciones iniciales":
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">#</span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">!/bin/bash</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Script: ufw-secure-config.sh</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Descripci&#243;n: Configuraci&#243;n segura de UFW para servidores Ubuntu</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Autor: Tu Nombre</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Fecha: 2025-04-15</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Versi&#243;n: 1.0</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Colores para mejor legibilidad</span>
<span style="color: #1857a4; background-color: #9fafc4;">RED</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">'\033[0;31m'</span>
<span style="color: #1857a4; background-color: #9fafc4;">GREEN</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">'\033[0;32m'</span>
<span style="color: #1857a4; background-color: #9fafc4;">YELLOW</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">'\033[1;33m'</span>
<span style="color: #1857a4; background-color: #9fafc4;">NC</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">'\033[0m'</span><span style="background-color: #9fafc4;"> </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Sin Color</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}=== Script de Configuraci&#243;n Segura de UFW ===${NC}"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Iniciando configuraci&#243;n en $(</span><span style="color: #219fd5; background-color: #9fafc4; font-weight: bold;">date</span><span style="color: #a44185; background-color: #9fafc4;">)"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Verificar privilegios de root</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">if</span><span style="background-color: #9fafc4;"> <a href=" $EUID -ne 0 ">[[ $</a></span><span style="color: #1857a4; background-color: #9fafc4;"><a href=" $EUID -ne 0 ">EUID</a></span><span style="background-color: #9fafc4;"><a href=" $EUID -ne 0 "> -ne 0 ]]</a>; </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">then</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${RED}Este script requiere privilegios de root.${NC}"</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Por favor, ejecuta con sudo: sudo bash $0"</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">exit</span><span style="background-color: #9fafc4;"> 1</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">fi</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Verificar que UFW est&#233; instalado</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">if ! </span><span style="color: #dc3eb7; background-color: #9fafc4;">command</span><span style="background-color: #9fafc4;"> -v ufw &amp;&gt; /dev/null; </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">then</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${YELLOW}UFW no est&#225; instalado. Instalando...${NC}"</span>
<span style="background-color: #9fafc4;">    apt update &amp;&amp; apt install -y ufw</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">if</span><span style="background-color: #9fafc4;"> [ $</span><span style="color: #1857a4; background-color: #9fafc4;">?</span><span style="background-color: #9fafc4;"> -ne 0 ]; </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">then</span>
<span style="background-color: #9fafc4;">        </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${RED}Error instalando UFW. Abortando.${NC}"</span>
<span style="background-color: #9fafc4;">        </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">exit</span><span style="background-color: #9fafc4;"> 1</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">fi</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}UFW instalado correctamente.${NC}"</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">else</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}UFW ya est&#225; instalado.${NC}"</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">fi</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Crear directorio para backups si no existe</span>
<span style="color: #1857a4; background-color: #9fafc4;">BACKUP_DIR</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">"/root/ufw-backups"</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">if</span><span style="background-color: #9fafc4;"> [ </span><span style="color: #219fd5; background-color: #9fafc4; font-weight: bold;">!</span><span style="background-color: #9fafc4;"> -d </span><span style="color: #a44185; background-color: #9fafc4;">"$BACKUP_DIR"</span><span style="background-color: #9fafc4;"> ]; </span><span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">then</span>
<span style="background-color: #9fafc4;">    mkdir -p </span><span style="color: #a44185; background-color: #9fafc4;">"$BACKUP_DIR"</span>
<span style="background-color: #9fafc4;">    </span><span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Directorio para backups creado: $BACKUP_DIR"</span>
<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">fi</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 2: Backup y reinicio de configuraci&#243;n</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf5da726" class="outline-3">
<h3 id="orgf5da726">Sección 2: Backup y reinicio de configuración</h3>
<div class="outline-text-3" id="text-orgf5da726">
<p>
Continuamos con la siguiente sección:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Crear backup de reglas actuales</span>
<span style="color: #1857a4; background-color: #9fafc4;">TIMESTAMP</span><span style="background-color: #9fafc4;">=$(</span><span style="color: #219fd5; background-color: #9fafc4; font-weight: bold;">date +%F-%H%M%S</span><span style="background-color: #9fafc4;">)</span>
<span style="color: #1857a4; background-color: #9fafc4;">BACKUP_FILE</span><span style="background-color: #9fafc4;">=</span><span style="color: #a44185; background-color: #9fafc4;">"$BACKUP_DIR/ufw-backup-$TIMESTAMP.rules"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${YELLOW}Creando backup de reglas actuales en:${NC} $BACKUP_FILE"</span>
<span style="background-color: #9fafc4;">ufw status verbose &gt; </span><span style="color: #a44185; background-color: #9fafc4;">"$BACKUP_FILE"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Guardar configuraci&#243;n actual de iptables para referencia</span>
<span style="background-color: #9fafc4;">iptables-save &gt; </span><span style="color: #a44185; background-color: #9fafc4;">"$BACKUP_DIR/iptables-backup-$TIMESTAMP.rules"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Backup de iptables guardado en: $BACKUP_DIR/iptables-backup-$TIMESTAMP.rules"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Reiniciar UFW para configuraci&#243;n limpia</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${YELLOW}Reiniciando UFW para iniciar configuraci&#243;n limpia...${NC}"</span>
<span style="background-color: #9fafc4;">ufw --force reset</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}UFW reiniciado correctamente.${NC}"</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 3: Configuraci&#243;n de pol&#237;ticas b&#225;sicas</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orga3e5d1f" class="outline-3">
<h3 id="orga3e5d1f">Sección 3: Configuración de políticas básicas</h3>
<div class="outline-text-3" id="text-orga3e5d1f">
<p>
Configuramos las políticas predeterminadas y activamos el logging:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Configurando pol&#237;ticas b&#225;sicas ===${NC}"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Establecer pol&#237;ticas predeterminadas</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando pol&#237;tica por defecto: denegar tr&#225;fico entrante"</span>
<span style="background-color: #9fafc4;">ufw default deny incoming</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando pol&#237;tica por defecto: permitir tr&#225;fico saliente"</span>
<span style="background-color: #9fafc4;">ufw default allow outgoing</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Configurar nivel de log</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando nivel de logging: medio"</span>
<span style="background-color: #9fafc4;">ufw logging medium</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}Pol&#237;ticas b&#225;sicas configuradas correctamente.${NC}"</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 4: Reglas para servicios esenciales</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org5c217f6" class="outline-3">
<h3 id="org5c217f6">Sección 4: Reglas para servicios esenciales</h3>
<div class="outline-text-3" id="text-org5c217f6">
<p>
Configuramos las reglas para los servicios principales:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Configurando reglas para servicios esenciales ===${NC}"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">SSH - Limitar intentos para prevenir ataques de fuerza bruta</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando SSH con l&#237;mite de conexiones..."</span>
<span style="background-color: #9fafc4;">ufw limit proto tcp from any to any port 22 comment </span><span style="color: #a44185; background-color: #9fafc4;">'SSH con l&#237;mite de conexiones'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">HTTP/HTTPS para servidores web</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando acceso web (HTTP/HTTPS)..."</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 80 comment </span><span style="color: #a44185; background-color: #9fafc4;">'HTTP'</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 443 comment </span><span style="color: #a44185; background-color: #9fafc4;">'HTTPS'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">DNS para resoluci&#243;n de nombres</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando acceso DNS..."</span>
<span style="background-color: #9fafc4;">ufw allow proto udp from any to any port 53 comment </span><span style="color: #a44185; background-color: #9fafc4;">'DNS'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">NTP para sincronizaci&#243;n horaria</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando acceso NTP..."</span>
<span style="background-color: #9fafc4;">ufw allow proto udp from any to any port 123 comment </span><span style="color: #a44185; background-color: #9fafc4;">'NTP'</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}Servicios esenciales configurados.${NC}"</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 5: Protecci&#243;n contra amenazas comunes</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgb425bf5" class="outline-3">
<h3 id="orgb425bf5">Sección 5: Protección contra amenazas comunes</h3>
<div class="outline-text-3" id="text-orgb425bf5">
<p>
Añadimos reglas para mitigar amenazas específicas:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Configurando protecci&#243;n contra amenazas espec&#237;ficas ===${NC}"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Limitar intentos de conexi&#243;n para HTTP/HTTPS (protecci&#243;n b&#225;sica contra DDoS)</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Configurando l&#237;mites de conexi&#243;n para servicios web..."</span>
<span style="background-color: #9fafc4;">ufw limit proto tcp from any to any port 80 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Limitar HTTP'</span>
<span style="background-color: #9fafc4;">ufw limit proto tcp from any to any port 443 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Limitar HTTPS'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Bloquear puertos com&#250;nmente explotados por botnets y malware</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Bloqueando puertos vulnerables com&#250;nmente usados por botnets..."</span>
<span style="background-color: #9fafc4;">ufw deny proto tcp from any to any port 23 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Telnet, usado por botnets'</span>
<span style="background-color: #9fafc4;">ufw deny proto tcp from any to any port 445 comment </span><span style="color: #a44185; background-color: #9fafc4;">'SMB, objetivo de ransomware'</span>
<span style="background-color: #9fafc4;">ufw deny proto tcp from any to any port 1433 comment </span><span style="color: #a44185; background-color: #9fafc4;">'MS-SQL, explotado por botnets'</span>
<span style="background-color: #9fafc4;">ufw deny proto tcp from any to any port 3389 comment </span><span style="color: #a44185; background-color: #9fafc4;">'RDP, objetivo com&#250;n'</span>
<span style="background-color: #9fafc4;">ufw deny proto udp from any to any port 1900 comment </span><span style="color: #a44185; background-color: #9fafc4;">'UPnP, usado en DDoS'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Bloquear rangos de puertos ef&#237;meros sospechosos</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Bloqueando rangos de puertos sospechosos..."</span>
<span style="background-color: #9fafc4;">ufw deny proto tcp from any to any port 49152:65535 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Puertos ef&#237;meros sospechosos'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Limitar ICMP para prevenir ataques de flood</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Limitando tr&#225;fico ICMP..."</span>
<span style="background-color: #9fafc4;">ufw limit proto icmp from any to any comment </span><span style="color: #a44185; background-color: #9fafc4;">'Limitar ping'</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}Protecci&#243;n contra amenazas comunes configurada.${NC}"</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 6: Bloqueo de IPs maliciosas</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org225637b" class="outline-3">
<h3 id="org225637b">Sección 6: Bloqueo de IPs maliciosas</h3>
<div class="outline-text-3" id="text-org225637b">
<p>
Bloqueamos rangos de IPs conocidos por actividades maliciosas:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Configurando bloqueo de IPs maliciosas ===${NC}"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Nota: Estas son IPs de ejemplo. En producci&#243;n, usa listas actualizadas.</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Bloqueando rangos de IPs conocidos por actividades maliciosas..."</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Ejemplos de rangos sospechosos (reemplazar con datos actualizados en producci&#243;n)</span>
<span style="background-color: #9fafc4;">ufw deny from 185.220.101.0/24 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Rango de IPs sospechosas - Tor exit nodes'</span>
<span style="background-color: #9fafc4;">ufw deny from 45.148.10.0/24 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Rango de IPs de botnets reportadas'</span>
<span style="background-color: #9fafc4;">ufw deny from 91.134.0.0/16 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Fuente conocida de ataques'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Opci&#243;n: Descomentar y modificar para actualizar desde fuente externa</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">echo "Descargando lista actualizada de IPs maliciosas..."</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">curl -s <a href="https://ejemplo.com/ip-blocklist.txt">https://ejemplo.com/ip-blocklist.txt</a> | while read ip; do</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">#   </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">ufw deny from $ip comment 'IP maliciosa - lista externa'</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">done</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${YELLOW}Nota: Considera actualizar regularmente la lista de IPs bloqueadas.${NC}"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${GREEN}Bloqueo de IPs maliciosas configurado.${NC}"</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Secci&#243;n 7: Activaci&#243;n del firewall</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orga27208d" class="outline-3">
<h3 id="orga27208d">Sección 7: Activación del firewall</h3>
<div class="outline-text-3" id="text-orga27208d">
<p>
Finalmente, activamos el firewall y mostramos el estado:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Activando UFW ===${NC}"</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Habilitar UFW</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Activando firewall..."</span>
<span style="background-color: #9fafc4;">ufw --force enable</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Verificar estado</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Estado final de UFW ===${NC}"</span>
<span style="background-color: #9fafc4;">ufw status verbose</span>

<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"\n${GREEN}=== Configuraci&#243;n completada exitosamente ===${NC}"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"Fecha y hora: $(</span><span style="color: #219fd5; background-color: #9fafc4; font-weight: bold;">date</span><span style="color: #a44185; background-color: #9fafc4;">)"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> -e </span><span style="color: #a44185; background-color: #9fafc4;">"${YELLOW}Recomendaciones:${NC}"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"1. Revisa peri&#243;dicamente /var/log/ufw.log para detectar actividad sospechosa"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"2. Considera implementar Fail2Ban como protecci&#243;n adicional"</span>
<span style="color: #dc3eb7; background-color: #9fafc4;">echo</span><span style="background-color: #9fafc4;"> </span><span style="color: #a44185; background-color: #9fafc4;">"3. Actualiza las reglas regularmente seg&#250;n evolucionen las amenazas"</span>

<span style="color: #219fd5; background-color: #9fafc4; font-style: italic;">exit</span><span style="background-color: #9fafc4;"> 0</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #2f86d2; font-weight: bold;">* Utilizaci&#243;n del Script</span>
<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Generaci&#243;n del script ejecutable</span>
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orga45b6f8" class="outline-2">
<h2 id="orga45b6f8">Utilización del Script desde Org Mode</h2>
<div class="outline-text-2" id="text-orga45b6f8">
<p>
Ahora que tenemos nuestro script documentado en Org Mode, vamos a ver cómo utilizarlo.
</p>
</div>
<div id="outline-container-org8121919" class="outline-3">
<h3 id="org8121919">Generación del script ejecutable</h3>
<div class="outline-text-3" id="text-org8121919">
<p>
Para generar el archivo ejecutable a partir de nuestro documento Org:
</p>

<div class="org-src-container">
<pre class="src src-org">Para extraer (tangle) el script desde este documento Org Mode:

1. Posiciona el cursor en cualquier parte del documento
2. Ejecuta: <span style="color: #fa841d; background-color: #9fafc4;">~M-x org-babel-tangle~</span> (o usa el atajo <span style="color: #fa841d; background-color: #9fafc4;">~C-c C-v t~</span>)
3. Esto crear&#225; el archivo <span style="color: #fa841d; background-color: #9fafc4;">~ufw-secure-config.sh~</span> en el mismo directorio

Alternativamente, puedes ejecutar esto directamente como un bloque de c&#243;digo:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC emacs-lisp :results silent</span>
<span style="background-color: #9fafc4;">(org-babel-tangle)</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

Una vez extra&#237;do, hazlo ejecutable:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :dir .</span>
<span style="background-color: #9fafc4;">chmod +x ufw-secure-config.sh</span>
<span style="background-color: #9fafc4;">ls -la ufw-secure-config.sh</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orga05a8fa" class="outline-3">
<h3 id="orga05a8fa">Ejecución del script</h3>
<div class="outline-text-3" id="text-orga05a8fa">
<p>
Añade esta sección para documentar la ejecución:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Ejecuci&#243;n del script</span>

El script debe ejecutarse con privilegios de superusuario:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :dir . :results output :eval no</span>
<span style="background-color: #9fafc4;">sudo ./ufw-secure-config.sh</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

Nota: El script realizar&#225; las siguientes acciones:
1. Verificar&#225; los privilegios y la instalaci&#243;n de UFW
2. Crear&#225; un backup de las reglas existentes
3. Reiniciar&#225; la configuraci&#243;n de UFW
4. Establecer&#225; pol&#237;ticas predeterminadas seguras
5. Configurar&#225; reglas para servicios esenciales
6. Implementar&#225; protecciones contra amenazas comunes
7. Bloquear&#225; IPs maliciosas conocidas
8. Activar&#225; el firewall con la nueva configuraci&#243;n

<span style="color: #2f86d2; font-weight: bold;">* Personalizaci&#243;n del Script</span>

Puedes personalizar este script para adaptarlo a tus necesidades espec&#237;ficas:

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Servicios adicionales</span>

Para a&#241;adir reglas para otros servicios, agrega l&#237;neas como estas en la Secci&#243;n 4:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">FTP (si es necesario)</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 21 comment </span><span style="color: #a44185; background-color: #9fafc4;">'FTP'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Correo electr&#243;nico</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 25,465,587 comment </span><span style="color: #a44185; background-color: #9fafc4;">'SMTP'</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 110,995 comment </span><span style="color: #a44185; background-color: #9fafc4;">'POP3'</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from any to any port 143,993 comment </span><span style="color: #a44185; background-color: #9fafc4;">'IMAP'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Base de datos (solo desde redes confiables)</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from 192.168.1.0/24 to any port 3306 comment </span><span style="color: #a44185; background-color: #9fafc4;">'MySQL desde LAN'</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Restricci&#243;n por origen</span>

Para permitir servicios solo desde ciertas IPs o redes:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Acceso SSH solo desde oficina</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from 203.0.113.0/24 to any port 22 comment </span><span style="color: #a44185; background-color: #9fafc4;">'SSH desde oficina'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Panel de administraci&#243;n solo desde IPs espec&#237;ficas</span>
<span style="background-color: #9fafc4;">ufw allow proto tcp from 203.0.113.10 to any port 8080 comment </span><span style="color: #a44185; background-color: #9fafc4;">'Admin desde IP confiable'</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org8a9e92b" class="outline-2">
<h2 id="org8a9e92b">Monitoreo y Mantenimiento</h2>
<div class="outline-text-2" id="text-org8a9e92b">
<p>
Añade esta sección para completar el post:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #2f86d2; font-weight: bold;">* Monitoreo y Mantenimiento</span>

Una vez configurado el firewall, es importante monitorizarlo y mantenerlo:

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Verificaci&#243;n del estado</span>

Para verificar el estado actual del firewall:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="background-color: #9fafc4;">sudo ufw status verbose</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Monitoreo de logs</span>

Para monitorizar actividad sospechosa:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Ver &#250;ltimas entradas del log en tiempo real</span>
<span style="background-color: #9fafc4;">sudo tail -f /var/log/ufw.log</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Buscar intentos de conexi&#243;n bloqueados</span>
<span style="background-color: #9fafc4;">sudo grep </span><span style="color: #a44185; background-color: #9fafc4;">"BLOCK"</span><span style="background-color: #9fafc4;"> /var/log/ufw.log</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Contar intentos bloqueados por IP (TOP 10)</span>
<span style="background-color: #9fafc4;">sudo grep </span><span style="color: #a44185; background-color: #9fafc4;">"BLOCK"</span><span style="background-color: #9fafc4;"> /var/log/ufw.log | grep -oE </span><span style="color: #a44185; background-color: #9fafc4;">"SRC=[0-9.]+"</span><span style="background-color: #9fafc4;"> | sort | uniq -c | sort -nr | head -10</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #ffffff;">*</span><span style="color: #dc3eb7; font-weight: bold;">* Actualizaci&#243;n de reglas</span>

Cuando necesites actualizar las reglas:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Ver reglas numeradas</span>
<span style="background-color: #9fafc4;">sudo ufw status numbered</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Eliminar una regla espec&#237;fica</span>
<span style="background-color: #9fafc4;">sudo ufw delete 3  </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Elimina la regla n&#250;mero 3</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">A&#241;adir una nueva regla</span>
<span style="background-color: #9fafc4;">sudo ufw allow proto tcp from any to any port 8443 comment </span><span style="color: #a44185; background-color: #9fafc4;">'HTTPS alternativo'</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Aplicar cambios</span>
<span style="background-color: #9fafc4;">sudo ufw reload</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>

<span style="color: #2f86d2; font-weight: bold;">* Integraci&#243;n con cron para Actualizaciones Autom&#225;ticas</span>

Para mantener tu lista de IPs bloqueadas actualizada, puedes crear un script separado y programarlo con cron:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC org</span>
<span style="background-color: #9fafc4;">#+BEGIN_SRC bash :tangle update-blocklist.sh :comments both</span>
<span style="background-color: #9fafc4;">#!/bin/bash</span>
<span style="background-color: #9fafc4;"># Script: update-blocklist.sh</span>
<span style="background-color: #9fafc4;"># Descripci&#243;n: Actualiza la lista de IPs bloqueadas en UFW</span>
<span style="background-color: #9fafc4;"># Autor: Tu Nombre</span>
<span style="background-color: #9fafc4;"># Fecha: 2025-04-15</span>

<span style="background-color: #9fafc4;"># Verificar privilegios</span>
<span style="background-color: #9fafc4;">if </span><span style="color: #2f86d2; background-color: #9fafc4; font-weight: bold; text-decoration: underline;"><a href=" $EUID -ne 0 ">[[ $EUID -ne 0 ]]</a></span><span style="background-color: #9fafc4;">; then</span>
<span style="background-color: #9fafc4;">    echo "Este script requiere privilegios de root."</span>
<span style="background-color: #9fafc4;">    exit 1</span>
<span style="background-color: #9fafc4;">fi</span>

<span style="background-color: #9fafc4;"># Directorio para logs</span>
<span style="background-color: #9fafc4;">LOG_DIR="/var/log/ufw-updates"</span>
<span style="background-color: #9fafc4;">mkdir -p "$LOG_DIR"</span>
<span style="background-color: #9fafc4;">LOG_FILE="$LOG_DIR/update-$(date +%F).log"</span>

<span style="background-color: #9fafc4;">echo "Iniciando actualizaci&#243;n de listas de bloqueo en $(date)" &gt;&gt; "$LOG_FILE"</span>

<span style="background-color: #9fafc4;"># Descargar lista actualizada (ejemplo)</span>
<span style="background-color: #9fafc4;">echo "Descargando lista actualizada..." &gt;&gt; "$LOG_FILE"</span>
<span style="background-color: #9fafc4;">curl -s </span><span style="color: #2f86d2; background-color: #9fafc4; font-weight: bold; text-decoration: underline;"><a href="https://ejemplo.com/ip-blocklist.txt">https://ejemplo.com/ip-blocklist.txt</a></span><span style="background-color: #9fafc4;"> &gt; /tmp/new-blocklist.txt</span>

<span style="background-color: #9fafc4;"># Eliminar reglas antiguas con comentario espec&#237;fico</span>
<span style="background-color: #9fafc4;">echo "Eliminando reglas antiguas..." &gt;&gt; "$LOG_FILE"</span>
<span style="background-color: #9fafc4;">for ip in $(ufw status | grep "lista externa" | awk '{print $3}'); do</span>
<span style="background-color: #9fafc4;">  ufw delete deny from $ip &gt;&gt; "$LOG_FILE" 2&gt;&amp;1</span>
<span style="background-color: #9fafc4;">done</span>

<span style="background-color: #9fafc4;"># A&#241;adir nuevas IPs</span>
<span style="background-color: #9fafc4;">echo "A&#241;adiendo nuevas IPs..." &gt;&gt; "$LOG_FILE"</span>
<span style="background-color: #9fafc4;">count=0</span>
<span style="background-color: #9fafc4;">while read ip; do</span>
<span style="background-color: #9fafc4;">  if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}(/[0-9]{1,2})?$ ]]; then</span>
<span style="background-color: #9fafc4;">    ufw deny from $ip comment 'IP maliciosa - lista externa' &gt;&gt; "$LOG_FILE" 2&gt;&amp;1</span>
<span style="background-color: #9fafc4;">    ((count++))</span>
<span style="background-color: #9fafc4;">  fi</span>
<span style="background-color: #9fafc4;">done &lt; /tmp/new-blocklist.txt</span>

<span style="background-color: #9fafc4;">echo "Actualizaci&#243;n completada. $count IPs bloqueadas." &gt;&gt; "$LOG_FILE"</span>
<span style="background-color: #9fafc4;">echo "Fecha y hora de finalizaci&#243;n: $(date)" &gt;&gt; "$LOG_FILE"</span>

<span style="background-color: #9fafc4;"># Limpiar archivos temporales</span>
<span style="background-color: #9fafc4;">rm /tmp/new-blocklist.txt</span>

<span style="background-color: #9fafc4;">exit 0</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>
<span style="color: #60a8a1;">#+END_SRC</span>

Programa la ejecuci&#243;n con cron:

<span style="color: #8195b0; background-color: #9fafc4;">#+BEGIN_SRC bash :eval no</span>
<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">Editar crontab</span>
<span style="background-color: #9fafc4;">sudo crontab -e</span>

<span style="color: #8195b0; background-color: #9fafc4; font-style: italic;"># </span><span style="color: #8195b0; background-color: #9fafc4; font-style: italic;">A&#241;adir l&#237;nea para ejecutar cada d&#237;a a las 3 AM</span>
<span style="background-color: #9fafc4;">0 3 * * * /ruta/a/update-blocklist.sh</span>
<span style="color: #8195b0; background-color: #9fafc4;">#+END_SRC</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgdfe2fe9" class="outline-2">
<h2 id="orgdfe2fe9">Conclusión y Recursos Adicionales</h2>
<div class="outline-text-2" id="text-orgdfe2fe9">
<p>
Finalmente, añade una conclusión y recursos adicionales:
</p>

<p>
#+BEGIN<sub>SRC</sub> org
,* Conclusión
</p>

<p>
Configurar UFW a través de scripts gestionados con Org Mode en Emacs ofrece varias ventajas:
</p>

<ol class="org-ol">
<li><b>Documentación integrada</b>: El código y su explicación se mantienen juntos</li>
<li><b>Reproducibilidad</b>: Puedes recrear exactamente la misma configuración en diferentes servidores</li>
<li><b>Control de versiones</b>: Puedes mantener tu configuración en un sistema de control de versiones como Git</li>
<li><b>Adaptabilidad</b>: Fácil de modificar para diferentes entornos (desarrollo, pruebas, producción)</li>
</ol>

<p>
Esta aproximación combina la potencia de Emacs y Org Mode con las necesidades prácticas de la administración de sistemas, creando un flujo de trabajo eficiente y bien documentado para la gestión de la seguridad.
</p>

<p>
Recuerda que la seguridad es un proceso continuo, no un estado final. Mantén tus reglas de firewall actualizadas, revisa regularmente los logs y adapta tu configuración según evolucionen las amenazas.
</p>

<p>
,* Recursos Adicionales
</p>

<ul class="org-ul">
<li><a href="https://help.ubuntu.com/community/UFW">Documentación oficial de UFW en Ubuntu</a></li>
<li><a href="https://wiki.archlinux.org/title/Uncomplicated_Firewall">Wiki de Arch Linux sobre UFW</a></li>
<li><a href="https://orgmode.org/worg/org-contrib/babel/">Documentación de Org Babel</a></li>
<li><a href="https://www.abuseipdb.com/">AbuseIPDB</a> - Base de datos de IPs maliciosas</li>
</ul>

<p>
,* Notas de la versión
</p>

<ul class="org-ul">
<li><b>Versión 1.0 (2025-04-15)</b>: Publicación inicial</li>
<li><b>Próximas mejoras planificadas</b>: Integración con Fail2Ban, reglas para Docker, configuración para IPv6</li>
</ul>
</div>
</div>
<div id="outline-container-org602bbf5" class="outline-2">
<h2 id="org602bbf5">Diagrama de Componentes de la Configuración</h2>
<div class="outline-text-2" id="text-org602bbf5">
<p>
Este diagrama muestra los componentes principales que conforman la configuración de seguridad con UFW:
</p>


<figure id="orgb3074ff">
<img src="images/ufw-components.png" alt="ufw-components.png">

</figure>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ubuntu.html">ubuntu</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-firewall.html">firewall</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ufw.html">ufw</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-orgmode.html">orgmode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[ubuntu]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[firewall]]></category>
  <category><![CDATA[ufw]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[orgmode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15-gu-a-pr-ctica-configuraci-n-de-ufw-en-ubuntu-con-scripts-y-org-mode.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15-gu-a-pr-ctica-configuraci-n-de-ufw-en-ubuntu-con-scripts-y-org-mode.html</guid>
  <pubDate>Tue, 15 Apr 2025 23:09:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Detectando actividad maliciosa en nuestro sistema Linux: ¿Somos parte de una botnet?]]></title>
  <description><![CDATA[
<div id="outline-container-org4d90630" class="outline-2">
<h2 id="org4d90630">Introducción</h2>
<div class="outline-text-2" id="text-org4d90630">
<p>
En la era actual de amenazas cibernéticas cada vez más sofisticadas, uno de los riesgos más preocupantes es que nuestros sistemas sean comprometidos y utilizados como parte de una botnet sin nuestro conocimiento. Estas redes de equipos infectados pueden ser utilizadas para realizar ataques DDoS, minería de criptomonedas, envío de spam, o robo de datos, entre otras actividades maliciosas.
</p>

<p>
En este artículo del blog <b>Emacs con Esteroides</b>, presentaremos un script en Bash para detectar posibles señales de que nuestro sistema Linux está siendo utilizado como parte de una botnet o está bajo ataque. El script realiza comprobaciones exhaustivas del sistema y genera un informe detallado que podemos analizar para determinar si hay actividad sospechosa.
</p>
</div>
</div>
<div id="outline-container-org3d0771d" class="outline-2">
<h2 id="org3d0771d">¿Qué es una botnet?</h2>
<div class="outline-text-2" id="text-org3d0771d">
<p>
Una botnet es una red de equipos infectados con malware que son controlados remotamente por un atacante, conocido como "botmaster". Los equipos comprometidos, llamados "zombies" o "bots", ejecutan comandos sin el conocimiento de sus propietarios.
</p>

<p>
Señales comunes de que un sistema puede formar parte de una botnet:
</p>

<ul class="org-ul">
<li>Conexiones de red inusuales o no autorizadas</li>
<li>Procesos desconocidos con alto consumo de recursos</li>
<li>Tráfico de red anómalo</li>
<li>Servicios o puertos abiertos inesperados</li>
<li>Modificaciones en archivos críticos del sistema</li>
<li>Entradas sospechosas en la tabla de rutas</li>
<li>Tareas programadas desconocidas</li>
</ul>
</div>
</div>
<div id="outline-container-orgfd116dd" class="outline-2">
<h2 id="orgfd116dd">El script de detección de botnets</h2>
<div class="outline-text-2" id="text-orgfd116dd">
<p>
Nuestro script realiza múltiples comprobaciones para identificar posibles indicios de compromiso:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">botnet_detector.sh - Script para detectar posibles indicios de botnet en sistemas Linux</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Blog: Emacs con Esteroides</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Autor: Emacs con Esteroides</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Fecha: 15/04/2025</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Licencia: GPL v3</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Colores para mejor visualizaci&#243;n</span>
<span style="color: #1857a4;">RED</span>=<span style="color: #a44185;">'\033[0;31m'</span>
<span style="color: #1857a4;">GREEN</span>=<span style="color: #a44185;">'\033[0;32m'</span>
<span style="color: #1857a4;">YELLOW</span>=<span style="color: #a44185;">'\033[0;33m'</span>
<span style="color: #1857a4;">BLUE</span>=<span style="color: #a44185;">'\033[0;34m'</span>
<span style="color: #1857a4;">PURPLE</span>=<span style="color: #a44185;">'\033[0;35m'</span>
<span style="color: #1857a4;">CYAN</span>=<span style="color: #a44185;">'\033[0;36m'</span>
<span style="color: #1857a4;">NC</span>=<span style="color: #a44185;">'\033[0m'</span> <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">No Color</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para imprimir encabezados</span>
<span style="color: #dc3eb7;">print_header</span>() {
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${BLUE}====================================${NC}"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${BLUE}$1${NC}"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${BLUE}====================================${NC}\n"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para imprimir mensajes de alerta</span>
<span style="color: #dc3eb7;">print_alert</span>() {
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}[ALERTA] $1${NC}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para imprimir mensajes de advertencia</span>
<span style="color: #dc3eb7;">print_warning</span>() {
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}[ADVERTENCIA] $1${NC}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para imprimir mensajes informativos</span>
<span style="color: #dc3eb7;">print_info</span>() {
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}[INFO] $1${NC}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar si se est&#225; ejecutando como root</span>
<span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$(</span><span style="color: #219fd5; font-weight: bold;">id -u</span><span style="color: #a44185;">)"</span> != <span style="color: #a44185;">"0"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}Este script debe ejecutarse como root${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">exit</span> 1
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crear directorio para informes si no existe</span>
<span style="color: #1857a4;">REPORT_DIR</span>=<span style="color: #a44185;">"/var/log/security_checks"</span>
<span style="color: #1857a4;">TIMESTAMP</span>=$(<span style="color: #219fd5; font-weight: bold;">date +"%Y%m%d_%H%M%S"</span>)
<span style="color: #1857a4;">REPORT_FILE</span>=<span style="color: #a44185;">"${REPORT_DIR}/botnet_check_${TIMESTAMP}.log"</span>

<span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #219fd5; font-weight: bold;">!</span> -d <span style="color: #a44185;">"$REPORT_DIR"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
  mkdir -p <span style="color: #a44185;">"$REPORT_DIR"</span>
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Funci&#243;n para registrar en el archivo de informe</span>
<span style="color: #dc3eb7;">log</span>() {
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"$1"</span> &gt;&gt; <span style="color: #a44185;">"$REPORT_FILE"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"$1"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Redireccionar la salida al archivo de registro y a la consola</span>
<span style="color: #219fd5; font-style: italic;">exec</span> &gt; &gt;(tee -a <span style="color: #a44185;">"$REPORT_FILE"</span>) 2&gt;&amp;1

print_header <span style="color: #a44185;">"DETECTOR DE BOTNETS Y ACTIVIDAD MALICIOSA"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Iniciando an&#225;lisis: $(</span><span style="color: #219fd5; font-weight: bold;">date</span><span style="color: #a44185;">)"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Sistema: $(</span><span style="color: #219fd5; font-weight: bold;">uname -a</span><span style="color: #a44185;">)"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Usuario: $(</span><span style="color: #219fd5; font-weight: bold;">whoami</span><span style="color: #a44185;">)"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Informe guardado en: $REPORT_FILE"</span>
<span style="color: #dc3eb7;">echo</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar herramientas necesarias e instalarlas si faltan</span>
<span style="color: #dc3eb7;">check_tools</span>() {
  print_header <span style="color: #a44185;">"Verificando herramientas necesarias"</span>

  <span style="color: #1857a4;">TOOLS</span>=(<span style="color: #a44185;">"lsof"</span> <span style="color: #a44185;">"netstat"</span> <span style="color: #a44185;">"tcpdump"</span> <span style="color: #a44185;">"htop"</span> <span style="color: #a44185;">"iftop"</span> <span style="color: #a44185;">"rkhunter"</span> <span style="color: #a44185;">"chkrootkit"</span> <span style="color: #a44185;">"lynis"</span> <span style="color: #a44185;">"clamav"</span> <span style="color: #a44185;">"sysstat"</span>)
  <span style="color: #1857a4;">PACKAGES</span>=(<span style="color: #a44185;">"lsof"</span> <span style="color: #a44185;">"net-tools"</span> <span style="color: #a44185;">"tcpdump"</span> <span style="color: #a44185;">"htop"</span> <span style="color: #a44185;">"iftop"</span> <span style="color: #a44185;">"rkhunter"</span> <span style="color: #a44185;">"chkrootkit"</span> <span style="color: #a44185;">"lynis"</span> <span style="color: #a44185;">"clamav"</span> <span style="color: #a44185;">"sysstat"</span>)

  <span style="color: #1857a4;">MISSING</span>=()

  <span style="color: #219fd5; font-style: italic;">for</span> i<span style="color: #219fd5; font-style: italic;"> in</span> <span style="color: #a44185;">"${!TOOLS[@]}"</span>; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #219fd5; font-style: italic;">if ! </span><span style="color: #dc3eb7;">command</span> -v <span style="color: #a44185;">"${TOOLS[$i]}"</span> &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
      <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}Herramienta ${TOOLS[$i]} no encontrada${NC}"</span>
      <span style="color: #1857a4;">MISSING</span>+=(<span style="color: #a44185;">"${PACKAGES[$i]}"</span>)
    <span style="color: #219fd5; font-style: italic;">else</span>
      <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}&#10003; ${TOOLS[$i]} instalado${NC}"</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #219fd5; font-style: italic;">if</span> [ ${#<span style="color: #1857a4;">MISSING</span>[@]} -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${YELLOW}Instalando herramientas faltantes...${NC}"</span>
    apt-get update
    apt-get install -y <span style="color: #a44185;">"${MISSING[@]}"</span>

    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar si hubo alg&#250;n error en la instalaci&#243;n</span>
    <span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">?</span> -ne 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
      <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}Error al instalar algunas herramientas. El script puede no funcionar correctamente.${NC}"</span>
    <span style="color: #219fd5; font-style: italic;">else</span>
      <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}Todas las herramientas necesarias han sido instaladas.${NC}"</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}Todas las herramientas necesarias est&#225;n instaladas.${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">1. Comprobar procesos sospechosos (alto uso de CPU/memoria)</span>
<span style="color: #dc3eb7;">check_suspicious_processes</span>() {
  print_header <span style="color: #a44185;">"Comprobando procesos sospechosos"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Procesos con mayor consumo de CPU</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Procesos con mayor consumo de CPU:${NC}"</span>
  ps aux --sort=-%cpu | head -11

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Procesos con mayor consumo de memoria</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Procesos con mayor consumo de memoria:${NC}"</span>
  ps aux --sort=-%mem | head -11

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar nombres de procesos sospechosos (mineros comunes, etc.)</span>
  <span style="color: #1857a4;">SUSPICIOUS_PROCESS_NAMES</span>=(<span style="color: #a44185;">"miner"</span> <span style="color: #a44185;">"xmr"</span> <span style="color: #a44185;">"monero"</span> <span style="color: #a44185;">"cryptonight"</span> <span style="color: #a44185;">"stratum"</span> <span style="color: #a44185;">"coinhive"</span> <span style="color: #a44185;">"xmrig"</span> <span style="color: #a44185;">"cpuminer"</span> <span style="color: #a44185;">"nanopool"</span> <span style="color: #a44185;">"minergate"</span>)

  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Buscando procesos con nombres sospechosos:${NC}"</span>
  <span style="color: #1857a4;">FOUND</span>=0
  <span style="color: #219fd5; font-style: italic;">for</span> name<span style="color: #219fd5; font-style: italic;"> in</span> <span style="color: #a44185;">"${SUSPICIOUS_PROCESS_NAMES[@]}"</span>; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">RESULT</span>=$(<span style="color: #219fd5; font-weight: bold;">pgrep -l -f "$name"</span>)
    <span style="color: #219fd5; font-style: italic;">if</span> [ -n <span style="color: #a44185;">"$RESULT"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
      print_alert <span style="color: #a44185;">"Posible proceso de miner&#237;a detectado: $RESULT"</span>
      <span style="color: #1857a4;">FOUND</span>=1
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">FOUND</span> -eq 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_info <span style="color: #a44185;">"No se encontraron procesos con nombres sospechosos."</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar procesos ocultos (con caracteres especiales o espacios en blanco)</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Buscando procesos con nombres ocultos o sospechosos:${NC}"</span>
  ps aux | grep -E <span style="color: #a44185;">'[ ]{2,}[^ ]+$|[.][^ ]|^ '</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Procesos sin binarios en disco (posible indicaci&#243;n de malware en memoria)</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Procesos sin binarios en disco (posible malware en memoria):${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">for</span> pid<span style="color: #219fd5; font-style: italic;"> in</span> $(<span style="color: #219fd5; font-weight: bold;">ls /proc/ | grep -E '^[0-9]+$'</span>); <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #219fd5; font-style: italic;">if</span> [ -d <span style="color: #a44185;">"/proc/$pid"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
      <span style="color: #1857a4;">BINARY</span>=$(<span style="color: #219fd5; font-weight: bold;">ls -l /proc/$pid/exe 2&gt;/dev/null | awk '{print $NF}'</span>)
      <span style="color: #219fd5; font-style: italic;">if</span> [[ <span style="color: #a44185;">"$BINARY"</span> == *<span style="color: #a44185;">"(deleted)"</span>* || -z <span style="color: #a44185;">"$BINARY"</span> ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        <span style="color: #1857a4;">PROCESS_NAME</span>=$(<span style="color: #219fd5; font-weight: bold;">cat /proc/$pid/comm 2&gt;/dev/null</span>)
        <span style="color: #1857a4;">CMDLINE</span>=$(<span style="color: #219fd5; font-weight: bold;">cat /proc/$pid/cmdline 2&gt;/dev/null | tr '\0' ' '</span>)
        <span style="color: #219fd5; font-style: italic;">if</span> [ -n <span style="color: #a44185;">"$PROCESS_NAME"</span> ] &amp;&amp; [ <span style="color: #a44185;">"$PROCESS_NAME"</span> != <span style="color: #a44185;">"ps"</span> ] &amp;&amp; [ <span style="color: #a44185;">"$PROCESS_NAME"</span> != <span style="color: #a44185;">"grep"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
          print_warning <span style="color: #a44185;">"Proceso sin binario en disco: PID=$pid NOMBRE=$PROCESS_NAME CMDLINE=$CMDLINE"</span>
        <span style="color: #219fd5; font-style: italic;">fi</span>
      <span style="color: #219fd5; font-style: italic;">fi</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">2. Comprobar conexiones de red sospechosas</span>
<span style="color: #dc3eb7;">check_suspicious_connections</span>() {
  print_header <span style="color: #a44185;">"Comprobando conexiones de red sospechosas"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Listar todas las conexiones</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Todas las conexiones activas:${NC}"</span>
  netstat -tunapl

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Conexiones establecidas</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Conexiones establecidas:${NC}"</span>
  netstat -tunapl | grep ESTABLISHED

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Puertos en escucha</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Puertos en escucha:${NC}"</span>
  netstat -tunapl | grep LISTEN

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Puertos com&#250;nmente asociados con botnets y malware</span>
  <span style="color: #1857a4;">SUSPICIOUS_PORTS</span>=(4444 5555 6666 6667 6697 8080 9999 1080 11111 1337 31337 34567 65535)

  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Buscando puertos sospechosos:${NC}"</span>
  <span style="color: #1857a4;">FOUND</span>=0
  <span style="color: #219fd5; font-style: italic;">for</span> port<span style="color: #219fd5; font-style: italic;"> in</span> <span style="color: #a44185;">"${SUSPICIOUS_PORTS[@]}"</span>; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">RESULT</span>=$(<span style="color: #219fd5; font-weight: bold;">netstat -tunapl | grep ":$port "</span>)
    <span style="color: #219fd5; font-style: italic;">if</span> [ -n <span style="color: #a44185;">"$RESULT"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
      print_alert <span style="color: #a44185;">"Puerto sospechoso $port en uso: $RESULT"</span>
      <span style="color: #1857a4;">FOUND</span>=1
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">FOUND</span> -eq 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_info <span style="color: #a44185;">"No se encontraron puertos sospechosos comunes en uso."</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar conexiones a IPs sospechosas (servidores C&amp;C conocidos)</span>
  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Esta lista deber&#237;a ser actualizada peri&#243;dicamente con IPs conocidas de C&amp;C</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Comprobando conexiones a posibles servidores C&amp;C:${NC}"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejemplo simple - en una implementaci&#243;n real, esta lista deber&#237;a ser m&#225;s extensa</span>
  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">y actualizada desde una fuente confiable</span>
  <span style="color: #1857a4;">SUSPICIOUS_IPS</span>=(<span style="color: #a44185;">"185.26.205."</span> <span style="color: #a44185;">"91.121."</span> <span style="color: #a44185;">"212.83."</span> <span style="color: #a44185;">"88.208."</span>)

  <span style="color: #1857a4;">FOUND</span>=0
  <span style="color: #219fd5; font-style: italic;">for</span> ip_pattern<span style="color: #219fd5; font-style: italic;"> in</span> <span style="color: #a44185;">"${SUSPICIOUS_IPS[@]}"</span>; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">RESULT</span>=$(<span style="color: #219fd5; font-weight: bold;">netstat -tunapl | grep "$ip_pattern"</span>)
    <span style="color: #219fd5; font-style: italic;">if</span> [ -n <span style="color: #a44185;">"$RESULT"</span> ]; <span style="color: #219fd5; font-style: italic;">then</span>
      print_alert <span style="color: #a44185;">"Conexi&#243;n a posible servidor C&amp;C detectada: $RESULT"</span>
      <span style="color: #1857a4;">FOUND</span>=1
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">FOUND</span> -eq 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_info <span style="color: #a44185;">"No se encontraron conexiones a servidores C&amp;C conocidos."</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Analizar cantidad de conexiones por IP</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}IPs con m&#250;ltiples conexiones (posible comunicaci&#243;n con C&amp;C):${NC}"</span>
  netstat -ntu | awk <span style="color: #a44185;">'{print $5}'</span> | cut -d: -f1 | sort | uniq -c | sort -nr | head -n 10

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar conexiones salientes inusuales</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Conexiones salientes posiblemente sospechosas:${NC}"</span>
  <span style="color: #1857a4;">OUTBOUND</span>=$(<span style="color: #219fd5; font-weight: bold;">netstat -tun | grep -v "127.0.0.1" | grep -v "LISTEN" | grep "ESTABLISHED"</span>)
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"$OUTBOUND"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">An&#225;lisis de tr&#225;fico en tiempo real (muestra limitada)</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Captura de tr&#225;fico en tiempo real (10 segundos):${NC}"</span>
  timeout 10 tcpdump -nn -c 100 2&gt;/dev/null || print_warning <span style="color: #a44185;">"No se pudo ejecutar tcpdump"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">3. Comprobar archivos y directorios sospechosos</span>
<span style="color: #dc3eb7;">check_suspicious_files</span>() {
  print_header <span style="color: #a44185;">"Comprobando archivos y directorios sospechosos"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Archivos modificados recientemente</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Archivos del sistema modificados en las &#250;ltimas 24 horas:${NC}"</span>
  find /bin /usr/bin /sbin /usr/sbin -type f -mtime -1 -ls | grep -v <span style="color: #a44185;">"\.git"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar archivos setuid/setgid (potencialmente peligrosos)</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Archivos con permisos SUID/SGID (verificar si son leg&#237;timos):${NC}"</span>
  find / -type f <span style="color: #a44185;">\(</span> -perm -4000 -o -perm -2000 <span style="color: #a44185;">\)</span> -ls 2&gt;/dev/null | grep -v -E <span style="color: #a44185;">"/snap/|/var/lib/snapd/"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar archivos ejecutables en /tmp y /var/tmp</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Archivos ejecutables en directorios temporales:${NC}"</span>
  find /tmp /var/tmp /dev/shm -type f -perm -100 -ls 2&gt;/dev/null

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar scripts de inicio sospechosos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Scripts de inicio potencialmente sospechosos:${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">for</span> dir<span style="color: #219fd5; font-style: italic;"> in</span> /etc/init.d /etc/init /etc/rc*.d /etc/systemd/system /usr/lib/systemd/system; <span style="color: #219fd5; font-style: italic;">do</span>
    find <span style="color: #a44185;">"$dir"</span> -type f -mtime -7 -ls 2&gt;/dev/null
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar archivos ocultos en el directorio home</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Archivos ocultos recientes en directorios home:${NC}"</span>
  find /home -type f -name <span style="color: #a44185;">".*"</span> -mtime -7 -ls 2&gt;/dev/null | grep -v -E <span style="color: #a44185;">"\.cache|\.config|\.local|\.dbus|\.mozilla|\.bash_history"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar archivos con nombres sospechosos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Archivos con nombres potencialmente sospechosos:${NC}"</span>
  find / -type f -name <span style="color: #a44185;">"*backdoor*"</span> -o -name <span style="color: #a44185;">"*rootkit*"</span> -o -name <span style="color: #a44185;">"*trojan*"</span> -o -name <span style="color: #a44185;">"*miner*"</span> -o -name <span style="color: #a44185;">"*xmr*"</span> -o -name <span style="color: #a44185;">"*monero*"</span> 2&gt;/dev/null
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">4. Comprobar tareas programadas</span>
<span style="color: #dc3eb7;">check_scheduled_tasks</span>() {
  print_header <span style="color: #a44185;">"Comprobando tareas programadas"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Crontabs del sistema</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Crontabs del sistema:${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">for</span> user<span style="color: #219fd5; font-style: italic;"> in</span> $(<span style="color: #219fd5; font-weight: bold;">cut -f1 -d: /etc/passwd</span>); <span style="color: #219fd5; font-style: italic;">do</span>
    crontab -l -u <span style="color: #a44185;">"$user"</span> 2&gt;/dev/null
    <span style="color: #219fd5; font-style: italic;">if</span> [ $<span style="color: #1857a4;">?</span> -eq 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
      <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"Crontab del usuario $user:"</span>
      crontab -l -u <span style="color: #a44185;">"$user"</span>
      <span style="color: #dc3eb7;">echo</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Otros archivos cron</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Otros archivos cron:${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">for</span> dir<span style="color: #219fd5; font-style: italic;"> in</span> /etc/cron.d /etc/cron.daily /etc/cron.hourly /etc/cron.monthly /etc/cron.weekly; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"Contenido de $dir:"</span>
    ls -la <span style="color: #a44185;">"$dir"</span> 2&gt;/dev/null
    <span style="color: #dc3eb7;">echo</span>
  <span style="color: #219fd5; font-style: italic;">done</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar /etc/crontab</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Contenido de /etc/crontab:${NC}"</span>
  cat /etc/crontab

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar systemd timers</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Systemd timers:${NC}"</span>
  systemctl list-timers --all
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">5. Comprobar usuarios y permisos</span>
<span style="color: #dc3eb7;">check_users_and_permissions</span>() {
  print_header <span style="color: #a44185;">"Comprobando usuarios y permisos"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Listar usuarios</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Lista de usuarios en el sistema:${NC}"</span>
  cut -d: -f1,3,7 /etc/passwd | sort

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Usuarios con UID 0 (root)</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Usuarios con privilegios de root (UID 0):${NC}"</span>
  grep <span style="color: #a44185;">":0:"</span> /etc/passwd

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Usuarios que pueden usar sudo</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Usuarios que pueden usar sudo:${NC}"</span>
  grep -Po <span style="color: #a44185;">'^sudo.+:\K.*$'</span> /etc/group
  cat /etc/sudoers.d/* /etc/sudoers 2&gt;/dev/null | grep -v <span style="color: #a44185;">"^#"</span> | grep -v <span style="color: #a44185;">"^$"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">&#218;ltimos inicios de sesi&#243;n</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}&#218;ltimos inicios de sesi&#243;n:${NC}"</span>
  last | head -20

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Sesiones activas</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Sesiones activas:${NC}"</span>
  w
  who

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar usuarios conectados por SSH</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Usuarios conectados por SSH:${NC}"</span>
  netstat -tnpa | grep <span style="color: #a44185;">"ESTABLISHED.*sshd"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Archivos de autorizaci&#243;n SSH</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Archivos authorized_keys (verificar claves no autorizadas):${NC}"</span>
  find /home -name <span style="color: #a44185;">"authorized_keys"</span> -exec ls -la {} <span style="color: #a44185;">\;</span> -exec cat {} <span style="color: #a44185;">\;</span> 2&gt;/dev/null
  find /root -name <span style="color: #a44185;">"authorized_keys"</span> -exec ls -la {} <span style="color: #a44185;">\;</span> -exec cat {} <span style="color: #a44185;">\;</span> 2&gt;/dev/null
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">6. Comprobar servicios y daemons</span>
<span style="color: #dc3eb7;">check_services</span>() {
  print_header <span style="color: #a44185;">"Comprobando servicios y daemons"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Servicios activos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Servicios systemd activos:${NC}"</span>
  systemctl list-units --type=service --state=running

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Todos los servicios</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Todos los servicios systemd:${NC}"</span>
  systemctl list-unit-files --type=service

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Servicios iniciados recientemente</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Servicios iniciados en los &#250;ltimos 3 d&#237;as:${NC}"</span>
  find /etc/systemd/system /usr/lib/systemd/system -type f -name <span style="color: #a44185;">"*.service"</span> -mtime -3 -ls

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Servicios no est&#225;ndar</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Servicios potencialmente no est&#225;ndar:${NC}"</span>
  systemctl list-units --type=service | grep -v -E <span style="color: #a44185;">"systemd|dbus|getty|ssh|network|ifup|rpc|nfs|syslog|cron|anacron|atd|udev|acpid|rsyslog|logind|getty|apache|nginx|mariadb|mysql|postgresql"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">7. Realizar escaneos con herramientas de seguridad</span>
<span style="color: #dc3eb7;">security_scans</span>() {
  print_header <span style="color: #a44185;">"Ejecutando escaneos de seguridad"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar rkhunter para buscar rootkits</span>
  <span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v rkhunter &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Ejecutando rkhunter (escaneo de rootkits):${NC}"</span>
    rkhunter --check --sk || print_warning <span style="color: #a44185;">"rkhunter fall&#243; o encontr&#243; problemas"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_warning <span style="color: #a44185;">"rkhunter no est&#225; instalado"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar chkrootkit</span>
  <span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v chkrootkit &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Ejecutando chkrootkit:${NC}"</span>
    chkrootkit -q || print_warning <span style="color: #a44185;">"chkrootkit fall&#243; o encontr&#243; problemas"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_warning <span style="color: #a44185;">"chkrootkit no est&#225; instalado"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar lynis para auditor&#237;a de seguridad</span>
  <span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v lynis &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Ejecutando lynis (auditor&#237;a b&#225;sica):${NC}"</span>
    lynis audit system --quick || print_warning <span style="color: #a44185;">"lynis fall&#243; o encontr&#243; problemas"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_warning <span style="color: #a44185;">"lynis no est&#225; instalado"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar ClamAV para buscar malware</span>
  <span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v clamscan &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Ejecutando ClamAV en directorios cr&#237;ticos:${NC}"</span>
    clamscan --recursive --suppress-ok-results /etc /tmp /var/tmp /home/*/.ssh /root || print_warning <span style="color: #a44185;">"clamscan fall&#243; o encontr&#243; problemas"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_warning <span style="color: #a44185;">"ClamAV no est&#225; instalado"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">8. Comprobar registros del sistema</span>
<span style="color: #dc3eb7;">check_logs</span>() {
  print_header <span style="color: #a44185;">"Analizando registros del sistema"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar intentos de inicio de sesi&#243;n fallidos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Intentos de inicio de sesi&#243;n fallidos:${NC}"</span>
  grep <span style="color: #a44185;">"Failed password"</span> /var/log/auth.log* | tail -n 20

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobaci&#243;n de conexiones rechazadas</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Conexiones rechazadas:${NC}"</span>
  grep -i <span style="color: #a44185;">"connection refused\|failed to connect"</span> /var/log/syslog* | tail -n 20

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Mensajes de error cr&#237;ticos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Mensajes de error cr&#237;ticos:${NC}"</span>
  grep -i <span style="color: #a44185;">"error\|critical\|warning\|fail"</span> /var/log/syslog* | tail -n 50

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar IPs que intentan m&#250;ltiples inicios de sesi&#243;n</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}IPs con m&#250;ltiples intentos de inicio de sesi&#243;n:${NC}"</span>
  grep <span style="color: #a44185;">"Failed password"</span> /var/log/auth.log* | grep -E -o <span style="color: #a44185;">"([0-9]{1,3}[\.]){3}[0-9]{1,3}"</span> | sort | uniq -c | sort -nr | head -n 10
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">9. Comprobar volumen de tr&#225;fico de red</span>
<span style="color: #dc3eb7;">check_network_traffic</span>() {
  print_header <span style="color: #a44185;">"Analizando tr&#225;fico de red"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Estad&#237;sticas de uso de red</span>
  <span style="color: #219fd5; font-style: italic;">if </span><span style="color: #dc3eb7;">command</span> -v vnstat &amp;&gt; /dev/null; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Estad&#237;sticas de tr&#225;fico de red:${NC}"</span>
    vnstat
  <span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Estad&#237;sticas de interfaces de red:${NC}"</span>
    ip -s link
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Mostrar tabla de rutas</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Tabla de rutas:${NC}"</span>
  ip route

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Mostrar puertos abiertos</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Puertos abiertos:${NC}"</span>
  ss -tuln

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Capturar y analizar una muestra de tr&#225;fico</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}An&#225;lisis de muestra de tr&#225;fico (5 segundos):${NC}"</span>
  timeout 5 tcpdump -nn -q -i any 2&gt;/dev/null || print_warning <span style="color: #a44185;">"No se pudo ejecutar tcpdump"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">10. Comprobaci&#243;n del rendimiento del sistema</span>
<span style="color: #dc3eb7;">check_system_performance</span>() {
  print_header <span style="color: #a44185;">"Analizando rendimiento del sistema"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Uso de CPU y memoria</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Uso de CPU y memoria:${NC}"</span>
  top -bn 1 | head -20

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobaci&#243;n de la carga del sistema</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Carga del sistema:${NC}"</span>
  uptime

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Uso de disco</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Uso de disco:${NC}"</span>
  df -h

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Directorios que ocupan m&#225;s espacio</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Directorios que ocupan m&#225;s espacio:${NC}"</span>
  du -sh /* 2&gt;/dev/null | sort -hr | head -10

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar swap</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Uso de swap:${NC}"</span>
  free -h
  swapon --show

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar si hay procesos zombies</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}Procesos zombie:${NC}"</span>
  ps aux | awk <span style="color: #a44185;">'$8=="Z"'</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">11. Generar resumen e informe final</span>
<span style="color: #dc3eb7;">generate_summary</span>() {
  print_header <span style="color: #a44185;">"RESUMEN DE LA DETECCI&#211;N"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Comprobar indicadores clave de compromiso</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${CYAN}Indicadores clave revisados:${NC}"</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">1. Procesos sospechosos</span>
  <span style="color: #1857a4;">SUSPICIOUS_PROCS</span>=$(<span style="color: #219fd5; font-weight: bold;">ps aux | grep -E 'miner|xmr|monero|cryptonight|stratum' | grep -v grep | wc -l</span>)
  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$SUSPICIOUS_PROCS"</span> -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_alert <span style="color: #a44185;">"&#9888;&#65039; Se encontraron $SUSPICIOUS_PROCS procesos con nombres sospechosos"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_info <span style="color: #a44185;">"&#10003; No se encontraron procesos con nombres asociados a miner&#237;a/botnet"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">2. Puertos sospechosos</span>
  <span style="color: #1857a4;">SUSPICIOUS_PORTS_COUNT</span>=$(<span style="color: #219fd5; font-weight: bold;">netstat -tunapl 2&gt;/dev/null | grep -E ':(4444|5555|6666|6667|8080|9999|1080|1337|31337</span><span style="color: #a44185;">)'</span> | grep -v <span style="color: #a44185;">"127.0.0.1"</span> | wc -l)
  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$SUSPICIOUS_PORTS_COUNT"</span> -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_alert <span style="color: #a44185;">"&#9888;&#65039; Se encontraron $SUSPICIOUS_PORTS_COUNT puertos sospechosos en uso"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_info <span style="color: #a44185;">"&#10003; No se encontraron puertos com&#250;nmente asociados con malware"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">3. Archivos sospechosos</span>
  <span style="color: #1857a4;">SUSPICIOUS_FILES</span>=$(<span style="color: #219fd5; font-weight: bold;">find /tmp /var/tmp /dev/shm -type f -perm -100 2&gt;/dev/null | wc -l</span>)
  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$SUSPICIOUS_FILES"</span> -gt 3 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_warning <span style="color: #a44185;">"&#9888;&#65039; Se encontraron $SUSPICIOUS_FILES archivos ejecutables en directorios temporales"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_info <span style="color: #a44185;">"&#10003; N&#250;mero normal de ejecutables en directorios temporales"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">4. Tareas cron sospechosas</span>
  <span style="color: #1857a4;">SUSPICIOUS_CRON</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -r "curl\|wget\|nc\|netcat\|bash -i\|python -c\|perl -e" /etc/cron* /var/spool/cron/ 2&gt;/dev/null | wc -l</span>)
  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$SUSPICIOUS_CRON"</span> -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_alert <span style="color: #a44185;">"&#9888;&#65039; Se encontraron $SUSPICIOUS_CRON tareas cron potencialmente sospechosas"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_info <span style="color: #a44185;">"&#10003; No se encontraron tareas cron sospechosas"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">5. Usuarios con UID 0 distintos de root</span>
  <span style="color: #1857a4;">ROOT_USERS</span>=$(<span style="color: #219fd5; font-weight: bold;">grep ":0:" /etc/passwd | grep -v "^root:" | wc -l</span>)
  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$ROOT_USERS"</span> -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    print_alert <span style="color: #a44185;">"&#9888;&#65039; Se encontraron $ROOT_USERS usuarios adicionales con privilegios de root (UID 0)"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    print_info <span style="color: #a44185;">"&#10003; Solo el usuario root tiene UID 0"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Evaluaci&#243;n final</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${BLUE}EVALUACI&#211;N FINAL:${NC}"</span>

  <span style="color: #1857a4;">TOTAL_ALERTS</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "\[ALERTA\]" "$REPORT_FILE"</span>)
  <span style="color: #1857a4;">TOTAL_WARNINGS</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "\[ADVERTENCIA\]" "$REPORT_FILE"</span>)

  <span style="color: #219fd5; font-style: italic;">if</span> [ <span style="color: #a44185;">"$TOTAL_ALERTS"</span> -gt 0 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}&#9888;&#65039; Se encontraron $TOTAL_ALERTS alertas y $TOTAL_WARNINGS advertencias que requieren investigaci&#243;n inmediata.${NC}"</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${RED}El sistema podr&#237;a estar comprometido. Revise el informe completo y tome medidas.${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">elif</span> [ <span style="color: #a44185;">"$TOTAL_WARNINGS"</span> -gt 3 ]; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}&#9888;&#65039; Se encontraron $TOTAL_WARNINGS advertencias que requieren atenci&#243;n.${NC}"</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${YELLOW}El sistema podr&#237;a tener actividad sospechosa. Revise el informe completo.${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}&#10003; No se encontraron indicios claros de compromiso en el sistema.${NC}"</span>
    <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"${GREEN}Contin&#250;e monitoreando regularmente.${NC}"</span>
  <span style="color: #219fd5; font-style: italic;">fi</span>

  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Recomendaciones</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${CYAN}RECOMENDACIONES:${NC}"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"1. Ejecute este script peri&#243;dicamente para monitorear cambios"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"2. Configure un sistema de monitoreo de integridad (como AIDE o Tripwire)"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"3. Actualice regularmente el sistema y las aplicaciones"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"4. Configure correctamente el firewall"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"5. Implemente detecci&#243;n de intrusiones con herramientas como Snort o Suricata"</span>
  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"6. Siga las pr&#225;cticas recomendadas de seguridad para servidores Linux"</span>

  <span style="color: #dc3eb7;">echo</span> -e <span style="color: #a44185;">"\n${BLUE}Informe completo guardado en: $REPORT_FILE${NC}"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar todas las comprobaciones</span>
<span style="color: #dc3eb7;">main</span>() {
  check_tools
  check_suspicious_processes
  check_suspicious_connections
  check_suspicious_files
  check_scheduled_tasks
  check_users_and_permissions
  check_services
  security_scans
  check_logs
  check_network_traffic
  check_system_performance
  generate_summary

  print_header <span style="color: #a44185;">"FINALIZADO"</span>
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"An&#225;lisis completado: $(</span><span style="color: #219fd5; font-weight: bold;">date</span><span style="color: #a44185;">)"</span>
  <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Informe guardado en: $REPORT_FILE"</span>
}

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ejecutar el script principal</span>
main
</pre>
</div>
</div>
</div>
<div id="outline-container-org809f40b" class="outline-2">
<h2 id="org809f40b">¿Cómo funciona el script?</h2>
<div class="outline-text-2" id="text-org809f40b">
<p>
El script realiza una serie de verificaciones exhaustivas para detectar posibles signos de compromiso en el sistema:
</p>


<figure id="org3d97007">
<img src="images/botnet_detection_flow.png" alt="botnet_detection_flow.png">

</figure>

<p>
<a href="images/botnet_detection_flow.png">botnet<sub>detection</sub><sub>flow.png</sub></a>
</p>
</div>
<div id="outline-container-org86a7253" class="outline-3">
<h3 id="org86a7253">Descripción de los módulos principales</h3>
<div class="outline-text-3" id="text-org86a7253">
</div>
<div id="outline-container-orgd5586e7" class="outline-4">
<h4 id="orgd5586e7">1. Verificación de procesos sospechosos</h4>
<div class="outline-text-4" id="text-orgd5586e7">
<p>
Este módulo examina los procesos en ejecución para detectar:
</p>
<ul class="org-ul">
<li>Procesos con alto consumo de CPU o memoria</li>
<li>Procesos con nombres asociados a minería de criptomonedas o malware</li>
<li>Procesos sin archivos binarios en disco (posible indicación de malware en memoria)</li>
<li>Procesos con nombres ocultos o irreconocibles</li>
</ul>
</div>
</div>
<div id="outline-container-orgdcf512d" class="outline-4">
<h4 id="orgdcf512d">2. Análisis de conexiones de red</h4>
<div class="outline-text-4" id="text-orgdcf512d">
<p>
Esta sección examina las conexiones de red para identificar:
</p>
<ul class="org-ul">
<li>Puertos conocidos por ser utilizados por botnets y malware</li>
<li>Conexiones a direcciones IP asociadas con servidores de comando y control (C&amp;C)</li>
<li>Patrones de tráfico inusuales o sospechosos</li>
<li>Comunicaciones no autorizadas con el exterior</li>
</ul>
</div>
</div>
<div id="outline-container-org99de2e1" class="outline-4">
<h4 id="org99de2e1">3. Verificación de archivos y directorios</h4>
<div class="outline-text-4" id="text-org99de2e1">
<p>
El script busca:
</p>
<ul class="org-ul">
<li>Archivos ejecutables en ubicaciones temporales</li>
<li>Archivos del sistema modificados recientemente</li>
<li>Archivos con permisos SUID/SGID sospechosos</li>
<li>Archivos ocultos con nombres o comportamientos inusuales</li>
</ul>
</div>
</div>
<div id="outline-container-org8f7335d" class="outline-4">
<h4 id="org8f7335d">4. Análisis de tareas programadas</h4>
<div class="outline-text-4" id="text-org8f7335d">
<p>
Se examinan:
</p>
<ul class="org-ul">
<li>Tareas cron para todos los usuarios</li>
<li>Archivos cron del sistema</li>
<li>Timers de systemd</li>
<li>Scripts de inicio modificados recientemente</li>
</ul>
</div>
</div>
<div id="outline-container-orgec5c79c" class="outline-4">
<h4 id="orgec5c79c">5. Verificación de usuarios y permisos</h4>
<div class="outline-text-4" id="text-orgec5c79c">
<p>
El script revisa:
</p>
<ul class="org-ul">
<li>Usuarios con privilegios elevados (UID 0)</li>
<li>Usuarios que pueden ejecutar comandos con sudo</li>
<li>Sesiones SSH activas y recientes</li>
<li>Claves de autorización SSH no autorizadas</li>
</ul>
</div>
</div>
<div id="outline-container-org10d55d8" class="outline-4">
<h4 id="org10d55d8">6. Análisis de servicios</h4>
<div class="outline-text-4" id="text-org10d55d8">
<p>
Esta sección examina:
</p>
<ul class="org-ul">
<li>Servicios activos en el sistema</li>
<li>Servicios configurados para iniciar automáticamente</li>
<li>Servicios no estándar o sospechosos</li>
<li>Servicios añadidos o modificados recientemente</li>
</ul>
</div>
</div>
<div id="outline-container-orge7b98b4" class="outline-4">
<h4 id="orge7b98b4">7. Escaneos de seguridad</h4>
<div class="outline-text-4" id="text-orge7b98b4">
<p>
El script utiliza herramientas especializadas:
</p>
<ul class="org-ul">
<li>RKHunter para detectar rootkits</li>
<li>ChkRootkit como método adicional de detección</li>
<li>Lynis para auditoría de seguridad general</li>
<li>ClamAV para escaneo de malware</li>
</ul>
</div>
</div>
<div id="outline-container-orgf2337f8" class="outline-4">
<h4 id="orgf2337f8">8. Análisis de logs</h4>
<div class="outline-text-4" id="text-orgf2337f8">
<p>
Se analizan los registros del sistema para identificar:
</p>
<ul class="org-ul">
<li>Intentos de inicio de sesión fallidos</li>
<li>Conexiones rechazadas</li>
<li>Mensajes de error críticos</li>
<li>Patrones de actividad sospechosa</li>
</ul>
</div>
</div>
<div id="outline-container-org587a9f4" class="outline-4">
<h4 id="org587a9f4">9. Análisis de tráfico de red</h4>
<div class="outline-text-4" id="text-org587a9f4">
<p>
El script examina:
</p>
<ul class="org-ul">
<li>Estadísticas de uso de red</li>
<li>Tabla de rutas para identificar redirecciones sospechosas</li>
<li>Puertos abiertos y servicios escuchando</li>
<li>Muestras de tráfico de red en tiempo real</li>
</ul>
</div>
</div>
<div id="outline-container-org36b4d21" class="outline-4">
<h4 id="org36b4d21">10. Verificación del rendimiento</h4>
<div class="outline-text-4" id="text-org36b4d21">
<p>
Se analiza:
</p>
<ul class="org-ul">
<li>Uso de CPU y memoria</li>
<li>Carga del sistema</li>
<li>Uso de disco</li>
<li>Procesos zombie y otros indicadores de actividad anómala</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org4280415" class="outline-3">
<h3 id="org4280415">Informe y resumen final</h3>
<div class="outline-text-3" id="text-org4280415">
<p>
Al finalizar todas las verificaciones, el script genera un informe detallado y un resumen que clasifica el estado del sistema en tres categorías:
</p>

<ol class="org-ol">
<li><b>Sistema comprometido</b>: Se detectaron alertas graves que indican alta probabilidad de infección.</li>
<li><b>Actividad sospechosa</b>: Se encontraron advertencias que requieren investigación adicional.</li>
<li><b>Sistema limpio</b>: No se detectaron indicios claros de compromiso.</li>
</ol>

<p>
El informe completo se guarda en el directorio <code>/var/log/security_checks/</code> con una marca de tiempo para referencia futura y análisis comparativo.
</p>
</div>
</div>
</div>
<div id="outline-container-orge5ca4b9" class="outline-2">
<h2 id="orge5ca4b9">Uso práctico del script</h2>
<div class="outline-text-2" id="text-orge5ca4b9">
</div>
<div id="outline-container-org0822fa2" class="outline-3">
<h3 id="org0822fa2">Requisitos previos</h3>
<div class="outline-text-3" id="text-org0822fa2">
<p>
Antes de ejecutar el script, asegúrate de tener:
</p>

<ul class="org-ul">
<li>Un sistema Linux (preferiblemente Ubuntu o una distribución basada en Debian)</li>
<li>Acceso root o permisos de sudo</li>
<li>Conexión a Internet (para instalar las herramientas faltantes)</li>
</ul>
</div>
</div>
<div id="outline-container-orgf2a779e" class="outline-3">
<h3 id="orgf2a779e">Instalación y ejecución</h3>
<div class="outline-text-3" id="text-orgf2a779e">
<ol class="org-ol">
<li>Copia el script completo en un archivo llamado <code>botnet_detector.sh</code></li>
<li>Dale permisos de ejecución:</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash">chmod +x botnet_detector.sh
</pre>
</div>

<ol class="org-ol">
<li>Ejecuta el script como root:</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash">sudo ./botnet_detector.sh
</pre>
</div>

<ol class="org-ol">
<li>El script automáticamente instalará las herramientas necesarias si no están presentes.</li>
</ol>
</div>
</div>
<div id="outline-container-org44bf35d" class="outline-3">
<h3 id="org44bf35d">Automatización</h3>
<div class="outline-text-3" id="text-org44bf35d">
<p>
Para monitorear regularmente tu sistema, puedes configurar el script como una tarea programada:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Editar crontab</span>
sudo crontab -e

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">A&#241;adir una l&#237;nea para ejecutar el script semanalmente (por ejemplo, cada domingo a las 3:00 AM)</span>
0 3 * * 0 /ruta/al/botnet_detector.sh
</pre>
</div>

<p>
El informe se guardará con la fecha y hora de ejecución, permitiéndote comparar resultados a lo largo del tiempo.
</p>
</div>
</div>
</div>
<div id="outline-container-orgf1658e2" class="outline-2">
<h2 id="orgf1658e2">Signos comunes de infección por botnet</h2>
<div class="outline-text-2" id="text-orgf1658e2">
<p>
Además de las verificaciones realizadas por el script, estos son signos adicionales que podrían indicar que tu sistema está comprometido:
</p>
</div>
<div id="outline-container-orgbda72d6" class="outline-3">
<h3 id="orgbda72d6">Signos a nivel de sistema</h3>
<div class="outline-text-3" id="text-orgbda72d6">
<ul class="org-ul">
<li>Tiempos de arranque o apagado inusualmente largos</li>
<li>El sistema se vuelve significativamente más lento sin razón aparente</li>
<li>Crasheos frecuentes o pantallas azules (en Windows)</li>
<li>Programas que se cierran o abren solos</li>
<li>Cambios en la página de inicio del navegador o redirecciones web</li>
</ul>
</div>
</div>
<div id="outline-container-orgd5a4509" class="outline-3">
<h3 id="orgd5a4509">Signos a nivel de red</h3>
<div class="outline-text-3" id="text-orgd5a4509">
<ul class="org-ul">
<li>Uso de red elevado incluso cuando no estás utilizando activamente Internet</li>
<li>Quejas de tu proveedor de Internet sobre tráfico sospechoso</li>
<li>Tu dirección IP aparece en listas negras de spam</li>
<li>Tu router tiene configuraciones que no recuerdas haber cambiado</li>
</ul>
</div>
</div>
<div id="outline-container-org39bebc1" class="outline-3">
<h3 id="org39bebc1">Signos a nivel de usuario</h3>
<div class="outline-text-3" id="text-org39bebc1">
<ul class="org-ul">
<li>Cuentas de correo electrónico enviando spam sin tu conocimiento</li>
<li>Actividad en tus cuentas que no reconoces</li>
<li>Nuevos programas o extensiones del navegador que no instalaste</li>
<li>Antivirus o firewalls desactivados sin tu intervención</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgc7e6089" class="outline-2">
<h2 id="orgc7e6089">Mejores prácticas para prevenir infecciones</h2>
<div class="outline-text-2" id="text-orgc7e6089">
<p>
La prevención es siempre la mejor estrategia. Estas son algunas recomendaciones para mantener tu sistema seguro:
</p>

<ol class="org-ol">
<li><b>Mantén tu sistema actualizado</b>
<ul class="org-ul">
<li>Aplica parches de seguridad tan pronto como estén disponibles</li>
<li>Actualiza regularmente todas las aplicaciones</li>
</ul></li>

<li><b>Configura un firewall robusto</b>
<ul class="org-ul">
<li><p>
Utiliza UFW (Uncomplicated Firewall) en Ubuntu:
</p>
<div class="org-src-container">
<pre class="src src-bash">sudo ufw enable
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow ssh
</pre>
</div></li>
</ul></li>

<li><b>Implementa un sistema de detección de intrusiones</b>
<ul class="org-ul">
<li>Considera herramientas como Snort, Suricata o OSSEC</li>
</ul></li>

<li><b>Monitorea la integridad del sistema</b>
<ul class="org-ul">
<li><p>
Instala AIDE (Advanced Intrusion Detection Environment):
</p>
<div class="org-src-container">
<pre class="src src-bash">sudo apt install aide
sudo aideinit
</pre>
</div></li>
</ul></li>

<li><b>Refuerza la seguridad SSH</b>
<ul class="org-ul">
<li>Desactiva el login como root</li>
<li>Utiliza autenticación por clave en lugar de contraseñas</li>
<li>Cambia el puerto por defecto</li>
</ul></li>

<li><b>Implementa el principio de mínimo privilegio</b>
<ul class="org-ul">
<li>Crea usuarios con los permisos mínimos necesarios</li>
<li>Utiliza sudo para tareas específicas en lugar de login como root</li>
</ul></li>

<li><b>Realiza backups regularmente</b>
<ul class="org-ul">
<li>Mantén copias de seguridad offline o en ubicaciones aisladas</li>
<li>Verifica periódicamente que los backups funcionen correctamente</li>
</ul></li>
</ol>
</div>
</div>
<div id="outline-container-org6629fa8" class="outline-2">
<h2 id="org6629fa8">Qué hacer si encuentras un sistema comprometido</h2>
<div class="outline-text-2" id="text-org6629fa8">
<p>
Si el script detecta signos de compromiso o tienes razones para creer que tu sistema es parte de una botnet:
</p>

<ol class="org-ol">
<li><b>No apagues el sistema inmediatamente</b>
<ul class="org-ul">
<li>El análisis forense podría requerir información volátil en memoria</li>
</ul></li>

<li><b>Aísla el sistema de la red</b>
<ul class="org-ul">
<li>Desconecta físicamente el cable de red o desactiva la wifi</li>
</ul></li>

<li><b>Documenta todo</b>
<ul class="org-ul">
<li>Toma notas detalladas de lo que observas</li>
<li>Guarda los informes generados por el script</li>
</ul></li>

<li><b>Preserva evidencia</b>
<ul class="org-ul">
<li>Crea una imagen forense si es posible</li>
<li>Guarda logs y archivos relevantes</li>
</ul></li>

<li><b>Evalúa el impacto</b>
<ul class="org-ul">
<li>Determina qué datos o sistemas podrían estar comprometidos</li>
<li>Verifica cuentas y servicios críticos</li>
</ul></li>

<li><b>Reconstruye desde cero</b>
<ul class="org-ul">
<li>La reinstalación completa es generalmente más segura que intentar limpiar</li>
<li>Restaura datos desde backups verificados como limpios</li>
</ul></li>

<li><b>Aprende y mejora</b>
<ul class="org-ul">
<li>Analiza cómo ocurrió la intrusión</li>
<li>Implementa medidas adicionales para prevenir futuros incidentes</li>
</ul></li>
</ol>
</div>
</div>
<div id="outline-container-org67c2ae6" class="outline-2">
<h2 id="org67c2ae6">Conclusión</h2>
<div class="outline-text-2" id="text-org67c2ae6">
<p>
La seguridad informática es un proceso continuo, no un estado final. Este script puede ayudarte a detectar posibles compromisos en tu sistema Linux, pero debe ser parte de una estrategia de seguridad más amplia que incluya buenas prácticas preventivas, monitoreo regular, y planes de respuesta a incidentes.
</p>

<p>
Utilizando Emacs y org-mode, puedes adaptar y mejorar este script según tus necesidades específicas, programar su ejecución regular, y documentar y analizar sus resultados de manera organizada.
</p>

<p>
Recuerda que ninguna herramienta automatizada puede reemplazar el conocimiento y la vigilancia humana. Mantente informado sobre nuevas amenazas y técnicas de ataque, y adapta tus defensas en consecuencia.
</p>


<p>
<a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15-gu-a-pr-ctica-configuraci-n-de-ufw-en-ubuntu-con-scripts-y-org-mode">2025-04-15-gu-a-pr-ctica-configuraci-n-de-ufw-en-ubuntu-con-scripts-y-org-mode</a> <br>
</p>

<p>
<a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-16--fortaleciendo-la-seguridad-inform-tica-con-snort-y-aide-gu-a-completa">2025-04-16&#x2013;fortaleciendo-la-seguridad-inform-tica-con-snort-y-aide-gu-a-completa</a>
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-botnet.html">botnet</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-malware.html">malware</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-scripting.html">scripting</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[botnet]]></category>
  <category><![CDATA[malware]]></category>
  <category><![CDATA[scripting]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15--detectando-actividad-maliciosa-en-nuestro-sistema-linux-somos-parte-de-una-botnet-.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-15--detectando-actividad-maliciosa-en-nuestro-sistema-linux-somos-parte-de-una-botnet-.html</guid>
  <pubDate>Tue, 15 Apr 2025 08:20:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Analizando Vulnerabilidades como un Pro: Un Script Potenciado para Emacs Org-mode (ii)]]></title>
  <description><![CDATA[
<div id="outline-container-org5870351" class="outline-2">
<h2 id="org5870351">Introducción</h2>
<div class="outline-text-2" id="text-org5870351">
<p>
¿Alguna vez te has preguntado qué tan seguro está tu laptop? En este post, te llevo de la mano para transformar un script básico de detección de vulnerabilidades en una herramienta poderosa que no solo encuentra CVEs, sino que también evalúa amenazas y las presenta en el glorioso formato Org-mode de Emacs. ¡Prepárate para darle esteroides a tu análisis de seguridad!
</p>

<p>
El reto comenzó con un script que escaneaba paquetes en busca de vulnerabilidades usando la API de Vulners. Pero queríamos más: un reporte detallado con niveles de amenaza y estadísticas, todo listo para brillar en Emacs. Aquí te cuento cómo lo hice, cómo usarlo y qué resultados obtendrás.
</p>
</div>
</div>
<div id="outline-container-org5a48d84" class="outline-2">
<h2 id="org5a48d84">El Punto de Partida</h2>
<div class="outline-text-2" id="text-org5a48d84">
<p>
Primero, teníamos este script básico:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #219fd5; font-style: italic;">while</span> <span style="color: #1857a4;">IFS</span>= read -r line; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">nombre</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | awk '{print $1}'</span>)
    <span style="color: #1857a4;">version</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | awk '{print $2}'</span>)
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"[+] Buscando CVEs para: $nombre $version"</span>
    <span style="color: #1857a4;">query</span>=<span style="color: #a44185;">"${nombre}%20${version}"</span>
    <span style="color: #1857a4;">response</span>=$(<span style="color: #219fd5; font-weight: bold;">curl -s "https://vulners.com/api/v3/search/lucene/?query=$query&amp;size=3"</span>)
    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">... resto del script ...</span>
<span style="color: #219fd5; font-style: italic;">done</span> &lt; <span style="color: #a44185;">"$PACKAGE_LIST"</span>
</pre>
</div>

<p>
Este script lee una lista de paquetes, busca CVEs y genera un archivo con resultados. Funciona, pero le falta punch: no clasifica amenazas ni da detalles jugosos. ¡Hora de mejorarlo!
</p>
</div>
</div>
<div id="outline-container-org9083bb6" class="outline-2">
<h2 id="org9083bb6">Creación del Nuevo Script: Un Monstruo de Seguridad</h2>
<div class="outline-text-2" id="text-org9083bb6">
<p>
Tomé el output del script original y creé un nuevo beast que procesa los CVEs encontrados. Aquí está el resultado:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #1857a4;">OUTPUT</span>=<span style="color: #a44185;">"vulnerability_report.org"</span>
<span style="color: #1857a4;">INPUT_FILE</span>=<span style="color: #a44185;">"$1"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"#+TITLE: Reporte de Amenazas Actuales"</span> &gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"#+DATE: $(</span><span style="color: #219fd5; font-weight: bold;">date '+%Y-%m-%d %H:%M'</span><span style="color: #a44185;">)"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>

<span style="color: #219fd5; font-style: italic;">while</span> <span style="color: #1857a4;">IFS</span>= read -r line; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #219fd5; font-style: italic;">if</span> [[ <span style="color: #a44185;">"$line"</span> =~ ^<span style="color: #a44185;">\*\*</span> ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        <span style="color: #1857a4;">package_info</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | sed 's/\*\* //'</span>)
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** Paquete: $package_info"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"   :PROPERTIES:"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"   :ANALISIS: $(</span><span style="color: #219fd5; font-weight: bold;">date '+%Y-%m-%d'</span><span style="color: #a44185;">)"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"   :END:"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
    <span style="color: #219fd5; font-style: italic;">elif</span> [[ <span style="color: #a44185;">"$line"</span> =~ ^\s*-.*CVE-[0-9]{4}-[0-9]+ ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        <span style="color: #1857a4;">cve</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | grep -o 'CVE-[0-9]\{4\}-[0-9]\+'</span>)
        <span style="color: #1857a4;">response</span>=$(<span style="color: #219fd5; font-weight: bold;">curl -s "https://vulners.com/api/v3/search/id/?id=$cve"</span>)
        <span style="color: #1857a4;">severity</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$response" | grep -oP '"cvss_score":\s*"\K[0-9.]+' || echo "N/A"</span>)
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">... l&#243;gica de amenaza y detalles ...</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
    sleep 1
<span style="color: #219fd5; font-style: italic;">done</span> &lt; <span style="color: #a44185;">"$INPUT_FILE"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Estad&#237;sticas</span>
<span style="color: #1857a4;">critical</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "CR&#205;TICA" "$OUTPUT"</span>)
<span style="color: #1857a4;">medium</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "MEDIA" "$OUTPUT"</span>)
<span style="color: #1857a4;">low</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "BAJA" "$OUTPUT"</span>)
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"* Estad&#237;sticas"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Amenazas Cr&#237;ticas: $critical"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Amenazas Medias: $medium"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Amenazas Bajas: $low"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
</pre>
</div>
</div>
<div id="outline-container-org1138057" class="outline-3">
<h3 id="org1138057">¿Qué hace este script?**</h3>
<div class="outline-text-3" id="text-org1138057">
<ol class="org-ol">
<li>Toma el archivo generado por el script original como entrada.</li>
<li>Consulta detalles de cada CVE usando la API de Vulners.</li>
<li>Clasifica amenazas según el puntaje CVSS:
<ul class="org-ul">
<li>≥ 7.0: <b>CRÍTICA</b></li>
<li>≥ 4.0: <b>MEDIA</b></li>
<li>&lt; 4.0: <b>BAJA</b></li>
</ul></li>
<li>Genera un reporte en Org-mode con secciones, propiedades y estadísticas.</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-org514a1ad" class="outline-2">
<h2 id="org514a1ad">Cómo Usarlo</h2>
<div class="outline-text-2" id="text-org514a1ad">
<p>
Es tan fácil que hasta tu abuela podría ejecutarlo (si usa Emacs, claro):
</p>

<ol class="org-ol">
<li><p>
<b><b>Ejecuta el script original</b></b> para generar tu lista de vulnerabilidades:
</p>
<div class="org-src-container">
<pre class="src src-bash">./scan_vulnerabilities.sh &gt; vuln_output.txt
</pre>
</div></li>

<li><p>
<b><b>Lanza el nuevo script</b></b> pasándole el archivo generado:
</p>
<div class="org-src-container">
<pre class="src src-bash">./threat_analysis.sh vuln_output.txt
</pre>
</div></li>

<li><p>
<b><b>Abre el resultado en Emacs</b></b>:
</p>
<div class="org-src-container">
<pre class="src src-bash">emacs vulnerability_report.org
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-org945543c" class="outline-2">
<h2 id="org945543c">Características Estelares</h2>
<div class="outline-text-2" id="text-org945543c">
<ul class="org-ul">
<li><b><b>Formato Org-mode Nativo</b></b>: Listo para navegar con <code>C-c C-n</code> o exportar a HTML/PDF.</li>
<li><b><b>Clasificación de Amenazas</b></b>: Separa lo crítico de lo trivial.</li>
<li><b><b>Detalles Ricos</b></b>: Severidad, fechas, descripciones por CVE.</li>
<li><b><b>Estadísticas</b></b>: Resumen claro de cuántas amenazas enfrentas.</li>
<li><b><b>Personalizable</b></b>: Ajusta los umbrales de CVSS o añade más campos según necesites.</li>
</ul>
</div>
</div>
<div id="outline-container-org08709cc" class="outline-2">
<h2 id="org08709cc">Resultados que Obtendrás</h2>
<div class="outline-text-2" id="text-org08709cc">
<p>
El output es un archivo <code>vulnerability_report.org</code> que luce así:
</p>

<p>
#+BEGIN<sub>SRC</sub> org
</p>
</div>
</div>
<div id="outline-container-org9a0c987" class="outline-2">
<h2 id="org9a0c987">Resumen de Amenazas</h2>
<div class="outline-text-2" id="text-org9a0c987">
</div>
<div id="outline-container-org1389943" class="outline-3">
<h3 id="org1389943">Paquete: openssl 1.1.1</h3>
<div class="outline-text-3" id="text-org1389943">
<ul class="org-ul">
<li>CVE Analizado: CVE-2023-1234
<ul class="org-ul">
<li>Nivel de Amenaza: CRÍTICA</li>
<li>Severidad CVSS: 7.8</li>
<li>Publicado: 2023-05-01</li>
<li>Descripción: Remote code execution&#x2026;</li>
</ul></li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org1977b47" class="outline-2">
<h2 id="org1977b47">Estadísticas</h2>
<div class="outline-text-2" id="text-org1977b47">
<ul class="org-ul">
<li>Amenazas Críticas: 1</li>
<li>Amenazas Medias: 0</li>
<li>Amenazas Bajas: 0</li>
</ul>
<p>
#+END<sub>SRC</sub>
</p>

<p>
En Emacs, puedes colapsar secciones con <code>TAB</code>, buscar con <code>C-s</code>, o incluso ejecutar comandos desde el buffer con <code>org-babel</code>. ¡Es seguridad con estilo!
</p>
</div>
</div>
<div id="outline-container-org03f123b" class="outline-2">
<h2 id="org03f123b">Conclusión</h2>
<div class="outline-text-2" id="text-org03f123b">
<p>
Con este script, transformamos un escaneo básico en un análisis profesional que vive feliz en Emacs. Ya no solo sabes qué vulnerabilidades tienes, sino qué tan malas son y qué hacer al respecto. ¿Listo para poner tu laptop a prueba? Descarga el script, dale caña y comparte tus resultados en los comentarios.
</p>

<blockquote>
<p>
"La seguridad no es un destino, es un viaje&#x2026; con Org-mode" - Grok 3
</p>
</blockquote>
</div>
</div>
<div id="outline-container-org5b0b31e" class="outline-2">
<h2 id="org5b0b31e">Recursos</h2>
<div class="outline-text-2" id="text-org5b0b31e">
<ul class="org-ul">
<li>[API de Vulners](<a href="https://vulners.com/api/">https://vulners.com/api/</a>)</li>
<li>[Manual de Org-mode](<a href="https://orgmode.org/manual/">https://orgmode.org/manual/</a>)</li>
</ul>

<p>
<a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-08-detecci%C3%B3n-de-vulnerabilidades-en-linux-con-bash-y-org-mode">2025-04-08-detección-de-vulnerabilidades-en-linux-con-bash-y-org-mode</a>
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-script.html">script</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[script]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09-analizando-vulnerabilidades-como-un-pro:-un-script-potenciado-para-emacs-org-mode-(ii).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09-analizando-vulnerabilidades-como-un-pro:-un-script-potenciado-para-emacs-org-mode-(ii).html</guid>
  <pubDate>Wed, 09 Apr 2025 09:45:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Detección de Vulnerabilidades en Linux con Bash y Org Mode]]></title>
  <description><![CDATA[
<div id="outline-container-org9ce4c31" class="outline-2">
<h2 id="org9ce4c31">Introducción</h2>
<div class="outline-text-2" id="text-org9ce4c31">
<p>
En la administración de sistemas Linux, una de las tareas más críticas es mantener actualizado el sistema y mitigar cualquier <b>vulnerabilidad</b> presente. Una vulnerabilidad es una debilidad en el sistema que puede ser explotada para ganar acceso no autorizado, ejecutar código malicioso o afectar la disponibilidad y confidencialidad del sistema.
</p>

<p>
Este artículo documenta un método simple pero efectivo para identificar vulnerabilidades conocidas (CVE) en paquetes instalados en una distribución basada en Debian/Ubuntu, utilizando:
</p>

<ul class="org-ul">
<li>Herramientas de línea de comandos (Bash, `dpkg`, `curl`)</li>
<li>Consulta a la API de Vulners.com</li>
<li>Documentación automática en formato Org Mode para su exportación a PDF o HTML</li>
</ul>
</div>
</div>
<div id="outline-container-org57862a5" class="outline-2">
<h2 id="org57862a5">Herramientas necesarias</h2>
<div class="outline-text-2" id="text-org57862a5">
<p>
Antes de comenzar, asegúrate de tener instaladas las siguientes utilidades:
</p>

<ul class="org-ul">
<li>`dpkg` (instalado por defecto en Ubuntu)</li>
<li>`curl` para realizar peticiones web</li>
<li>Editor Emacs con soporte para Org Mode</li>
</ul>

<p>
Puedes instalar `curl` así:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt update
sudo apt install curl
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf2320d0" class="outline-2">
<h2 id="orgf2320d0">Extracción del listado de software instalado</h2>
<div class="outline-text-2" id="text-orgf2320d0">
<p>
Primero generamos un listado de los paquetes instalados con sus versiones:
</p>

<div class="org-src-container">
<pre class="src src-bash">dpkg-query -W -f=<span style="color: #005F00;">'${binary:Package} ${Version}\n'</span> &gt; paquetes_instalados.txt
</pre>
</div>

<p>
Este archivo será leído por nuestro script de análisis de vulnerabilidades.
</p>
</div>
</div>
<div id="outline-container-org76a2eb3" class="outline-2">
<h2 id="org76a2eb3">Script de análisis con Bash</h2>
<div class="outline-text-2" id="text-org76a2eb3">
<p>
A continuación, presentamos el script en Bash que se encarga de:
</p>

<ol class="org-ol">
<li>Leer el archivo de paquetes instalados</li>
<li>Buscar cada paquete en la API pública de <a href="https://vulners.com">Vulners</a></li>
<li>Extraer posibles CVEs relacionados</li>
<li>Generar automáticamente un informe en formato Org Mode</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>

<span style="color: #004651;">OUTPUT</span>=<span style="color: #005F00;">"vulnerabilidades.org"</span>
<span style="color: #004651;">PACKAGE_LIST</span>=<span style="color: #005F00;">"paquetes_instalados.txt"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Verifica dependencias</span>
<span style="color: #D70000;">if ! </span><span style="color: #1F55A0;">command</span> -v curl &amp;&gt; /dev/null; <span style="color: #D70000;">then</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Este script requiere 'curl'. Inst&#225;lalo con: sudo apt install curl"</span>
    <span style="color: #D70000;">exit</span> 1
<span style="color: #D70000;">fi</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">T&#237;tulo del archivo Org</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"#+TITLE: An&#225;lisis de Vulnerabilidades del Sistema"</span> &gt; <span style="color: #005F00;">"$OUTPUT"</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"#+DATE: $(</span><span style="color: #1F55A0; font-weight: bold;">date '+%Y-%m-%d'</span><span style="color: #005F00;">)"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"* Resultados de escaneo de vulnerabilidades"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Obtener lista de paquetes instalados</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"[*] Obteniendo lista de paquetes..."</span>
dpkg-query -W -f=<span style="color: #005F00;">'${binary:Package} ${Version}\n'</span> &gt; <span style="color: #005F00;">"$PACKAGE_LIST"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Buscar vulnerabilidades por paquete</span>
<span style="color: #D70000;">while</span> <span style="color: #004651;">IFS</span>= read -r line; <span style="color: #D70000;">do</span>
    <span style="color: #004651;">nombre</span>=$(<span style="color: #1F55A0; font-weight: bold;">echo "$line" | awk '{print $1}'</span>)
    <span style="color: #004651;">version</span>=$(<span style="color: #1F55A0; font-weight: bold;">echo "$line" | awk '{print $2}'</span>)
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"[+] Buscando CVEs para: $nombre $version"</span>

    <span style="color: #004651;">query</span>=<span style="color: #005F00;">"${nombre}%20${version}"</span>
    <span style="color: #004651;">response</span>=$(<span style="color: #1F55A0; font-weight: bold;">curl -s "https://vulners.com/api/v3/search/lucene/?query=$query&amp;size=3"</span>)

    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"** $nombre $version"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>

    <span style="color: #D70000;">if </span><span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"$response"</span> | grep -q <span style="color: #005F00;">'"cvelist":'</span>; <span style="color: #D70000;">then</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   &#8594; Vulnerabilidades encontradas."</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   - Vulnerabilidades encontradas:"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"$response"</span> | grep -oP <span style="color: #005F00;">'"id":\s*"\K(CVE-[0-9\-]+)'</span> | uniq | sed <span style="color: #005F00;">'s/^/     - /'</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
    <span style="color: #D70000;">else</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   &#8594; Sin vulnerabilidades encontradas."</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   - Sin vulnerabilidades encontradas."</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
    <span style="color: #D70000;">fi</span>

    sleep 1  <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Para no sobrecargar el servidor</span>
<span style="color: #D70000;">done</span> &lt; <span style="color: #005F00;">"$PACKAGE_LIST"</span>

<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"[&#10004;] An&#225;lisis completado. Archivo generado: $OUTPUT"</span>
</pre>
</div>

<p>
Para usarlo:
</p>

<div class="org-src-container">
<pre class="src src-bash">chmod +x check_vulnerabilities_org.sh
./check_vulnerabilities_org.sh
</pre>
</div>
</div>
</div>
<div id="outline-container-org1e11a39" class="outline-2">
<h2 id="org1e11a39">Ejemplo de resultados</h2>
<div class="outline-text-2" id="text-org1e11a39">
<p>
A continuación se muestra un extracto real generado automáticamente con el script:
</p>

<p>
#+begin<sub>example</sub>
</p>
</div>
<div id="outline-container-orgac93d32" class="outline-3">
<h3 id="orgac93d32">openssl 3.0.2-0ubuntu1.15</h3>
<div class="outline-text-3" id="text-orgac93d32">
<ul class="org-ul">
<li>Vulnerabilidades encontradas:
<ul class="org-ul">
<li>CVE-2022-0778</li>
<li>CVE-2023-0464</li>
<li>CVE-2023-2650</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org5e1cb18" class="outline-3">
<h3 id="org5e1cb18">firefox 124.0</h3>
<div class="outline-text-3" id="text-org5e1cb18">
<ul class="org-ul">
<li>Vulnerabilidades encontradas:
<ul class="org-ul">
<li>CVE-2024-29943</li>
<li>CVE-2024-29944</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org51f7d0f" class="outline-3">
<h3 id="org51f7d0f">vlc 3.0.16</h3>
<div class="outline-text-3" id="text-org51f7d0f">
<ul class="org-ul">
<li>Sin vulnerabilidades encontradas.</li>
</ul>
<p>
#+end<sub>example</sub>
</p>
</div>
</div>
</div>
<div id="outline-container-orgd156269" class="outline-2">
<h2 id="orgd156269">Exportar resultados a PDF o HTML</h2>
<div class="outline-text-2" id="text-orgd156269">
<p>
Desde Emacs, abre el archivo generado `vulnerabilidades.org` y presiona:
</p>

<ul class="org-ul">
<li>`C-c C-e l o` → Exportar a PDF</li>
<li>`C-c C-e h o` → Exportar a HTML</li>
</ul>

<p>
Esto genera un informe profesional que puedes archivar, compartir o añadir a tu blog.
</p>
</div>
</div>
<div id="outline-container-orgcdbb603" class="outline-2">
<h2 id="orgcdbb603">Recomendaciones</h2>
<div class="outline-text-2" id="text-orgcdbb603">
<ul class="org-ul">
<li>Ejecutar este script regularmente como parte de tus tareas de mantenimiento.</li>
<li>Configurar alertas automáticas de CVE con herramientas como `apticron`, `unattended-upgrades` o `lynis`.</li>
<li>Complementar con escáneres más avanzados como <b>OpenVAS</b> o <b>Lynis</b> para auditorías completas.</li>
</ul>
</div>
</div>
<div id="outline-container-orgca61169" class="outline-2">
<h2 id="orgca61169">Conclusión</h2>
<div class="outline-text-2" id="text-orgca61169">
<p>
La seguridad no es un estado, es un proceso. Automatizar la detección de vulnerabilidades con herramientas simples como Bash, APIs públicas y Org Mode nos permite mantenernos al tanto de riesgos sin depender de soluciones comerciales complejas.
</p>

<p>
Este enfoque demuestra el poder de las herramientas libres combinadas: un sistema Linux, un script Bash y la flexibilidad de Emacs.
</p>
</div>
</div>
<div id="outline-container-org574fc33" class="outline-2">
<h2 id="org574fc33">Recursos</h2>
<div class="outline-text-2" id="text-org574fc33">
<ul class="org-ul">
<li><a href="https://vulners.com">Vulners API</a></li>
<li><a href="https://nvd.nist.gov">National Vulnerability Database</a></li>
<li><a href="https://cve.mitre.org">CVE Mitre</a></li>
<li><a href="https://cisofy.com/lynis/">Lynis Auditor</a></li>
<li><a href="https://www.greenbone.net/">Greenbone/OpenVAS</a></li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-orgmode.html">orgmode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[orgmode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-08-detecci%C3%B3n-de-vulnerabilidades-en-linux-con-bash-y-org-mode.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-08-detecci%C3%B3n-de-vulnerabilidades-en-linux-con-bash-y-org-mode.html</guid>
  <pubDate>Tue, 08 Apr 2025 04:55:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Tutorial de Seguridad en Linux: Mínimo de Protección ante Ataques Informáticos (II)]]></title>
  <description><![CDATA[
<div id="outline-container-org8b21ed4" class="outline-2">
<h2 id="org8b21ed4">Capítulo 2: Automatización y Análisis Avanzado</h2>
<div class="outline-text-2" id="text-org8b21ed4">
</div>
<div id="outline-container-orgc67696a" class="outline-3">
<h3 id="orgc67696a">Objetivos</h3>
<div class="outline-text-3" id="text-orgc67696a">
<ul class="org-ul">
<li>Automatizar tareas de seguridad con scripts.</li>
<li>Analizar logs para detectar patrones sospechosos.</li>
<li>Generar reportes de seguridad.</li>
</ul>
</div>
</div>
<div id="outline-container-orgd0bea96" class="outline-3">
<h3 id="orgd0bea96">Paso 1: Automatizar Tareas con Scripts en Bash</h3>
<div class="outline-text-3" id="text-orgd0bea96">
<p>
Crea un script para automatizar la revisión de logs y el bloqueo de IPs sospechosas.
</p>

<ol class="org-ol">
<li><p>
Script `security<sub>monitor.sh</sub>`:
</p>
<div class="org-src-container">
<pre class="src src-sh"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #1857a4;">LOG_FILE</span>=<span style="color: #a44185;">"/var/log/auth.log"</span>
<span style="color: #1857a4;">BAN_LIST</span>=<span style="color: #a44185;">"/etc/fail2ban/jail.local"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar IPs con m&#250;ltiples intentos fallidos</span>
<span style="color: #1857a4;">SUSPICIOUS_IPS</span>=$(<span style="color: #219fd5; font-weight: bold;">grep "Failed password" $LOG_FILE | awk '{print $(NF-3</span><span style="color: #a44185;">)}'</span> | sort | uniq -c | awk <span style="color: #a44185;">'$1 &gt; 3 {print $2}'</span>)

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Bloquear IPs sospechosas</span>
<span style="color: #219fd5; font-style: italic;">for</span> IP<span style="color: #219fd5; font-style: italic;"> in</span> $<span style="color: #1857a4;">SUSPICIOUS_IPS</span>; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Bloqueando IP: $IP"</span>
    sudo fail2ban-client set sshd banip $<span style="color: #1857a4;">IP</span>
<span style="color: #219fd5; font-style: italic;">done</span>
</pre>
</div></li>

<li><p>
Ejecutar el script diariamente con `cron`:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo crontab -e
</pre>
</div>
<p>
Añade la siguiente línea:
</p>
<div class="org-src-container">
<pre class="src src-nil">0 0 * * * /ruta/al/script/security_monitor.sh
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-orgd476327" class="outline-3">
<h3 id="orgd476327">Paso 2: Analizar Logs con Python</h3>
<div class="outline-text-3" id="text-orgd476327">
<p>
Crea un script en Python para analizar logs y generar reportes.
</p>

<ol class="org-ol">
<li><p>
Script `log<sub>analyzer.py</sub>`:
</p>
<div class="org-src-container">
<pre class="src src-python"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/usr/bin/env python3</span>
<span style="color: #219fd5; font-style: italic;">import</span> re
<span style="color: #219fd5; font-style: italic;">from</span> collections <span style="color: #219fd5; font-style: italic;">import</span> Counter

<span style="color: #1857a4;">LOG_FILE</span> = <span style="color: #a44185;">"/var/log/auth.log"</span>
<span style="color: #1857a4;">REPORT_FILE</span> = <span style="color: #a44185;">"/var/log/security_report.txt"</span>

<span style="color: #219fd5; font-style: italic;">def</span> <span style="color: #dc3eb7;">analyze_logs</span>():
    <span style="color: #219fd5; font-style: italic;">with</span> <span style="color: #dc3eb7;">open</span>(LOG_FILE, <span style="color: #a44185;">"r"</span>) <span style="color: #219fd5; font-style: italic;">as</span> <span style="color: #dc3eb7;">file</span>:
        <span style="color: #1857a4;">logs</span> = <span style="color: #dc3eb7;">file</span>.readlines()

    <span style="color: #1857a4;">failed_attempts</span> = Counter()
    <span style="color: #219fd5; font-style: italic;">for</span> log <span style="color: #219fd5; font-style: italic;">in</span> logs:
        <span style="color: #219fd5; font-style: italic;">if</span> <span style="color: #a44185;">"Failed password"</span> <span style="color: #219fd5; font-style: italic;">in</span> log:
            <span style="color: #1857a4;">ip</span> = re.search(r<span style="color: #a44185;">"\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b"</span>, log).group()
            <span style="color: #1857a4;">failed_attempts</span>[ip] += 1

    <span style="color: #219fd5; font-style: italic;">with</span> <span style="color: #dc3eb7;">open</span>(REPORT_FILE, <span style="color: #a44185;">"w"</span>) <span style="color: #219fd5; font-style: italic;">as</span> report:
        report.write(<span style="color: #a44185;">"Reporte de Seguridad</span><span style="color: #2f86d2;">\n</span><span style="color: #a44185;">"</span>)
        report.write(<span style="color: #a44185;">"===================</span><span style="color: #2f86d2;">\n</span><span style="color: #a44185;">"</span>)
        <span style="color: #219fd5; font-style: italic;">for</span> ip, count <span style="color: #219fd5; font-style: italic;">in</span> failed_attempts.most_common():
            report.write(f<span style="color: #a44185;">"IP: </span>{ip}<span style="color: #a44185;"> - Intentos fallidos: </span>{count}<span style="color: #2f86d2;">\n</span><span style="color: #a44185;">"</span>)

<span style="color: #219fd5; font-style: italic;">if</span> <span style="color: #dc3eb7;">__name__</span> == <span style="color: #a44185;">"__main__"</span>:
    analyze_logs()
</pre>
</div></li>

<li><p>
Ejecutar el script:
</p>
<div class="org-src-container">
<pre class="src src-sh">python3 /ruta/al/script/log_analyzer.py
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-orgb0c2406" class="outline-3">
<h3 id="orgb0c2406">Paso 3: Generar Reportes de Seguridad</h3>
<div class="outline-text-3" id="text-orgb0c2406">
<p>
Usa los scripts anteriores para generar reportes diarios.
</p>

<ol class="org-ol">
<li><p>
Combinar ambos scripts en un solo archivo:
</p>
<div class="org-src-container">
<pre class="src src-sh"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
/ruta/al/script/security_monitor.sh
python3 /ruta/al/script/log_analyzer.py
</pre>
</div></li>

<li><p>
Programar la ejecución con `cron`:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo crontab -e
</pre>
</div>
<p>
Añade la siguiente línea:
</p>
<div class="org-src-container">
<pre class="src src-nil">0 1 * * * /ruta/al/script/security_report.sh
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-org963fd93" class="outline-3">
<h3 id="org963fd93">Resultados Esperados</h3>
<div class="outline-text-3" id="text-org963fd93">
<ul class="org-ul">
<li>Tareas de seguridad automatizadas.</li>
<li>Logs analizados en busca de patrones sospechosos.</li>
<li>Reportes de seguridad generados diariamente.</li>
</ul>

<p>
&#x2014;
</p>
</div>
</div>
</div>
<div id="outline-container-org35e397b" class="outline-2">
<h2 id="org35e397b">Conclusión</h2>
<div class="outline-text-2" id="text-org35e397b">
<p>
Con estos dos capítulos, has implementado un mínimo de seguridad en tu entorno Linux. Desde la configuración básica del firewall hasta la automatización de tareas y el análisis avanzado de logs, este tutorial te proporciona las herramientas necesarias para proteger tu sistema ante ataques informáticos. ¡Ahora es tu turno de adaptar y mejorar estas técnicas según tus necesidades!
</p>
</div>
</div>
<div id="outline-container-org358fc11" class="outline-2">
<h2 id="org358fc11">Recursos Adicionales</h2>
<div class="outline-text-2" id="text-org358fc11">
<ul class="org-ul">
<li><a href="https://help.ubuntu.com/community/UFW">Documentación de UFW</a></li>
<li><a href="https://www.fail2ban.org/">Documentación de Fail2Ban</a></li>
<li><a href="https://docs.python.org/3/">Documentación de Python</a></li>
</ul>

<p>
```
</p>

<p>
&#x2014;
</p>

<p>
### Características del Tutorial
</p>

<ol class="org-ol">
<li><b><b>Estructura Clara</b></b>: Dividido en 2 capítulos con objetivos, pasos y resultados.</li>
<li><b><b>Scripts Prácticos</b></b>: Incluye scripts en Bash y Python para automatizar tareas.</li>
<li><b><b>Logs y Reportes</b></b>: Enseña a monitorear logs y generar reportes de seguridad.</li>
<li><b><b>Recursos Adicionales</b></b>: Proporciona enlaces a documentación oficial.</li>
</ol>

<p>
&#x2014;
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-python.html">python</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-firewall.html">firewall</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-logs.html">logs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[python]]></category>
  <category><![CDATA[firewall]]></category>
  <category><![CDATA[logs]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-tutorial-de-seguridad-en-linux:-m%C3%ADnimo-de-protecci%C3%B3n-ante-ataques-inform%C3%A1ticos-(ii).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-tutorial-de-seguridad-en-linux:-m%C3%ADnimo-de-protecci%C3%B3n-ante-ataques-inform%C3%A1ticos-(ii).html</guid>
  <pubDate>Tue, 18 Mar 2025 20:43:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Tutorial de Seguridad en Linux: Mínimo de Protección ante Ataques Informáticos (I)]]></title>
  <description><![CDATA[
<p>
AUTHOR: Tu Nombre
</p>
<div id="outline-container-orgac7d834" class="outline-2">
<h2 id="orgac7d834">Capítulo 1: Configuración Básica de Seguridad</h2>
<div class="outline-text-2" id="text-orgac7d834">
</div>
<div id="outline-container-org6aed3b4" class="outline-3">
<h3 id="org6aed3b4">Objetivos</h3>
<div class="outline-text-3" id="text-org6aed3b4">
<ul class="org-ul">
<li>Configurar un firewall básico.</li>
<li>Deshabilitar servicios innecesarios.</li>
<li>Monitorear logs del sistema.</li>
<li>Detectar intentos de acceso no autorizados.</li>
</ul>
</div>
</div>
<div id="outline-container-org6232592" class="outline-3">
<h3 id="org6232592">Paso 1: Configurar un Firewall Básico con `ufw`</h3>
<div class="outline-text-3" id="text-org6232592">
<p>
`ufw` (Uncomplicated Firewall) es una herramienta sencilla para gestionar reglas de firewall en Linux.
</p>

<ol class="org-ol">
<li><p>
Instalar `ufw`:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo apt update &amp;&amp; sudo apt install ufw -y
</pre>
</div></li>

<li><p>
Habilitar el firewall:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo ufw enable
</pre>
</div></li>

<li>Configurar reglas básicas:
<ul class="org-ul">
<li><p>
Permitir SSH:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo ufw allow ssh
</pre>
</div></li>
<li><p>
Permitir HTTP/HTTPS:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo ufw allow http
sudo ufw allow https
</pre>
</div></li>
<li><p>
Denegar todo el tráfico por defecto:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo ufw default deny incoming
sudo ufw default allow outgoing
</pre>
</div></li>
</ul></li>

<li><p>
Verificar el estado del firewall:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo ufw status verbose
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-orga4c3880" class="outline-3">
<h3 id="orga4c3880">Paso 2: Deshabilitar Servicios Innecesarios</h3>
<div class="outline-text-3" id="text-orga4c3880">
<p>
Los servicios innecesarios pueden ser un vector de ataque. Deshabilita los que no uses.
</p>

<ol class="org-ol">
<li><p>
Listar servicios activos:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo systemctl list-unit-files --type=service | grep enabled
</pre>
</div></li>

<li><p>
Deshabilitar un servicio (por ejemplo, `apache2`):
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo systemctl stop apache2
sudo systemctl disable apache2
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-org00217f7" class="outline-3">
<h3 id="org00217f7">Paso 3: Monitorear Logs del Sistema</h3>
<div class="outline-text-3" id="text-org00217f7">
<p>
Los logs son esenciales para detectar actividad sospechosa.
</p>

<ol class="org-ol">
<li><p>
Ver logs de autenticación:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo tail -f /var/log/auth.log
</pre>
</div></li>

<li><p>
Ver logs del firewall:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo tail -f /var/log/ufw.log
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-org91d8990" class="outline-3">
<h3 id="org91d8990">Paso 4: Detectar Intentos de Acceso No Autorizados</h3>
<div class="outline-text-3" id="text-org91d8990">
<p>
Usa `fail2ban` para bloquear IPs que realicen intentos de acceso fallidos.
</p>

<ol class="org-ol">
<li><p>
Instalar `fail2ban`:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo apt install fail2ban -y
</pre>
</div></li>

<li><p>
Configurar `fail2ban` para SSH:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo nano /etc/fail2ban/jail.local
</pre>
</div>
<p>
Añade lo siguiente:
</p>
<div class="org-src-container">
<pre class="src src-nil">[sshd]
enabled = true
maxretry = 3
bantime = 3600
</pre>
</div></li>

<li><p>
Reiniciar `fail2ban`:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo systemctl restart fail2ban
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-orgf3602c2" class="outline-3">
<h3 id="orgf3602c2">Resultados Esperados</h3>
<div class="outline-text-3" id="text-orgf3602c2">
<ul class="org-ul">
<li>Firewall activo y configurado.</li>
<li>Servicios innecesarios deshabilitados.</li>
<li>Logs monitoreados en tiempo real.</li>
<li>Intentos de acceso no autorizados bloqueados.</li>
</ul>

<p>
&#x2014;
</p>
</div>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-python.html">python</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-firewall.html">firewall</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-logs.html">logs</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[python]]></category>
  <category><![CDATA[firewall]]></category>
  <category><![CDATA[logs]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-tutorial-de-seguridad-en-linux:-m%C3%ADnimo-de-protecci%C3%B3n-ante-ataques-inform%C3%A1ticos-(i).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-tutorial-de-seguridad-en-linux:-m%C3%ADnimo-de-protecci%C3%B3n-ante-ataques-inform%C3%A1ticos-(i).html</guid>
  <pubDate>Tue, 18 Mar 2025 20:40:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Configuración Mínima de Seguridad con Scripts Bash y Python]]></title>
  <description><![CDATA[
<p>
Por Qwen AI
</p>
<div id="outline-container-org5ffb64a" class="outline-2">
<h2 id="org5ffb64a">Introducción</h2>
<div class="outline-text-2" id="text-org5ffb64a">
<p>
Este documento describe cómo configurar una seguridad mínima en un sistema Linux utilizando scripts escritos en <b><b>Bash</b></b> y <b><b>Python</b></b>. Las medidas incluyen:
</p>
<ul class="org-ul">
<li>Configuración básica de un <b><b>firewall</b></b> con IPTables.</li>
<li>Bloqueo de IPs sospechosas (anti-botnet).</li>
<li>Protección contra escaneos de puertos.</li>
<li>Configuración de políticas de red seguras.</li>
</ul>
</div>
</div>
<div id="outline-container-orgc1fc759" class="outline-2">
<h2 id="orgc1fc759">Configuración Básica del Firewall con IPTables (Bash)</h2>
<div class="outline-text-2" id="text-orgc1fc759">
<p>
El siguiente script configura un firewall básico utilizando IPTables para permitir solo el tráfico necesario.
</p>

<p>
<b><b>Script Bash:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Limpiar todas las reglas existentes</span>
iptables -F
iptables -X

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Pol&#237;tica por defecto: Denegar todo el tr&#225;fico entrante y saliente</span>
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Permitir tr&#225;fico local (loopback)</span>
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Permitir conexiones establecidas o relacionadas</span>
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Permitir SSH (puerto 22) desde una IP espec&#237;fica (opcional)</span>
<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Reemplaza "TU_IP" con tu direcci&#243;n IP p&#250;blica</span>
iptables -A INPUT -p tcp --dport 22 -s TU_IP -j ACCEPT

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Permitir HTTP (puerto 80) y HTTPS (puerto 443)</span>
iptables -A INPUT -p tcp --dport 80 -j ACCEPT
iptables -A INPUT -p tcp --dport 443 -j ACCEPT

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Registrar intentos de acceso no autorizados</span>
iptables -A INPUT -j LOG --log-prefix <span style="color: #a44185;">"IPTables-Dropped: "</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Guardar las reglas de IPTables</span>
iptables-save &gt; /etc/iptables/rules.v4
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>Asegúrate de tener permisos de superusuario (`sudo`) para ejecutar este script.</li>
<li>Si bloqueas accidentalmente el acceso SSH, puedes perder el control remoto del servidor.</li>
</ul>
</div>
</div>
<div id="outline-container-orgc0d97ed" class="outline-2">
<h2 id="orgc0d97ed">Bloqueo de IPs Sospechosas (Anti-Botnet)</h2>
<div class="outline-text-2" id="text-orgc0d97ed">
<p>
El siguiente script bloquea IPs sospechosas utilizando una lista negra predefinida.
</p>

<p>
<b><b>Script Bash:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Descargar una lista negra de IPs conocidas (por ejemplo, Emerging Threats)</span>
wget -q https://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt -O /tmp/blocked_ips.txt

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Leer el archivo y bloquear cada IP</span>
<span style="color: #219fd5; font-style: italic;">while </span><span style="color: #dc3eb7;">read</span> -r ip; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #219fd5; font-style: italic;">if</span> [[ $<span style="color: #1857a4;">ip</span> =~ ^[0-9]+<span style="color: #a44185;">\.</span>[0-9]+<span style="color: #a44185;">\.</span>[0-9]+<span style="color: #a44185;">\.</span>[0-9]+$ ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        iptables -A INPUT -s <span style="color: #a44185;">"$ip"</span> -j DROP
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Bloqueada IP: $ip"</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
<span style="color: #219fd5; font-style: italic;">done</span> &lt; /tmp/blocked_ips.txt

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Guardar las reglas de IPTables</span>
iptables-save &gt; /etc/iptables/rules.v4
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>La lista negra puede actualizarse periódicamente para mantenerse al día con nuevas amenazas.</li>
<li>Puedes personalizar la fuente de la lista negra según tus necesidades.</li>
</ul>
</div>
</div>
<div id="outline-container-orgd6dd9af" class="outline-2">
<h2 id="orgd6dd9af">Protección Contra Escaneos de Puertos (Python)</h2>
<div class="outline-text-2" id="text-orgd6dd9af">
<p>
El siguiente script utiliza Python para monitorear intentos de escaneo de puertos y bloquear IPs sospechosas.
</p>

<p>
<b><b>Script Python:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-python"><span style="color: #219fd5; font-style: italic;">import</span> os
<span style="color: #219fd5; font-style: italic;">import</span> time
<span style="color: #219fd5; font-style: italic;">from</span> collections <span style="color: #219fd5; font-style: italic;">import</span> defaultdict

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Diccionario para rastrear intentos de conexi&#243;n por IP</span>
<span style="color: #1857a4;">connection_attempts</span> = defaultdict(<span style="color: #dc3eb7;">int</span>)

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Umbral de intentos sospechosos</span>
<span style="color: #1857a4;">THRESHOLD</span> = 5
<span style="color: #1857a4;">BLOCK_TIME</span> = 60  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Tiempo en segundos para bloquear una IP</span>

<span style="color: #219fd5; font-style: italic;">def</span> <span style="color: #dc3eb7;">block_ip</span>(ip):
    <span style="color: #60a8a1; font-style: italic;">"""Bloquea una IP usando IPTables."""</span>
    os.system(f<span style="color: #a44185;">"iptables -A INPUT -s </span>{ip}<span style="color: #a44185;"> -j DROP"</span>)
    <span style="color: #dc3eb7;">print</span>(f<span style="color: #a44185;">"Bloqueada IP sospechosa: </span>{ip}<span style="color: #a44185;">"</span>)

<span style="color: #219fd5; font-style: italic;">def</span> <span style="color: #dc3eb7;">monitor_logs</span>():
    <span style="color: #60a8a1; font-style: italic;">"""Monitorea los logs del sistema en busca de intentos de conexi&#243;n."""</span>
    <span style="color: #219fd5; font-style: italic;">with</span> <span style="color: #dc3eb7;">open</span>(<span style="color: #a44185;">"/var/log/auth.log"</span>, <span style="color: #a44185;">"r"</span>) <span style="color: #219fd5; font-style: italic;">as</span> log_file:
        log_file.seek(0, 2)  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Ir al final del archivo</span>
        <span style="color: #219fd5; font-style: italic;">while</span> <span style="color: #2f86d2;">True</span>:
            <span style="color: #1857a4;">line</span> = log_file.readline()
            <span style="color: #219fd5; font-style: italic;">if</span> <span style="color: #a44185;">"Failed password"</span> <span style="color: #219fd5; font-style: italic;">in</span> line:
                <span style="color: #1857a4;">ip</span> = line.split(<span style="color: #a44185;">"from "</span>)[1].split(<span style="color: #a44185;">" port"</span>)[0]
                <span style="color: #1857a4;">connection_attempts</span>[ip] += 1
                <span style="color: #dc3eb7;">print</span>(f<span style="color: #a44185;">"Intento de conexi&#243;n desde: </span>{ip}<span style="color: #a44185;"> (</span>{connection_attempts[ip]}<span style="color: #a44185;"> intentos)"</span>)

                <span style="color: #219fd5; font-style: italic;">if</span> connection_attempts[ip] &gt;= THRESHOLD:
                    block_ip(ip)
                    time.sleep(BLOCK_TIME)
                    <span style="color: #1857a4;">connection_attempts</span>[ip] = 0  <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Reiniciar contador</span>
            time.sleep(1)

<span style="color: #219fd5; font-style: italic;">if</span> <span style="color: #dc3eb7;">__name__</span> == <span style="color: #a44185;">"__main__"</span>:
    monitor_logs()
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>Este script requiere acceso a los logs del sistema (`/var/log/auth.log`).</li>
<li>Asegúrate de tener instalado Python y permisos de superusuario.</li>
</ul>
</div>
</div>
<div id="outline-container-orgd2ddd5a" class="outline-2">
<h2 id="orgd2ddd5a">Configuración de Políticas de Red Seguras (Bash)</h2>
<div class="outline-text-2" id="text-orgd2ddd5a">
<p>
El siguiente script configura políticas adicionales para mejorar la seguridad de la red.
</p>

<p>
<b><b>Script Bash:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Deshabilitar el redireccionamiento IP</span>
<span style="color: #dc3eb7;">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/all/send_redirects
<span style="color: #dc3eb7;">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Habilitar protecci&#243;n contra SYN Flood</span>
<span style="color: #dc3eb7;">echo</span> 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Deshabilitar el reenv&#237;o de paquetes IPv4</span>
<span style="color: #dc3eb7;">echo</span> 0 &gt; /proc/sys/net/ipv4/ip_forward

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Habilitar protecci&#243;n contra IP Spoofing</span>
<span style="color: #219fd5; font-style: italic;">for</span> interface<span style="color: #219fd5; font-style: italic;"> in</span> $(<span style="color: #219fd5; font-weight: bold;">ls /sys/class/net | grep -v lo</span>); <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #dc3eb7;">echo</span> 1 &gt; /proc/sys/net/ipv4/conf/$<span style="color: #1857a4;">interface</span>/rp_filter
<span style="color: #219fd5; font-style: italic;">done</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Guardar cambios en sysctl.conf</span>
cat &lt;&lt;EOF &gt;&gt; /etc/sysctl.conf
<span style="color: #a44185;">net.ipv4.conf.all.send_redirects = 0</span>
<span style="color: #a44185;">net.ipv4.conf.default.send_redirects = 0</span>
<span style="color: #a44185;">net.ipv4.tcp_syncookies = 1</span>
<span style="color: #a44185;">net.ipv4.ip_forward = 0</span>
<span style="color: #a44185;">EOF</span>

sysctl -p
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>Estas configuraciones mejoran la seguridad del sistema contra ataques comunes.</li>
<li>Asegúrate de probar los cambios en un entorno seguro antes de aplicarlos en producción.</li>
</ul>
</div>
</div>
<div id="outline-container-org12afde5" class="outline-2">
<h2 id="org12afde5">Conclusión</h2>
<div class="outline-text-2" id="text-org12afde5">
<p>
Este documento proporciona scripts básicos en Bash y Python para configurar una seguridad mínima en sistemas Linux. Recuerda que estas medidas son solo un punto de partida y deben complementarse con auditorías regulares, actualizaciones de software y mejores prácticas de seguridad.
</p>

<p>
Para más información, consulta la documentación oficial de IPTables y las recomendaciones de seguridad para tu distribución de Linux.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-python.html">python</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-internet.html">internet</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[python]]></category>
  <category><![CDATA[internet]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-configuraci%C3%B3n-m%C3%ADnima-de-seguridad-con-scripts-bash-y-python.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-configuraci%C3%B3n-m%C3%ADnima-de-seguridad-con-scripts-bash-y-python.html</guid>
  <pubDate>Tue, 18 Mar 2025 16:25:00 +0100</pubDate>
</item>
</channel>
</rss>
