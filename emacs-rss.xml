<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title><![CDATA[Example.com - emacs]]></title>
<description><![CDATA[Example.com - emacs]]></description>
<link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI//tag-emacs.html</link>
<lastBuildDate>Tue, 15 Apr 2025 02:31:42 +0200</lastBuildDate>
<item>
  <title><![CDATA[La Cultura de la Vibra: Un Glosario de Términos con el Prefijo Vibra]]></title>
  <description><![CDATA[
<div id="outline-container-orgdeb2b42" class="outline-2">
<h2 id="orgdeb2b42"><span class="section-number-2">1.</span> Introducción a la Cultura de la Vibra (Vibe )</h2>
<div class="outline-text-2" id="text-1">
<p>
Bienvenidos a nuestro blog, un espacio dedicado a explorar cómo damos forma a nuestras experiencias creativas y productivas a través de la <b>vibra</b>. En el mundo actual, la vibra no es solo un estado de ánimo pasajero: es una forma de diseñar intencionalmente nuestra relación con el trabajo, el arte y la tecnología. Hoy, nos sumergimos en un glosario de términos con el prefijo <b>vibra-</b>, que capturan las maneras en que moldeamos nuestros entornos, flujos de trabajo y mentalidades para que resuenen con nuestra energía única.
</p>

<p>
El prefijo <b>vibra-</b> se ha convertido en una herramienta para describir enfoques, estéticas y filosofías que transforman lo cotidiano en algo especial. Ya sea ajustando tu espacio de trabajo para inspirarte, curando una atmósfera para concentrarte o explorando nuevas formas de expresión, estos términos reflejan el corazón de una vida impulsada por la vibra. A continuación, presentamos un glosario detallado, escrito en formato Org-mode para los amantes de la organización, que define estas expresiones en un contexto genérico, aplicable a cualquier ámbito creativo o profesional. Al final, incluimos una tabla con los términos originales en inglés para referencia. ¡Prepárate para descubrir cómo hacer que tu mundo vibre a tu ritmo!
</p>
</div>
</div>
<div id="outline-container-org4b91dac" class="outline-2">
<h2 id="org4b91dac"><span class="section-number-2">2.</span> Glosario de Términos Relacionados con Vibra</h2>
<div class="outline-text-2" id="text-2">
</div>
<div id="outline-container-vibra-codificacion" class="outline-3">
<h3 id="vibra-codificacion"><span class="section-number-3">2.1.</span> Vibra-Codificación</h3>
<div class="outline-text-3" id="text-vibra-codificacion">
<p>
<b>Definición</b>: Programar con un enfoque en crear una experiencia inmersiva que fomente el estado de flujo.
</p>

<p>
<b>Descripción</b>: La vibra-codificación eleva la programación más allá de la mera escritura de código. Se trata de construir un entorno que te envuelva: una combinación de herramientas, estética y atmósfera. Puede ser configurar tu editor con un tema oscuro, conectar auriculares con música ambiental o trabajar en un espacio con luz tenue. Los vibra-codificadores eligen herramientas que se sienten fluidas, como editores con autocompletado ágil o terminales personalizadas, y ajustan su entorno para minimizar distracciones y maximizar la creatividad.
</p>

<p>
<b>Ejemplo</b>: Un vibra-codificador podría usar Visual Studio Code con el tema <b>Dracula</b>, una lista de reproducción de synthwave y una lámpara de escritorio con luz cálida, escribiendo código Python mientras siente que está en una nave espacial.
</p>

<p>
<b>Herramientas</b>: Editores como VS Code, Sublime Text; música ambiental; configuraciones de teclado ergonómicas.
</p>
</div>
</div>
<div id="outline-container-vibra-hackeo" class="outline-3">
<h3 id="vibra-hackeo"><span class="section-number-3">2.2.</span> Vibra-Hackeo</h3>
<div class="outline-text-3" id="text-vibra-hackeo">
<p>
<b>Definición</b>: Experimentar con herramientas, rutinas o entornos para optimizar la atmósfera emocional y estética de tu trabajo.
</p>

<p>
<b>Descripción</b>: El vibra-hackeo es el arte de ajustar los detalles para que tu espacio o flujo de trabajo se sienta perfecto. Puede ser reorganizar tu escritorio, probar nuevas aplicaciones de productividad o crear atajos personalizados en tu software favorito. Los vibra-hackeadores buscan ese momento en que todo encaja: desde la paleta de colores de una app hasta la disposición de las ventanas en su pantalla. Es una exploración constante para alinear las herramientas con el estado mental.
</p>

<p>
<b>Ejemplo</b>: Un vibra-hackeador podría instalar una extensión de Chrome para personalizar los colores de Notion, usar un temporizador Pomodoro con sonidos suaves y mover su monitor a un ángulo que reduzca el cansancio visual.
</p>

<p>
<b>Herramientas</b>: Aplicaciones como Notion, Obsidian; extensiones de navegador; gadgets de escritorio.
</p>
</div>
</div>
<div id="outline-container-vibra-revision" class="outline-3">
<h3 id="vibra-revision"><span class="section-number-3">2.3.</span> Vibra-Revisión</h3>
<div class="outline-text-3" id="text-vibra-revision">
<p>
<b>Definición</b>: Evaluar tu entorno o herramientas para asegurarte de que se alinean con tus necesidades emocionales o productivas.
</p>

<p>
<b>Descripción</b>: La vibra-revisión es un momento de introspección. ¿Tu espacio de trabajo te inspira o te frustra? ¿Tus aplicaciones son ágiles o están llenas de funciones que no usas? Los vibra-revisores hacen una pausa para analizar: prueban nuevos flujos de trabajo, eliminan distracciones o reorganizan su rutina. Es como limpiar tu escritorio mental, asegurándote de que cada elemento contribuya a una vibra positiva.
</p>

<p>
<b>Ejemplo</b>: Un vibra-revisor podría darse cuenta de que las notificaciones de su teléfono rompen su concentración, así que activa el modo “No molestar” y reorganiza su calendario para dedicar las mañanas a tareas creativas.
</p>

<p>
<b>Herramientas</b>: Aplicaciones de seguimiento del tiempo como Toggl; listas de tareas; modo “No molestar”.
</p>
</div>
</div>
<div id="outline-container-vibra-creacion" class="outline-3">
<h3 id="vibra-creacion"><span class="section-number-3">2.4.</span> Vibra-Creación</h3>
<div class="outline-text-3" id="text-vibra-creacion">
<p>
<b>Definición</b>: Diseñar intencionalmente un entorno o experiencia para evocar un estado de ánimo o estética específica.
</p>

<p>
<b>Descripción</b>: La vibra-creación es curar cada detalle para contar una historia. Puede ser decorar tu espacio con plantas y luces LED, elegir una paleta de colores para tus proyectos o seleccionar música que te transporte. Los vibra-creadores transforman lo ordinario en algo único, ya sea diseñando una presentación con tipografías elegantes o configurando un rincón acogedor para leer. El objetivo es un entorno que se sienta como una extensión de tu personalidad.
</p>

<p>
<b>Ejemplo</b>: Un vibra-creador podría decorar su escritorio con velas aromáticas, usar Canva para diseñar un moodboard con tonos pastel y escuchar jazz suave mientras escribe un diario.
</p>

<p>
<b>Herramientas</b>: Canva, Figma; accesorios de decoración; aplicaciones de música como Spotify.
</p>
</div>
</div>
<div id="outline-container-vibra-navegacion" class="outline-3">
<h3 id="vibra-navegacion"><span class="section-number-3">2.5.</span> Vibra-Navegación</h3>
<div class="outline-text-3" id="text-vibra-navegacion">
<p>
<b>Definición</b>: Explorar comunidades, herramientas o inspiraciones para encontrar elementos que resuenen con tu energía deseada.
</p>

<p>
<b>Descripción</b>: La vibra-navegación es una aventura en busca de lo que te motiva. Es desplazarte por Pinterest para encontrar ideas de diseño, unirte a foros en línea para descubrir apps nuevas o probar configuraciones recomendadas por otros. Los vibra-navegadores son curiosos, siempre buscando esa chispa que conecte con su estado de ánimo, ya sea una nueva técnica de productividad o una comunidad creativa.
</p>

<p>
<b>Ejemplo</b>: Un vibra-navegador podría descubrir una comunidad en Reddit sobre minimalismo, probar una app de notas como Bear y compartir su experiencia en un grupo de Discord.
</p>

<p>
<b>Herramientas</b>: Reddit, Discord; plataformas como Pinterest; apps de notas como Bear, Evernote.
</p>
</div>
</div>
<div id="outline-container-vibra-cambio" class="outline-3">
<h3 id="vibra-cambio"><span class="section-number-3">2.6.</span> Vibra-Cambio</h3>
<div class="outline-text-3" id="text-vibra-cambio">
<p>
<b>Definición</b>: Alterar deliberadamente tu entorno o herramientas para transitar entre estados emocionales o productivos.
</p>

<p>
<b>Descripción</b>: La vibra-cambio es sobre adaptarte al momento. ¿Necesitas pasar de un trabajo analítico a uno creativo? Cambia la iluminación, la música o la herramienta que usas. Los vibra-cambiadores saben que el entorno influye en la mente, así que ajustan su espacio para reflejar el estado que buscan: de un escritorio ordenado para planificar a un caos organizado para idear.
</p>

<p>
<b>Ejemplo</b>: Un vibra-cambiador podría mover su portátil a un café, cambiar su lista de reproducción de techno a folk acústico y abrir un cuaderno para esbozar ideas después de una mañana de correos.
</p>

<p>
<b>Herramientas</b>: Listas de reproducción personalizadas; cuadernos físicos; apps de cambio de contexto como Todoist.
</p>
</div>
</div>
<div id="outline-container-vibra-ajuste" class="outline-3">
<h3 id="vibra-ajuste"><span class="section-number-3">2.7.</span> Vibra-Ajuste</h3>
<div class="outline-text-3" id="text-vibra-ajuste">
<p>
<b>Definición</b>: Experimentar juguetónmente con pequeños cambios para afinar la atmósfera de tu espacio o flujo de trabajo.
</p>

<p>
<b>Descripción</b>: El vibra-ajuste celebra las mejoras sutiles. Es cambiar el fondo de pantalla de tu ordenador, ajustar el brillo de tu monitor o probar una nueva fuente en tu editor de texto. Los vibra-ajustadores encuentran alegría en los detalles, sabiendo que un pequeño cambio puede transformar la experiencia sin necesidad de una renovación completa.
</p>

<p>
<b>Ejemplo</b>: Un vibra-ajustador podría probar una fuente como <b>JetBrains Mono</b> en su editor, añadir un widget de clima a su escritorio y mover una planta para que reciba más luz.
</p>

<p>
<b>Herramientas</b>: Fuentes personalizadas; widgets de escritorio; accesorios decorativos.
</p>
</div>
</div>
<div id="outline-container-vibra-tejido" class="outline-3">
<h3 id="vibra-tejido"><span class="section-number-3">2.8.</span> Vibra-Tejido</h3>
<div class="outline-text-3" id="text-vibra-tejido">
<p>
<b>Definición</b>: Combinar múltiples elementos—herramientas, estética, rutinas—en una experiencia cohesiva y vibrante.
</p>

<p>
<b>Descripción</b>: El vibra-tejido es el arte de la síntesis. Es integrar tus apps favoritas con un estilo visual unificado, coordinar tu calendario con pausas creativas o mezclar música y aromas para potenciar tu enfoque. Los vibra-tejedores crean sistemas que fluyen naturalmente, donde cada parte refuerza la vibra general, haciendo que el trabajo o la creación se sientan sin esfuerzo.
</p>

<p>
<b>Ejemplo</b>: Un vibra-tejedor podría usar Trello para organizar proyectos, sincronizarlo con una lista de reproducción que cambia según la tarea y trabajar en un espacio con paredes pintadas de azul profundo para calmar la mente.
</p>

<p>
<b>Herramientas</b>: Trello, Asana; altavoces inteligentes; elementos de diseño interior.
</p>
</div>
</div>
</div>
<div id="outline-container-orgbe61715" class="outline-2">
<h2 id="orgbe61715"><span class="section-number-2">3.</span> Conclusión</h2>
<div class="outline-text-2" id="text-3">
<p>
El léxico de <b>vibra-</b> es más que palabras: es una invitación a vivir con intención, moldeando tus entornos y herramientas para que reflejen quién eres. Ya seas un vibra-codificador inmerso en tu código, un vibra-creador diseñando un espacio que inspira o un vibra-tejedor uniendo todo en armonía, estos términos te animan a explorar y personalizar. ¿Tienes tus propios términos o trucos para la vibra? Compártelos en los comentarios o en nuestras redes. Hasta la próxima, sigue experimentando, sigue creando y, sobre todo, sigue vibrando.
</p>

<div class="org-src-container">
<pre class="src src-text"># &#161;Un peque&#241;o truco para la vibra!
Crea un ritual diario: antes de empezar a trabajar, elige una canci&#243;n que defina tu energ&#237;a del d&#237;a, 
ajusta la iluminaci&#243;n de tu espacio y escribe una intenci&#243;n en una nota adhesiva. 
&#161;Peque&#241;os detalles, gran vibra!
</pre>
</div>
</div>
</div>
<div id="outline-container-org0747c67" class="outline-2">
<h2 id="org0747c67"><span class="section-number-2">4.</span> Tabla de Términos en Inglés</h2>
<div class="outline-text-2" id="text-4">
<table class="doctrinal-table" border="2" cellspacing="0" cellpadding="5">


<colgroup>
<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Término en Catellano</th>
<th scope="col" class="org-left">Término en Inglés</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Vibra-Codificación</td>
<td class="org-left">Vibe Coding</td>
</tr>

<tr>
<td class="org-left">Vibra-Hackeo</td>
<td class="org-left">Vibe Hacking</td>
</tr>

<tr>
<td class="org-left">Vibra-Revisión</td>
<td class="org-left">Vibe Checking</td>
</tr>

<tr>
<td class="org-left">Vibra-Creación</td>
<td class="org-left">Vibe Crafting</td>
</tr>

<tr>
<td class="org-left">Vibra-Navegación</td>
<td class="org-left">Vibe Surfing</td>
</tr>

<tr>
<td class="org-left">Vibra-Cambio</td>
<td class="org-left">Vibe Shifting</td>
</tr>

<tr>
<td class="org-left">Vibra-Ajuste</td>
<td class="org-left">Vibe Tinkering</td>
</tr>

<tr>
<td class="org-left">Vibra-Tejido</td>
<td class="org-left">Vibe Weaving</td>
</tr>
</tbody>
</table>

<p>
<b>¡Que tu mundo siempre vibre en sintonía!</b>
</p>

<p>
<a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-29-vibe-coding-programaci%C3%B3n-con-esteroides">2025-03-29-vibe-coding-programación-con-esteroides</a>
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-vive.html">vive</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-cultura.html">cultura</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-opiniones.html">opiniones</a> </div>]]></description>
  <category><![CDATA[vive]]></category>
  <category><![CDATA[cultura]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[opiniones]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-14-la-cultura-de-la-vibra-un-glosario-de-t-rminos-con-el-prefijo-vibra.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-14-la-cultura-de-la-vibra-un-glosario-de-t-rminos-con-el-prefijo-vibra.html</guid>
  <pubDate>Mon, 14 Apr 2025 05:48:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Vibe Hacking: Personalizando tu Experiencia Digital]]></title>
  <description><![CDATA[
<div id="outline-container-orgaff7e65" class="outline-2">
<h2 id="orgaff7e65">Introducción</h2>
</div>


<div id="outline-container-org56c7b3d" class="outline-2">
<h2 id="org56c7b3d">Vibe Hacking: Una Introducción</h2>
<div class="outline-text-2" id="text-org56c7b3d">
<p>
"Vibe hacking" se refiere a la práctica de modificar conscientemente nuestros entornos digitales y físicos para crear una atmósfera o "vibe" específica que mejore nuestra experiencia, estado de ánimo y productividad. Es una filosofía que combina elementos de diseño, psicología ambiental y tecnología para personalizar los espacios que habitamos.
</p>
</div>
<div id="outline-container-org704bcb4" class="outline-3">
<h3 id="org704bcb4">¿Qué es exactamente el "vibe"?</h3>
<div class="outline-text-3" id="text-org704bcb4">
<p>
El concepto de "vibe" (vibra o ambiente) es algo subjetivo pero tangible - ese sentimiento particular que se experimenta en un espacio, ya sea digital o físico. Incluye componentes visuales, auditivos, e incluso conceptuales que, en conjunto, producen una sensación específica.
</p>
</div>
</div>
<div id="outline-container-org631b69a" class="outline-3">
<h3 id="org631b69a">Vibe Hacking vs. Personalización Tradicional</h3>
<div class="outline-text-3" id="text-org631b69a">
<p>
Lo que distingue al vibe hacking de la simple personalización es su enfoque holístico y la intención consciente detrás de las modificaciones:
</p>
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Personalización Tradicional</th>
<th scope="col" class="org-left">Vibe Hacking</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Ajustes estéticos superficiales</td>
<td class="org-left">Transformación coherente del entorno</td>
</tr>

<tr>
<td class="org-left">Enfoque en apariencia</td>
<td class="org-left">Enfoque en experiencia y sensación</td>
</tr>

<tr>
<td class="org-left">Ajustes independientes</td>
<td class="org-left">Sistema integrado de modificaciones</td>
</tr>

<tr>
<td class="org-left">Principalmente visual</td>
<td class="org-left">Multisensorial (visual, auditivo, táctil)</td>
</tr>

<tr>
<td class="org-left">A menudo preestablecido</td>
<td class="org-left">Altamente personalizado y en evolución</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div id="outline-container-orgb42caa8" class="outline-2">
<h2 id="orgb42caa8">Origen y Evolución del Vibe Hacking</h2>
<div class="outline-text-2" id="text-orgb42caa8">
</div>
<div id="outline-container-org711f40e" class="outline-3">
<h3 id="org711f40e">Raíces Culturales</h3>
<div class="outline-text-3" id="text-org711f40e">
<p>
El vibe hacking tiene sus raíces en diversas tradiciones:
</p>

<ul class="org-ul">
<li><b>Feng Shui y diseño de espacios</b>: Prácticas milenarias de armonización de espacios.</li>
<li><b>Cultura hacker</b>: La ética de modificar sistemas para hacerlos funcionar mejor para el usuario.</li>
<li><b>Estética vaporwave y web nostálgica</b>: Movimientos que remezclan elementos visuales y sonoros para evocar estados emocionales específicos.</li>
<li><b>Minimalismo digital</b>: Filosofía de reducir distracciones y crear entornos de trabajo focalizados.</li>
</ul>
</div>
</div>
<div id="outline-container-orga4e5fd3" class="outline-3">
<h3 id="orga4e5fd3">Desarrollo Contemporáneo</h3>
<div class="outline-text-3" id="text-orga4e5fd3">
<p>
A partir de 2018-2020, el concepto comenzó a ganar tracción en comunidades online:
</p>

<ol class="org-ol">
<li><b>Comunidades de personalización</b>: Como r/unixporn en Reddit, donde usuarios comparten configuraciones altamente personalizadas de sistemas Unix.</li>
<li><b>Cultura WFH post-pandemia</b>: El aumento del trabajo remoto impulsó a las personas a optimizar sus espacios digitales y físicos.</li>
<li><b>Movimiento "Digital Gardens"</b>: La tendencia de crear espacios web personales con un enfoque en crecimiento orgánico y expresión personal.</li>
<li><b>Herramientas como Notion, Obsidian y por supuesto, Emacs</b>: Plataformas altamente personalizables que permiten a los usuarios crear sistemas adaptados a sus necesidades precisas.</li>
</ol>
</div>
</div>
<div id="outline-container-org0c1093c" class="outline-3">
<h3 id="org0c1093c">Evolución en la Era Actual (2022-2025)</h3>
<div class="outline-text-3" id="text-org0c1093c">
<ul class="org-ul">
<li>Integración de IA para facilitar la personalización avanzada</li>
<li>Enfoque en bienestar digital y salud mental</li>
<li>Desarrollo de comunidades dedicadas al intercambio de "vibes" personalizados</li>
<li>Herramientas cada vez más sofisticadas para la personalización multisensorial</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org9052f2d" class="outline-2">
<h2 id="org9052f2d">El Vibe Hacking en la Práctica</h2>
<div class="outline-text-2" id="text-org9052f2d">
</div>
<div id="outline-container-org504158c" class="outline-3">
<h3 id="org504158c">Principios Fundamentales</h3>
<div class="outline-text-3" id="text-org504158c">
<ol class="org-ol">
<li><b>Intencionalidad</b>: Cada cambio tiene un propósito específico</li>
<li><b>Coherencia</b>: Los elementos se combinan para crear una experiencia unificada</li>
<li><b>Iteración</b>: Evolución constante según necesidades cambiantes</li>
<li><b>Significado personal</b>: Conexión emocional con los elementos elegidos</li>
</ol>
</div>
</div>
<div id="outline-container-org10fb499" class="outline-3">
<h3 id="org10fb499">Dimensiones del Vibe Hacking</h3>
<div class="outline-text-3" id="text-org10fb499">

<figure id="org0f89e01">
<img src="images/vibe-hacking-diagram.png" alt="vibe-hacking-diagram.png">

</figure>

<p>
<a href="images/vibe-hacking-diagram.png">Ver imagen a tamaño completo</a>
</p>
</div>
</div>
</div>
<div id="outline-container-org9d1f54d" class="outline-2">
<h2 id="org9d1f54d">Vibe Hacking en Emacs: El Caso Paradigmático</h2>
<div class="outline-text-2" id="text-org9d1f54d">
<p>
Emacs representa quizás el ejemplo más puro de vibe hacking en el ámbito del software:
</p>
</div>
<div id="outline-container-org4a5a386" class="outline-3">
<h3 id="org4a5a386">Características que Hacen de Emacs un Paraíso para Vibe Hackers</h3>
<div class="outline-text-3" id="text-org4a5a386">
<ul class="org-ul">
<li><b>Personalización profunda</b>: No solo de apariencia sino de comportamiento</li>
<li><b>Integración de múltiples dominios</b>: Desde escritura hasta programación, organización personal y comunicación</li>
<li><b>Configuración programable</b>: Elisp permite modificaciones limitadas solo por la imaginación</li>
<li><b>Comunidad de compartición</b>: Ecosistema vibrante de paquetes y configuraciones</li>
</ul>
</div>
</div>
<div id="outline-container-org6ddc106" class="outline-3">
<h3 id="org6ddc106">Ejemplos de Vibe Hacking en Emacs</h3>
<div class="outline-text-3" id="text-org6ddc106">
</div>
<div id="outline-container-org82a2e89" class="outline-4">
<h4 id="org82a2e89">Flujos de Trabajo para Estados Mentales Específicos</h4>
<div class="outline-text-4" id="text-org82a2e89">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n para "Deep Work Mode"</span>
(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">my/deep-work-mode</span> ()
  <span style="color: #60a8a1; font-style: italic;">"Configurar Emacs para trabajo profundo sin distracciones."</span>
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (doom-modeline-mode -1)  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Ocultar modeline</span>
  (olivetti-mode 1)        <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Centrar texto</span>
  (display-time-mode -1)   <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Ocultar hora</span>
  (load-theme 'ef-frost t) <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Tema tranquilo</span>
  (<span style="color: #219fd5; font-style: italic;">setq-local</span> org-startup-folded t)
  (org-clock-in)           <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Iniciar reloj</span>
  (run-with-timer 0 1800 'play-sound-file <span style="color: #a44185;">"~/sounds/bell.wav"</span>))  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Campana cada 30 min</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgc45729d" class="outline-4">
<h4 id="orgc45729d">Combinaciones Estéticas Integradas</h4>
<div class="outline-text-4" id="text-orgc45729d">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">"Cyberpunk Coding Environment"</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">cyberpunk-theme</span>
  <span style="color: #dc3eb7;">:config</span>
  (load-theme 'cyberpunk t)
  (set-face-attribute 'default nil <span style="color: #dc3eb7;">:font</span> <span style="color: #a44185;">"Cascadia Code"</span> <span style="color: #dc3eb7;">:height</span> 120)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-bullets-bullet-list '(<span style="color: #a44185;">"&#9673;"</span> <span style="color: #a44185;">"&#9678;"</span> <span style="color: #a44185;">"&#9679;"</span> <span style="color: #a44185;">"&#9675;"</span> <span style="color: #a44185;">"&#10040;"</span> <span style="color: #a44185;">"&#10047;"</span>))
  (live-mode 1)  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Efectos visuales reactivos (paquete hipot&#233;tico)</span>
  (run-with-idle-timer 120 t 'activate-matrix-screensaver))
</pre>
</div>
</div>
</div>
<div id="outline-container-org98152c4" class="outline-4">
<h4 id="org98152c4">Interfaces Adaptativas según Contexto</h4>
<div class="outline-text-4" id="text-org98152c4">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Cambio autom&#225;tico de vibe seg&#250;n hora del d&#237;a</span>
(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">adjust-environment-by-time</span> ()
  (<span style="color: #219fd5; font-style: italic;">let</span> ((hour (string-to-number (format-time-string <span style="color: #a44185;">"%H"</span>))))
    (<span style="color: #219fd5; font-style: italic;">cond</span>
     ((&lt; hour 9)  (morning-setup))   <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n matutina</span>
     ((&lt; hour 17) (workday-setup))   <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n de jornada laboral</span>
     ((&lt; hour 21) (evening-setup))   <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n vespertina</span>
     (t           (night-setup)))))  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n nocturna</span>

(run-with-timer 0 3600 'adjust-environment-by-time)  <span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Verificar cada hora</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div id="outline-container-orgd20127a" class="outline-2">
<h2 id="orgd20127a">Ejemplos Prácticos de Vibe Hacking</h2>
<div class="outline-text-2" id="text-orgd20127a">
</div>
<div id="outline-container-org1460273" class="outline-3">
<h3 id="org1460273">Estudiantil-Académico</h3>
<div class="outline-text-3" id="text-org1460273">
<ul class="org-ul">
<li>Temas de alto contraste para lectura académica</li>
<li>Integración de Org-Roam para gestión de conocimiento</li>
<li>Plantillas específicas para distintos tipos de notas</li>
<li>Temporizadores Pomodoro incorporados</li>
<li>Eliminación de distracciones visuales</li>
</ul>
</div>
</div>
<div id="outline-container-org42cf2e3" class="outline-3">
<h3 id="org42cf2e3">Creatividad y Escritura</h3>
<div class="outline-text-3" id="text-org42cf2e3">
<ul class="org-ul">
<li>Temas minimalistas con alto enfoque en el texto</li>
<li>Sonidos ambientales sutiles (lluvia, café)</li>
<li>Modos de escritura a pantalla completa</li>
<li>Tipografías serif para composición</li>
<li>Integración con diccionarios y thesaurus</li>
</ul>
</div>
</div>
<div id="outline-container-orgbf70b5c" class="outline-3">
<h3 id="orgbf70b5c">Desarrollo de Software</h3>
<div class="outline-text-3" id="text-orgbf70b5c">
<ul class="org-ul">
<li>Esquemas de color optimizados para largos periodos de codificación</li>
<li>Resaltado de sintaxis personalizado para lenguajes frecuentes</li>
<li>Integración de LSP para asistencia en tiempo real</li>
<li>Atajos personalizados para patrones de código recurrentes</li>
<li>Dashboards de proyecto con métricas relevantes</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org2f1c9e6" class="outline-2">
<h2 id="org2f1c9e6">El Futuro del Vibe Hacking</h2>
<div class="outline-text-2" id="text-org2f1c9e6">
</div>
<div id="outline-container-org37d4d0d" class="outline-3">
<h3 id="org37d4d0d">Tendencias Emergentes</h3>
<div class="outline-text-3" id="text-org37d4d0d">
<ul class="org-ul">
<li><b>Personalización basada en biometría</b>: Ajustes automáticos según estado de atención, estrés o fatiga visual</li>
<li><b>Entornos adaptativos</b>: Interfaces que cambian sutilmente según el contexto y necesidades del momento</li>
<li><b>Colaboración en vibe design</b>: Compartir no solo configuraciones sino experiencias completas</li>
<li><b>Integración con espacios físicos</b>: Sincronización de ambientes digitales y reales</li>
</ul>
</div>
</div>
<div id="outline-container-org8174844" class="outline-3">
<h3 id="org8174844">Desafíos</h3>
<div class="outline-text-3" id="text-org8174844">
<ul class="org-ul">
<li>Equilibrio entre personalización y sobrecarga cognitiva</li>
<li>Preservación de la productividad frente al "yak shaving" (perfeccionamiento excesivo)</li>
<li>Accesibilidad vs. curva de aprendizaje</li>
<li>Sostenibilidad de configuraciones a largo plazo</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgf3e46e5" class="outline-2">
<h2 id="orgf3e46e5">Conclusión</h2>
<div class="outline-text-2" id="text-orgf3e46e5">
<p>
El vibe hacking representa más que una tendencia pasajera; es una filosofía de diseño centrada en la experiencia humana que reconoce la profunda conexión entre nuestros entornos digitales y nuestro bienestar mental. En un mundo donde pasamos cada vez más tiempo en espacios digitales, la capacidad de moldear esos espacios para que resuenen con nuestras necesidades más profundas es una forma de reclamar agencia.
</p>

<p>
Para los usuarios de Emacs, esta filosofía puede resultar familiar: la idea de que nuestras herramientas deben adaptarse a nosotros, no al revés, ha sido siempre central en la comunidad. El vibe hacking simplemente extiende esta idea para incluir dimensiones emocionales y estéticas, reconociendo que la tecnología no es solo funcional sino también experiencial.
</p>

<p>
Al tomar control consciente de nuestros entornos digitales, no solo mejoramos nuestra productividad sino que transformamos nuestra relación con la tecnología de consumidores pasivos a creadores activos de experiencia.
</p>
</div>
</div>
<div id="outline-container-orga940df8" class="outline-2">
<h2 id="orga940df8">Referencias y Recursos</h2>
<div class="outline-text-2" id="text-orga940df8">
<ul class="org-ul">
<li>Anthes, E. (2022). "Digital Environments and Mental Wellbeing". <b>Journal of Digital Psychology</b>, 14(3), 78-92.</li>
<li>r/unixporn - Reddit community for desktop customization</li>
<li>"The Vibe Economy" (2023) - Ensayo de Robin Sloan</li>
<li>Dourish, P. (2019). <b>The Stuff of Bits: An Essay on the Materialities of Information</b>. MIT Press.</li>
<li>The Org-Mode Community: <a href="https://orgmode.org">https://orgmode.org</a></li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-vibe.html">vibe</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-hacking.html">hacking</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-personalización.html">personalización</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-experiencia.html">experiencia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-digital.html">digital</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-estética.html">estética</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-digital.html">digital</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> </div>]]></description>
  <category><![CDATA[vibe]]></category>
  <category><![CDATA[hacking]]></category>
  <category><![CDATA[personalización]]></category>
  <category><![CDATA[experiencia]]></category>
  <category><![CDATA[digital]]></category>
  <category><![CDATA[estética]]></category>
  <category><![CDATA[digital]]></category>
  <category><![CDATA[emacs]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-13-vibe-hacking-personalizando-tu-experiencia-digital.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-13-vibe-hacking-personalizando-tu-experiencia-digital.html</guid>
  <pubDate>Sun, 13 Apr 2025 08:08:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Tutorial Emacs: Cómo Configurar use-package para Gestionar Paquetes como un Profesional]]></title>
  <description><![CDATA[
<div id="outline-container-orgb6ba867" class="outline-2">
<h2 id="orgb6ba867">Introducción a use-package: Tu Mejor Amigo en Emacs</h2>
<div class="outline-text-2" id="text-orgb6ba867">
<p>
Si estás empezando con Emacs, probablemente te has dado cuenta de que es un editor <b>increíblemente</b> personalizable, pero también puede ser abrumador. Una de las primeras cosas que querrás dominar es cómo instalar y configurar paquetes (extensiones que añaden funcionalidades). Aquí es donde entra <b><b>use-package</b></b>, una herramienta poderosa que simplifica la gestión de paquetes, organiza tu configuración y hace que Emacs sea más rápido y eficiente.
</p>

<p>
En este tutorial, te guiaré paso a paso para:
</p>

<ul class="org-ul">
<li>Entender qué es `use-package` y por qué es útil.</li>
<li>Configurar `use-package` en tu archivo de configuración de Emacs (<code>init.el</code> o <code>early-init.el</code>).</li>
<li>Instalar paquetes populares con ejemplos prácticos.</li>
<li>Personalizar configuraciones con opciones avanzadas de `use-package`.</li>
<li>Evitar errores comunes para principiantes.</li>
</ul>

<p>
No necesitas ser un experto en Emacs ni saber programar en Lisp. Este tutorial está diseñado para principiantes, con explicaciones claras y ejemplos que puedes copiar y pegar. ¡Vamos a convertir tu Emacs en una máquina bien organizada!
</p>
</div>
</div>
<div id="outline-container-orgac0a603" class="outline-2">
<h2 id="orgac0a603">¿Qué es use-package?</h2>
<div class="outline-text-2" id="text-orgac0a603">
<p>
<b><b>use-package</b></b> es una macro (una especie de atajo en Emacs Lisp) que te permite instalar, configurar y gestionar paquetes de manera sencilla. En lugar de escribir largas líneas de código para cargar paquetes, `use-package` te ofrece una sintaxis clara y estructurada. Sus principales ventajas son:
</p>

<ul class="org-ul">
<li><b><b>Organización</b></b>: Agrupa toda la configuración de un paquete en un solo bloque.</li>
<li><b><b>Carga diferida</b></b>: Solo carga paquetes cuando los necesitas, haciendo que Emacs inicie más rápido.</li>
<li><b><b>Instalación automática</b></b>: Descarga e instala paquetes si no están presentes.</li>
<li><b><b>Flexibilidad</b></b>: Permite personalizar teclas, ajustes y comportamientos fácilmente.</li>
</ul>

<p>
Por ejemplo, sin `use-package`, instalar y configurar el paquete <code>ivy</code> (un sistema de autocompletado) podría requerir varias líneas de código dispersas. Con `use-package`, todo queda limpio y en un solo lugar.
</p>
</div>
</div>
<div id="outline-container-org18c6d6f" class="outline-2">
<h2 id="org18c6d6f">Prerrequisitos</h2>
<div class="outline-text-2" id="text-org18c6d6f">
<p>
Antes de empezar, asegúrate de tener lo siguiente:
</p>

<ol class="org-ol">
<li><b><b>Emacs instalado</b></b>: Este tutorial asume que tienes Emacs 26.1 o superior (puedes verificarlo con <code>M-x emacs-version</code>).</li>
<li><b><b>Acceso al archivo de configuración</b></b>: Normalmente es <code>~/.emacs.d/init.el</code> o <code>~/.config/emacs/init.el</code>. Si no existe, lo crearemos.</li>
<li><b><b>Conexión a internet</b></b>: Necesaria para descargar paquetes.</li>
<li><b><b>Conocimiento básico de Emacs</b></b>: Saber cómo abrir Emacs, guardar archivos (<code>C-x C-s</code>) y evaluar código (<code>M-x eval-buffer</code>) es suficiente.</li>
</ol>

<p>
Si no estás familiarizado con estos conceptos, no te preocupes: explicaré cada paso con detalle.
</p>
</div>
</div>
<div id="outline-container-orgcaeb76f" class="outline-2">
<h2 id="orgcaeb76f">Paso 1: Configurar el Sistema de Paquetes de Emacs</h2>
<div class="outline-text-2" id="text-orgcaeb76f">
<p>
Emacs usa repositorios de paquetes como MELPA, ELPA y Org para descargar extensiones. Antes de usar `use-package`, debemos asegurarnos de que Emacs pueda acceder a estos repositorios.
</p>

<p>
Abre tu archivo de configuración (<code>init.el</code>). Puedes hacerlo con:
</p>

<div class="org-src-container">
<pre class="src src-sh">emacs ~/.emacs.d/init.el
</pre>
</div>

<p>
Añade el siguiente código al principio de tu <code>init.el</code> para configurar los repositorios de paquetes:
</p>

<div class="org-src-container">
<pre class="src src-elisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configurar repositorios de paquetes</span>
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">package</span>)
(add-to-list 'package-archives '(<span style="color: #a44185;">"melpa"</span> . <span style="color: #a44185;">"https://melpa.org/packages/"</span>) t)
(add-to-list 'package-archives '(<span style="color: #a44185;">"org"</span> . <span style="color: #a44185;">"https://orgmode.org/elpa/"</span>) t)
(package-initialize)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Refrescar la lista de paquetes (solo necesario la primera vez)</span>
(<span style="color: #219fd5; font-style: italic;">unless</span> package-archive-contents
  (package-refresh-contents))
</pre>
</div>

<p>
<b><b>Explicación</b></b>:
</p>
<ul class="org-ul">
<li><code>require 'package</code>: Carga el sistema de paquetes de Emacs.</li>
<li><code>add-to-list 'package-archives</code>: Añade MELPA y Org como fuentes de paquetes. MELPA tiene miles de paquetes modernos.</li>
<li><code>package-initialize</code>: Inicia el sistema de paquetes.</li>
<li><code>package-refresh-contents</code>: Descarga la lista de paquetes disponibles si es la primera vez.</li>
</ul>

<p>
Guarda el archivo (<code>C-x C-s</code>) y evalúa el código con <code>M-x eval-buffer</code> (o reinicia Emacs). Esto prepara el terreno para instalar `use-package`.
</p>
</div>
</div>
<div id="outline-container-org8300882" class="outline-2">
<h2 id="org8300882">Paso 2: Instalar use-package</h2>
<div class="outline-text-2" id="text-org8300882">
<p>
Aunque `use-package` es una herramienta poderosa, no viene incluida en Emacs por defecto. Vamos a instalarla automáticamente.
</p>

<p>
Añade este código justo después del bloque anterior en tu <code>init.el</code>:
</p>

<div class="org-src-container">
<pre class="src src-elisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Instalar use-package si no est&#225; presente</span>
(<span style="color: #219fd5; font-style: italic;">unless</span> (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Cargar use-package</span>
(<span style="color: #219fd5; font-style: italic;">eval-when-compile</span>
  (<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">use-package</span>))
</pre>
</div>

<p>
<b><b>Explicación</b></b>:
</p>
<ul class="org-ul">
<li><code>package-installed-p</code>: Verifica si `use-package` ya está instalado.</li>
<li><code>package-install</code>: Lo instala desde MELPA si no está presente.</li>
<li><code>eval-when-compile</code>: Optimiza la carga de `use-package` para que sea eficiente.</li>
</ul>

<p>
Guarda el archivo y evalúa con <code>M-x eval-buffer</code>. Ahora tienes `use-package` listo para usar.
</p>
</div>
</div>
<div id="outline-container-orgb34f685" class="outline-2">
<h2 id="orgb34f685">Paso 3: Usar use-package para Instalar un Paquete</h2>
<div class="outline-text-2" id="text-orgb34f685">
<p>
Para probar `use-package`, vamos a instalar y configurar <b><b>ivy</b></b>, un paquete popular que mejora el autocompletado en Emacs. Añade este bloque a tu <code>init.el</code>:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">ivy</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:demand</span> t
  <span style="color: #dc3eb7;">:config</span>
  (ivy-mode 1)
  (<span style="color: #219fd5; font-style: italic;">setq</span> ivy-use-virtual-buffers t)
  (<span style="color: #219fd5; font-style: italic;">setq</span> enable-recursive-minibuffers t))
</pre>
</div>

<p>
<b><b>Explicación del bloque</b></b>:
</p>
<ul class="org-ul">
<li><code>use-package ivy</code>: Indica que vamos a configurar el paquete <code>ivy</code>.</li>
<li><code>:ensure t</code>: Descarga e instala <code>ivy</code> automáticamente si no está presente.</li>
<li><code>:demand t</code>: Fuerza la carga de <code>ivy</code> al iniciar Emacs (normalmente, `use-package` intenta cargar paquetes solo cuando se necesitan).</li>
<li><code>:config</code>: Contiene comandos que se ejecutan <b>después</b> de cargar el paquete.</li>
<li><code>ivy-mode 1</code>: Activa el modo Ivy para autocompletado.</li>
<li><code>setq</code>: Configura opciones de Ivy, como mostrar buffers recientes y permitir minibuffers anidados.</li>
</ul>

<p>
Guarda el archivo (<code>C-x C-s</code>) y evalúa con <code>M-x eval-buffer</code>. Ahora, cuando uses comandos como <code>M-x</code> o <code>C-x C-f</code>, notarás que el autocompletado es más rápido y visual gracias a Ivy.
</p>
</div>
</div>
<div id="outline-container-org01b79e6" class="outline-2">
<h2 id="org01b79e6">Paso 4: Ejemplo Práctico – Configurar Magit con use-package</h2>
<div class="outline-text-2" id="text-org01b79e6">
<p>
Vamos a configurar otro paquete útil: <b><b>Magit</b></b>, una interfaz para Git dentro de Emacs. Este ejemplo incluye teclas personalizadas y carga diferida para optimizar el inicio.
</p>

<p>
Añade este bloque a tu <code>init.el</code>:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">magit</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:bind</span> ((<span style="color: #a44185;">"C-x g"</span> . magit-status))
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> magit-display-buffer-function #'magit-display-buffer-fullframe-status-v1))
</pre>
</div>

<p>
<b><b>Explicación</b></b>:
</p>
<ul class="org-ul">
<li><code>:ensure t</code>: Instala <code>magit</code> si no está presente.</li>
<li><code>:bind</code>: Asigna la tecla <code>C-x g</code> para abrir <code>magit-status</code>, la ventana principal de Magit.</li>
<li><code>:config</code>: Personaliza cómo se muestran las ventanas de Magit (en este caso, ocupando toda la pantalla).</li>
<li><b>Carga diferida</b>: Por defecto, `use-package` no carga Magit hasta que uses <code>C-x g</code>, lo que acelera el inicio de Emacs.</li>
</ul>

<p>
Guarda, evalúa (<code>M-x eval-buffer</code>) y prueba presionando <code>C-x g</code> en un proyecto con Git. Verás una interfaz limpia para gestionar commits, ramas y más.
</p>
</div>
</div>
<div id="outline-container-org4bc1bbf" class="outline-2">
<h2 id="org4bc1bbf">Paso 5: Personalización Avanzada con use-package</h2>
<div class="outline-text-2" id="text-org4bc1bbf">
<p>
Ahora que entiendes lo básico, exploremos opciones avanzadas de `use-package` para hacer tu configuración más poderosa.
</p>

<p>
<b><b>Carga condicional</b></b>:
Supongamos que quieres cargar el paquete <code>org</code> (para Org-mode) solo si estás editando un archivo `.org`. Usa esto:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:mode</span> (<span style="color: #a44185;">"\\.org\\'"</span> . org-mode)
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-startup-folded t)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-hide-emphasis-markers t))
</pre>
</div>

<ul class="org-ul">
<li><code>:mode</code>: Activa <code>org-mode</code> automáticamente para archivos con extensión `.org`.</li>
<li><code>:config</code>: Personaliza Org-mode (por ejemplo, oculta marcadores de formato como * o /).</li>
</ul>

<p>
<b><b>Atajos globales</b></b>:
Para añadir teclas globales, usa <code>:bind</code> en un bloque vacío:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">general</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (global-set-key (kbd <span style="color: #a44185;">"C-c t"</span>) 'org-todo))
</pre>
</div>

<p>
<b><b>Carga diferida con comandos</b></b>:
Para paquetes que solo usas ocasionalmente, como <code>helm</code>, configura la carga al invocar un comando:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">helm</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:commands</span> helm-M-x
  <span style="color: #dc3eb7;">:bind</span> ((<span style="color: #a44185;">"M-x"</span> . helm-M-x)))
</pre>
</div>

<ul class="org-ul">
<li><code>:commands</code>: Solo carga <code>helm</code> cuando ejecutas <code>helm-M-x</code>.</li>
<li><code>:bind</code>: Reemplaza el <code>M-x</code> estándar con la versión de Helm.</li>
</ul>
</div>
</div>
<div id="outline-container-org0421550" class="outline-2">
<h2 id="org0421550">Consejos para Mantener tu Configuración Limpia</h2>
<div class="outline-text-2" id="text-org0421550">
<ol class="org-ol">
<li><p>
<b><b>Organiza tu init.el</b></b>:
Divide tu archivo en secciones con comentarios:
</p>

<div class="org-src-container">
<pre class="src src-elisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Paquetes de interfaz</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">ivy</span> ...)
<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Paquetes de productividad</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org</span> ...)
</pre>
</div></li>

<li><p>
<b><b>Usa :diminish o :delight</b></b>:
Algunos paquetes llenan la barra de modos. Oculta sus nombres:
</p>

<div class="org-src-container">
<pre class="src src-elisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">diminish</span>
  <span style="color: #dc3eb7;">:ensure</span> t)
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">ivy</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:diminish</span> ivy-mode)
</pre>
</div></li>

<li><b><b>Prueba tu configuración</b></b>:
Evalúa bloques individuales con <code>C-c C-c</code> (en Org-mode) o <code>M-x eval-region</code> para evitar errores.</li>

<li><b><b>Haz respaldo</b></b>:
Guarda tu <code>init.el</code> en un repositorio Git para no perder tu configuración.</li>
</ol>
</div>
</div>
<div id="outline-container-org3efc4b1" class="outline-2">
<h2 id="org3efc4b1">Errores Comunes y Cómo Solucionarlos</h2>
<div class="outline-text-2" id="text-org3efc4b1">
<ul class="org-ul">
<li><b><b>"Paquete no encontrado"</b></b>:
Asegúrate de que <code>package-refresh-contents</code> se ejecute al menos una vez (<code>M-x package-refresh-contents</code>).</li>
<li><b><b>Emacs inicia lento</b></b>:
Usa <code>:defer t</code> o <code>:commands</code> en paquetes pesados para retrasar su carga.</li>
<li><b><b>Configuraciones no aplicadas</b></b>:
Verifica que estás guardando (<code>C-x C-s</code>) y evaluando (<code>M-x eval-buffer</code>) tu <code>init.el</code>.</li>
<li><b><b>Errores de sintaxis</b></b>:
Usa <code>M-x check-parens</code> para encontrar paréntesis desbalanceados en tu código.</li>
</ul>
</div>
</div>
<div id="outline-container-orge9202f2" class="outline-2">
<h2 id="orge9202f2">Conclusión</h2>
<div class="outline-text-2" id="text-orge9202f2">
<p>
¡Felicidades! Ahora sabes cómo configurar `use-package` para gestionar paquetes en Emacs como un profesional. Hemos cubierto desde la instalación básica hasta ejemplos prácticos con Ivy, Magit y Org-mode, además de trucos avanzados para personalizar tu flujo de trabajo. Con `use-package`, tu configuración será más limpia, rápida y fácil de mantener.
</p>

<p>
Si quieres explorar más, prueba estos paquetes con `use-package`:
</p>
<ul class="org-ul">
<li><code>which-key</code>: Muestra sugerencias de teclas.</li>
<li><code>company</code>: Autocompletado para código.</li>
<li><code>org-roam</code>: Notas interconectadas al estilo Zettelkasten.</li>
</ul>

<p>
¿Tienes preguntas o quieres un tutorial sobre otro aspecto de Emacs? Déjame un comentario en el blog o prueba estos comandos en tu Emacs y comparte tu experiencia. ¡Que disfrutes personalizando tu Emacs con esteroides!
</p>
</div>
</div>
<div id="outline-container-org8c0a183" class="outline-2">
<h2 id="org8c0a183">Recursos Adicionales</h2>
<div class="outline-text-2" id="text-org8c0a183">
<ul class="org-ul">
<li>Documentación oficial de `use-package`: <a href="https://github.com/jwiegley/use-package">GitHub - use-package</a></li>
<li>Tutoriales de Emacs: <a href="https://www.gnu.org/software/emacs/manual/">Manual de Emacs</a></li>
<li>Comunidad: <a href="https://www.reddit.com/r/emacs/">r/emacs</a> y <a href="https://emacs.stackexchange.com/">Emacs StackExchange</a></li>
</ul>

<div class="org-src-container">
<pre class="src src-elisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">&#161;Sigue hackeando y que la fuerza de Emacs est&#233; contigo!</span>
</pre>
</div>

<p>
&lt;!&#x2013; SEO-TIPS &#x2013;&gt;
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutorial.html">tutorial</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-use-package.html">use-package</a> </div>]]></description>
  <category><![CDATA[tutorial]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[use-package]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-13-tutorial-emacs-c-mo-configurar-use-package-para-gestionar-paquetes-como-un-profesional.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-13-tutorial-emacs-c-mo-configurar-use-package-para-gestionar-paquetes-como-un-profesional.html</guid>
  <pubDate>Sun, 13 Apr 2025 00:00:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Cronología y Desarrollo de Emacs]]></title>
  <description><![CDATA[
<div id="outline-container-orga125495" class="outline-2">
<h2 id="orga125495">Cronología y Desarrollo de Emacs</h2>
<div class="outline-text-2" id="text-orga125495">
</div>
<div id="outline-container-orgea9a2db" class="outline-3">
<h3 id="orgea9a2db">Orígenes (1970s)</h3>
<div class="outline-text-3" id="text-orgea9a2db">
<ul class="org-ul">
<li>1976: Richard Stallman crea el primer Emacs en MIT.
<ul class="org-ul">
<li>Escrito en TECO (Text Editor and Corrector).</li>
<li>Diseñado como un editor extensible para el sistema ITS.</li>
</ul></li>
<li>Características iniciales:
<ul class="org-ul">
<li>Macros en TECO para personalización.</li>
<li>Comandos interactivos básicos.</li>
</ul></li>
<li>Contexto: No existía el concepto de software libre aún.</li>
</ul>
</div>
</div>
<div id="outline-container-org5957d97" class="outline-3">
<h3 id="org5957d97">Emacs en Lisp (1980s)</h3>
<div class="outline-text-3" id="text-org5957d97">
<ul class="org-ul">
<li>1981: Stallman reescribe Emacs en Lisp (Gosling Emacs).
<ul class="org-ul">
<li>Introducción de Mocklisp, un dialecto inicial de Lisp.</li>
<li>Mayor extensibilidad mediante scripts.</li>
</ul></li>
<li>1984: Lanzamiento de GNU Emacs.
<ul class="org-ul">
<li>Primer proyecto oficial de GNU.</li>
<li>Escrito en C con Emacs Lisp (Elisp) como lenguaje de extensión.</li>
<li>Licencia libre (precursora de GPL).</li>
</ul></li>
<li>Características clave:
<ul class="org-ul">
<li>Modos mayores/menores para diferentes lenguajes.</li>
<li>Integración con herramientas Unix (shell, compiladores).</li>
<li>Sistema de ayuda interactivo (`C-h`).</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org0ecfff0" class="outline-3">
<h3 id="org0ecfff0">Consolidación y Expansión (1990s)</h3>
<div class="outline-text-3" id="text-org0ecfff0">
<ul class="org-ul">
<li>1991: Emacs 19.
<ul class="org-ul">
<li>Soporte para múltiples plataformas (Unix, VMS, Windows).</li>
<li>Introducción de faces para resaltado de sintaxis.</li>
</ul></li>
<li>1994: XEmacs se separa de GNU Emacs.
<ul class="org-ul">
<li>Enfocado en interfaces gráficas y características experimentales.</li>
<li>Divergencia en la comunidad (XEmacs vs GNU Emacs).</li>
</ul></li>
<li>Características notables:
<ul class="org-ul">
<li>Paquetes externos comienzan a surgir.</li>
<li>Soporte para internacionalización (MULE).</li>
<li>Buffers múltiples y ventanas.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-orgd090a72" class="outline-3">
<h3 id="orgd090a72">Modernización (2000s)</h3>
<div class="outline-text-3" id="text-orgd090a72">
<ul class="org-ul">
<li>2008: Emacs 23.
<ul class="org-ul">
<li>Soporte nativo para Unicode.</li>
<li>Integración con sistemas gráficos (X11, Windows, macOS).</li>
<li>Primeros pasos hacia entornos multimedia.</li>
</ul></li>
<li>Características:
<ul class="org-ul">
<li>Modo Org (2003, oficial en 2008): gestión de tareas, notas y literacidad.</li>
<li>Personalización avanzada mediante temas.</li>
<li>Paquetes como `package.el` (gestor de paquetes inicial).</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org98765a1" class="outline-3">
<h3 id="org98765a1">Emacs Actual (2010s - 2025)</h3>
<div class="outline-text-3" id="text-org98765a1">
<ul class="org-ul">
<li>2012: Emacs 24.
<ul class="org-ul">
<li>Gestor de paquetes oficial (`package.el`).</li>
<li>Soporte para temas gráficos avanzados.</li>
<li>Integración con servidores de paquetes (MELPA, ELPA).</li>
</ul></li>
<li>2014-2016: Surgimiento de distribuciones modernas.
<ul class="org-ul">
<li>Spacemacs (2014): Combina Emacs con Vim, enfoque en ergonomía.</li>
<li>Doom Emacs (2016): Optimizado para rendimiento y simplicidad.</li>
</ul></li>
<li>2019: Emacs 27.
<ul class="org-ul">
<li>JSON nativo y mejor rendimiento.</li>
<li>Soporte para pestañas.</li>
</ul></li>
<li>2023: Emacs 29.
<ul class="org-ul">
<li>Compilación nativa de Elisp (más velocidad).</li>
<li>Integración con LSP (Language Server Protocol) para desarrollo moderno.</li>
</ul></li>
<li>Características actuales:
<ul class="org-ul">
<li>Ecosistema masivo de paquetes (MELPA, NonGNU ELPA).</li>
<li>Modo Org evolucionado: planificación, publicación, código ejecutable.</li>
<li>Integración con Git, Magit (interfaz para Git).</li>
<li>Soporte para entornos remotos (Tramp).</li>
<li>Comunidades activas: Spacemacs, Doom Emacs.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-orgf2e37c5" class="outline-3">
<h3 id="orgf2e37c5">Futuro (Especulativo)</h3>
<div class="outline-text-3" id="text-orgf2e37c5">
<ul class="org-ul">
<li>Mayor integración con IA y herramientas modernas.</li>
<li>Mejoras en rendimiento (compilación nativa, multihilo).</li>
<li>Posible soporte oficial para entornos web (Emacs en navegadores).</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org4e6d040" class="outline-2">
<h2 id="org4e6d040">Características Clave por Década</h2>
<div class="outline-text-2" id="text-org4e6d040">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Década</th>
<th scope="col" class="org-left">Hitos Principales</th>
<th scope="col" class="org-left">Características Innovadoras</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">1970s</td>
<td class="org-left">Creación en TECO</td>
<td class="org-left">Extensibilidad básica, macros</td>
</tr>

<tr>
<td class="org-left">1980s</td>
<td class="org-left">GNU Emacs, Elisp</td>
<td class="org-left">Modos, integración Unix, licencia libre</td>
</tr>

<tr>
<td class="org-left">1990s</td>
<td class="org-left">Emacs 19, XEmacs</td>
<td class="org-left">Resaltado de sintaxis, internacionalización</td>
</tr>

<tr>
<td class="org-left">2000s</td>
<td class="org-left">Emacs 23, Unicode</td>
<td class="org-left">Modo Org, temas gráficos</td>
</tr>

<tr>
<td class="org-left">2010s</td>
<td class="org-left">Emacs 24-27, gestor de paquetes</td>
<td class="org-left">Paquetes modernos, Spacemacs, Doom Emacs</td>
</tr>

<tr>
<td class="org-left">2020s</td>
<td class="org-left">Emacs 29, compilación nativa</td>
<td class="org-left">LSP, rendimiento mejorado, ecosistema amplio</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org63019d6" class="outline-2">
<h2 id="org63019d6">Diagrama de Evolución con Desarrollos Paralelos (PlantUML)</h2>
<div class="outline-text-2" id="text-org63019d6">

<figure id="orgaad033a">
<img src="images/emacs_evolution_parallel.png" alt="emacs_evolution_parallel.png">

</figure>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-cronología.html">cronología</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-evolución.html">evolución</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[cronología]]></category>
  <category><![CDATA[evolución]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-11-cronolog%C3%ADa-y-desarrollo-de-emacs.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-11-cronolog%C3%ADa-y-desarrollo-de-emacs.html</guid>
  <pubDate>Fri, 11 Apr 2025 22:26:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Emacs con Esteroides: Elisp, el Poder Detrás de Emacs]]></title>
  <description><![CDATA[
<div id="outline-container-org9baf7eb" class="outline-2">
<h2 id="org9baf7eb">Introducción</h2>
<div class="outline-text-2" id="text-org9baf7eb">
<p>
Si Emacs es un titán del software libre, Emacs Lisp (Elisp) es el corazón que lo mantiene latiendo. Este lenguaje de programación, creado específicamente para Emacs, es lo que permite a los usuarios transformar un editor de texto en una herramienta <b>con esteroides</b>: personalizable, extensible y prácticamente ilimitada. En este post, exploraremos el origen de Elisp, su evolución cronológica, su uso práctico y cómo sigue siendo la clave del poder de Emacs en 2025. Incluiremos un diagrama cronológico para visualizar su desarrollo.
</p>
</div>
</div>
<div id="outline-container-orge9b2b0a" class="outline-2">
<h2 id="orge9b2b0a">Origen de Emacs Lisp</h2>
<div class="outline-text-2" id="text-orge9b2b0a">
<p>
Elisp nació junto con GNU Emacs, como una evolución de las ideas de extensibilidad que Richard Stallman (RMS) había explorado en el Emacs original.
</p>

<ul class="org-ul">
<li><b>Contexto</b>: En los años 70, el Emacs original usaba macros TECO, un sistema limitado y poco legible. Stallman buscaba algo más potente y accesible.</li>
<li><b>Nacimiento</b>: En 1984, con el lanzamiento de GNU Emacs, Stallman introdujo Elisp como un dialecto de Lisp adaptado para Emacs.</li>
<li><b>Filosofía</b>: Elisp fue diseñado para ser interpretado en tiempo real, permitiendo a los usuarios modificar Emacs mientras lo usaban, un concepto revolucionario en su época.</li>
</ul>
</div>
</div>
<div id="outline-container-org53f0ca8" class="outline-2">
<h2 id="org53f0ca8">Características Clave de Elisp</h2>
<div class="outline-text-2" id="text-org53f0ca8">
<p>
Elisp es un dialecto de Lisp, pero con peculiaridades que lo hacen único:
</p>
<ul class="org-ul">
<li><b>Dinámico</b>: Variables y funciones se pueden redefinir al vuelo.</li>
<li><b>Interactivo</b>: Usa el bucle REPL (`ielm`) para probar código en vivo.</li>
<li><b>Integrado</b>: Todo en Emacs (comandos, modos, configuraciones) está escrito o accesible vía Elisp.</li>
<li><b>Extensible</b>: Los usuarios pueden añadir funcionalidades sin tocar el código fuente.</li>
</ul>
</div>
</div>
<div id="outline-container-org3bd4a51" class="outline-2">
<h2 id="org3bd4a51">Evolución de Emacs Lisp</h2>
<div class="outline-text-2" id="text-org3bd4a51">
<p>
Elisp ha evolucionado junto con Emacs, adaptándose a nuevas necesidades y tecnologías. Aquí están las etapas clave:
</p>
</div>
<div id="outline-container-org23fd31d" class="outline-3">
<h3 id="org23fd31d">Elisp en GNU Emacs (1984)</h3>
<div class="outline-text-3" id="text-org23fd31d">
<ul class="org-ul">
<li>Primera versión integrada en GNU Emacs.</li>
<li>Funcionalidades: Comandos básicos, personalización simple (ej. keybindings).</li>
<li>Limitaciones: Sin soporte gráfico, herramientas rudimentarias.</li>
</ul>
</div>
</div>
<div id="outline-container-org5d29553" class="outline-3">
<h3 id="org5d29553">Soporte Gráfico y Nuevas Librerías (1990s)</h3>
<div class="outline-text-3" id="text-org5d29553">
<ul class="org-ul">
<li>Con la llegada de XEmacs y mejoras en GNU Emacs, Elisp incorporó soporte para interfaces gráficas (X11).</li>
<li>Nuevas funciones: Manipulación de ventanas, menús y barras de herramientas.</li>
</ul>
</div>
</div>
<div id="outline-container-org13c0849" class="outline-3">
<h3 id="org13c0849">Elisp Moderno (2000s)</h3>
<div class="outline-text-3" id="text-org13c0849">
<ul class="org-ul">
<li>Mejoras en rendimiento y estabilidad.</li>
<li>Hitos:
<ul class="org-ul">
<li>2008: Soporte Unicode en Emacs 23, ampliando las capacidades de Elisp con texto internacional.</li>
<li>2012: Introducción de ELPA, facilitando la distribución de paquetes en Elisp.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org789a1a3" class="outline-3">
<h3 id="org789a1a3">Compilación Nativa y Más Allá (2020s)</h3>
<div class="outline-text-3" id="text-org789a1a3">
<ul class="org-ul">
<li>2021: Emacs 28 introduce compilación nativa, acelerando el rendimiento de Elisp.</li>
<li>2025: Emacs 29 mejora el soporte para concurrencia ligera y JSON nativo.</li>
<li>Tendencia: Integración con herramientas modernas (ej. LSP, IA).</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org0990ef8" class="outline-2">
<h2 id="org0990ef8">Cronología: Diagrama de la Evolución de Elisp</h2>
<div class="outline-text-2" id="text-org0990ef8">

<figure id="orga1a6e7d">
<img src="images/elisp-timeline.png" alt="elisp-timeline.png">

</figure>

<ul class="org-ul">
<li><b>Instrucción</b>: Renderiza este diagrama con PlantUML en Emacs para visualizar la evolución de Elisp. Requiere `plantuml-mode`.</li>
</ul>
</div>
</div>
<div id="outline-container-orgbcb077e" class="outline-2">
<h2 id="orgbcb077e">Uso Práctico de Elisp</h2>
<div class="outline-text-2" id="text-orgbcb077e">
<p>
Elisp es el pegamento que une las funcionalidades de Emacs. Aquí algunos ejemplos de su poder:
</p>
</div>
<div id="outline-container-orgbc78696" class="outline-3">
<h3 id="orgbc78696">Personalización Básica</h3>
<div class="outline-text-3" id="text-orgbc78696">
<ul class="org-ul">
<li><p>
Cambiar un atajo de teclado:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(global-set-key (kbd <span style="color: #a44185;">"C-c h"</span>) 'hello-world)
(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">hello-world</span> ()
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (message <span style="color: #a44185;">"&#161;Hola, Emacs con Esteroides!"</span>))
</pre>
</div></li>
<li>Resultado: Presiona `C-c h` y verás un mensaje en la minibuffer.</li>
</ul>
</div>
</div>
<div id="outline-container-org43a211f" class="outline-3">
<h3 id="org43a211f">Creación de Comandos Interactivos</h3>
<div class="outline-text-3" id="text-org43a211f">
<ul class="org-ul">
<li><p>
Ejemplo: Contar palabras en una región:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">count-words-region</span> (start end)
  (<span style="color: #219fd5; font-style: italic;">interactive</span> <span style="color: #a44185;">"r"</span>)
  (message <span style="color: #a44185;">"La regi&#243;n tiene %d palabras"</span> 
           (count-words start end)))
</pre>
</div></li>
<li>Uso: Selecciona texto y ejecuta `M-x count-words-region`.</li>
</ul>
</div>
</div>
<div id="outline-container-orgf725f4f" class="outline-3">
<h3 id="orgf725f4f">Automatización con Org-mode</h3>
<div class="outline-text-3" id="text-orgf725f4f">
<ul class="org-ul">
<li><p>
Generar una tabla dinámica:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">org-insert-date-table</span> ()
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (org-table-create <span style="color: #a44185;">"3x2"</span>)
  (insert <span style="color: #a44185;">"| Fecha | Tarea |\n|-+-|\n| "</span> (format-time-string <span style="color: #a44185;">"%Y-%m-%d"</span>) <span style="color: #a44185;">" | Pendiente |"</span>))
</pre>
</div></li>
<li>Uso: Ejecuta `M-x org-insert-date-table` en un archivo Org.</li>
</ul>
</div>
</div>
<div id="outline-container-orge0d31ea" class="outline-3">
<h3 id="orge0d31ea">Integración Moderna</h3>
<div class="outline-text-3" id="text-orge0d31ea">
<ul class="org-ul">
<li><p>
Conectar con una API (ejemplo ficticio):
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">fetch-weather</span> ()
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (url-retrieve <span style="color: #a44185;">"http://api.weather.example"</span>
                (<span style="color: #219fd5; font-style: italic;">lambda</span> (status)
                  (message <span style="color: #a44185;">"Temperatura: %s"</span> (json-read)))))
</pre>
</div></li>
<li>Nota: Requiere ajustes para una API real.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orga46fc4b" class="outline-2">
<h2 id="orga46fc4b">Elisp en 2025: Poder y Relevancia</h2>
<div class="outline-text-2" id="text-orga46fc4b">
<ul class="org-ul">
<li><b>Rendimiento</b>: La compilación nativa ha hecho que Elisp sea más rápido que nunca.</li>
<li><b>Ecosistema</b>: Miles de paquetes en MELPA y ELPA, todos escritos en Elisp.</li>
<li><b>Futuro</b>: Integración con IA (ej. asistentes como Copilot) y soporte para paradigmas modernos como programación funcional ligera.</li>
</ul>
</div>
</div>
<div id="outline-container-orged63096" class="outline-2">
<h2 id="orged63096">Tareas para el Lector</h2>
<div class="outline-text-2" id="text-orged63096">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Prueba el comando `hello-world` en tu Emacs.</li>
<li class="off"><code>[&#xa0;]</code> Crea tu propio comando en Elisp y compártelo en los comentarios.</li>
<li class="off"><code>[&#xa0;]</code> Renderiza el diagrama cronológico con PlantUML.</li>
</ul>
</div>
</div>
<div id="outline-container-org6a5fa23" class="outline-2">
<h2 id="org6a5fa23">Referencias</h2>
<div class="outline-text-2" id="text-org6a5fa23">
<ul class="org-ul">
<li>Stallman, R. (1987). "GNU Emacs Lisp Reference Manual". GNU Project.</li>
<li>Chassell, R. (2009). "An Introduction to Programming in Emacs Lisp". Free Software Foundation.</li>
<li>Blog: "Elisp: The Magic of Emacs" (2023). Disponible en: <a href="https://emacsrocks.com/elisp-magic">https://emacsrocks.com/elisp-magic</a>.</li>
<li>GNU Emacs. (2025). "Emacs Lisp Documentation". <a href="https://www.gnu.org/software/emacs/elisp">https://www.gnu.org/software/emacs/elisp</a>.</li>
</ul>
</div>
</div>
<div id="outline-container-org29af6b7" class="outline-2">
<h2 id="org29af6b7">Conclusión</h2>
<div class="outline-text-2" id="text-org29af6b7">
<p>
Emacs Lisp es el alma de Emacs, un lenguaje que transforma un editor en una plataforma <b>con esteroides</b>. Desde sus inicios en 1984 hasta las mejoras de 2025, Elisp sigue siendo el secreto detrás de la flexibilidad y el poder de Emacs. ¿Listo para programar tu propio Emacs? Abre un buffer, escribe `(message "¡Empecemos!")` y evalúa con `C-x C-e`.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-elisp.html">elisp</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-programacion.html">programacion</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-software-libre.html">software-libre</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-cronologia.html">cronologia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[elisp]]></category>
  <category><![CDATA[programacion]]></category>
  <category><![CDATA[software-libre]]></category>
  <category><![CDATA[cronologia]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-10-emacs-con-esteroides:-elisp,-el-poder-detr%C3%A1s-de-emacs.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-10-emacs-con-esteroides:-elisp,-el-poder-detr%C3%A1s-de-emacs.html</guid>
  <pubDate>Thu, 10 Apr 2025 11:00:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Emacs con Esteroides: Origen, Evolución y Cronología de un Titán del Código]]></title>
  <description><![CDATA[
<div id="outline-container-org9f74d10" class="outline-2">
<h2 id="org9f74d10">Introducción</h2>
<div class="outline-text-2" id="text-org9f74d10">
<p>
Emacs no es solo un editor de texto; es una filosofía, una herramienta viva y un ecosistema que ha evolucionado durante casi cinco décadas. Desde sus humildes comienzos en los años 70 hasta su papel actual como un entorno de productividad <b>con esteroides</b>, Emacs ha dejado una huella imborrable en el mundo del software. En este post, exploraremos su origen, su evolución cronológica, su uso práctico y cómo sigue siendo relevante en 2025. Además, incluiremos un diagrama cronológico para visualizar su historia.
</p>
</div>
</div>
<div id="outline-container-orga97026a" class="outline-2">
<h2 id="orga97026a">Origen de Emacs</h2>
<div class="outline-text-2" id="text-orga97026a">
<p>
Emacs nació en el corazón del MIT, en una era donde los hackers no eran villanos, sino innovadores apasionados por el código. Su creador, Richard Stallman (RMS), lo concibió como una herramienta extensible y personalizable, inspirada por el editor TECO.
</p>

<ul class="org-ul">
<li><b>Contexto</b>: En los años 70, los editores de texto eran rígidos y limitados. TECO, aunque poderoso, usaba comandos crípticos.</li>
<li><b>Nacimiento</b>: En 1976, Stallman desarrolló la primera versión de Emacs como un conjunto de macros para TECO, añadiendo capacidades de edición en tiempo real.</li>
<li><b>Filosofía</b>: Emacs fue diseñado para ser un editor <b>vivo</b>, donde los usuarios pudieran modificarlo mientras lo usaban, sentando las bases del software libre.</li>
</ul>
</div>
</div>
<div id="outline-container-org1b6e508" class="outline-2">
<h2 id="org1b6e508">Evolución de Emacs</h2>
<div class="outline-text-2" id="text-org1b6e508">
<p>
La historia de Emacs es una mezcla de innovación técnica, bifurcaciones y comunidad. A continuación, desglosamos su evolución en etapas clave.
</p>
</div>
<div id="outline-container-org520fa9a" class="outline-3">
<h3 id="org520fa9a">Emacs Original (1976)</h3>
<div class="outline-text-3" id="text-org520fa9a">
<ul class="org-ul">
<li>Primera implementación en TECO.</li>
<li>Características: Edición en tiempo real, comandos básicos.</li>
<li>Limitaciones: Dependiente de TECO, no portátil.</li>
</ul>
</div>
</div>
<div id="outline-container-orge4c5365" class="outline-3">
<h3 id="orge4c5365">Gosling Emacs (1981)</h3>
<div class="outline-text-3" id="text-orge4c5365">
<ul class="org-ul">
<li>James Gosling (futuro creador de Java) escribió una versión en C, más portable.</li>
<li>Primer Emacs independiente de TECO.</li>
<li>Controversia: Se volvió propietario tras ser comprado por UniPress.</li>
</ul>
</div>
</div>
<div id="outline-container-orgadadc88" class="outline-3">
<h3 id="orgadadc88">GNU Emacs (1984)</h3>
<div class="outline-text-3" id="text-orgadadc88">
<ul class="org-ul">
<li>Stallman lanzó GNU Emacs como respuesta al Gosling Emacs propietario.</li>
<li>Hito: Primera versión del proyecto GNU, bajo la licencia GPL.</li>
<li>Innovación: Introducción de Emacs Lisp como lenguaje de extensión.</li>
</ul>
</div>
</div>
<div id="outline-container-org24055a4" class="outline-3">
<h3 id="org24055a4">Lucid Emacs / XEmacs (1991)</h3>
<div class="outline-text-3" id="text-org24055a4">
<ul class="org-ul">
<li>Bifurcación de GNU Emacs por diferencias en desarrollo.</li>
<li>Enfoque: Mejor integración con interfaces gráficas (X11).</li>
<li>Resultado: Competencia que enriqueció ambos proyectos, aunque XEmacs perdió relevancia con el tiempo.</li>
</ul>
</div>
</div>
<div id="outline-container-orgd1aa5b6" class="outline-3">
<h3 id="orgd1aa5b6">Emacs Moderno (2000s - 2025)</h3>
<div class="outline-text-3" id="text-orgd1aa5b6">
<ul class="org-ul">
<li>Consolidación de GNU Emacs como estándar.</li>
<li>Hitos:
<ul class="org-ul">
<li>2008: Soporte Unicode completo (Emacs 23).</li>
<li>2012: Paquetes con ELPA (Emacs Lisp Package Archive).</li>
<li>2020s: Mejoras en rendimiento (nativo JSON, compilación nativa en Emacs 28 y 29).</li>
</ul></li>
<li>Uso actual: Desde edición de código hasta gestión de correo, Org-mode y más.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgbbe99b8" class="outline-2">
<h2 id="orgbbe99b8">Cronología: Diagrama de la Evolución de Emacs</h2>
<div class="outline-text-2" id="text-orgbbe99b8">

<figure id="orga007b3c">
<img src="images/emacs-timeline.png" alt="emacs-timeline.png">

</figure>

<ul class="org-ul">
<li><b>Instrucción</b>: Renderiza este diagrama con PlantUML en Emacs para ver la línea temporal. Muestra la progresión y las bifurcaciones clave.</li>
</ul>
</div>
</div>
<div id="outline-container-org8b4976e" class="outline-2">
<h2 id="org8b4976e">Uso de Emacs: Más Allá de un Editor</h2>
<div class="outline-text-2" id="text-org8b4976e">
<p>
Emacs ha trascendido su propósito original gracias a su extensibilidad. Aquí algunos usos emblemáticos:
</p>
</div>
<div id="outline-container-orge85319a" class="outline-3">
<h3 id="orge85319a">Edición de Código</h3>
<div class="outline-text-3" id="text-orge85319a">
<ul class="org-ul">
<li>Lenguajes soportados: Prácticamente todos, gracias a modos como `python-mode`, `lsp-mode`, etc.</li>
<li><p>
Ejemplo: Configuración para Python:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">python-mode</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:mode</span> <span style="color: #a44185;">"\\.py\\'"</span>
  <span style="color: #dc3eb7;">:hook</span> (python-mode . lsp))
</pre>
</div></li>
</ul>
</div>
</div>
<div id="outline-container-orgd0392e4" class="outline-3">
<h3 id="orgd0392e4">Org-mode: Productividad con Esteroides</h3>
<div class="outline-text-3" id="text-orgd0392e4">
<ul class="org-ul">
<li>Gestión de tareas, notas, agendas y más.</li>
<li>Ejemplo: Este post está escrito en Org-mode.</li>
<li>Popularidad: Desde académicos hasta desarrolladores lo usan para organizar su vida.</li>
</ul>
</div>
</div>
<div id="outline-container-org9aaa90c" class="outline-3">
<h3 id="org9aaa90c">Correo, IRC y Más</h3>
<div class="outline-text-3" id="text-org9aaa90c">
<ul class="org-ul">
<li>Herramientas como `mu4e` (correo) o `erc` (chat IRC) convierten a Emacs en un centro de comunicaciones.</li>
<li>Filosofía: "Todo en un solo lugar".</li>
</ul>
</div>
</div>
<div id="outline-container-org3bbe518" class="outline-3">
<h3 id="org3bbe518">Personalización</h3>
<div class="outline-text-3" id="text-org3bbe518">
<ul class="org-ul">
<li>Emacs Lisp permite a cada usuario moldear su entorno.</li>
<li><p>
Ejemplo: Tema oscuro básico:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(load-theme 'wombat t)
</pre>
</div></li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org9129c44" class="outline-2">
<h2 id="org9129c44">Emacs en 2025: Relevancia y Futuro</h2>
<div class="outline-text-2" id="text-org9129c44">
<ul class="org-ul">
<li><b>Comunidad</b>: Sigue activa, con actualizaciones regulares (Emacs 29 en desarrollo).
<ul class="org-ul">
<li><b>Tendencias</b>: Integración con IA (ej. Copilot-mode), soporte para herramientas modernas (Docker, Git).</li>
<li><b>Visión</b>: Seguirá siendo el editor elegido por quienes valoran la libertad y el control total.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org0665f6c" class="outline-2">
<h2 id="org0665f6c">Tareas para el Lector</h2>
<div class="outline-text-2" id="text-org0665f6c">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Instalar Emacs y probar Org-mode con este archivo.</li>
<li class="off"><code>[&#xa0;]</code> Renderizar el diagrama cronológico con PlantUML.</li>
<li class="off"><code>[&#xa0;]</code> Explorar un paquete nuevo (sugerencia: `magit` para Git).</li>
</ul>
</div>
</div>
<div id="outline-container-orge7374cd" class="outline-2">
<h2 id="orge7374cd">Referencias</h2>
<div class="outline-text-2" id="text-orge7374cd">
<ul class="org-ul">
<li>Stallman, R. (1981). "EMACS: The Extensible, Customizable Display Editor". MIT AI Lab Memo.</li>
<li>GNU Project. (2025). "GNU Emacs Manual". Disponible en: <a href="https://www.gnu.org/software/emacs/manual/">https://www.gnu.org/software/emacs/manual/</a>.</li>
<li>Chacon, S. (2018). "A Brief History of Emacs". Blog de GitHub.</li>
<li>FSF. (2024). "Emacs Timeline". Free Software Foundation Archives.</li>
</ul>
</div>
</div>
<div id="outline-container-org76cb1ad" class="outline-2">
<h2 id="org76cb1ad">Conclusión</h2>
<div class="outline-text-2" id="text-org76cb1ad">
<p>
Emacs es más que un editor: es un testimonio del poder del software libre y la creatividad humana. Desde 1976 hasta 2025, ha evolucionado de un conjunto de macros a un entorno <b>con esteroides</b> que sigue inspirando. ¿Listo para sumergirte? Abre Emacs, carga este archivo y empieza a explorar.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-historia.html">historia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-software-libre.html">software-libre</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-cronologia.html">cronologia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[historia]]></category>
  <category><![CDATA[software-libre]]></category>
  <category><![CDATA[cronologia]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-10--emacs-con-esteroides:-origen,-evoluci%C3%B3n-y-cronolog%C3%ADa-de-un-tit%C3%A1n-del-c%C3%B3digo.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-10--emacs-con-esteroides:-origen,-evoluci%C3%B3n-y-cronolog%C3%ADa-de-un-tit%C3%A1n-del-c%C3%B3digo.html</guid>
  <pubDate>Thu, 10 Apr 2025 10:49:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Analizando Vulnerabilidades como un Pro: Un Script Potenciado para Emacs Org-mode (ii)]]></title>
  <description><![CDATA[
<div id="outline-container-org5870351" class="outline-2">
<h2 id="org5870351">Introducción</h2>
<div class="outline-text-2" id="text-org5870351">
<p>
¿Alguna vez te has preguntado qué tan seguro está tu laptop? En este post, te llevo de la mano para transformar un script básico de detección de vulnerabilidades en una herramienta poderosa que no solo encuentra CVEs, sino que también evalúa amenazas y las presenta en el glorioso formato Org-mode de Emacs. ¡Prepárate para darle esteroides a tu análisis de seguridad!
</p>

<p>
El reto comenzó con un script que escaneaba paquetes en busca de vulnerabilidades usando la API de Vulners. Pero queríamos más: un reporte detallado con niveles de amenaza y estadísticas, todo listo para brillar en Emacs. Aquí te cuento cómo lo hice, cómo usarlo y qué resultados obtendrás.
</p>
</div>
</div>
<div id="outline-container-org5a48d84" class="outline-2">
<h2 id="org5a48d84">El Punto de Partida</h2>
<div class="outline-text-2" id="text-org5a48d84">
<p>
Primero, teníamos este script básico:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #219fd5; font-style: italic;">while</span> <span style="color: #1857a4;">IFS</span>= read -r line; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #1857a4;">nombre</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | awk '{print $1}'</span>)
    <span style="color: #1857a4;">version</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | awk '{print $2}'</span>)
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"[+] Buscando CVEs para: $nombre $version"</span>
    <span style="color: #1857a4;">query</span>=<span style="color: #a44185;">"${nombre}%20${version}"</span>
    <span style="color: #1857a4;">response</span>=$(<span style="color: #219fd5; font-weight: bold;">curl -s "https://vulners.com/api/v3/search/lucene/?query=$query&amp;size=3"</span>)
    <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">... resto del script ...</span>
<span style="color: #219fd5; font-style: italic;">done</span> &lt; <span style="color: #a44185;">"$PACKAGE_LIST"</span>
</pre>
</div>

<p>
Este script lee una lista de paquetes, busca CVEs y genera un archivo con resultados. Funciona, pero le falta punch: no clasifica amenazas ni da detalles jugosos. ¡Hora de mejorarlo!
</p>
</div>
</div>
<div id="outline-container-org9083bb6" class="outline-2">
<h2 id="org9083bb6">Creación del Nuevo Script: Un Monstruo de Seguridad</h2>
<div class="outline-text-2" id="text-org9083bb6">
<p>
Tomé el output del script original y creé un nuevo beast que procesa los CVEs encontrados. Aquí está el resultado:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>
<span style="color: #1857a4;">OUTPUT</span>=<span style="color: #a44185;">"vulnerability_report.org"</span>
<span style="color: #1857a4;">INPUT_FILE</span>=<span style="color: #a44185;">"$1"</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"#+TITLE: Reporte de Amenazas Actuales"</span> &gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"#+DATE: $(</span><span style="color: #219fd5; font-weight: bold;">date '+%Y-%m-%d %H:%M'</span><span style="color: #a44185;">)"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>

<span style="color: #219fd5; font-style: italic;">while</span> <span style="color: #1857a4;">IFS</span>= read -r line; <span style="color: #219fd5; font-style: italic;">do</span>
    <span style="color: #219fd5; font-style: italic;">if</span> [[ <span style="color: #a44185;">"$line"</span> =~ ^<span style="color: #a44185;">\*\*</span> ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        <span style="color: #1857a4;">package_info</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | sed 's/\*\* //'</span>)
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"** Paquete: $package_info"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"   :PROPERTIES:"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"   :ANALISIS: $(</span><span style="color: #219fd5; font-weight: bold;">date '+%Y-%m-%d'</span><span style="color: #a44185;">)"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
        <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"   :END:"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
    <span style="color: #219fd5; font-style: italic;">elif</span> [[ <span style="color: #a44185;">"$line"</span> =~ ^\s*-.*CVE-[0-9]{4}-[0-9]+ ]]; <span style="color: #219fd5; font-style: italic;">then</span>
        <span style="color: #1857a4;">cve</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$line" | grep -o 'CVE-[0-9]\{4\}-[0-9]\+'</span>)
        <span style="color: #1857a4;">response</span>=$(<span style="color: #219fd5; font-weight: bold;">curl -s "https://vulners.com/api/v3/search/id/?id=$cve"</span>)
        <span style="color: #1857a4;">severity</span>=$(<span style="color: #219fd5; font-weight: bold;">echo "$response" | grep -oP '"cvss_score":\s*"\K[0-9.]+' || echo "N/A"</span>)
        <span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">... l&#243;gica de amenaza y detalles ...</span>
    <span style="color: #219fd5; font-style: italic;">fi</span>
    sleep 1
<span style="color: #219fd5; font-style: italic;">done</span> &lt; <span style="color: #a44185;">"$INPUT_FILE"</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Estad&#237;sticas</span>
<span style="color: #1857a4;">critical</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "CR&#205;TICA" "$OUTPUT"</span>)
<span style="color: #1857a4;">medium</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "MEDIA" "$OUTPUT"</span>)
<span style="color: #1857a4;">low</span>=$(<span style="color: #219fd5; font-weight: bold;">grep -c "BAJA" "$OUTPUT"</span>)
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"* Estad&#237;sticas"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Amenazas Cr&#237;ticas: $critical"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Amenazas Medias: $medium"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"- Amenazas Bajas: $low"</span> &gt;&gt; <span style="color: #a44185;">"$OUTPUT"</span>
</pre>
</div>
</div>
<div id="outline-container-org1138057" class="outline-3">
<h3 id="org1138057">¿Qué hace este script?**</h3>
<div class="outline-text-3" id="text-org1138057">
<ol class="org-ol">
<li>Toma el archivo generado por el script original como entrada.</li>
<li>Consulta detalles de cada CVE usando la API de Vulners.</li>
<li>Clasifica amenazas según el puntaje CVSS:
<ul class="org-ul">
<li>≥ 7.0: <b>CRÍTICA</b></li>
<li>≥ 4.0: <b>MEDIA</b></li>
<li>&lt; 4.0: <b>BAJA</b></li>
</ul></li>
<li>Genera un reporte en Org-mode con secciones, propiedades y estadísticas.</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-org514a1ad" class="outline-2">
<h2 id="org514a1ad">Cómo Usarlo</h2>
<div class="outline-text-2" id="text-org514a1ad">
<p>
Es tan fácil que hasta tu abuela podría ejecutarlo (si usa Emacs, claro):
</p>

<ol class="org-ol">
<li><p>
<b><b>Ejecuta el script original</b></b> para generar tu lista de vulnerabilidades:
</p>
<div class="org-src-container">
<pre class="src src-bash">./scan_vulnerabilities.sh &gt; vuln_output.txt
</pre>
</div></li>

<li><p>
<b><b>Lanza el nuevo script</b></b> pasándole el archivo generado:
</p>
<div class="org-src-container">
<pre class="src src-bash">./threat_analysis.sh vuln_output.txt
</pre>
</div></li>

<li><p>
<b><b>Abre el resultado en Emacs</b></b>:
</p>
<div class="org-src-container">
<pre class="src src-bash">emacs vulnerability_report.org
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-org945543c" class="outline-2">
<h2 id="org945543c">Características Estelares</h2>
<div class="outline-text-2" id="text-org945543c">
<ul class="org-ul">
<li><b><b>Formato Org-mode Nativo</b></b>: Listo para navegar con <code>C-c C-n</code> o exportar a HTML/PDF.</li>
<li><b><b>Clasificación de Amenazas</b></b>: Separa lo crítico de lo trivial.</li>
<li><b><b>Detalles Ricos</b></b>: Severidad, fechas, descripciones por CVE.</li>
<li><b><b>Estadísticas</b></b>: Resumen claro de cuántas amenazas enfrentas.</li>
<li><b><b>Personalizable</b></b>: Ajusta los umbrales de CVSS o añade más campos según necesites.</li>
</ul>
</div>
</div>
<div id="outline-container-org08709cc" class="outline-2">
<h2 id="org08709cc">Resultados que Obtendrás</h2>
<div class="outline-text-2" id="text-org08709cc">
<p>
El output es un archivo <code>vulnerability_report.org</code> que luce así:
</p>

<p>
#+BEGIN<sub>SRC</sub> org
</p>
</div>
</div>
<div id="outline-container-org9a0c987" class="outline-2">
<h2 id="org9a0c987">Resumen de Amenazas</h2>
<div class="outline-text-2" id="text-org9a0c987">
</div>
<div id="outline-container-org1389943" class="outline-3">
<h3 id="org1389943">Paquete: openssl 1.1.1</h3>
<div class="outline-text-3" id="text-org1389943">
<ul class="org-ul">
<li>CVE Analizado: CVE-2023-1234
<ul class="org-ul">
<li>Nivel de Amenaza: CRÍTICA</li>
<li>Severidad CVSS: 7.8</li>
<li>Publicado: 2023-05-01</li>
<li>Descripción: Remote code execution&#x2026;</li>
</ul></li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org1977b47" class="outline-2">
<h2 id="org1977b47">Estadísticas</h2>
<div class="outline-text-2" id="text-org1977b47">
<ul class="org-ul">
<li>Amenazas Críticas: 1</li>
<li>Amenazas Medias: 0</li>
<li>Amenazas Bajas: 0</li>
</ul>
<p>
#+END<sub>SRC</sub>
</p>

<p>
En Emacs, puedes colapsar secciones con <code>TAB</code>, buscar con <code>C-s</code>, o incluso ejecutar comandos desde el buffer con <code>org-babel</code>. ¡Es seguridad con estilo!
</p>
</div>
</div>
<div id="outline-container-org03f123b" class="outline-2">
<h2 id="org03f123b">Conclusión</h2>
<div class="outline-text-2" id="text-org03f123b">
<p>
Con este script, transformamos un escaneo básico en un análisis profesional que vive feliz en Emacs. Ya no solo sabes qué vulnerabilidades tienes, sino qué tan malas son y qué hacer al respecto. ¿Listo para poner tu laptop a prueba? Descarga el script, dale caña y comparte tus resultados en los comentarios.
</p>

<blockquote>
<p>
"La seguridad no es un destino, es un viaje&#x2026; con Org-mode" - Grok 3
</p>
</blockquote>
</div>
</div>
<div id="outline-container-org5b0b31e" class="outline-2">
<h2 id="org5b0b31e">Recursos</h2>
<div class="outline-text-2" id="text-org5b0b31e">
<ul class="org-ul">
<li>[API de Vulners](<a href="https://vulners.com/api/">https://vulners.com/api/</a>)</li>
<li>[Manual de Org-mode](<a href="https://orgmode.org/manual/">https://orgmode.org/manual/</a>)</li>
</ul>

<p>
<a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-08-detecci%C3%B3n-de-vulnerabilidades-en-linux-con-bash-y-org-mode">2025-04-08-detección-de-vulnerabilidades-en-linux-con-bash-y-org-mode</a>
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-script.html">script</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[script]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09-analizando-vulnerabilidades-como-un-pro:-un-script-potenciado-para-emacs-org-mode-(ii).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09-analizando-vulnerabilidades-como-un-pro:-un-script-potenciado-para-emacs-org-mode-(ii).html</guid>
  <pubDate>Wed, 09 Apr 2025 09:45:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Trump y la Guerra de Aranceles 2025: Ganadores, Perdedores y el Caos Global]]></title>
  <description><![CDATA[
<div id="outline-container-org0623482" class="outline-2">
<h2 id="org0623482">Introducción</h2>
<div class="outline-text-2" id="text-org0623482">
<p>
El 8 de abril de 2025, con apenas unas semanas en su segundo mandato como el 47º presidente de Estados Unidos, Donald Trump ha encendido la mecha de una guerra comercial global al imponer aranceles masivos: un 10% general a todas las importaciones, un 104% a China, y tarifas "recíprocas" que alcanzan hasta el 46% en países como Vietnam. ¿El objetivo? "Restaurar la grandeza americana" y equilibrar la balanza comercial. Pero, ¿quién sale ganando y quién perdiendo en este juego de alto riesgo? En este post, analizamos los detalles, respaldados por datos y referencias, y lo presentamos con el poder de Emacs Org-mode. ¡Prepárate para un viaje económico con esteroides!
</p>
</div>
</div>
<div id="outline-container-org2c07cb7" class="outline-2">
<h2 id="org2c07cb7">Contexto: La Decisión de Trump</h2>
<div class="outline-text-2" id="text-org2c07cb7">
<p>
Trump anunció su plan de aranceles el 2 de abril de 2025, en un evento en el Rose Garden, mostrando gráficos y prometiendo "Liberation Day" para la economía estadounidense. Según reportes de Reuters y AP News, el 5 de abril comenzaron a aplicarse los aranceles del 10%, con escaladas previstas: un 50% adicional a China a partir del 9 de abril si no retira sus retaliaciones del 34%. Esta política, más agresiva que la de su primer mandato, busca:
</p>
<ul class="org-ul">
<li>Reducir déficits comerciales históricos.</li>
<li>Revitalizar la industria manufacturera local.</li>
<li>Presionar a aliados y rivales para negociar "deals justos".</li>
</ul>

<p>
Sin embargo, los mercados globales han entrado en pánico, con el S&amp;P 500 cayendo a territorio bajista y protestas en las calles de Washington.
</p>
</div>
</div>
<div id="outline-container-orge9ab192" class="outline-2">
<h2 id="orge9ab192">Metodología del Análisis</h2>
<div class="outline-text-2" id="text-orge9ab192">
<ul class="org-ul">
<li><b><b>Fuentes</b></b>: Noticias recientes de Reuters, AP News, Forbes, y Al Jazeera (hasta el 8 de abril de 2025).</li>
<li><b><b>Criterios</b></b>: Impacto económico directo (costos, empleos), reacciones internacionales, y efectos a largo plazo.</li>
<li><b><b>Herramientas</b></b>: Emacs Org-mode para estructurar, con un gráfico ASCII para visualizar.</li>
</ul>
</div>
</div>
<div id="outline-container-org870cc4b" class="outline-2">
<h2 id="org870cc4b">Ganadores (Winners)</h2>
<div class="outline-text-2" id="text-org870cc4b">
<p>
Aquí están los beneficiados potenciales de esta guerra de aranceles:
</p>
</div>
<div id="outline-container-org5ee5a50" class="outline-3">
<h3 id="org5ee5a50">Trabajadores Manufactureros de EE.UU.</h3>
<div class="outline-text-3" id="text-org5ee5a50">
<ul class="org-ul">
<li><b>Por qué ganan</b>: Trump promete traer empleos de vuelta al Rust Belt (Ohio, Pensilvania) al encarecer importaciones y fomentar producción local.</li>
<li><b>Evidencia</b>: Fox News reporta que congresistas como Michael Rulli ya ven "revitalización" en comunidades industriales.</li>
<li><b>Riesgo</b>: Depende de que las empresas no trasladen costos a consumidores.</li>
</ul>
</div>
</div>
<div id="outline-container-org9f139b1" class="outline-3">
<h3 id="org9f139b1">Industrias del Carbón y Acero</h3>
<div class="outline-text-3" id="text-org9f139b1">
<ul class="org-ul">
<li><b>Por qué ganan</b>: Al Jazeera señala que Trump firmó una orden ejecutiva para duplicar la inversión en carbón, protegido por aranceles a energías extranjeras.</li>
<li><b>Evidencia</b>: Las tarifas del 25% a Canadá y México (por reglas de origen) favorecen el acero local.</li>
<li><b>Riesgo</b>: Competencia con energías renovables sigue siendo un desafío.</li>
</ul>
</div>
</div>
<div id="outline-container-org047ec90" class="outline-3">
<h3 id="org047ec90">Japón e India</h3>
<div class="outline-text-3" id="text-org047ec90">
<ul class="org-ul">
<li><b>Por qué ganan</b>: Fox News destaca que estos países podrían beneficiarse si China y Vietnam pierden mercado, llenando vacíos con productos no tarifados.</li>
<li><b>Evidencia</b>: Japón negocia con el Tesoro (Scott Bessent) para evitar aranceles, mientras India se mantiene al margen.</li>
<li><b>Riesgo</b>: Podrían enfrentar retaliaciones si escalan exportaciones a EE.UU.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org5ef54bf" class="outline-2">
<h2 id="org5ef54bf">Perdedores (Losers)</h2>
<div class="outline-text-2" id="text-org5ef54bf">
<p>
Los aranceles no perdonan, y estos son los más afectados:
</p>
</div>
<div id="outline-container-org40c5373" class="outline-3">
<h3 id="org40c5373">Consumidores Estadounidenses</h3>
<div class="outline-text-3" id="text-org40c5373">
<ul class="org-ul">
<li><b>Por qué pierden</b>: Reuters informa que empresas como Micron y minoristas de ropa ya suben precios o retrasan contrataciones por costos de aranceles.</li>
<li><b>Evidencia</b>: Un 104% a China encarecerá electrónicos y textiles; el 10% general afecta todo lo importado.</li>
<li><b>Impacto</b>: Inflación inminente y menor poder adquisitivo.</li>
</ul>
</div>
</div>
<div id="outline-container-orgeb0372b" class="outline-3">
<h3 id="orgeb0372b">China y Vietnam</h3>
<div class="outline-text-3" id="text-orgeb0372b">
<ul class="org-ul">
<li><b>Por qué pierden</b>: China enfrenta un 104% acumulado, y Vietnam un 46%, paralizando sus exportaciones a EE.UU.</li>
<li><b>Evidencia</b>: The Guardian y NPR reportan que China promete "luchar hasta el final", mientras Vietnam suplica negociaciones (carta de To Lam a Trump).</li>
<li><b>Impacto</b>: Pérdida de mercado y guerra de desgaste económica.</li>
</ul>
</div>
</div>
<div id="outline-container-orgea34521" class="outline-3">
<h3 id="orgea34521">Unión Europea</h3>
<div class="outline-text-3" id="text-orgea34521">
<ul class="org-ul">
<li><b>Por qué pierde</b>: Un 20% a bienes industriales y amenazas a bebidas alcohólicas (Reuters) golpean al bloque ya afectado por autos y metales.</li>
<li><b>Evidencia</b>: Ursula von der Leyen ofrece "cero por cero", pero Trump lo rechaza como insuficiente.</li>
<li><b>Impacto</b>: Tensiones diplomáticas y costos económicos.</li>
</ul>
</div>
</div>
<div id="outline-container-orgd1c8e55" class="outline-3">
<h3 id="orgd1c8e55">Mercados Globales</h3>
<div class="outline-text-3" id="text-orgd1c8e55">
<ul class="org-ul">
<li><b>Por qué pierden</b>: The New York Times y CNBC reportan caídas masivas en bolsas asiáticas (Hang Seng -9.8%) y temores de recesión global.</li>
<li><b>Evidencia</b>: Inversores huyen ante la incertidumbre; el S&amp;P 500 en bear market.</li>
<li><b>Impacto</b>: Volatilidad y desconfianza sistémica.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgdd231bb" class="outline-2">
<h2 id="orgdd231bb">Gráfico de Apoyo: Impacto de los Aranceles</h2>
<div class="outline-text-2" id="text-orgdd231bb">
<div class="org-src-container">
<pre class="src src-ascii">Impacto Econ&#243;mico por Regi&#243;n (Escala 1-10)
+----------------+-------+-------+-------+-------+
| Regi&#243;n         | Costo | Empleo| Mercado| Total |
+----------------+-------+-------+-------+-------+
| EE.UU. (Local) |   3   |   8   |   6   |   17  |
| China          |   9   |   4   |   2   |   15  |
| UE             |   7   |   3   |   4   |   14  |
| Vietnam        |   8   |   3   |   3   |   14  |
| Jap&#243;n/India    |   2   |   5   |   7   |   14  |
+----------------+-------+-------+-------+-------+
* Costo: Incremento de precios (mayor = peor)
* Empleo: Generaci&#243;n de trabajos (mayor = mejor)
* Mercado: Acceso a mercados (mayor = mejor)
</pre>
</div>
<ul class="org-ul">
<li><b>Interpretación</b>: EE.UU. gana en empleos pero paga costos moderados. China sufre alto costo y pérdida de mercado. Japón/India equilibran mejor.</li>
</ul>
</div>
</div>
<div id="outline-container-org1cf9806" class="outline-2">
<h2 id="org1cf9806">Análisis Crítico</h2>
<div class="outline-text-2" id="text-org1cf9806">
<ul class="org-ul">
<li><b><b>A Favor</b></b>: Trump podría lograr un reequilibrio comercial a corto plazo y fortalecer ciertas industrias internas, como promete su equipo (Lutnick, Navarro).</li>
<li><b><b>En Contra</b></b>: Economistas (NYT, CNBC) advierten que aranceles tan amplios recuerdan a Smoot-Hawley (1930), que agravó la Gran Depresión. La inflación y el caos global podrían superar los beneficios.</li>
<li><b><b>Incógnitas</b></b>: ¿Negociará Trump con aliados como Japón o Taiwán (que ofrece "cero aranceles")? ¿Resistirá China el desgaste?</li>
</ul>
</div>
</div>
<div id="outline-container-org3ba41f5" class="outline-2">
<h2 id="org3ba41f5">Referencias</h2>
<div class="outline-text-2" id="text-org3ba41f5">
<ul class="org-ul">
<li>Reuters: "US forges ahead with 104% tariffs on China" (8 abril 2025).</li>
<li>AP News: "Trump threatens more tariffs on China as markets shudder" (7 abril 2025).</li>
<li>Fox News: "The losers and winners of Trump's 'Liberation Day' tariff plan" (6 abril 2025).</li>
<li>The Guardian: "China vows to ‘fight to the end’ against latest Trump tariff threat" (7 abril 2025).</li>
<li>Forbes: "Will Trump Negotiate Tariffs?" (8 abril 2025).</li>
<li>Al Jazeera: "Trump tariffs live: US president vows to revive coal industry" (8 abril 2025).</li>
</ul>
</div>
</div>
<div id="outline-container-orge45b795" class="outline-2">
<h2 id="orge45b795">Conclusión</h2>
<div class="outline-text-2" id="text-orge45b795">
<p>
La guerra de aranceles de Trump es un experimento audaz que podría revitalizar sectores de EE.UU. mientras castiga a rivales como China. Sin embargo, los consumidores y los mercados globales pagan un precio alto, y el riesgo de recesión acecha. En Emacs Org-mode, este análisis se organiza para actuar: usa `C-c C-o` en las URLs de referencias para investigar más o `C-c C-t` para priorizar tareas como "actualizar sistemas ante inflación". ¿Ganará Trump esta apuesta? Solo el tiempo (y los datos) lo dirán.
</p>

<blockquote>
<p>
"Los aranceles son la medicina amarga que Trump receta al mundo, pero ¿curarán o enfermarán más?" - Grok 3
</p>
</blockquote>
</div>
</div>
<div id="outline-container-org175b84a" class="outline-2">
<h2 id="org175b84a">Llamado a la Acción</h2>
<div class="outline-text-2" id="text-org175b84a">
<p>
¿Tu laptop depende de paquetes afectados por esta guerra comercial? Revisa mi post anterior sobre vulnerabilidades y comparte tus pensamientos abajo. ¡Emacs nos une!
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-politica.html">politica</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-economia.html">economia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-trump.html">trump</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-aranceles.html">aranceles</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-opiniones.html">opiniones</a> </div>]]></description>
  <category><![CDATA[politica]]></category>
  <category><![CDATA[economia]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[trump]]></category>
  <category><![CDATA[aranceles]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[opiniones]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09--trump-y-la-guerra-de-aranceles-2025:-ganadores,-perdedores-y-el-caos-global.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-09--trump-y-la-guerra-de-aranceles-2025:-ganadores,-perdedores-y-el-caos-global.html</guid>
  <pubDate>Wed, 09 Apr 2025 07:26:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Detección de Vulnerabilidades en Linux con Bash y Org Mode]]></title>
  <description><![CDATA[
<div id="outline-container-org9ce4c31" class="outline-2">
<h2 id="org9ce4c31">Introducción</h2>
<div class="outline-text-2" id="text-org9ce4c31">
<p>
En la administración de sistemas Linux, una de las tareas más críticas es mantener actualizado el sistema y mitigar cualquier <b>vulnerabilidad</b> presente. Una vulnerabilidad es una debilidad en el sistema que puede ser explotada para ganar acceso no autorizado, ejecutar código malicioso o afectar la disponibilidad y confidencialidad del sistema.
</p>

<p>
Este artículo documenta un método simple pero efectivo para identificar vulnerabilidades conocidas (CVE) en paquetes instalados en una distribución basada en Debian/Ubuntu, utilizando:
</p>

<ul class="org-ul">
<li>Herramientas de línea de comandos (Bash, `dpkg`, `curl`)</li>
<li>Consulta a la API de Vulners.com</li>
<li>Documentación automática en formato Org Mode para su exportación a PDF o HTML</li>
</ul>
</div>
</div>
<div id="outline-container-org57862a5" class="outline-2">
<h2 id="org57862a5">Herramientas necesarias</h2>
<div class="outline-text-2" id="text-org57862a5">
<p>
Antes de comenzar, asegúrate de tener instaladas las siguientes utilidades:
</p>

<ul class="org-ul">
<li>`dpkg` (instalado por defecto en Ubuntu)</li>
<li>`curl` para realizar peticiones web</li>
<li>Editor Emacs con soporte para Org Mode</li>
</ul>

<p>
Puedes instalar `curl` así:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt update
sudo apt install curl
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf2320d0" class="outline-2">
<h2 id="orgf2320d0">Extracción del listado de software instalado</h2>
<div class="outline-text-2" id="text-orgf2320d0">
<p>
Primero generamos un listado de los paquetes instalados con sus versiones:
</p>

<div class="org-src-container">
<pre class="src src-bash">dpkg-query -W -f=<span style="color: #005F00;">'${binary:Package} ${Version}\n'</span> &gt; paquetes_instalados.txt
</pre>
</div>

<p>
Este archivo será leído por nuestro script de análisis de vulnerabilidades.
</p>
</div>
</div>
<div id="outline-container-org76a2eb3" class="outline-2">
<h2 id="org76a2eb3">Script de análisis con Bash</h2>
<div class="outline-text-2" id="text-org76a2eb3">
<p>
A continuación, presentamos el script en Bash que se encarga de:
</p>

<ol class="org-ol">
<li>Leer el archivo de paquetes instalados</li>
<li>Buscar cada paquete en la API pública de <a href="https://vulners.com">Vulners</a></li>
<li>Extraer posibles CVEs relacionados</li>
<li>Generar automáticamente un informe en formato Org Mode</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>

<span style="color: #004651;">OUTPUT</span>=<span style="color: #005F00;">"vulnerabilidades.org"</span>
<span style="color: #004651;">PACKAGE_LIST</span>=<span style="color: #005F00;">"paquetes_instalados.txt"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Verifica dependencias</span>
<span style="color: #D70000;">if ! </span><span style="color: #1F55A0;">command</span> -v curl &amp;&gt; /dev/null; <span style="color: #D70000;">then</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Este script requiere 'curl'. Inst&#225;lalo con: sudo apt install curl"</span>
    <span style="color: #D70000;">exit</span> 1
<span style="color: #D70000;">fi</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">T&#237;tulo del archivo Org</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"#+TITLE: An&#225;lisis de Vulnerabilidades del Sistema"</span> &gt; <span style="color: #005F00;">"$OUTPUT"</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"#+DATE: $(</span><span style="color: #1F55A0; font-weight: bold;">date '+%Y-%m-%d'</span><span style="color: #005F00;">)"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"* Resultados de escaneo de vulnerabilidades"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Obtener lista de paquetes instalados</span>
<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"[*] Obteniendo lista de paquetes..."</span>
dpkg-query -W -f=<span style="color: #005F00;">'${binary:Package} ${Version}\n'</span> &gt; <span style="color: #005F00;">"$PACKAGE_LIST"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Buscar vulnerabilidades por paquete</span>
<span style="color: #D70000;">while</span> <span style="color: #004651;">IFS</span>= read -r line; <span style="color: #D70000;">do</span>
    <span style="color: #004651;">nombre</span>=$(<span style="color: #1F55A0; font-weight: bold;">echo "$line" | awk '{print $1}'</span>)
    <span style="color: #004651;">version</span>=$(<span style="color: #1F55A0; font-weight: bold;">echo "$line" | awk '{print $2}'</span>)
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"[+] Buscando CVEs para: $nombre $version"</span>

    <span style="color: #004651;">query</span>=<span style="color: #005F00;">"${nombre}%20${version}"</span>
    <span style="color: #004651;">response</span>=$(<span style="color: #1F55A0; font-weight: bold;">curl -s "https://vulners.com/api/v3/search/lucene/?query=$query&amp;size=3"</span>)

    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"** $nombre $version"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>

    <span style="color: #D70000;">if </span><span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"$response"</span> | grep -q <span style="color: #005F00;">'"cvelist":'</span>; <span style="color: #D70000;">then</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   &#8594; Vulnerabilidades encontradas."</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   - Vulnerabilidades encontradas:"</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"$response"</span> | grep -oP <span style="color: #005F00;">'"id":\s*"\K(CVE-[0-9\-]+)'</span> | uniq | sed <span style="color: #005F00;">'s/^/     - /'</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
    <span style="color: #D70000;">else</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   &#8594; Sin vulnerabilidades encontradas."</span>
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"   - Sin vulnerabilidades encontradas."</span> &gt;&gt; <span style="color: #005F00;">"$OUTPUT"</span>
    <span style="color: #D70000;">fi</span>

    sleep 1  <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Para no sobrecargar el servidor</span>
<span style="color: #D70000;">done</span> &lt; <span style="color: #005F00;">"$PACKAGE_LIST"</span>

<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"[&#10004;] An&#225;lisis completado. Archivo generado: $OUTPUT"</span>
</pre>
</div>

<p>
Para usarlo:
</p>

<div class="org-src-container">
<pre class="src src-bash">chmod +x check_vulnerabilities_org.sh
./check_vulnerabilities_org.sh
</pre>
</div>
</div>
</div>
<div id="outline-container-org1e11a39" class="outline-2">
<h2 id="org1e11a39">Ejemplo de resultados</h2>
<div class="outline-text-2" id="text-org1e11a39">
<p>
A continuación se muestra un extracto real generado automáticamente con el script:
</p>

<p>
#+begin<sub>example</sub>
</p>
</div>
<div id="outline-container-orgac93d32" class="outline-3">
<h3 id="orgac93d32">openssl 3.0.2-0ubuntu1.15</h3>
<div class="outline-text-3" id="text-orgac93d32">
<ul class="org-ul">
<li>Vulnerabilidades encontradas:
<ul class="org-ul">
<li>CVE-2022-0778</li>
<li>CVE-2023-0464</li>
<li>CVE-2023-2650</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org5e1cb18" class="outline-3">
<h3 id="org5e1cb18">firefox 124.0</h3>
<div class="outline-text-3" id="text-org5e1cb18">
<ul class="org-ul">
<li>Vulnerabilidades encontradas:
<ul class="org-ul">
<li>CVE-2024-29943</li>
<li>CVE-2024-29944</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org51f7d0f" class="outline-3">
<h3 id="org51f7d0f">vlc 3.0.16</h3>
<div class="outline-text-3" id="text-org51f7d0f">
<ul class="org-ul">
<li>Sin vulnerabilidades encontradas.</li>
</ul>
<p>
#+end<sub>example</sub>
</p>
</div>
</div>
</div>
<div id="outline-container-orgd156269" class="outline-2">
<h2 id="orgd156269">Exportar resultados a PDF o HTML</h2>
<div class="outline-text-2" id="text-orgd156269">
<p>
Desde Emacs, abre el archivo generado `vulnerabilidades.org` y presiona:
</p>

<ul class="org-ul">
<li>`C-c C-e l o` → Exportar a PDF</li>
<li>`C-c C-e h o` → Exportar a HTML</li>
</ul>

<p>
Esto genera un informe profesional que puedes archivar, compartir o añadir a tu blog.
</p>
</div>
</div>
<div id="outline-container-orgcdbb603" class="outline-2">
<h2 id="orgcdbb603">Recomendaciones</h2>
<div class="outline-text-2" id="text-orgcdbb603">
<ul class="org-ul">
<li>Ejecutar este script regularmente como parte de tus tareas de mantenimiento.</li>
<li>Configurar alertas automáticas de CVE con herramientas como `apticron`, `unattended-upgrades` o `lynis`.</li>
<li>Complementar con escáneres más avanzados como <b>OpenVAS</b> o <b>Lynis</b> para auditorías completas.</li>
</ul>
</div>
</div>
<div id="outline-container-orgca61169" class="outline-2">
<h2 id="orgca61169">Conclusión</h2>
<div class="outline-text-2" id="text-orgca61169">
<p>
La seguridad no es un estado, es un proceso. Automatizar la detección de vulnerabilidades con herramientas simples como Bash, APIs públicas y Org Mode nos permite mantenernos al tanto de riesgos sin depender de soluciones comerciales complejas.
</p>

<p>
Este enfoque demuestra el poder de las herramientas libres combinadas: un sistema Linux, un script Bash y la flexibilidad de Emacs.
</p>
</div>
</div>
<div id="outline-container-org574fc33" class="outline-2">
<h2 id="org574fc33">Recursos</h2>
<div class="outline-text-2" id="text-org574fc33">
<ul class="org-ul">
<li><a href="https://vulners.com">Vulners API</a></li>
<li><a href="https://nvd.nist.gov">National Vulnerability Database</a></li>
<li><a href="https://cve.mitre.org">CVE Mitre</a></li>
<li><a href="https://cisofy.com/lynis/">Lynis Auditor</a></li>
<li><a href="https://www.greenbone.net/">Greenbone/OpenVAS</a></li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-orgmode.html">orgmode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[orgmode]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-08-detecci%C3%B3n-de-vulnerabilidades-en-linux-con-bash-y-org-mode.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-08-detecci%C3%B3n-de-vulnerabilidades-en-linux-con-bash-y-org-mode.html</guid>
  <pubDate>Tue, 08 Apr 2025 04:55:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[30 Términos de IA que Están Transformando la Programación en 2025]]></title>
  <description><![CDATA[
<div id="outline-container-org4ebfa5c" class="outline-2">
<h2 id="org4ebfa5c">30 Términos de IA que Están Transformando la Programación en 2025</h2>
<div class="outline-text-2" id="text-org4ebfa5c">
<p>
La inteligencia artificial (IA) está redefiniendo la programación en 2025, con términos como "vibe-coding" liderando el camino. Desde Emacs hasta herramientas como Grok o Copilot, la IA nos permite crear código de manera más intuitiva, rápida y creativa. En este post, exploramos 30 conceptos clave que están moldeando esta era de programación asistida por IA, ideales para potenciar tu flujo de trabajo en Emacs y más allá.
</p>
</div>
<div id="outline-container-orgcb11a5e" class="outline-3">
<h3 id="orgcb11a5e">Lista de Términos</h3>
<div class="outline-text-3" id="text-orgcb11a5e">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Término</th>
<th scope="col" class="org-left">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Vibe-Coding</td>
<td class="org-left">Programación asistida por IA donde describes en lenguaje natural lo que quieres, y la IA genera el código. Popularizado por Andrej Karpathy en 2025.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Prompt Engineering</td>
<td class="org-left">Diseñar instrucciones precisas para obtener respuestas útiles de modelos de IA.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">LLM (Large Language Model)</td>
<td class="org-left">Modelos de lenguaje masivos, como Grok, base de herramientas de generación de código.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">AI-Assisted Programming</td>
<td class="org-left">Programación con ayuda de IA, como GitHub Copilot, para sugerencias y automatización.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Natural Language Programming</td>
<td class="org-left">Codificar describiendo intenciones en lenguaje natural, sin sintaxis técnica estricta.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Code Generation</td>
<td class="org-left">Generación automática de código a partir de descripciones o ejemplos.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">AI Agent</td>
<td class="org-left">Entidades de IA autónomas que escriben código o gestionan tareas.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Low-Code/No-Code</td>
<td class="org-left">Crear aplicaciones con mínima codificación, potenciadas por IA.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Copilot</td>
<td class="org-left">Asistente de IA que sugiere código en tiempo real, popularizado por GitHub Copilot.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">AutoML</td>
<td class="org-left">Automatización de procesos de aprendizaje automático con IA.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Hallucination</td>
<td class="org-left">Cuando la IA genera información incorrecta o inventada, un reto en la generación de código.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Context Window</td>
<td class="org-left">Límite de texto que un modelo de IA puede procesar a la vez.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">SuperWhisper</td>
<td class="org-left">Herramienta de voz a texto para dictar instrucciones a modelos de IA.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Iterative Refinement</td>
<td class="org-left">Mejorar resultados de IA mediante iteraciones de prompts y retroalimentación.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">AI-Driven Development</td>
<td class="org-left">Desarrollo guiado por IA en todas las etapas del software.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Code Review by AI</td>
<td class="org-left">Revisión de código por IA para detectar errores o sugerir mejoras.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Conversational Coding</td>
<td class="org-left">Programar "hablando" con la IA, describiendo problemas y recibiendo soluciones.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">AI Wrapper</td>
<td class="org-left">Aplicaciones que simplifican el uso de modelos de IA para tareas específicas.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Exponential Coding</td>
<td class="org-left">Velocidad exponencial en desarrollo gracias a la IA, ligada a vibe-coding.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Software for One</td>
<td class="org-left">Crear herramientas personalizadas con IA para necesidades individuales.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Few-Shot Learning</td>
<td class="org-left">Técnica donde la IA aprende de pocos ejemplos, útil para personalizar generadores de código.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Zero-Shot Learning</td>
<td class="org-left">Capacidad de la IA para realizar tareas sin entrenamiento previo, aplicada a programación.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Fine-Tuning</td>
<td class="org-left">Ajustar un modelo de IA con datos específicos para mejorar su precisión en tareas como coding.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">AI Pair Programming</td>
<td class="org-left">Colaboración en tiempo real entre humanos y IA para escribir código, como un "compañero".</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Semantic Code Search</td>
<td class="org-left">Búsqueda de código basada en significado, no solo palabras clave, potenciada por IA.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Synthetic Data</td>
<td class="org-left">Datos generados por IA para entrenar modelos o probar software, complementando vibe-coding.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Explainable AI (XAI)</td>
<td class="org-left">IA que explica sus decisiones, útil para depurar código generado automáticamente.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Neural Code Completion</td>
<td class="org-left">Autocompletado de código basado en redes neuronales, más avanzado que reglas estáticas.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">AI-Augmented Debugging</td>
<td class="org-left">Depuración asistida por IA que identifica errores y sugiere correcciones automáticamente.</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">Hyperautomation</td>
<td class="org-left">Automatización extrema de procesos, incluyendo desarrollo de software, con IA.</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-orgc9156e6" class="outline-3">
<h3 id="orgc9156e6">Reflexión</h3>
<div class="outline-text-3" id="text-orgc9156e6">
<p>
Con 30 términos en la lista, queda claro que la IA no solo acelera la programación, sino que cambia cómo pensamos el código. En Emacs, podemos integrar estas ideas con herramientas como `org-babel` para ejecutar código generado por IA o `org-static-blog` para documentar experimentos. "Vibe-coding" sigue siendo mi favorito por su enfoque en la creatividad, pero ¿cuál te inspira más a ti?
</p>

<p>
[1] Experimenta vibe-coding: describe un script en un bloque de código y pide a Grok que lo genere por ti.
</p>
</div>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ia.html">ia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-vibe-coding.html">vibe-coding</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-programacion.html">programacion</a> </div>]]></description>
  <category><![CDATA[ia]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[vibe-coding]]></category>
  <category><![CDATA[programacion]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-05-30-t%C3%A9rminos-de-ia-que-est%C3%A1n-transformando-la-programaci%C3%B3n-en-2025.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-05-30-t%C3%A9rminos-de-ia-que-est%C3%A1n-transformando-la-programaci%C3%B3n-en-2025.html</guid>
  <pubDate>Sat, 05 Apr 2025 14:42:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Configurar Emacs para creación de Graficos]]></title>
  <description><![CDATA[
<div id="outline-container-org9a98fc1" class="outline-2">
<h2 id="org9a98fc1"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
Uno de los grandes poderes ocultos de Emacs y Org Mode es su capacidad para generar gráficos directamente desde el texto. Esta funcionalidad permite a los usuarios crear visualizaciones sofisticadas sin salir de su editor, manteniendo todo el contenido en archivos de texto plano que son fáciles de versionar y mantener.
</p>

<p>
En este tutorial, exploraremos cómo configurar Emacs para trabajar con diferentes tipos de gráficos directamente desde Org Mode, incluyendo:
</p>

<ul class="org-ul">
<li>Gnuplot para gráficos científicos y estadísticos</li>
<li>Ditaa para diagramas ASCII</li>
<li>Graphviz (DOT) para diagramas estructurales</li>
<li>PlantUML para diagramas UML</li>
</ul>

<p>
Al final de este tutorial, podrás integrar gráficos impresionantes en tus documentos de Org Mode que se exportarán perfectamente a HTML, PDF y otros formatos.
</p>
</div>
</div>
<div id="outline-container-org38a3adf" class="outline-2">
<h2 id="org38a3adf"><span class="section-number-2">2.</span> Requisitos previos</h2>
<div class="outline-text-2" id="text-2">
<p>
Antes de comenzar, asegúrate de tener instalado:
</p>

<ul class="org-ul">
<li>Emacs (versión 27.1 o superior recomendada)</li>
<li>Org Mode (versión 9.4 o superior)</li>
<li>Los programas externos correspondientes para cada tipo de gráfico</li>
</ul>
</div>
</div>
<div id="outline-container-orge24413d" class="outline-2">
<h2 id="orge24413d"><span class="section-number-2">3.</span> Configuración básica de Org Babel</h2>
<div class="outline-text-2" id="text-3">
<p>
Lo primero que necesitamos es configurar Org Babel para permitir la ejecución de bloques de código que generarán nuestros gráficos. Añade este código a tu <code>init.el</code> o <code>.emacs</code>:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Activar Org Babel para los lenguajes que usaremos</span>
(<span style="color: #D70000;">with-eval-after-load</span> 'org
  (org-babel-do-load-languages
   'org-babel-load-languages
   '((emacs-lisp . t)
     (gnuplot . t)
     (ditaa . t)
     (dot . t)
     (plantuml . t)
     (mermaid . t))))

<span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">No pedir confirmaci&#243;n al ejecutar bloques de c&#243;digo</span>
(<span style="color: #D70000;">setq</span> org-confirm-babel-evaluate nil)
</pre>
</div>
</div>
</div>
<div id="outline-container-org172b3d3" class="outline-2">
<h2 id="org172b3d3"><span class="section-number-2">4.</span> Configuración de Gnuplot</h2>
<div class="outline-text-2" id="text-4">
<p>
<a href="https://www.gnuplot.info/">Gnuplot</a> es una herramienta potente para generar gráficos científicos y estadísticos.
</p>
</div>
<div id="outline-container-org0bd11a7" class="outline-3">
<h3 id="org0bd11a7"><span class="section-number-3">4.1.</span> Instalación</h3>
<div class="outline-text-3" id="text-4-1">
<p>
En sistemas basados en Debian/Ubuntu:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt-get install gnuplot
</pre>
</div>

<p>
En macOS con Homebrew:
</p>

<div class="org-src-container">
<pre class="src src-bash">brew install gnuplot
</pre>
</div>
</div>
</div>
<div id="outline-container-org1a9590f" class="outline-3">
<h3 id="org1a9590f"><span class="section-number-3">4.2.</span> Configuración en Emacs</h3>
<div class="outline-text-3" id="text-4-2">
<p>
Instala el paquete <code>gnuplot-mode</code> usando <code>package.el</code>:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">use-package</span> <span style="color: #AF005F;">gnuplot</span>
  <span style="color: #1F55A0;">:ensure</span> t)
</pre>
</div>
</div>
</div>
<div id="outline-container-org8ab48f0" class="outline-3">
<h3 id="org8ab48f0"><span class="section-number-3">4.3.</span> Ejemplo de uso</h3>
<div class="outline-text-3" id="text-4-3">
<p>
Crea un bloque de código en tu archivo Org Mode:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC gnuplot :file ./images/seno-coseno.png :exports both</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> terminal pngcairo size 800,600 enhanced font </span><span style="color: #005F00; background-color: #E9E9F2;">"Arial,12"</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> </span><span style="color: #1F55A0; background-color: #E9E9F2;">title</span><span style="background-color: #E9E9F2;"> </span><span style="color: #005F00; background-color: #E9E9F2;">"Funciones seno y coseno"</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> xlabel </span><span style="color: #005F00; background-color: #E9E9F2;">"x"</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> ylabel </span><span style="color: #005F00; background-color: #E9E9F2;">"y"</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> grid</span>
<span style="color: #AF005F; background-color: #E9E9F2;">set</span><span style="background-color: #E9E9F2;"> key right bottom</span>
<span style="color: #D70000; background-color: #E9E9F2;">plot</span><span style="background-color: #E9E9F2;"> </span><span style="color: #AF8700; background-color: #E9E9F2;">sin</span><span style="background-color: #E9E9F2;">(x) </span><span style="color: #1F55A0; background-color: #E9E9F2;">title</span><span style="background-color: #E9E9F2;"> </span><span style="color: #005F00; background-color: #E9E9F2;">"sin(x)"</span><span style="background-color: #E9E9F2;"> </span><span style="color: #1F55A0; background-color: #E9E9F2;">with</span><span style="background-color: #E9E9F2;"> </span><span style="color: #AF8700; background-color: #E9E9F2;">lines</span><span style="background-color: #E9E9F2;"> </span><span style="color: #1F55A0; background-color: #E9E9F2;">linewidth</span><span style="background-color: #E9E9F2;"> 2, \</span>
<span style="background-color: #E9E9F2;">     </span><span style="color: #AF8700; background-color: #E9E9F2;">cos</span><span style="background-color: #E9E9F2;">(x) </span><span style="color: #1F55A0; background-color: #E9E9F2;">title</span><span style="background-color: #E9E9F2;"> </span><span style="color: #005F00; background-color: #E9E9F2;">"cos(x)"</span><span style="background-color: #E9E9F2;"> </span><span style="color: #1F55A0; background-color: #E9E9F2;">with</span><span style="background-color: #E9E9F2;"> </span><span style="color: #AF8700; background-color: #E9E9F2;">lines</span><span style="background-color: #E9E9F2;"> </span><span style="color: #1F55A0; background-color: #E9E9F2;">linewidth</span><span style="background-color: #E9E9F2;"> 2 </span><span style="color: #1F55A0; background-color: #E9E9F2;">linecolor</span><span style="background-color: #E9E9F2;"> rgb </span><span style="color: #005F00; background-color: #E9E9F2;">"red"</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>

<p>
Al ejecutar este bloque (con <code>C-c C-c</code>), obtendrás una imagen como esta:
</p>


<figure id="org1d2fd35">
<img src="images/seno-coseno.png" alt="seno-coseno.png">

<figcaption><span class="figure-number">Figure 1: </span>Gráfico de las funciones seno y coseno</figcaption>
</figure>
</div>
</div>
</div>
<div id="outline-container-org56edb83" class="outline-2">
<h2 id="org56edb83"><span class="section-number-2">5.</span> Configuración de Ditaa</h2>
<div class="outline-text-2" id="text-5">
<p>
<a href="http://ditaa.sourceforge.net/">Ditaa</a> convierte diagramas ASCII en imágenes.
</p>
</div>
<div id="outline-container-org2b1868b" class="outline-3">
<h3 id="org2b1868b"><span class="section-number-3">5.1.</span> Instalación</h3>
<div class="outline-text-3" id="text-5-1">
<p>
En sistemas basados en Debian/Ubuntu:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt-get install ditaa
</pre>
</div>

<p>
En macOS con Homebrew:
</p>

<div class="org-src-container">
<pre class="src src-bash">brew install ditaa
</pre>
</div>
</div>
</div>
<div id="outline-container-orgf30a3b5" class="outline-3">
<h3 id="orgf30a3b5"><span class="section-number-3">5.2.</span> Configuración en Emacs</h3>
<div class="outline-text-3" id="text-5-2">
<p>
Debes especificar la ruta al ejecutable de ditaa:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">setq</span> org-ditaa-jar-path <span style="color: #005F00;">"/usr/share/ditaa/ditaa.jar"</span>)  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Ajusta esta ruta seg&#250;n tu sistema</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org2d5ba50" class="outline-3">
<h3 id="org2d5ba50"><span class="section-number-3">5.3.</span> Ejemplo de uso</h3>
<div class="outline-text-3" id="text-5-3">
<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC ditaa :file ./images/diagrama-sistema.png :exports both</span>
<span style="background-color: #E9E9F2;">+---------------+        +---------------+</span>
<span style="background-color: #E9E9F2;">|               |        |               |</span>
<span style="background-color: #E9E9F2;">|  Frontend     +-------&gt;+  API Gateway  |</span>
<span style="background-color: #E9E9F2;">|  (React)      |        |  (Node.js)    |</span>
<span style="background-color: #E9E9F2;">|               |        |               |</span>
<span style="background-color: #E9E9F2;">+-------+-------+        +-------+-------+</span>
<span style="background-color: #E9E9F2;">        ^                        |</span>
<span style="background-color: #E9E9F2;">        |                        v</span>
<span style="background-color: #E9E9F2;">        |                +-------+-------+</span>
<span style="background-color: #E9E9F2;">        |                |               |</span>
<span style="background-color: #E9E9F2;">        +----------------+  Database     |</span>
<span style="background-color: #E9E9F2;">                         |  (PostgreSQL) |</span>
<span style="background-color: #E9E9F2;">                         |               |</span>
<span style="background-color: #E9E9F2;">                         +---------------+</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>

<p>
Esto generará un diagrama como:
</p>


<figure id="orgf5913ed">
<img src="images/diagrama-sistema.png" alt="diagrama-sistema.png">

</figure>
</div>
</div>
</div>
<div id="outline-container-orgbd65f89" class="outline-2">
<h2 id="orgbd65f89"><span class="section-number-2">6.</span> Configuración de Graphviz (DOT)</h2>
<div class="outline-text-2" id="text-6">
<p>
<a href="https://graphviz.org/">Graphviz</a> es excelente para crear diagramas estructurales, como árboles y grafos.
</p>
</div>
<div id="outline-container-org67e27f9" class="outline-3">
<h3 id="org67e27f9"><span class="section-number-3">6.1.</span> Instalación</h3>
<div class="outline-text-3" id="text-6-1">
<p>
En sistemas basados en Debian/Ubuntu:
</p>

<div class="org-src-container">
<pre class="src src-bash">sudo apt-get install graphviz
</pre>
</div>

<p>
En macOS con Homebrew:
</p>

<div class="org-src-container">
<pre class="src src-bash">brew install graphviz
</pre>
</div>
</div>
</div>
<div id="outline-container-org046cd18" class="outline-3">
<h3 id="org046cd18"><span class="section-number-3">6.2.</span> Configuración en Emacs</h3>
<div class="outline-text-3" id="text-6-2">
<p>
No se requiere configuración adicional si Graphviz está en tu PATH.
</p>
</div>
</div>
<div id="outline-container-org8aa5bf8" class="outline-3">
<h3 id="org8aa5bf8"><span class="section-number-3">6.3.</span> Ejemplo de uso</h3>
<div class="outline-text-3" id="text-6-3">
<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC dot :file ./images/arbol-decisiones.png :exports both</span>
<span style="background-color: #E9E9F2;">digraph G {</span>
<span style="background-color: #E9E9F2;">  node [shape=box, style="rounded,filled", fillcolor=lightblue];</span>

<span style="background-color: #E9E9F2;">  A [label="&#191;Llueve?"];</span>
<span style="background-color: #E9E9F2;">  B [label="Llevar paraguas"];</span>
<span style="background-color: #E9E9F2;">  C [label="&#191;Hace fr&#237;o?"];</span>
<span style="background-color: #E9E9F2;">  D [label="Llevar abrigo"];</span>
<span style="background-color: #E9E9F2;">  E [label="Llevar chaqueta ligera"];</span>

<span style="background-color: #E9E9F2;">  A -&gt; B [label="S&#237;"];</span>
<span style="background-color: #E9E9F2;">  A -&gt; C [label="No"];</span>
<span style="background-color: #E9E9F2;">  C -&gt; D [label="S&#237;"];</span>
<span style="background-color: #E9E9F2;">  C -&gt; E [label="No"];</span>
<span style="background-color: #E9E9F2;">}</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>

<p>
Generará:
</p>


<figure id="org0220360">
<img src="images/arbol-decisiones.png" alt="arbol-decisiones.png">

<figcaption><span class="figure-number">Figure 2: </span>Árbol de decisiones sobre el clima</figcaption>
</figure>
</div>
</div>
</div>
<div id="outline-container-org527e3ce" class="outline-2">
<h2 id="org527e3ce"><span class="section-number-2">7.</span> Configuración de PlantUML</h2>
<div class="outline-text-2" id="text-7">
<p>
<a href="https://plantuml.com/">PlantUML</a> es una herramienta para crear diagramas UML a partir de texto.
</p>
</div>
<div id="outline-container-org7b20f7d" class="outline-3">
<h3 id="org7b20f7d"><span class="section-number-3">7.1.</span> Instalación</h3>
<div class="outline-text-3" id="text-7-1">
<p>
PlantUML requiere Java y Graphviz:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Para Debian/Ubuntu</span>
sudo apt-get install default-jre graphviz

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Descargar PlantUML</span>
wget https://sourceforge.net/projects/plantuml/files/plantuml.jar
</pre>
</div>
</div>
</div>
<div id="outline-container-orge16c228" class="outline-3">
<h3 id="orge16c228"><span class="section-number-3">7.2.</span> Configuración en Emacs</h3>
<div class="outline-text-3" id="text-7-2">
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">setq</span> org-plantuml-jar-path <span style="color: #005F00;">"~/ruta/a/plantuml.jar"</span>)  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Ajusta esta ruta</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org2804a65" class="outline-3">
<h3 id="org2804a65"><span class="section-number-3">7.3.</span> Ejemplo de uso</h3>
<div class="outline-text-3" id="text-7-3">
<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC plantuml :file ./images/diagrama-clases.png :exports both</span>
<span style="background-color: #E9E9F2;">@startuml</span>
<span style="background-color: #E9E9F2;">class Usuario {</span>
<span style="background-color: #E9E9F2;">  -id: int</span>
<span style="background-color: #E9E9F2;">  -nombre: String</span>
<span style="background-color: #E9E9F2;">  -email: String</span>
<span style="background-color: #E9E9F2;">  +login(): boolean</span>
<span style="background-color: #E9E9F2;">  +logout(): void</span>
<span style="background-color: #E9E9F2;">}</span>

<span style="background-color: #E9E9F2;">class Producto {</span>
<span style="background-color: #E9E9F2;">  -id: int</span>
<span style="background-color: #E9E9F2;">  -nombre: String</span>
<span style="background-color: #E9E9F2;">  -precio: float</span>
<span style="background-color: #E9E9F2;">  +aplicarDescuento(porcentaje: float): void</span>
<span style="background-color: #E9E9F2;">}</span>

<span style="background-color: #E9E9F2;">class Carrito {</span>
<span style="background-color: #E9E9F2;">  -items: List&lt;Producto&gt;</span>
<span style="background-color: #E9E9F2;">  +agregarProducto(p: Producto): void</span>
<span style="background-color: #E9E9F2;">  +eliminarProducto(id: int): void</span>
<span style="background-color: #E9E9F2;">  +calcularTotal(): float</span>
<span style="background-color: #E9E9F2;">}</span>

<span style="background-color: #E9E9F2;">Usuario "1" -- "0..*" Carrito : tiene &gt;</span>
<span style="background-color: #E9E9F2;">Carrito "1" o-- "0..*" Producto : contiene &gt;</span>
<span style="background-color: #E9E9F2;">@enduml</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>

<p>
Generará:
</p>


<figure id="org2931953">
<img src="images/diagrama-clases.png" alt="diagrama-clases.png">

<figcaption><span class="figure-number">Figure 3: </span>Diagrama de clases para una tienda online</figcaption>
</figure>
</div>
</div>
</div>
<div id="outline-container-orgd5d9e80" class="outline-2">
<h2 id="orgd5d9e80"><span class="section-number-2">8.</span> Configuración de Mermaid</h2>
<div class="outline-text-2" id="text-8">
<p>
<a href="https://mermaid-js.github.io/mermaid/">Mermaid</a> es una herramienta moderna para crear diagramas de flujo, secuencia, Gantt y más.
</p>
</div>
<div id="outline-container-org7ea272d" class="outline-3">
<h3 id="org7ea272d"><span class="section-number-3">8.1.</span> Instalación</h3>
<div class="outline-text-3" id="text-8-1">
<p>
Mermaid requiere Node.js:
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Instalar mermaid-cli globalmente</span>
npm install -g @mermaid-js/mermaid-cli
</pre>
</div>
</div>
</div>
<div id="outline-container-org1cf1136" class="outline-3">
<h3 id="org1cf1136"><span class="section-number-3">8.2.</span> Configuración en Emacs</h3>
<div class="outline-text-3" id="text-8-2">
<p>
Primero, instala el paquete <code>ob-mermaid</code>:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">use-package</span> <span style="color: #AF005F;">ob-mermaid</span>
  <span style="color: #1F55A0;">:ensure</span> t
  <span style="color: #1F55A0;">:config</span>
  (<span style="color: #D70000;">setq</span> ob-mermaid-cli-path <span style="color: #005F00;">"/usr/local/bin/mmdc"</span>))  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Ajusta seg&#250;n tu instalaci&#243;n</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org0c254fe" class="outline-3">
<h3 id="org0c254fe"><span class="section-number-3">8.3.</span> Ejemplo de uso</h3>
<div class="outline-text-3" id="text-8-3">
<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC mermaid :file ./images/flujo-trabajo.png :exports both</span>
<span style="color: #D70000; background-color: #E9E9F2;">flowchart</span><span style="background-color: #E9E9F2;"> </span><span style="color: #AF005F; background-color: #E9E9F2;">TD</span>
<span style="background-color: #E9E9F2;">    A[Inicio] </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> B{&#191;Es un bug?}</span>
<span style="background-color: #E9E9F2;">    B </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|S&#237;| C[Reportar en JIRA]</span>
<span style="background-color: #E9E9F2;">    B </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|No| D{&#191;Es una caracter&#237;stica nueva?}</span>
<span style="background-color: #E9E9F2;">    C </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> E[Asignar desarrollador]</span>
<span style="background-color: #E9E9F2;">    D </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|S&#237;| F[Crear propuesta]</span>
<span style="background-color: #E9E9F2;">    D </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|No| G[Documentar como mejora]</span>
<span style="background-color: #E9E9F2;">    F </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> H[Revisi&#243;n por el equipo]</span>
<span style="background-color: #E9E9F2;">    G </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> H</span>
<span style="background-color: #E9E9F2;">    E </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> I[Desarrollo]</span>
<span style="background-color: #E9E9F2;">    H </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> I</span>
<span style="background-color: #E9E9F2;">    I </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> J[Testing]</span>
<span style="background-color: #E9E9F2;">    J </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> K{&#191;Pasa todos los tests?}</span>
<span style="background-color: #E9E9F2;">    K </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|No| I</span>
<span style="background-color: #E9E9F2;">    K </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;">|S&#237;| L[Despliegue]</span>
<span style="background-color: #E9E9F2;">    L </span><span style="color: #AF8700; background-color: #E9E9F2;">--&gt;</span><span style="background-color: #E9E9F2;"> M[Fin]</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org1609664" class="outline-2">
<h2 id="org1609664"><span class="section-number-2">9.</span> Integración con org-static-blog</h2>
<div class="outline-text-2" id="text-9">
<p>
Para utilizar estos gráficos en tu blog creado con <code>org-static-blog</code>, asegúrate de:
</p>

<ol class="org-ol">
<li>Crear una estructura de directorios adecuada para tus imágenes:</li>
</ol>

<div class="org-src-container">
<pre class="src src-bash">mkdir -p ~/ruta/a/tu/blog/images/
</pre>
</div>

<ol class="org-ol">
<li>Configurar <code>org-static-blog</code> para copiar las imágenes al generar el sitio:</li>
</ol>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">use-package</span> <span style="color: #AF005F;">org-static-blog</span>
  <span style="color: #1F55A0;">:ensure</span> t
  <span style="color: #1F55A0;">:config</span>
  (<span style="color: #D70000;">setq</span> org-static-blog-publish-title <span style="color: #005F00;">"Emacs con Esteroides"</span>)
  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Otras configuraciones...</span>

  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Importante: configurar para que copie las im&#225;genes</span>
  (<span style="color: #D70000;">setq</span> org-static-blog-publish-url <span style="color: #005F00;">"https://tu-dominio.com/"</span>)
  (<span style="color: #D70000;">setq</span> org-static-blog-publish-directory <span style="color: #005F00;">"~/ruta/al/directorio/p&#250;blico/"</span>)
  (<span style="color: #D70000;">setq</span> org-static-blog-posts-directory <span style="color: #005F00;">"~/ruta/a/tus/posts/"</span>)
  (<span style="color: #D70000;">setq</span> org-static-blog-drafts-directory <span style="color: #005F00;">"~/ruta/a/tus/borradores/"</span>)
  (<span style="color: #D70000;">setq</span> org-static-blog-enable-tags t)

  <span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Copiar directorio de im&#225;genes al publicar</span>
  (<span style="color: #D70000;">defun</span> <span style="color: #AF8700;">copy-images-after-publish</span> ()
    (copy-directory <span style="color: #005F00;">"~/ruta/a/tu/blog/images/"</span>
                   (concat org-static-blog-publish-directory <span style="color: #005F00;">"/images/"</span>)
                   t t t))

  (add-hook 'org-static-blog-publish-after-hook 'copy-images-after-publish))
</pre>
</div>

<ol class="org-ol">
<li>Referencia las imágenes correctamente en tus posts de Org Mode:</li>
</ol>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #009B7C; font-weight: bold; text-decoration: underline;"><a href="../images/nombre-del-grafico.png">../images/nombre-del-grafico.png</a></span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org277bc3a" class="outline-2">
<h2 id="org277bc3a"><span class="section-number-2">10.</span> Consejos avanzados</h2>
<div class="outline-text-2" id="text-10">
</div>
<div id="outline-container-orge7a01a7" class="outline-3">
<h3 id="orge7a01a7"><span class="section-number-3">10.1.</span> Ejecutar bloques automáticamente al exportar</h3>
<div class="outline-text-3" id="text-10-1">
<p>
Para asegurarte de que los gráficos siempre estén actualizados al exportar:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">setq</span> org-export-babel-evaluate t)
</pre>
</div>
</div>
</div>
<div id="outline-container-org823235d" class="outline-3">
<h3 id="org823235d"><span class="section-number-3">10.2.</span> Caché de resultados</h3>
<div class="outline-text-3" id="text-10-2">
<p>
Para evitar regenerar gráficos que no han cambiado:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+BEGIN_SRC gnuplot :file ./images/grafico.png :exports both :cache yes</span>
<span style="background-color: #E9E9F2;">;; C&#243;digo del gr&#225;fico</span>
<span style="color: #4E4E4E; background-color: #F5F5F9; font-style: italic;">#+END_SRC</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org3a28adf" class="outline-3">
<h3 id="org3a28adf"><span class="section-number-3">10.3.</span> Personalización de estilos</h3>
<div class="outline-text-3" id="text-10-3">
<p>
Crea un archivo <code>.gnuplot</code> en tu directorio home para personalizar estilos globales:
</p>
</div>
</div>
</div>
<div id="outline-container-org97f66d0" class="outline-2">
<h2 id="org97f66d0"><span class="section-number-2">11.</span> Conclusión</h2>
<div class="outline-text-2" id="text-11">
<p>
Con estas configuraciones, has convertido tu Emacs en una potente herramienta para la creación de gráficos y diagramas integrados directamente en tus documentos de Org Mode. Esta capacidad es especialmente útil para blogs técnicos como "Emacs con Esteroides", permitiéndote mantener todo tu contenido, incluidos los gráficos, como texto plano versionable.
</p>

<p>
La combinación de Org Mode con herramientas como Gnuplot, Ditaa, Graphviz, PlantUML y Mermaid te da un control sin precedentes sobre tus visualizaciones, sin necesidad de recurrir a programas externos complejos o formatos binarios que dificultan el versionado.
</p>

<p>
¿Qué gráficos crearás para tu próximo artículo?
</p>
</div>
</div>
<div id="outline-container-org5698df7" class="outline-2">
<h2 id="org5698df7"><span class="section-number-2">12.</span> Referencias y recursos adicionales</h2>
<div class="outline-text-2" id="text-12">
<ul class="org-ul">
<li><a href="https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-gnuplot.html">Documentación oficial de Org Babel para Gnuplot</a></li>
<li><a href="https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-ditaa.html">Documentación de Org Babel para Ditaa</a></li>
<li><a href="https://graphviz.org/documentation/">Documentación oficial de Graphviz</a></li>
<li><a href="https://plantuml.com/es/">Sitio oficial de PlantUML (en español)</a></li>
<li><a href="https://mermaid-js.github.io/mermaid/#/">Documentación de Mermaid</a></li>
<li><a href="https://github.com/bastibe/org-static-blog">Repositorio de org-static-blog en GitHub</a></li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutorial.html">tutorial</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-gráficos.html">gráficos</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-gnuplot.html">gnuplot</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-plantuml.html">plantuml</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-org-mode.html">org-mode</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-draft.html">draft</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-gnuplot.html">gnuplot</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ditaa.html">ditaa</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-graphviz.html">graphviz</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-plantuml.html">plantUML</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[tutorial]]></category>
  <category><![CDATA[gráficos]]></category>
  <category><![CDATA[gnuplot]]></category>
  <category><![CDATA[plantuml]]></category>
  <category><![CDATA[org-mode]]></category>
  <category><![CDATA[draft]]></category>
  <category><![CDATA[gnuplot]]></category>
  <category><![CDATA[ditaa]]></category>
  <category><![CDATA[graphviz]]></category>
  <category><![CDATA[plantUML]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-29-configurar-emacs-para-creaci%C3%B3n-de-graficos.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-29-configurar-emacs-para-creaci%C3%B3n-de-graficos.html</guid>
  <pubDate>Sat, 29 Mar 2025 18:56:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Configuración Básica de Emacs con Org-mode: Guía Completa]]></title>
  <description><![CDATA[
<div id="outline-container-org11174f6" class="outline-2">
<h2 id="org11174f6">Configuración Básica de Emacs con Org-mode: Guía Completa</h2>
<div class="outline-text-2" id="text-org11174f6">
<p>
Este documento es una guía extensa para configurar Emacs con Org-mode desde cero, optimizando tu productividad con una herramienta poderosa y flexible. Incluye gráficos, diagramas y un ejemplo básico de `org-capture`. Si eres nuevo en Emacs o quieres perfeccionar tu setup, ¡este es tu punto de partida!
</p>
</div>
</div>
<div id="outline-container-org5836464" class="outline-2">
<h2 id="org5836464">1. Introducción a Emacs y Org-mode</h2>
<div class="outline-text-2" id="text-org5836464">
<p>
Emacs es un editor de texto extensible y personalizable, mientras que Org-mode es un paquete integrado que transforma Emacs en un sistema de organización, toma de notas, gestión de proyectos y más. Juntos, forman una combinación imbatible para flujos de trabajo modernos.
</p>
</div>
<div id="outline-container-org01926f3" class="outline-3">
<h3 id="org01926f3">¿Por qué usar Org-mode?</h3>
<div class="outline-text-3" id="text-org01926f3">
<ul class="org-ul">
<li>Estructura jerárquica para notas y tareas.</li>
<li>Integración con agendas, capturas rápidas y exportación (HTML, PDF, etc.).</li>
<li>Código ejecutable en bloques fuente (literate programming).</li>
</ul>
</div>
</div>
<div id="outline-container-orgc86d67a" class="outline-3">
<h3 id="orgc86d67a">Flujo de trabajo típico</h3>
<div class="outline-text-3" id="text-orgc86d67a">
<p>
Aquí hay un diagrama simple del flujo básico con Org-mode:
</p>


<figure id="orgbb31241">
<img src="images/workflow.png" alt="workflow.png">

</figure>


<ul class="org-ul">
<li><b>Renderiza</b>: Si tienes PlantUML instalado, usa `C-c C-c` en este bloque para generar `workflow.png`.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgb5f8073" class="outline-2">
<h2 id="orgb5f8073">2. Instalación Básica de Emacs</h2>
<div class="outline-text-2" id="text-orgb5f8073">
</div>
<div id="outline-container-orgdf505c8" class="outline-3">
<h3 id="orgdf505c8">Requisitos</h3>
<div class="outline-text-3" id="text-orgdf505c8">
<ul class="org-ul">
<li>Sistema operativo: Linux, macOS o Windows (WSL recomendado en Windows).</li>
<li>Espacio: ~50 MB para Emacs básico.</li>
</ul>
</div>
</div>
<div id="outline-container-org609d2fe" class="outline-3">
<h3 id="org609d2fe">Instalación en Linux</h3>
<div class="outline-text-3" id="text-org609d2fe">
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Ubuntu/Debian</span>
sudo apt update
sudo apt install emacs
<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Verifica versi&#243;n</span>
emacs --version
</pre>
</div>

<ul class="org-ul">
<li>Versión recomendada: 27.1 o superior (marzo 2025: 29.x probable).</li>
</ul>
</div>
</div>
<div id="outline-container-org1e8e72c" class="outline-3">
<h3 id="org1e8e72c">Instalación en macOS</h3>
<div class="outline-text-3" id="text-org1e8e72c">
<div class="org-src-container">
<pre class="src src-bash">brew install emacs
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org3a2e4ee" class="outline-2">
<h2 id="org3a2e4ee">3. Configuración Inicial de Emacs</h2>
<div class="outline-text-2" id="text-org3a2e4ee">
<p>
Emacs usa un archivo de configuración en `~/.emacs.d/init.el`. Vamos a crear uno básico.
</p>
</div>
<div id="outline-container-org81a67c0" class="outline-3">
<h3 id="org81a67c0">Estructura de directorios</h3>
<div class="outline-text-3" id="text-org81a67c0">

<figure id="org9b03bd0">
<img src="images/emacs_dirs.png" alt="emacs_dirs.png">

</figure>
</div>
</div>
<div id="outline-container-org5ee316e" class="outline-3">
<h3 id="org5ee316e">Configuración mínima en init.el</h3>
<div class="outline-text-3" id="text-org5ee316e">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Configuraci&#243;n b&#225;sica de Emacs</span>
(<span style="color: #D70000;">setq</span> inhibit-startup-message t)  <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Sin pantalla de bienvenida</span>
(tool-bar-mode -1)                <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Sin barra de herramientas</span>
(menu-bar-mode -1)                <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Sin barra de men&#250;</span>
(scroll-bar-mode -1)              <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Sin barras de desplazamiento</span>

<span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Configuraci&#243;n de paquetes</span>
(<span style="color: #D70000;">require</span> '<span style="color: #AF005F;">package</span>)
(add-to-list 'package-archives '(<span style="color: #005F00;">"melpa"</span> . <span style="color: #005F00;">"https://melpa.org/packages/"</span>) t)
(package-initialize)

<span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Instalar use-package si no est&#225; presente</span>
(<span style="color: #D70000;">unless</span> (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
(<span style="color: #D70000;">require</span> '<span style="color: #AF005F;">use-package</span>)
(<span style="color: #D70000;">setq</span> use-package-always-ensure t)  <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Descarga autom&#225;tica</span>
</pre>
</div>

<ul class="org-ul">
<li><b>Ejecuta</b>: Guarda esto en `~/.emacs.d/init.el` y reinicia Emacs (`C-x C-c` y vuelve a abrir).</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org1c5bd95" class="outline-2">
<h2 id="org1c5bd95">4. Configuración de Org-mode</h2>
<div class="outline-text-2" id="text-org1c5bd95">
<p>
Org-mode viene integrado en Emacs, pero podemos mejorarlo con ajustes y paquetes adicionales.
</p>
</div>
<div id="outline-container-orgb09f522" class="outline-3">
<h3 id="orgb09f522">Configuración básica de Org-mode</h3>
<div class="outline-text-3" id="text-orgb09f522">
<p>
Añade esto a `init.el`:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Configuraci&#243;n de Org-mode</span>
(<span style="color: #D70000;">use-package</span> <span style="color: #AF005F;">org</span>
  <span style="color: #1F55A0;">:config</span>
  (<span style="color: #D70000;">setq</span> org-startup-indented t)        <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Indentaci&#243;n autom&#225;tica</span>
  (<span style="color: #D70000;">setq</span> org-directory <span style="color: #005F00;">"~/org"</span>)         <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Directorio para archivos .org</span>
  (<span style="color: #D70000;">setq</span> org-default-notes-file <span style="color: #005F00;">"~/org/notes.org"</span>)  <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Archivo por defecto</span>
  (<span style="color: #D70000;">setq</span> org-agenda-files '(<span style="color: #005F00;">"~/org"</span>))   <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Archivos para agenda</span>
  (global-set-key (kbd <span style="color: #005F00;">"C-c a"</span>) 'org-agenda)  <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Atajo para agenda</span>
  (global-set-key (kbd <span style="color: #005F00;">"C-c c"</span>) 'org-capture))  <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Atajo para captura</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgcbc5e79" class="outline-3">
<h3 id="orgcbc5e79">Directorios sugeridos</h3>
<div class="outline-text-3" id="text-orgcbc5e79">
<div class="org-src-container">
<pre class="src src-bash">mkdir -p ~/org
touch ~/org/notes.org
</pre>
</div>
</div>
</div>
<div id="outline-container-orga0a74a8" class="outline-3">
<h3 id="orga0a74a8">Estructura de Org-mode</h3>
<div class="outline-text-3" id="text-orga0a74a8">

<figure id="org05828d7">
<img src="images/org_structure.png" alt="org_structure.png">

</figure>
</div>
</div>
</div>
<div id="outline-container-org0e50722" class="outline-2">
<h2 id="org0e50722">5. Ejemplo Básico de Org-capture</h2>
<div class="outline-text-2" id="text-org0e50722">
<p>
`org-capture` te permite capturar ideas rápidamente sin interrumpir tu flujo. Configurémoslo.
</p>
</div>
<div id="outline-container-orgd3f39c7" class="outline-3">
<h3 id="orgd3f39c7">Configuración de captura en init.el</h3>
<div class="outline-text-3" id="text-orgd3f39c7">
<p>
Añade esto a tu `init.el`:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #4E4E4E; font-style: italic;">;; </span><span style="color: #4E4E4E; font-style: italic;">Configuraci&#243;n de org-capture</span>
(<span style="color: #D70000;">setq</span> org-capture-templates
      '((<span style="color: #005F00;">"t"</span> <span style="color: #005F00;">"Tarea"</span> entry (file <span style="color: #005F00;">"~/org/notes.org"</span>)
         <span style="color: #005F00;">"* TODO %?\n  %U\n  %a"</span>)
        (<span style="color: #005F00;">"n"</span> <span style="color: #005F00;">"Nota"</span> entry (file <span style="color: #005F00;">"~/org/notes.org"</span>)
         <span style="color: #005F00;">"* %?\n  %U\n  %a"</span>)))
</pre>
</div>

<ul class="org-ul">
<li><b>Explicación</b>:
<ul class="org-ul">
<li>`"t"`: Plantilla para tareas (TODO).</li>
<li>`"n"`: Plantilla para notas.</li>
<li>`%?`: Cursor aquí tras capturar.</li>
<li>`%U`: Fecha/hora de creación.</li>
<li>`%a`: Enlace al contexto actual.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org402ff78" class="outline-3">
<h3 id="org402ff78">Uso de org-capture</h3>
<div class="outline-text-3" id="text-org402ff78">
<ol class="org-ol">
<li>Presiona `C-c c`.</li>
<li>Elige `t` (tarea) o `n` (nota).</li>
<li>Escribe y finaliza con `C-c C-c`.</li>
</ol>
</div>
</div>
<div id="outline-container-orgc14bb2e" class="outline-3">
<h3 id="orgc14bb2e">Ejemplo de captura</h3>
<div class="outline-text-3" id="text-orgc14bb2e">
<p>
Imagina que estás trabajando y tienes una idea. Presionas `C-c c n`, escribes "Reunión con equipo", y el resultado en `~/org/notes.org` será:
</p>


<pre class="example" id="org2833642">
- **Reunión con equipo**
  SCHEDULED: &lt;2025-03-27 Thu 10:15&gt;
  :PROPERTIES:
  :CATEGORY: REUNIÓN
  :END:
</pre>
</div>
</div>
</div>
<div id="outline-container-org31c3ac6" class="outline-2">
<h2 id="org31c3ac6">6. Personalización Adicional</h2>
<div class="outline-text-2" id="text-org31c3ac6">
</div>
<div id="outline-container-org74698db" class="outline-3">
<h3 id="org74698db">Temas visuales</h3>
<div class="outline-text-3" id="text-org74698db">
<p>
Instala un tema para mejorar la experiencia:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">use-package</span> <span style="color: #AF005F;">doom-themes</span>
  <span style="color: #1F55A0;">:config</span>
  (load-theme 'doom-one t))
</pre>
</div>
</div>
</div>
<div id="outline-container-org4b4f51a" class="outline-3">
<h3 id="org4b4f51a">Atajos útiles</h3>
<div class="outline-text-3" id="text-org4b4f51a">
<div class="org-src-container">
<pre class="src src-emacs-lisp">(global-set-key (kbd <span style="color: #005F00;">"C-c l"</span>) 'org-store-link)  <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Guardar enlace</span>
(global-set-key (kbd <span style="color: #005F00;">"C-c o"</span>) 'org-open-at-point)  <span style="color: #4E4E4E; font-style: italic;">; </span><span style="color: #4E4E4E; font-style: italic;">Abrir enlace</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org6ba9645" class="outline-3">
<h3 id="org6ba9645">Exportación</h3>
<div class="outline-text-3" id="text-org6ba9645">
<p>
Org-mode exporta a múltiples formatos. Prueba:
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #004700;">#+EXPORT_FILE_NAME: mi_documento.html</span>
Crea un documento y usa `C-c C-e h o` para exportar a HTML y abrirlo.
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org9e62f15" class="outline-2">
<h2 id="org9e62f15">7. Ejemplo Completo de Archivo Org</h2>
<div class="outline-text-2" id="text-org9e62f15">
<p>
Aquí hay un archivo de ejemplo para `~/org/notes.org`:
</p>

<p>
#+BEGIN<sub>SRC</sub> org :tangle ~/org/notes.org
</p>
</div>
</div>
<div id="outline-container-orgd799957" class="outline-2">
<h2 id="orgd799957">Tareas</h2>
<div class="outline-text-2" id="text-orgd799957">
</div>
<div id="outline-container-org1fa14fc" class="outline-3">
<h3 id="org1fa14fc"><span class="todo TODO">TODO</span> Comprar víveres</h3>
<div class="outline-text-3" id="text-org1fa14fc">
</div>
</div>
<div id="outline-container-org4ef4be4" class="outline-3">
<h3 id="org4ef4be4"><span class="done DONE">DONE</span> Configurar Emacs</h3>
<div class="outline-text-3" id="text-org4ef4be4">
</div>
</div>
</div>
<div id="outline-container-org0b1a89d" class="outline-2">
<h2 id="org0b1a89d">Notas</h2>
<div class="outline-text-2" id="text-org0b1a89d">
</div>
<div id="outline-container-orga26946a" class="outline-3">
<h3 id="orga26946a">Reunión con equipo</h3>
<div class="outline-text-3" id="text-orga26946a">
<p>
<span class="timestamp-wrapper"><span class="timestamp">[2025-03-27 jue 10:15]</span></span>
</p>
<ul class="org-ul">
<li>Discutir proyecto Emacs.</li>
<li>Planificar siguiente semana.</li>
</ul>
<p>
#+END<sub>SRC</sub>
</p>
</div>
</div>
</div>
<div id="outline-container-orga849acf" class="outline-2">
<h2 id="orga849acf">8. Gráficos y Diagramas Avanzados</h2>
<div class="outline-text-2" id="text-orga849acf">
</div>
<div id="outline-container-org6695ead" class="outline-3">
<h3 id="org6695ead">Diagrama de configuración completa</h3>
<div class="outline-text-3" id="text-org6695ead">

<figure id="org2e8ba04">
<img src="images/full_config.png" alt="full_config.png">

</figure>

<ul class="org-ul">
<li><b>Renderiza</b>: `C-c C-c` para ver cómo fluye todo.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgfd2ac62" class="outline-2">
<h2 id="orgfd2ac62">9. Consejos y Trucos</h2>
<div class="outline-text-2" id="text-orgfd2ac62">
<ul class="org-ul">
<li><b>Navegación</b>: `C-c C-n` (siguiente encabezado), `C-c C-p` (anterior).</li>
<li><b>Tareas</b>: `C-c C-t` para cambiar estado (TODO/DONE).</li>
<li><b>Agenda</b>: `C-c a a` para vista semanal.</li>
<li><b>Tangle</b>: `C-c C-v t` para extraer código a archivos.</li>
</ul>
</div>
</div>
<div id="outline-container-org4070fe4" class="outline-2">
<h2 id="org4070fe4">10. Conclusión</h2>
<div class="outline-text-2" id="text-org4070fe4">
<p>
Con esta configuración básica, tienes un Emacs funcional con Org-mode listo para tomar notas, gestionar tareas y generar contenido. Personalízalo según tus necesidades y explora paquetes como `org-roam` o `org-static-blog` para más potencia. ¿Listo para empezar? Abre Emacs, aplica esta guía y captura tu primera idea con `C-c c`.
</p>

<div class="org-src-container">
<pre class="src src-org"><span style="color: #009B7C; font-weight: bold; text-decoration: underline;"><a href="https://orgmode.org/">Documentaci&#243;n oficial de Org-mode</a></span>
</pre>
</div>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-guía.html">guía</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[tutoriales]]></category>
  <category><![CDATA[guía]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-27-configuraci%C3%B3n-b%C3%A1sica-de-emacs-con-org-mode:-gu%C3%ADa-completa.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-27-configuraci%C3%B3n-b%C3%A1sica-de-emacs-con-org-mode:-gu%C3%ADa-completa.html</guid>
  <pubDate>Thu, 27 Mar 2025 21:44:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Guía Completa para Iniciarse en Emacs (ii)]]></title>
  <description><![CDATA[
<div id="outline-container-org2390b18" class="outline-2">
<h2 id="org2390b18"><span class="section-number-2">1.</span> Introducción a Emacs</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-org438f690" class="outline-3">
<h3 id="org438f690"><span class="section-number-3">1.1.</span> ¿Qué es Emacs?</h3>
<div class="outline-text-3" id="text-1-1">
<p>
Emacs es un editor de texto altamente personalizable y entorno de desarrollo integrado. Más que un simple editor, es una plataforma completa para trabajar con texto, código, documentos y más.
</p>
</div>
</div>
<div id="outline-container-org577c775" class="outline-3">
<h3 id="org577c775"><span class="section-number-3">1.2.</span> Primeros Pasos</h3>
<div class="outline-text-3" id="text-1-2">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Para empezar r&#225;pidamente:</span>
(menu-bar-mode 1)   <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Activar barra de men&#250; (recomendado para principiantes)</span>
(tool-bar-mode 0)   <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Desactivar barra de herramientas</span>
(scroll-bar-mode 0) <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Desactivar barra de desplazamiento</span>
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org38eea4d" class="outline-2">
<h2 id="org38eea4d"><span class="section-number-2">2.</span> Diagrama: Ruta de Aprendizaje Emacs</h2>
<div class="outline-text-2" id="text-2">

<figure id="org855b8b8">
<img src="images/emacs_learning_path_corrected.png" alt="emacs_learning_path_corrected.png">

</figure>
</div>
</div>
<div id="outline-container-org03f4c08" class="outline-2">
<h2 id="org03f4c08"><span class="section-number-2">3.</span> Sección 1: Fundamentos Esenciales</h2>
<div class="outline-text-2" id="text-3">
</div>
<div id="outline-container-org81ac3de" class="outline-3">
<h3 id="org81ac3de"><span class="section-number-3">3.1.</span> Movimiento Básico</h3>
<div class="outline-text-3" id="text-3-1">
<table border="2" rules="all" frame="border">


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Comando</th>
<th scope="col" class="org-left">Tecla</th>
<th scope="col" class="org-left">Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Avanzar carácter</td>
<td class="org-left">C-f</td>
<td class="org-left">Mover derecha</td>
</tr>

<tr>
<td class="org-left">Retroceder</td>
<td class="org-left">C-b</td>
<td class="org-left">Mover izquierda</td>
</tr>

<tr>
<td class="org-left">Siguiente línea</td>
<td class="org-left">C-n</td>
<td class="org-left">Mover abajo</td>
</tr>

<tr>
<td class="org-left">Línea anterior</td>
<td class="org-left">C-p</td>
<td class="org-left">Mover arriba</td>
</tr>

<tr>
<td class="org-left">Inicio línea</td>
<td class="org-left">C-a</td>
<td class="org-left">Ir al inicio</td>
</tr>

<tr>
<td class="org-left">Fin línea</td>
<td class="org-left">C-e</td>
<td class="org-left">Ir al final</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org5700597" class="outline-3">
<h3 id="org5700597"><span class="section-number-3">3.2.</span> Comandos Vitales</h3>
<div class="outline-text-3" id="text-3-2">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Guardar archivo: C-x C-s</span>
<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Salir de Emacs: C-x C-c</span>
<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Abrir archivo: C-x C-f</span>
<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Guardar como: C-x C-w</span>
<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Cortar texto: C-w</span>
<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Pegar texto: C-y</span>
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org4fdbd24" class="outline-2">
<h2 id="org4fdbd24"><span class="section-number-2">4.</span> Sección 2: Personalización Básica</h2>
<div class="outline-text-2" id="text-4">
</div>
<div id="outline-container-org2d24ea8" class="outline-3">
<h3 id="org2d24ea8"><span class="section-number-3">4.1.</span> Archivo de Configuración</h3>
<div class="outline-text-3" id="text-4-1">
<p>
Tu archivo ~/.emacs.d/init.el es el corazón de tu configuración:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Ejemplo b&#225;sico de init.el</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> inhibit-startup-screen t)  <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Desactivar pantalla de inicio</span>
(global-linum-mode t)           <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Mostrar n&#250;meros de l&#237;nea</span>
(load-theme 'modus-vivendi t)   <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Tema oscuro</span>
(<span style="color: #219fd5; font-style: italic;">setq-default</span> indent-tabs-mode nil) <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Usar espacios, no tabs</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org5ae8e33" class="outline-3">
<h3 id="org5ae8e33"><span class="section-number-3">4.2.</span> Gestión de Paquetes</h3>
<div class="outline-text-3" id="text-4-2">
<ol class="org-ol">
<li>Configurar MELPA (repositorio de paquetes):</li>
</ol>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">package</span>)
(add-to-list 'package-archives '(<span style="color: #a44185;">"melpa"</span> . <span style="color: #a44185;">"https://melpa.org/packages/"</span>) t)
(package-initialize)
</pre>
</div>

<ol class="org-ol">
<li>Instalar paquetes:</li>
<li>M-x package-install RET [nombre-paquete]</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-org0528160" class="outline-2">
<h2 id="org0528160"><span class="section-number-2">5.</span> Sección 3: Org Mode - Tu Nuevo Mejor Amigo</h2>
<div class="outline-text-2" id="text-5">
</div>
<div id="outline-container-orga0f1d0f" class="outline-3">
<h3 id="orga0f1d0f"><span class="section-number-3">5.1.</span> Conceptos Básicos</h3>
<div class="outline-text-3" id="text-5-1">
<ul class="org-ul">
<li>Jerarquía con * (asteriscos)</li>
<li>Listas con - o +</li>
<li>Código fuente con #+BEGIN<sub>SRC</sub></li>
</ul>
</div>
</div>
<div id="outline-container-orgadcc374" class="outline-3">
<h3 id="orgadcc374"><span class="section-number-3">5.2.</span> Ejemplo de Documento Org</h3>
<div class="outline-text-3" id="text-5-2">
<p>
#+BEGIN<sub>SRC</sub> org
</p>
</div>
</div>
</div>
<div id="outline-container-org3084399" class="outline-2">
<h2 id="org3084399"><span class="section-number-2">6.</span> Tareas Pendientes</h2>
<div class="outline-text-2" id="text-6">
</div>
<div id="outline-container-orgf3a72c3" class="outline-3">
<h3 id="orgf3a72c3"><span class="section-number-3">6.1.</span> Trabajo</h3>
<div class="outline-text-3" id="text-6-1">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Revisar informe</li>
<li class="off"><code>[&#xa0;]</code> Enviar correo a cliente</li>
</ul>
</div>
</div>
<div id="outline-container-org3bc28b2" class="outline-3">
<h3 id="org3bc28b2"><span class="section-number-3">6.2.</span> Personal</h3>
<div class="outline-text-3" id="text-6-2">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Comprar víveres</li>
</ul>
<p>
#+END<sub>SRC</sub>
</p>
</div>
</div>
</div>
<div id="outline-container-org1d2d0c0" class="outline-2">
<h2 id="org1d2d0c0"><span class="section-number-2">7.</span> Recursos Recomendados</h2>
<div class="outline-text-2" id="text-7">
<ol class="org-ol">
<li>Manual oficial: C-h r</li>
<li>Tutorial interactivo: C-h t</li>
<li>Comunidad: /r/emacs en Reddit</li>
<li>Libro: "Mastering Emacs" - Mickey Petersen</li>
</ol>
</div>
</div>
<div id="outline-container-org649cd41" class="outline-2">
<h2 id="org649cd41"><span class="section-number-2">8.</span> Próximos Pasos</h2>
<div class="outline-text-2" id="text-8">
<ol class="org-ol">
<li>Practicar 15 min/día los atajos básicos</li>
<li>Personalizar tu init.el gradualmente</li>
<li>Explorar Org Mode para organización personal</li>
<li>Unirte a la comunidad Emacs</li>
</ol>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">&#218;ltimo consejo: Paciencia y pr&#225;ctica constante</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> learning-curve 'steep-but-rewarding)
</pre>
</div>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-26-gu%C3%ADa-completa-para-iniciarse-en-emacs-(ii).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-26-gu%C3%ADa-completa-para-iniciarse-en-emacs-(ii).html</guid>
  <pubDate>Wed, 26 Mar 2025 08:06:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Configuración básica y mínima para empezar con Emacs (i)]]></title>
  <description><![CDATA[
<div id="outline-container-org9fa2658" class="outline-2">
<h2 id="org9fa2658"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
Emacs es más que un editor: es un entorno poderoso y personalizable. Si estás empezando, una configuración mínima te permite trabajar cómodamente sin abrumarte. Aquí te presento una setup básica, observaciones y un pequeño "how-to" para arrancar con Emacs y esteroides.
</p>
</div>
</div>
<div id="outline-container-org065beec" class="outline-2">
<h2 id="org065beec"><span class="section-number-2">2.</span> Configuración mínima</h2>
<div class="outline-text-2" id="text-2">
<p>
Para empezar, crea o edita tu archivo de configuración en <code>~/.emacs.d/init.el</code>. Aquí tienes un ejemplo básico:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n b&#225;sica de Emacs</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> inhibit-startup-message t)         <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Desactiva la pantalla de bienvenida</span>
(tool-bar-mode -1)                       <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Oculta la barra de herramientas</span>
(menu-bar-mode -1)                       <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Oculta la barra de men&#250;s</span>
(scroll-bar-mode -1)                     <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Oculta la barra de desplazamiento</span>
(global-display-line-numbers-mode t)     <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Muestra n&#250;meros de l&#237;nea</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> make-backup-files nil)             <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Desactiva archivos de respaldo (~)</span>
(<span style="color: #219fd5; font-style: italic;">setq</span> auto-save-default nil)             <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Desactiva guardado autom&#225;tico</span>

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Fuentes y apariencia</span>
(set-face-attribute 'default nil <span style="color: #dc3eb7;">:font</span> <span style="color: #a44185;">"DejaVu Sans Mono-12"</span>) <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Fuente b&#225;sica</span>

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Paquetes b&#225;sicos (usando use-package)</span>
(package-initialize)
(<span style="color: #219fd5; font-style: italic;">unless</span> package-archive-contents
  (package-refresh-contents))
(<span style="color: #219fd5; font-style: italic;">setq</span> package-archives '((<span style="color: #a44185;">"gnu"</span> . <span style="color: #a44185;">"https://elpa.gnu.org/packages/"</span>)
                         (<span style="color: #a44185;">"melpa"</span> . <span style="color: #a44185;">"https://melpa.org/packages/"</span>)))
(<span style="color: #219fd5; font-style: italic;">unless</span> (package-installed-p 'use-package)
  (package-install 'use-package))
(<span style="color: #219fd5; font-style: italic;">require</span> '<span style="color: #2f86d2;">use-package</span>)

<span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Org Mode b&#225;sico</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-startup-indented t))         <span style="color: #8195b0; font-style: italic;">; </span><span style="color: #8195b0; font-style: italic;">Indentaci&#243;n autom&#225;tica en Org Mode</span>
</pre>
</div>

<p>
Esto te da un Emacs limpio, con números de línea, sin distracciones y Org Mode listo para usar.
</p>
</div>
</div>
<div id="outline-container-org2c9501c" class="outline-2">
<h2 id="org2c9501c"><span class="section-number-2">3.</span> How-to: Empezar a trabajar</h2>
<div class="outline-text-2" id="text-3">
<ol class="org-ol">
<li>Abre Emacs: <code>emacs &amp;</code> en la terminal o usa el ícono si lo instalaste gráficamente.</li>
<li>Si no existe, crea <code>~/.emacs.d/init.el</code> con <code>C-x C-f ~/.emacs.d/init.el</code>.</li>
<li>Copia y pega el código anterior.</li>
<li>Guarda con <code>C-x C-s</code> y reinicia Emacs (<code>C-x C-c</code> y vuelve a abrirlo).</li>
<li>Prueba Org Mode: abre un archivo <code>.org</code> (<code>C-x C-f prueba.org</code>) y escribe algo como <code>* Tarea 1</code>.</li>
</ol>

<p>
¡Ya estás trabajando con Emacs!
</p>
</div>
</div>
<div id="outline-container-orgfdbcd19" class="outline-2">
<h2 id="orgfdbcd19"><span class="section-number-2">4.</span> Observaciones</h2>
<div class="outline-text-2" id="text-4">
<ul class="org-ul">
<li><b><b>Ligereza</b></b>: Esta configuración es mínima y rápida, ideal para principiantes.</li>
<li><b><b>Escalabilidad</b></b>: Puedes añadir más paquetes (como <code>magit</code> o <code>evil</code>) con <code>use-package</code> cuando estés listo.</li>
<li><b><b>Aprendizaje</b></b>: Los atajos (<code>C-x</code> significa Ctrl+x) son clave; practica con <code>C-h t</code> (tutorial integrado).</li>
<li><b><b>Flexibilidad</b></b>: Cambia la fuente o ajustes según tu gusto en <code>init.el</code>.</li>
</ul>
</div>
</div>
<div id="outline-container-org84e6940" class="outline-2">
<h2 id="org84e6940"><span class="section-number-2">5.</span> Conclusión</h2>
<div class="outline-text-2" id="text-5">
<p>
Con esta base, tienes un Emacs funcional para escribir, organizar y experimentar. Es el primer paso para dominar esta herramienta legendaria. ¿Listo para trabajar con esteroides? ¡Emacs te espera!
</p>

<blockquote>
<p>
"Emacs: donde cada tecla es una puerta a la productividad."
</p>
</blockquote>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-inicio.html">inicio</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-programacion.html">programacion</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-lenguaje.html">lenguaje</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[tutoriales]]></category>
  <category><![CDATA[inicio]]></category>
  <category><![CDATA[programacion]]></category>
  <category><![CDATA[lenguaje]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-26-configuraci%C3%B3n-b%C3%A1sica-y-m%C3%ADnima-para-empezar-con-emacs-(i).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-26-configuraci%C3%B3n-b%C3%A1sica-y-m%C3%ADnima-para-empezar-con-emacs-(i).html</guid>
  <pubDate>Wed, 26 Mar 2025 07:50:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Por Qué Elegí GitHub para Publicar Mi Blog]]></title>
  <description><![CDATA[
<div id="outline-container-orgf9b9516" class="outline-2">
<h2 id="orgf9b9516">Introducción</h2>
<div class="outline-text-2" id="text-orgf9b9516">
<p>
Cuando decidí lanzar mi blog, busqué una solución que fuera económica, adaptable y compatible con mi flujo de trabajo en Emacs. Tras evaluar opciones como WordPress, Medium o servidores privados, opté por GitHub, una plataforma que no solo cumple estos criterios, sino que los supera con creces. En este post, detallo por qué GitHub es mi elección para publicar un blog estático, centrándome en tres pilares: <b><b>gratuidad</b></b>, <b><b>flexibilidad</b></b> y <b><b>facilidad de integración con Emacs</b></b>. Con ejemplos prácticos, datos visuales y reflexiones personales, espero convencerte de que esta combinación es imbatible para blogueros técnicos en 2025.
</p>
</div>
</div>
<div id="outline-container-orga10e69d" class="outline-2">
<h2 id="orga10e69d">¿Qué es GitHub y Por Qué un Blog Estático?</h2>
<div class="outline-text-2" id="text-orga10e69d">
<p>
GitHub es una plataforma de alojamiento de código basada en Git, conocida por su uso en desarrollo colaborativo. Sin embargo, gracias a <b><b>GitHub Pages</b></b>, también permite alojar sitios web estáticos gratis. Un blog estático, generado con herramientas como Org Static Blog, Hugo o Jekyll, convierte archivos de texto (Markdown, Org-mode, etc.) en HTML, eliminando bases de datos y servidores dinámicos. Esta simplicidad lo hace ideal para quienes priorizan control y eficiencia.
</p>
</div>
<div id="outline-container-org3ad575a" class="outline-3">
<h3 id="org3ad575a">Ventajas Iniciales</h3>
<div class="outline-text-3" id="text-org3ad575a">
<ul class="org-ul">
<li>No requiere mantenimiento de servidores.</li>
<li>Compatible con flujos de escritura en texto plano.</li>
<li>Escalable sin costos adicionales.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgffb674b" class="outline-2">
<h2 id="orgffb674b">Razones para Elegir GitHub</h2>
<div class="outline-text-2" id="text-orgffb674b">
<p>
A continuación, analizo los tres motivos clave que me llevaron a elegir GitHub, con detalles técnicos y prácticos.
</p>
</div>
<div id="outline-container-org3fb68f0" class="outline-3">
<h3 id="org3fb68f0">Gratuidad: Publicar Sin Costo</h3>
<div class="outline-text-3" id="text-org3fb68f0">
</div>
<div id="outline-container-org43fdae1" class="outline-4">
<h4 id="org43fdae1">Descripción</h4>
<div class="outline-text-4" id="text-org43fdae1">
<p>
GitHub Pages ofrece alojamiento gratuito para sitios estáticos públicos, sin límites estrictos de ancho de banda o almacenamiento (dentro de uso razonable). Esto contrasta con plataformas como WordPress.com ($4-$45/mes) o servidores VPS ($5-$20/mes en AWS o DigitalOcean).
</p>
</div>
</div>
<div id="outline-container-org9ba5d8b" class="outline-4">
<h4 id="org9ba5d8b">Beneficios</h4>
<div class="outline-text-4" id="text-org9ba5d8b">
<ul class="org-ul">
<li><b><b>Costo Cero</b></b>: Perfecto para blogueros principiantes o experimentales.</li>
<li><b><b>Escalabilidad</b></b>: Según <b>GitHub Stats</b> (2024), soporta millones de visitas mensuales sin cargos.</li>
<li><b><b>Dominio Personalizado</b></b>: Gratis con configuración DNS simple (ej. `tunombre.com`).</li>
</ul>
</div>
</div>
<div id="outline-container-org41bf743" class="outline-4">
<h4 id="org41bf743">Ejemplo Práctico</h4>
<div class="outline-text-4" id="text-org41bf743">
<ul class="org-ul">
<li><b><b>Escenario</b></b>: Quiero lanzar un blog sin invertir dinero.</li>
<li><b><b>Acción</b></b>: Creo un repositorio `username.github.io`, subo archivos HTML generados con Org-mode, y publico en minutos.</li>
<li><b><b>Resultado</b></b>: Blog en línea sin gastar un centavo, a diferencia de $48/año en WordPress Básico.</li>
</ul>
</div>
</div>
<div id="outline-container-org7347c25" class="outline-4">
<h4 id="org7347c25">Limitaciones</h4>
<div class="outline-text-4" id="text-org7347c25">
<ul class="org-ul">
<li>Solo sitios estáticos (sin PHP o bases de datos dinámicas).</li>
<li>Repositorios privados requieren GitHub Pro ($4/mes), pero no son necesarios para blogs públicos.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgdfd2392" class="outline-3">
<h3 id="orgdfd2392">Flexibilidad: Control Total Sobre el Contenido</h3>
<div class="outline-text-3" id="text-orgdfd2392">
</div>
<div id="outline-container-orgcc84075" class="outline-4">
<h4 id="orgcc84075">Descripción</h4>
<div class="outline-text-4" id="text-orgcc84075">
<p>
GitHub permite personalizar cada aspecto del blog mediante control de versiones (Git) y compatibilidad con generadores estáticos. No impone plantillas rígidas ni anuncios, a diferencia de Medium o Blogger.
</p>
</div>
</div>
<div id="outline-container-org36fb88c" class="outline-4">
<h4 id="org36fb88c">Beneficios</h4>
<div class="outline-text-4" id="text-org36fb88c">
<ul class="org-ul">
<li><b><b>Control de Código</b></b>: Edito mi blog como un proyecto de software, con ramas y pull requests.</li>
<li><b><b>Personalización</b></b>: Uso CSS propio, integro CI/CD con GitHub Actions para automatizar publicaciones.</li>
<li><b><b>Portabilidad</b></b>: Puedo migrar mi blog a otra plataforma exportando el repositorio.</li>
</ul>
</div>
</div>
<div id="outline-container-org235c198" class="outline-4">
<h4 id="org235c198">Ejemplo Práctico</h4>
<div class="outline-text-4" id="text-org235c198">
<ul class="org-ul">
<li><b><b>Escenario</b></b>: Quiero probar un nuevo diseño.</li>
<li><b><b>Acción</b></b>: Creo una rama `nuevo-diseño`, edito el CSS en Emacs, hago commit y pruebo en un subdominio temporal (GitHub Actions despliega automáticamente).</li>
<li><b><b>Resultado</b></b>: Cambio implementado en horas, sin restricciones de plantilla como en WordPress.</li>
</ul>
</div>
</div>
<div id="outline-container-org7ca77dd" class="outline-4">
<h4 id="org7ca77dd">Comparación</h4>
<div class="outline-text-4" id="text-org7ca77dd">
<ul class="org-ul">
<li>Medium: $5/mes, diseño limitado, contenido tras paywall.</li>
<li>GitHub: Gratis, diseño 100% editable, contenido siempre accesible.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgd45c397" class="outline-3">
<h3 id="orgd45c397">Facilidad de Integración con Emacs</h3>
<div class="outline-text-3" id="text-orgd45c397">
</div>
<div id="outline-container-orga77c483" class="outline-4">
<h4 id="orga77c483">Descripción</h4>
<div class="outline-text-4" id="text-orga77c483">
<p>
Como usuario de Emacs, GitHub se integra perfectamente con mi flujo de escritura en Org-mode. Con paquetes como `org-static-blog`, `magit` y `ox-html`, escribo, gestiono y publico directamente desde Emacs.
</p>
</div>
</div>
<div id="outline-container-orgcab0984" class="outline-4">
<h4 id="orgcab0984">Beneficios</h4>
<div class="outline-text-4" id="text-orgcab0984">
<ul class="org-ul">
<li><b><b>Escritura en Org-mode</b></b>: Formato ligero, exportable a HTML con un comando (`C-c C-e h h`).</li>
<li><b><b>Control de Versiones con Magit</b></b>: Hago commits y pushes sin salir de Emacs (`C-x g`).</li>
<li><b><b>Automatización</b></b>: Configuro GitHub Actions para generar y desplegar el sitio al hacer push.</li>
</ul>
</div>
</div>
<div id="outline-container-org9be0477" class="outline-4">
<h4 id="org9be0477">Ejemplo Práctico</h4>
<div class="outline-text-4" id="text-org9be0477">
<ul class="org-ul">
<li><b><b>Escenario</b></b>: Escribo un post sobre gestión del tiempo.</li>
<li><b><b>Acción</b></b>:  
<ol class="org-ol">
<li>Creo `post-gestion-tiempo.org` en Emacs.</li>
<li>Escribo en Org-mode con títulos, tablas y código.</li>
<li>Exporto a HTML con `org-static-blog-publish-file`.</li>
<li>Uso Magit para commit (`C-c C-c`) y push (`P p`).</li>
</ol></li>
<li><b><b>Resultado</b></b>: Post publicado en mi blog en &lt;10 minutos, todo desde Emacs.</li>
</ul>
</div>
</div>
<div id="outline-container-orgf006f0a" class="outline-4">
<h4 id="orgf006f0a">Flujo Técnico</h4>
<div class="outline-text-4" id="text-orgf006f0a">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n b&#225;sica en .emacs</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org-static-blog</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-static-blog-publish-title <span style="color: #a44185;">"Mi Blog"</span>)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-static-blog-publish-url <span style="color: #a44185;">"https://username.github.io/"</span>)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-static-blog-publish-directory <span style="color: #a44185;">"~/blog/public/"</span>))
</pre>
</div>
</div>
</div>
</div>
</div>
<div id="outline-container-org1c12c57" class="outline-2">
<h2 id="org1c12c57">Comparación con Otras Plataformas</h2>
<div class="outline-text-2" id="text-org1c12c57">
<table id="orgb616095">
<caption class="t-above"><span class="table-number">Table 1:</span> Comparativa de Plataformas para Blogs</caption>

<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Plataforma</th>
<th scope="col" class="org-left">Costo Mensual</th>
<th scope="col" class="org-left">Flexibilidad Diseño</th>
<th scope="col" class="org-left">Integración Emacs</th>
<th scope="col" class="org-left">Control Contenido</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">GitHub Pages</td>
<td class="org-left">$0</td>
<td class="org-left">Alta</td>
<td class="org-left">Excelente</td>
<td class="org-left">Total</td>
</tr>

<tr>
<td class="org-left">WordPress.com</td>
<td class="org-left">$4-$45</td>
<td class="org-left">Media</td>
<td class="org-left">Baja</td>
<td class="org-left">Limitada</td>
</tr>

<tr>
<td class="org-left">Medium</td>
<td class="org-left">$5</td>
<td class="org-left">Baja</td>
<td class="org-left">Nula</td>
<td class="org-left">Parcial (paywall)</td>
</tr>

<tr>
<td class="org-left">VPS (AWS)</td>
<td class="org-left">$5-$20</td>
<td class="org-left">Muy Alta</td>
<td class="org-left">Media</td>
<td class="org-left">Total</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-orge69386d" class="outline-2">
<h2 id="orge69386d">Gráfico: Costo vs Flexibilidad</h2>
<div class="outline-text-2" id="text-orge69386d">
</div>
</div>
<div id="outline-container-org8923f21" class="outline-2">
<h2 id="org8923f21">Comparación de Plataformas</h2>
<div class="outline-text-2" id="text-org8923f21">
<table>


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Plataforma</th>
<th scope="col" class="org-left">Costo Mensual</th>
<th scope="col" class="org-left">Flexibilidad Diseño</th>
<th scope="col" class="org-left">Integración Emacs</th>
<th scope="col" class="org-left">Control Contenido</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">GitHub Pages</td>
<td class="org-left">$0</td>
<td class="org-left">Alta</td>
<td class="org-left">Excelente</td>
<td class="org-left">Total</td>
</tr>

<tr>
<td class="org-left">WordPress.com</td>
<td class="org-left">$4-$45</td>
<td class="org-left">Media</td>
<td class="org-left">Baja</td>
<td class="org-left">Limitada</td>
</tr>

<tr>
<td class="org-left">Medium</td>
<td class="org-left">$5</td>
<td class="org-left">Baja</td>
<td class="org-left">Nula</td>
<td class="org-left">Parcial (paywall)</td>
</tr>

<tr>
<td class="org-left">VPS (AWS)</td>
<td class="org-left">$5-$20</td>
<td class="org-left">Muy Alta</td>
<td class="org-left">Media</td>
<td class="org-left">Total</td>
</tr>
</tbody>
</table>



<table id="org06e1027">


<colgroup>
<col  class="org-left">

<col  class="org-right">

<col  class="org-right">

<col  class="org-right">

<col  class="org-right">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Plataforma</th>
<th scope="col" class="org-right">Costo Mensual</th>
<th scope="col" class="org-right">Flexibilidad Diseño</th>
<th scope="col" class="org-right">Integración Emacs</th>
<th scope="col" class="org-right">Control Contenido</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">GitHub Pages</td>
<td class="org-right">0</td>
<td class="org-right">3</td>
<td class="org-right">4</td>
<td class="org-right">4</td>
</tr>

<tr>
<td class="org-left">WordPress.com</td>
<td class="org-right">4</td>
<td class="org-right">2</td>
<td class="org-right">1</td>
<td class="org-right">2</td>
</tr>

<tr>
<td class="org-left">Medium</td>
<td class="org-right">5</td>
<td class="org-right">1</td>
<td class="org-right">0</td>
<td class="org-right">1</td>
</tr>

<tr>
<td class="org-left">VPS (AWS)</td>
<td class="org-right">5</td>
<td class="org-right">4</td>
<td class="org-right">2</td>
<td class="org-right">4</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org848bd62" class="outline-2">
<h2 id="org848bd62">Gráfico de Comparación</h2>
<div class="outline-text-2" id="text-org848bd62">

<figure id="org1116c12">
<img src="grafico_github.png" alt="grafico_github.png">

</figure>


<figure id="orgb1a6396">
<img src="images/grafico_github.png" alt="grafico_github.png">

</figure>
</div>
<div id="outline-container-org8b8ce2e" class="outline-3">
<h3 id="org8b8ce2e">Análisis del Gráfico</h3>
<div class="outline-text-3" id="text-org8b8ce2e">
<ul class="org-ul">
<li><b><b>GitHub Pages</b></b>: $0, flexibilidad 9/10 (limitada solo por ser estático).</li>
<li><b><b>WordPress</b></b>: $15 promedio, flexibilidad 5/10 (plantillas restrictivas).</li>
<li><b><b>Medium</b></b>: $5, flexibilidad 3/10 (diseño fijo).</li>
<li><b><b>VPS</b></b>: $12 promedio, flexibilidad 10/10 (pero requiere más configuración).</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org1cf5786" class="outline-2">
<h2 id="org1cf5786">Desafíos y Soluciones</h2>
<div class="outline-text-2" id="text-org1cf5786">
<ul class="org-ul">
<li><b><b>Curva de Aprendizaje</b></b>: Git y Emacs intimidan al inicio.  
<ul class="org-ul">
<li><b>Solución</b>: Tutoriales básicos de Magit y GitHub Pages (5-10 horas de práctica).</li>
</ul></li>
<li><b><b>Limitaciones Estáticas</b></b>: No admite contenido dinámico nativo.  
<ul class="org-ul">
<li><b>Solución</b>: Integro comentarios con Disqus o formularios vía Netlify.</li>
</ul></li>
<li><b><b>Dependencia de GitHub</b></b>: Si falla, pierdo alojamiento.  
<ul class="org-ul">
<li><b>Solución</b>: Respaldo local y opción de migrar a GitLab Pages.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-orgd3e49a1" class="outline-2">
<h2 id="orgd3e49a1">Conclusión</h2>
<div class="outline-text-2" id="text-orgd3e49a1">
<p>
Elegir GitHub para mi blog ha sido una decisión transformadora. Su <b><b>gratuidad</b></b> me permitió empezar sin riesgos financieros, su <b><b>flexibilidad</b></b> me da control creativo absoluto y su <b><b>integración con Emacs</b></b> alinea perfectamente mi pasión por el texto plano con la publicación moderna. Los datos muestran que supera a alternativas pagas en costo y adaptabilidad para proyectos estáticos. Si buscas una plataforma que combine economía, poder y sinergia con herramientas como Emacs, GitHub es la respuesta. Mi blog vive ahora en `username.github.io`, y cada post es un testimonio de esta elección.
</p>
</div>
</div>
<div id="outline-container-orgf537570" class="outline-2">
<h2 id="orgf537570">Referencias</h2>
<div class="outline-text-2" id="text-orgf537570">
<ul class="org-ul">
<li>GitHub. (2024). <b>GitHub Pages Documentation</b>. <a href="https://docs.github.com/en/pages">https://docs.github.com/en/pages</a></li>
<li>Org Static Blog. (2023). <b>Official Repository</b>. <a href="https://github.com/bastibe/org-static-blog">https://github.com/bastibe/org-static-blog</a></li>
<li>Statista. (2024). <b>Web Hosting Market Trends</b>. <a href="https://www.statista.com">https://www.statista.com</a></li>
<li>Emacs Magit. (2024). <b>Magit User Manual</b>. <a href="https://magit.vc/manual/magit/">https://magit.vc/manual/magit/</a></li>
<li>Deloitte. (2023). <b>Cost Analysis of Digital Platforms</b>. <a href="https://www2.deloitte.com">https://www2.deloitte.com</a></li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-github.html">github</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-blog.html">blog</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-free.html">free</a> </div>]]></description>
  <category><![CDATA[github]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[blog]]></category>
  <category><![CDATA[free]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-14-por-qu%C3%A9-eleg%C3%AD-github-para-publicar-mi-blog.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-14-por-qu%C3%A9-eleg%C3%AD-github-para-publicar-mi-blog.html</guid>
  <pubDate>Fri, 14 Mar 2025 14:21:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Generadores de IA por Relevancia y Países (2025)  Perplexity]]></title>
  <description><![CDATA[
<div id="outline-container-org05c1252" class="outline-2">
<h2 id="org05c1252">Clasificación Global de Generadores de IA</h2>
<div class="outline-text-2" id="text-org05c1252">
</div>
<div id="outline-container-org3eb2412" class="outline-3">
<h3 id="org3eb2412">Top 10 Países Líderes en Desarrollo de IA (2025)</h3>
<div class="outline-text-3" id="text-org3eb2412">
<table>


<colgroup>
<col  class="org-right">

<col  class="org-left">

<col  class="org-right">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-right">Rango</th>
<th scope="col" class="org-left">País</th>
<th scope="col" class="org-right">Puntaje Total</th>
<th scope="col" class="org-left">Principales Generadores</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-right">1</td>
<td class="org-left">Estados Unidos</td>
<td class="org-right">70.06</td>
<td class="org-left">GPT-5 (OpenAI), Gemini (Google), Claude (Anthropic)</td>
</tr>

<tr>
<td class="org-right">2</td>
<td class="org-left">China</td>
<td class="org-right">40.17</td>
<td class="org-left">ERNIE 4.0 (Baidu), Tongyi Qianwen (Alibaba)</td>
</tr>

<tr>
<td class="org-right">3</td>
<td class="org-left">Reino Unido</td>
<td class="org-right">27.21</td>
<td class="org-left">DeepMind AlphaFold, BenevolentAI</td>
</tr>

<tr>
<td class="org-right">4</td>
<td class="org-left">India</td>
<td class="org-right">25.54</td>
<td class="org-left">BharatGPT, Jugalbandi (AI4Bharat)</td>
</tr>

<tr>
<td class="org-right">5</td>
<td class="org-left">Singapur</td>
<td class="org-right">22.72</td>
<td class="org-left">AI Singapore, PaSGEN (NUS)</td>
</tr>

<tr>
<td class="org-right">6</td>
<td class="org-left">Francia</td>
<td class="org-right">22.54</td>
<td class="org-left">Mistral AI, Hugging Face</td>
</tr>

<tr>
<td class="org-right">7</td>
<td class="org-left">Corea del Sur</td>
<td class="org-right">20.48</td>
<td class="org-left">HyperCLOVA (Naver), Exaone (KT)</td>
</tr>

<tr>
<td class="org-right">8</td>
<td class="org-left">Alemania</td>
<td class="org-right">18.49</td>
<td class="org-left">Aleph Alpha, DeepL</td>
</tr>

<tr>
<td class="org-right">9</td>
<td class="org-left">Japón</td>
<td class="org-right">18.47</td>
<td class="org-left">Rinna, Fujitsu Kozuchi</td>
</tr>

<tr>
<td class="org-right">10</td>
<td class="org-left">Emiratos Árabes</td>
<td class="org-right">18.15</td>
<td class="org-left">Falcon 180B (TII), Jais (MBZUAI)</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div id="outline-container-org2bcc515" class="outline-2">
<h2 id="org2bcc515">Generadores por Categoría</h2>
<div class="outline-text-2" id="text-org2bcc515">
</div>
<div id="outline-container-orgddc6507" class="outline-3">
<h3 id="orgddc6507">Texto</h3>
<div class="outline-text-3" id="text-orgddc6507">
<table>


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Herramienta</th>
<th scope="col" class="org-left">Empresa</th>
<th scope="col" class="org-left">Países con Mayor Uso (%)</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">ChatGPT</td>
<td class="org-left">OpenAI</td>
<td class="org-left">EE.UU (17%), Alemania (7%), India</td>
</tr>

<tr>
<td class="org-left">Claude</td>
<td class="org-left">Anthropic</td>
<td class="org-left">EE.UU (32%), Canadá (12%)</td>
</tr>

<tr>
<td class="org-left">Gemini</td>
<td class="org-left">Google</td>
<td class="org-left">EE.UU (24%), India (8%), Brasil</td>
</tr>

<tr>
<td class="org-left">ERNIE</td>
<td class="org-left">Baidu</td>
<td class="org-left">China (89%), Singapur (5%)</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-orge141e0d" class="outline-3">
<h3 id="orge141e0d">Imágenes/Vídeo</h3>
<div class="outline-text-3" id="text-orge141e0d">
<table>


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Herramienta</th>
<th scope="col" class="org-left">Tecnología</th>
<th scope="col" class="org-left">Países Líderes</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Midjourney</td>
<td class="org-left">Difusión Estable</td>
<td class="org-left">Israel (21%), Singapur (18%)</td>
</tr>

<tr>
<td class="org-left">Stable Diffusion</td>
<td class="org-left">Stability AI</td>
<td class="org-left">EE.UU (34%), Japón (12%)</td>
</tr>

<tr>
<td class="org-left">Sora</td>
<td class="org-left">OpenAI</td>
<td class="org-left">Hong Kong (29%), EE.UU (13%)</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org4603ed8" class="outline-3">
<h3 id="org4603ed8">Código</h3>
<div class="outline-text-3" id="text-org4603ed8">
<table>


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Herramienta</th>
<th scope="col" class="org-left">Lenguajes</th>
<th scope="col" class="org-left">Países con Mayor Tráfico</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">GitHub Copilot</td>
<td class="org-left">Python/JavaScript</td>
<td class="org-left">EE.UU (22%), Alemania (6%)</td>
</tr>

<tr>
<td class="org-left">Codeium</td>
<td class="org-left">Java/C++</td>
<td class="org-left">Hong Kong (8%), Japón (7%)</td>
</tr>

<tr>
<td class="org-left">Tabnine</td>
<td class="org-left">Multiplataforma</td>
<td class="org-left">India (6%), Brasil (5%)</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div id="outline-container-orgbe73bab" class="outline-2">
<h2 id="orgbe73bab">Tendencias Regionales</h2>
<div class="outline-text-2" id="text-orgbe73bab">
</div>
<div id="outline-container-org8a75c8b" class="outline-3">
<h3 id="org8a75c8b">América del Norte</h3>
<div class="outline-text-3" id="text-org8a75c8b">
<ul class="org-ul">
<li>Dominio de modelos lingüísticos (EE.UU: 78% inversión global en LLMs)</li>
<li>Canadá: Liderazgo en investigación de aprendizaje automático</li>
</ul>
</div>
</div>
<div id="outline-container-orgcc1f15f" class="outline-3">
<h3 id="orgcc1f15f">Asia-Pacífico</h3>
<div class="outline-text-3" id="text-orgcc1f15f">
<ul class="org-ul">
<li>China: 412K patentes IA registradas (2023)</li>
<li>India: Crecimiento del 140% en startups IA (2022-2025)</li>
<li>Singapur: 92% adopción IA en sector financiero</li>
</ul>
</div>
</div>
<div id="outline-container-orgcfc8586" class="outline-3">
<h3 id="orgcfc8586">Europa</h3>
<div class="outline-text-3" id="text-orgcfc8586">
<ul class="org-ul">
<li>Reino Unido: 54% empresas usando IA ética</li>
<li>Francia: 1er lugar en desarrollo de IA open-source</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org139ae6b" class="outline-2">
<h2 id="org139ae6b">Factores Clave de Relevancia</h2>
<div class="outline-text-2" id="text-org139ae6b">
<table>


<colgroup>
<col  class="org-left">

<col  class="org-right">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Criterio</th>
<th scope="col" class="org-right">Ponderación</th>
<th scope="col" class="org-left">Ejemplo</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Inversión Privada</td>
<td class="org-right">35%</td>
<td class="org-left">EE.UU: $58B en 2024</td>
</tr>

<tr>
<td class="org-left">Talento</td>
<td class="org-right">25%</td>
<td class="org-left">India: 1.3M ingenieros IA</td>
</tr>

<tr>
<td class="org-left">Infraestructura</td>
<td class="org-right">20%</td>
<td class="org-left">China: 37 supercomputadores TOP500</td>
</tr>

<tr>
<td class="org-left">Políticas Guber.</td>
<td class="org-right">15%</td>
<td class="org-left">UE: AI Act 2025</td>
</tr>

<tr>
<td class="org-left">Adopción Empresas</td>
<td class="org-right">5%</td>
<td class="org-left">Japón: 68% PYMEs usando IA</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-orgd363589" class="outline-2">
<h2 id="orgd363589">Proyecciones 2025-2030</h2>
<div class="outline-text-2" id="text-orgd363589">
<ul class="org-ul">
<li>Mercado global IA generativa: $207B (CAGR 32%)</li>
<li>Países emergentes: Vietnam (+210%), Nigeria (+175%)</li>
<li>Regulaciones: 89% países tendrán marco legal IA</li>
</ul>
</div>
</div>
<div id="outline-container-orgab1a052" class="outline-2">
<h2 id="orgab1a052">Referencias [1][2][3][4][5][6][7]</h2>
<div class="outline-text-2" id="text-orgab1a052">
<ol class="org-ol">
<li>Stanford HAI (2023). Global AI Index 2024.</li>
<li>LinkedIn AI Report (2025). Top 35 Countries Ranking.</li>
<li>Visual Capitalist (2024). AI Preparedness Index.</li>
<li>Data Science Dojo (2025). AI Advancement Report.</li>
<li>Tortoise Media (2024). Global AI Index.</li>
<li>Cloudflare Radar (2025). Generative AI Traffic Analysis.</li>
<li>ElectronicsHub (2023). Search Interest in Generative AI.</li>
</ol>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-perplexity.html">perplexity</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ia.html">ia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ai.html">ai</a> </div>]]></description>
  <category><![CDATA[perplexity]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[ia]]></category>
  <category><![CDATA[ai]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-13-generadores-de-ia-por-relevancia-y-pa%C3%ADses-(2025)--perplexity.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-13-generadores-de-ia-por-relevancia-y-pa%C3%ADses-(2025)--perplexity.html</guid>
  <pubDate>Thu, 13 Mar 2025 08:49:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Emacs: Historia, Evolución y Futuro]]></title>
  <description><![CDATA[
<div id="outline-container-org682a99b" class="outline-2">
<h2 id="org682a99b"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
Emacs es más que un simple editor de texto: es un ecosistema de extensibilidad, programabilidad y personalización. Desde su creación en la década de 1970, Emacs ha evolucionado hasta convertirse en una de las herramientas más poderosas para la edición de texto, la programación, la gestión del conocimiento y muchas otras tareas.
</p>
</div>
</div>
<div id="outline-container-org6c041c1" class="outline-2">
<h2 id="org6c041c1"><span class="section-number-2">2.</span> Orígenes de Emacs</h2>
<div class="outline-text-2" id="text-2">
<ul class="org-ul">
<li>Emacs nació en el MIT en los años 70, desarrollado por Richard Stallman.</li>
<li>Se inspiró en el editor TECO y las macros de edición.</li>
<li>Fue el primer editor con capacidad para ser completamente extensible mediante macros.</li>
</ul>
</div>
</div>
<div id="outline-container-orgbfb78ec" class="outline-2">
<h2 id="orgbfb78ec"><span class="section-number-2">3.</span> Evolución y Desarrollo</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li><b><b>Emacs original (1976)</b></b>: Basado en TECO, desarrollado en MIT.</li>
<li><b><b>GNU Emacs (1985)</b></b>: Reescrito en C y Lisp, convirtiéndose en software libre.</li>
<li><b><b>XEmacs (1991)</b></b>: Un fork de GNU Emacs con mejoras en interfaz y rendimiento.</li>
<li><b><b>Emacs 21+ (2001 en adelante)</b></b>: Introdujo GUI mejorada, soporte para UTF-8 y múltiples nuevas funciones.</li>
<li><b><b>Emacs 24/25 (2012-2016)</b></b>: Paquetes, integración con Python, soporte para JSON y mejoras en la gestión de procesos.</li>
<li><b><b>Emacs 27+ (2020 en adelante)</b></b>: Mejoras en visualización, compatibilidad con Lisp nativo y optimizaciones de rendimiento.</li>
</ul>
</div>
</div>
<div id="outline-container-org474fd4f" class="outline-2">
<h2 id="org474fd4f"><span class="section-number-2">4.</span> Posibilidades y Características Clave</h2>
<div class="outline-text-2" id="text-4">
<ul class="org-ul">
<li><b><b>Extensibilidad con Emacs Lisp</b></b>: Todo en Emacs puede modificarse con Emacs Lisp.</li>
<li><b><b>Multipropósito</b></b>: Puede usarse como IDE, gestor de notas, cliente de correo, lector de RSS, agenda y más.</li>
<li><b><b>Soporte para múltiples lenguajes</b></b>: Compatible con lenguajes como Python, C, Lisp, JavaScript, entre otros.</li>
<li><b><b>Interfaz personalizable</b></b>: Temas, configuración de atajos y posibilidad de modificar su comportamiento.</li>
</ul>
</div>
</div>
<div id="outline-container-org6f86fd6" class="outline-2">
<h2 id="org6f86fd6"><span class="section-number-2">5.</span> Emacs en el Presente</h2>
<div class="outline-text-2" id="text-5">
<ul class="org-ul">
<li>Sigue siendo ampliamente utilizado en entornos académicos, de programación y en la comunidad del software libre.</li>
<li>Integraciones modernas con Git, Docker, Jupyter y herramientas de desarrollo.</li>
<li>Opciones como Doom Emacs y Spacemacs lo han hecho más accesible para nuevos usuarios.</li>
</ul>
</div>
</div>
<div id="outline-container-org6cd8a1c" class="outline-2">
<h2 id="org6cd8a1c"><span class="section-number-2">6.</span> Futuro de Emacs</h2>
<div class="outline-text-2" id="text-6">
<ul class="org-ul">
<li>Integración con inteligencia artificial y herramientas de automatización.</li>
<li>Mayor optimización en rendimiento para aprovechar CPUs modernas.</li>
<li>Mejoras en la compatibilidad con Wayland y nuevas tecnologías de escritorio.</li>
<li>Mayor enfoque en mejorar la experiencia de usuario sin comprometer su poder.</li>
</ul>
</div>
</div>
<div id="outline-container-orga9372c8" class="outline-2">
<h2 id="orga9372c8"><span class="section-number-2">7.</span> Curva de Aprendizaje</h2>
<div class="outline-text-2" id="text-7">
<ul class="org-ul">
<li><b><b>Alta al inicio</b></b>, ya que requiere memorizar comandos y aprender Emacs Lisp.</li>
<li><b><b>Ventaja a largo plazo</b></b>: Una vez dominado, permite una eficiencia extrema en edición de texto y automatización.</li>
</ul>
</div>
</div>
<div id="outline-container-org8947225" class="outline-2">
<h2 id="org8947225"><span class="section-number-2">8.</span> Pros y Contras de Emacs</h2>
<div class="outline-text-2" id="text-8">
<p>
<b><b>Ventajas:</b></b>
</p>
<ul class="org-ul">
<li>Extremadamente personalizable y potente.</li>
<li>Compatible con casi cualquier flujo de trabajo.</li>
<li>Comunidad activa y en constante desarrollo.</li>
<li>Soporte para plugins y extensiones.</li>
</ul>

<p>
<b><b>Desventajas:</b></b>
</p>
<ul class="org-ul">
<li>Curva de aprendizaje pronunciada.</li>
<li>Puede ser más lento que editores modernos en ciertas configuraciones.</li>
<li>Consumo de memoria superior a editores minimalistas.</li>
</ul>
</div>
</div>
<div id="outline-container-orga8ff038" class="outline-2">
<h2 id="orga8ff038"><span class="section-number-2">9.</span> Conclusión</h2>
<div class="outline-text-2" id="text-9">
<p>
Emacs es una herramienta impresionante que ha resistido la prueba del tiempo gracias a su extensibilidad y flexibilidad. Aunque no es el editor más accesible para principiantes, ofrece posibilidades inigualables para aquellos dispuestos a invertir tiempo en aprenderlo. Su futuro sigue siendo prometedor gracias a la constante contribución de su comunidad y a su capacidad de adaptación a nuevas tecnologías.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-02-27-emacs:-historia,-evoluci%C3%B3n-y-futuro.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-02-27-emacs:-historia,-evoluci%C3%B3n-y-futuro.html</guid>
  <pubDate>Thu, 27 Feb 2025 18:04:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Mi Blog con Emacs y Esteroides: Una Aventura Potenciada por Código y IA]]></title>
  <description><![CDATA[
<div id="outline-container-org0eb157c" class="outline-2">
<h2 id="org0eb157c"><span class="section-number-2">1.</span> Bienvenidos a Mi Blog con Emacs y Esteroides</h2>
<div class="outline-text-2" id="text-1">
<p>
¡Hola, lector! Si has llegado hasta aquí, probablemente compartas mi pasión por la tecnología, el código y la libertad creativa que ofrecen herramientas como Emacs. Este blog, titulado <b>"Mi Blog con Emacs y Esteroides"</b>, no es solo un espacio para compartir ideas, sino una declaración en favor a un editor legendario y una exploración de cómo la inteligencia artificial generativa lo lleva a otro nivel. ¿Listo para el viaje? ¡Sube a bordo!
</p>
</div>
</div>
<div id="outline-container-org30a9dcc" class="outline-2">
<h2 id="org30a9dcc"><span class="section-number-2">2.</span> Emacs: El Corazón de mi Flujo de Trabajo</h2>
<div class="outline-text-2" id="text-2">
<p>
Cuando pienso en Emacs, no veo solo un editor de texto. Veo una navaja suiza digital, un compañero fiel que ha estado en los paquetes estándar de Linux desde tiempos inmemoriales. No es una herramienta pasajera ni una moda; es un pilar de la cultura del software libre, robusto y flexible como pocos. Lo uso para todo: desde escribir código en Python o Lisp hasta tomar notas en Org-mode (¡como este post!), gestionar mi correo con Gnus o incluso relajarme jugando un poco de Tetris cuando el día se pone duro.
</p>

<p>
Mi interés por Emacs nació de su promesa de control total. En un mundo lleno de interfaces rígidas, Emacs me deja moldearlo a mi gusto. ¿Quieres un atajo nuevo? Lo configuras. ¿Una función personalizada? La escribes. ¿Un entorno de escritura que se adapte a tus rarezas? Org-mode te cubre. Y lo mejor: está ahí, listo para instalarse con un simple `sudo apt install emacs` en mi distribución Linux favorita. Es como si el universo del software libre me dijera: "Aquí tienes las llaves, conduce tú".
</p>
</div>
</div>
<div id="outline-container-org9da0a53" class="outline-2">
<h2 id="org9da0a53"><span class="section-number-2">3.</span> Esteroides: El Poder de la IA Generativa</h2>
<div class="outline-text-2" id="text-3">
<p>
Pero, ¿qué pasa con lo de "Esteroides"? Aquí es donde la cosa se pone emocionante. No me conformo con un Emacs estándar (por muy poderoso que sea). He decidido inyectarle una dosis de esteroides digitales mediante la IA generativa. ¿Qué significa esto? Que uso herramientas como modelos de lenguaje avanzados para acelerar mi configuración de Emacs y generar contenido con una chispa extra.
</p>

<p>
Por ejemplo, ¿necesito un script en Emacs Lisp para crear múltiples buffers scratch? En lugar de pasar horas depurando, le pido a la IA que me dé una base sólida y luego la ajusto a mi gusto. ¿Quiero un diseño personalizado para `org-static-blog` (la magia detrás de este sitio)? La IA me ayuda a generar CSS elegante y funcional en minutos. Y cuando se trata de escribir, como este mismo post, la IA me asiste con ideas, estructuras y hasta un toque de estilo, dejándome libre para enfocarme en lo que importa: mis pensamientos.
</p>

<p>
Los "esteroides" son esa capa de potencia que transforma Emacs de un editor excelente a un compañero creativo imparable. Es como si le pusiera un motor turbo a una bicicleta clásica: sigue siendo la misma máquina que amo, pero ahora vuela.
</p>
</div>
</div>
<div id="outline-container-org3749f80" class="outline-2">
<h2 id="org3749f80"><span class="section-number-2">4.</span> Un Blog con Alma y Tecnología</h2>
<div class="outline-text-2" id="text-4">
<p>
Este blog es el resultado de esa combinación. Aquí encontrarás reflexiones sobre Emacs, tutoriales para sacarle el máximo provecho, y experimentos con IA generativa que dan vida a mis palabras. Uso `org-static-blog` para publicar todo desde archivos Org-mode, lo que significa que cada post empieza como un documento vivo en mi Emacs, lleno de notas, enlaces y ajustes, antes de convertirse en las páginas que ves.
</p>

<p>
¿Por qué "Mi Blog con Emacs y Esteroides"? Porque refleja mi viaje: un editor clásico que nunca envejece, potenciado por las herramientas del futuro. Es mi rincón para compartir, aprender y, con suerte, inspirar a otros a explorar este universo de posibilidades.
</p>
</div>
</div>
<div id="outline-container-orgabfad28" class="outline-2">
<h2 id="orgabfad28"><span class="section-number-2">5.</span> ¿Qué viene después?</h2>
<div class="outline-text-2" id="text-5">
<p>
Si te apasiona Emacs, Linux, o la IA, este es tu lugar. Próximamente hablaré de cómo configuro mi `init.el` con ayuda de IA, trucos de Org-mode para la productividad, y quizás alguna locura como generar poesía con Lisp y modelos de lenguaje. ¿Tienes ideas o sugerencias? Escríbeme a <a href="mailto:mybloggingnotes@gmail.com">mybloggingnotes@gmail.com</a>; este blog también es un diálogo.
</p>

<p>
Así que, ponte cómodo, abre tu Emacs (o instálalo si aún no lo tienes), y acompáñame en esta aventura. ¡Con Emacs y un toque de esteroides, el límite es nuestra imaginación!
</p>

<p style="text-align: center; font-size: 0.9em; color: #777;">
<b>Escrito desde Emacs, potenciado por IA, y publicado con `org-static-blog`.</b>
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-blogging.html">blogging</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[blogging]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-02-26-mi-blog-con-emacs-y-esteroides:-una-aventura-potenciada-por-c%C3%B3digo-y-ia.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-02-26-mi-blog-con-emacs-y-esteroides:-una-aventura-potenciada-por-c%C3%B3digo-y-ia.html</guid>
  <pubDate>Wed, 26 Feb 2025 15:16:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Gestionando Dos Blogs Diferentes con org-static-blog en Emacs]]></title>
  <description><![CDATA[
<div id="outline-container-org80378d5" class="outline-2">
<h2 id="org80378d5"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
`org-static-blog` es una herramienta poderosa para crear blogs estáticos desde Emacs, pero por defecto está diseñada para manejar un solo blog. Si quieres trabajar con dos blogs diferentes (por ejemplo, uno personal y otro profesional), necesitas ajustar tu configuración en Emacs 28 para que soporte múltiples instancias. En este artículo, te guiaré paso a paso para lograrlo.
</p>
</div>
</div>
<div id="outline-container-org86d4db5" class="outline-2">
<h2 id="org86d4db5"><span class="section-number-2">2.</span> Estrategia general</h2>
<div class="outline-text-2" id="text-2">
<p>
La clave para manejar dos blogs con `org-static-blog` es usar configuraciones separadas para cada uno, almacenadas en variables distintas, y luego alternar entre ellas según el blog que estés editando o publicando. Esto implica:
</p>
<ul class="org-ul">
<li>Tener directorios separados para posts y publicaciones.</li>
<li>Definir plantillas y parámetros específicos por blog.</li>
<li>Usar funciones personalizadas en Emacs para cambiar entre configuraciones.</li>
</ul>
</div>
</div>
<div id="outline-container-org3a30d71" class="outline-2">
<h2 id="org3a30d71"><span class="section-number-2">3.</span> Configuración inicial</h2>
<div class="outline-text-2" id="text-3">
<p>
Primero, asegúrate de tener `org-static-blog` instalado en Emacs 28 (instálalo con `M-x package-install RET org-static-blog` si no lo has hecho). Luego, organiza tus directorios. Por ejemplo:
</p>
<ul class="org-ul">
<li>Blog 1 (personal): `~/blog-personal/`</li>
<li>Blog 2 (profesional): `~/blog-profesional/`</li>
</ul>

<p>
Dentro de cada directorio, crea subdirectorios para posts y publicaciones:
</p>
<ul class="org-ul">
<li>`~/blog-personal/posts/` y `~/blog-personal/public/`</li>
<li>`~/blog-profesional/posts/` y `~/blog-profesional/public/`</li>
</ul>
</div>
</div>
<div id="outline-container-org7c27211" class="outline-2">
<h2 id="org7c27211"><span class="section-number-2">4.</span> Configurar las variables para cada blog</h2>
<div class="outline-text-2" id="text-4">
<p>
En tu `init.el`, define las configuraciones de ambos blogs usando variables personalizadas. Aquí un ejemplo:
</p>

<p>
```emacs-lisp
;; Configuración para Blog Personal
(defvar my-blog-personal-settings
  '((org-static-blog-publish-title . "Blog Personal")
    (org-static-blog-publish-url . "<a href="https://mi-blog-personal.com/">https://mi-blog-personal.com/</a>")
    (org-static-blog-publish-directory . "~/blog-personal/public/")
    (org-static-blog-posts-directory . "~/blog-personal/posts/")
    (org-static-blog-drafts-directory . "~/blog-personal/drafts/")
    (org-static-blog-page-header . "&lt;h1&gt;Mi Blog Personal&lt;/h1&gt;")
    (org-static-blog-post-template . "&lt;h1&gt;%title&lt;/h1&gt;&lt;div&gt;%date&lt;/div&gt;%content")))
</p>

<p>
;; Configuración para Blog Profesional
(defvar my-blog-pro-settings
  '((org-static-blog-publish-title . "Blog Profesional")
    (org-static-blog-publish-url . "<a href="https://mi-blog-pro.com/">https://mi-blog-pro.com/</a>")
    (org-static-blog-publish-directory . "~/blog-profesional/public/")
    (org-static-blog-posts-directory . "~/blog-profesional/posts/")
    (org-static-blog-drafts-directory . "~/blog-profesional/drafts/")
    (org-static-blog-page-header . "&lt;h1&gt;Trabajo y Tecnología&lt;/h1&gt;")
    (org-static-blog-post-template . "&lt;h1&gt;%title&lt;/h1&gt;&lt;div&gt;%date&lt;/div&gt;&lt;div&gt;Por un experto&lt;/div&gt;%content")))
</p>

<p>
Cada lista asociativa define las variables esenciales de org-static-blog para un blog específico.
</p>

<p>
Crear funciones para alternar configuraciones Necesitas una manera de aplicar la configuración correcta antes de trabajar en un blog. Define funciones en tu init.el para esto:
</p>

<p>
emacs
(defun my-set-blog-personal ()
  "Activa la configuración del blog personal."
  (interactive)
  (dolist (setting my-blog-personal-settings)
    (set (car setting) (cdr setting)))
  (message "Configuración del Blog Personal activada"))
</p>

<p>
(defun my-set-blog-pro ()
  "Activa la configuración del blog profesional."
  (interactive)
  (dolist (setting my-blog-pro-settings)
    (set (car setting) (cdr setting)))
  (message "Configuración del Blog Profesional activada"))
</p>

<p>
M-x my-set-blog-personal configura Emacs para trabajar con el blog personal.
M-x my-set-blog-pro hace lo mismo para el blog profesional.
</p>

<p>
Crear posts para cada blog Ahora puedes crear posts en los directorios correspondientes. Por ejemplo:
</p>
</div>
<div id="outline-container-org18e7e4d" class="outline-3">
<h3 id="org18e7e4d"><span class="section-number-3">4.1.</span> Post para el Blog Personal (~/blog-personal/posts/2025-02-25-viaje.org):</h3>
<div class="outline-text-3" id="text-4-1">
<p>
org
</p>
</div>
</div>
</div>
<div id="outline-container-orgb43fc7e" class="outline-2">
<h2 id="orgb43fc7e"><span class="section-number-2">5.</span> Reflexiones</h2>
<div class="outline-text-2" id="text-5">
<p>
Hoy escribo sobre un viaje reciente que hice&#x2026;
</p>
</div>
<div id="outline-container-org5d1d03c" class="outline-3">
<h3 id="org5d1d03c"><span class="section-number-3">5.1.</span> Post para el Blog Profesional (~/blog-profesional/posts/2025-02-25-proyecto.org):</h3>
<div class="outline-text-3" id="text-5-1">
<p>
org
</p>
</div>
</div>
</div>
<div id="outline-container-org5311826" class="outline-2">
<h2 id="org5311826"><span class="section-number-2">6.</span> Detalles</h2>
<div class="outline-text-2" id="text-6">
<p>
Este post detalla un proyecto técnico en el que estoy trabajando&#x2026;
</p>

<p>
Publicar cada blog Para publicar:
</p>

<p>
Activa la configuración del blog deseado:
    M-x my-set-blog-personal para el personal.
    M-x my-set-blog-pro para el profesional.
Publica:
    M-x org-static-blog-publish-file RET para un archivo específico.
    M-x org-static-blog-publish para regenerar todo el blog.
</p>

<p>
Los archivos HTML se generarán en el directorio public/ correspondiente a cada blog.
</p>

<p>
Personalizar aún más (opcional)
</p>

<p>
Tags por blog: Usa #+TAGS: en los posts de cada blog según tus necesidades (como expliqué en mi respuesta anterior).
Estilos CSS: Añade un archivo CSS diferente en cada org-static-blog-page-header para distinguir visualmente los blogs.
Atajos de teclado: Asigna las funciones a teclas para mayor rapidez, por ejemplo:
emacs
</p>

<p>
(global-set-key (kbd "C-c b p") 'my-set-blog-personal)
(global-set-key (kbd "C-c b r") 'my-set-blog-pro)
</p>

<p>
Solución de problemas
</p>

<p>
Configuración no cambia: Verifica que las funciones my-set-blog-* estén actualizando las variables correctamente (usa C-h v org-static-blog-publish-directory para inspeccionar).
Posts mezclados: Asegúrate de que los directorios de posts sean distintos y que actives la configuración correcta antes de publicar.
Errores de publicación: Confirma que los directorios existen y tienen permisos adecuados.
</p>

<p>
Conclusión Con este método, puedes gestionar dos blogs diferentes en org-static-blog desde Emacs 28 sin conflictos. Alternar entre configuraciones con funciones personalizadas te da flexibilidad y mantiene todo organizado. Es una solución práctica para quienes, como yo, queremos separar temas personales y profesionales sin abandonar nuestro flujo de trabajo en Org-mode. ¿Qué nombres le pondrías a tus dos blogs?
TODO Próximos pasos
</p>

<p>
Probar publicar ambos blogs en un solo comando con un script Elisp.
Añadir un indicador visual en Emacs para saber qué blog está activo.
Explorar cómo sincronizar cada blog con un repositorio Git diferente.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-blogging.html">blogging</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[blogging]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-02-26-gestionando-dos-blogs-diferentes-con-org-static-blog-en-emacs.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-02-26-gestionando-dos-blogs-diferentes-con-org-static-blog-en-emacs.html</guid>
  <pubDate>Wed, 26 Feb 2025 08:37:00 +0100</pubDate>
</item>
</channel>
</rss>
