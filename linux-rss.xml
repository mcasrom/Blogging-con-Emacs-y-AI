<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title><![CDATA[Example.com - linux]]></title>
<description><![CDATA[Example.com - linux]]></description>
<link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI//tag-linux.html</link>
<lastBuildDate>Thu, 20 Mar 2025 09:01:05 +0100</lastBuildDate>
<item>
  <title><![CDATA[Scripts de Bash para Ciberseguridad en Linux: Detección y Automatización]]></title>
  <description><![CDATA[
<div id="outline-container-org1a7f9bc" class="outline-2">
<h2 id="org1a7f9bc"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
En el ámbito de la ciberseguridad, la automatización de tareas mediante scripts es una habilidad crucial. Los scripts de Bash en Linux ofrecen una poderosa herramienta para realizar análisis de seguridad, detección de amenazas y auditorías de sistemas. En este post, exploraremos varios scripts de Bash diseñados para mejorar la seguridad y automatizar procesos de detección en entornos Linux.
</p>
</div>
</div>
<div id="outline-container-orgd5c3af6" class="outline-2">
<h2 id="orgd5c3af6"><span class="section-number-2">2.</span> Script 1: Detección Básica de Ciberataques</h2>
<div class="outline-text-2" id="text-2">
<p>
Este script realiza una serie de comprobaciones básicas para detectar posibles indicios de un ciberataque en un sistema Linux.
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Iniciando detecci&#243;n b&#225;sica de ciberataques..."</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar intentos de acceso no v&#225;lidos</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Comprobando intentos de acceso no v&#225;lidos..."</span>
<span style="color: #1857a4;">invalid_attempts</span>=$(<span style="color: #219fd5; font-weight: bold;">grep "Invalid user" /var/log/auth.log | wc -l</span>)
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Se han detectado $invalid_attempts intentos de acceso no v&#225;lidos."</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar conexiones de red sospechosas</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Comprobando conexiones de red sospechosas..."</span>
<span style="color: #1857a4;">suspicious_connections</span>=$(<span style="color: #219fd5; font-weight: bold;">netstat -tuln | grep ESTABLISHED | wc -l</span>)
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Hay $suspicious_connections conexiones de red establecidas."</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Buscar archivos modificados recientemente</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Buscando archivos modificados en las &#250;ltimas 24 horas..."</span>
<span style="color: #1857a4;">modified_files</span>=$(<span style="color: #219fd5; font-weight: bold;">find /etc -mtime -1 -type f | wc -l</span>)
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Se han modificado $modified_files archivos en /etc en las &#250;ltimas 24 horas."</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar procesos sospechosos</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Comprobando procesos sospechosos..."</span>
<span style="color: #1857a4;">suspicious_processes</span>=$(<span style="color: #219fd5; font-weight: bold;">ps aux | grep -E '(nc|netcat|nmap</span><span style="color: #a44185;">)'</span> | grep -v grep | wc -l)
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Se han encontrado $suspicious_processes procesos potencialmente sospechosos."</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Verificar cambios en archivos cr&#237;ticos del sistema</span>
<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Verificando integridad de archivos cr&#237;ticos..."</span>
<span style="color: #219fd5; font-style: italic;">if</span> [ -f /etc/passwd.bak ] &amp;&amp; <span style="color: #219fd5; font-weight: bold;">!</span> cmp -s /etc/passwd /etc/passwd.bak; <span style="color: #219fd5; font-style: italic;">then</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"&#161;Alerta! El archivo /etc/passwd ha sido modificado."</span>
<span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"El archivo /etc/passwd no muestra cambios."</span>
<span style="color: #219fd5; font-style: italic;">fi</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Detecci&#243;n b&#225;sica completada. Revise los resultados para identificar posibles amenazas."</span>
</pre>
</div>

<p>
Este script realiza las siguientes comprobaciones:
</p>
<ol class="org-ol">
<li>Busca intentos de acceso no válidos en el archivo de registro auth.log.</li>
<li>Verifica el número de conexiones de red establecidas.</li>
<li>Busca archivos modificados en el directorio /etc en las últimas 24 horas.</li>
<li>Comprueba la presencia de procesos potencialmente sospechosos.</li>
<li>Verifica si ha habido cambios en el archivo crítico /etc/passwd.</li>
</ol>
</div>
</div>
<div id="outline-container-org619f033" class="outline-2">
<h2 id="org619f033"><span class="section-number-2">3.</span> Script 2: Análisis de Intentos de Acceso No Válidos</h2>
<div class="outline-text-2" id="text-3">
<p>
Este script se enfoca en analizar los intentos de acceso no válidos en un archivo de registro específico.
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>

<span style="color: #dc3eb7;">echo</span> -n <span style="color: #a44185;">"&#191;Qu&#233; archivo deseas consultar?: "</span>
<span style="color: #dc3eb7;">read</span> -e LOG

<span style="color: #219fd5; font-style: italic;">if</span> [ -e $<span style="color: #1857a4;">LOG</span> ] ; <span style="color: #219fd5; font-style: italic;">then</span>
    grep -E <span style="color: #a44185;">'Invalid user'</span> $<span style="color: #1857a4;">LOG</span> | tee invalid_users.log
    <span style="color: #1857a4;">COUNT</span>=$(<span style="color: #219fd5; font-weight: bold;">wc -l invalid_users.log | cut -d" " -f1</span>)
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Hay un total de $COUNT intentos desde usuarios no v&#225;lidos."</span>
<span style="color: #219fd5; font-style: italic;">else</span>
    <span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"No se ha encontrado el fichero de log."</span>
<span style="color: #219fd5; font-style: italic;">fi</span>
</pre>
</div>

<p>
Este script:
</p>
<ol class="org-ol">
<li>Solicita al usuario el nombre del archivo de registro a analizar.</li>
<li>Verifica la existencia del archivo.</li>
<li>Busca líneas que contienen "Invalid user" y las guarda en un archivo separado.</li>
<li>Cuenta y reporta el número total de intentos de acceso no válidos.</li>
</ol>
</div>
</div>
<div id="outline-container-org4b9a3bc" class="outline-2">
<h2 id="org4b9a3bc"><span class="section-number-2">4.</span> Script 3: Detección de Equipos en la Red Local</h2>
<div class="outline-text-2" id="text-4">
<p>
Este script utiliza el comando ping para detectar equipos activos en la red local.
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #8195b0; font-style: italic;">#</span><span style="color: #8195b0; font-style: italic;">!/bin/</span><span style="color: #219fd5; font-style: italic;">bash</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Detectando equipos en la red local..."</span>

<span style="color: #8195b0; font-style: italic;"># </span><span style="color: #8195b0; font-style: italic;">Obtener la direcci&#243;n IP base</span>
<span style="color: #1857a4;">ip_base</span>=$(<span style="color: #219fd5; font-weight: bold;">ip addr | grep 'inet ' | grep -v '127.0.0.1' | awk '{print $2}' | cut -d'/' -f1 | sed 's/\.[0-9]*$/./'</span>)

<span style="color: #219fd5; font-style: italic;">for</span> i<span style="color: #219fd5; font-style: italic;"> in</span> {1..254}
<span style="color: #219fd5; font-style: italic;">do</span>
   ping -c 1 $<span style="color: #1857a4;">ip_base</span>$<span style="color: #1857a4;">i</span> | grep <span style="color: #a44185;">"64 bytes"</span> | cut -d <span style="color: #a44185;">" "</span> -f 4 | tr -d <span style="color: #a44185;">":"</span> &amp;
<span style="color: #219fd5; font-style: italic;">done</span>

<span style="color: #dc3eb7;">echo</span> <span style="color: #a44185;">"Escaneo completado."</span>
</pre>
</div>

<p>
Este script:
</p>
<ol class="org-ol">
<li>Determina automáticamente la dirección IP base de la red local.</li>
<li>Realiza un ping a todas las posibles direcciones IP en esa red.</li>
<li>Muestra las direcciones IP de los equipos que responden al ping.</li>
</ol>
</div>
</div>
<div id="outline-container-org9557c69" class="outline-2">
<h2 id="org9557c69"><span class="section-number-2">5.</span> Consideraciones de Seguridad</h2>
<div class="outline-text-2" id="text-5">
<p>
Al utilizar estos scripts, es importante tener en cuenta:
</p>

<ol class="org-ol">
<li>Permisos: Asegúrate de tener los permisos necesarios para ejecutar estos scripts y acceder a los archivos de sistema.</li>
<li>Uso Ético: Utiliza estos scripts solo en sistemas y redes sobre los que tengas autorización explícita.</li>
<li>Falsos Positivos: Los resultados pueden incluir falsos positivos. Siempre verifica manualmente los hallazgos importantes.</li>
<li>Actualizaciones: Mantén los scripts actualizados para adaptarse a nuevas amenazas y cambios en el sistema.</li>
</ol>


<figure id="org9d923fb">
<img src="post_diagram.png" alt="post_diagram.png">

</figure>


<figure id="org79ad43b">
<img src="images/post_diagram.png" alt="post_diagram.png">

</figure>
</div>
</div>
<div id="outline-container-orga669fef" class="outline-2">
<h2 id="orga669fef"><span class="section-number-2">6.</span> Conclusión</h2>
<div class="outline-text-2" id="text-6">
<p>
Los scripts de Bash son herramientas poderosas para la automatización de tareas de seguridad en Linux. Desde la detección básica de amenazas hasta el análisis de redes, estos scripts pueden mejorar significativamente la eficiencia de las auditorías de seguridad y la respuesta a incidentes. Sin embargo, es crucial utilizarlos de manera responsable y en conjunto con otras prácticas de seguridad robustas.
</p>
</div>
</div>
<div id="outline-container-orga7a0069" class="outline-2">
<h2 id="orga7a0069"><span class="section-number-2">7.</span> Referencias</h2>
<div class="outline-text-2" id="text-7">
<ol class="org-ol">
<li>Centro de Investigaciones Sociológicas (CIS). (2024). Barómetro mensual. <a href="https://www.cis.es/">https://www.cis.es/</a></li>
<li>RedesZone. (2017). Security Bash Scripts, un repositorio con scripts de seguridad y pentesting. <a href="https://www.redeszone.net/2017/02/20/security-bash-scripts-un-repositorio-con-scripts-de-seguridad-y-pentesting/">https://www.redeszone.net/2017/02/20/security-bash-scripts-un-repositorio-con-scripts-de-seguridad-y-pentesting/</a></li>
<li>iEspai. (2023). Explorando la Seguridad: Un Script Bash para Analizar Intentos de Acceso No Válidos en Archivos de Registro. <a href="https://www.iespai.com/2023/10/10/explorando-la-seguridad-un-script-bash-para-analizar-intentos-de-acceso-no-validos-en-archivos-de-registro/">https://www.iespai.com/2023/10/10/explorando-la-seguridad-un-script-bash-para-analizar-intentos-de-acceso-no-validos-en-archivos-de-registro/</a></li>
<li>LinkedIn Learning. (2024). Seguridad ofensiva: Bash para pentesting. <a href="https://es.linkedin.com/learning/seguridad-ofensiva-bash-para-pentesting/creacion-de-scripts-de-bash-para-la-explotacion-de-vulnerabilidades-especificas">https://es.linkedin.com/learning/seguridad-ofensiva-bash-para-pentesting/creacion-de-scripts-de-bash-para-la-explotacion-de-vulnerabilidades-especificas</a></li>
</ol>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ciberseguridad.html">ciberseguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-script.html">script</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> </div>]]></description>
  <category><![CDATA[ciberseguridad]]></category>
  <category><![CDATA[tutoriales]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[script]]></category>
  <category><![CDATA[linux]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-19-scripts-de-bash-para-ciberseguridad-en-linux:-detecci%C3%B3n-y-automatizaci%C3%B3n.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-19-scripts-de-bash-para-ciberseguridad-en-linux:-detecci%C3%B3n-y-automatizaci%C3%B3n.html</guid>
  <pubDate>Wed, 19 Mar 2025 15:36:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Tutorial de Seguridad en Linux: Mínimo de Protección ante Ataques Informáticos (II)]]></title>
  <description><![CDATA[
<div id="outline-container-orgfe423c6" class="outline-2">
<h2 id="orgfe423c6"><span class="section-number-2">1.</span> Capítulo 2: Automatización y Análisis Avanzado</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-org0877f3b" class="outline-3">
<h3 id="org0877f3b"><span class="section-number-3">1.1.</span> Objetivos</h3>
<div class="outline-text-3" id="text-1-1">
<ul class="org-ul">
<li>Automatizar tareas de seguridad con scripts.</li>
<li>Analizar logs para detectar patrones sospechosos.</li>
<li>Generar reportes de seguridad.</li>
</ul>
</div>
</div>
<div id="outline-container-orgadc7dbb" class="outline-3">
<h3 id="orgadc7dbb"><span class="section-number-3">1.2.</span> Paso 1: Automatizar Tareas con Scripts en Bash</h3>
<div class="outline-text-3" id="text-1-2">
<p>
Crea un script para automatizar la revisión de logs y el bloqueo de IPs sospechosas.
</p>

<ol class="org-ol">
<li><p>
Script `security<sub>monitor.sh</sub>`:
</p>
<div class="org-src-container">
<pre class="src src-sh"><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>
<span style="color: #004651;">LOG_FILE</span>=<span style="color: #005F00;">"/var/log/auth.log"</span>
<span style="color: #004651;">BAN_LIST</span>=<span style="color: #005F00;">"/etc/fail2ban/jail.local"</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Buscar IPs con m&#250;ltiples intentos fallidos</span>
<span style="color: #004651;">SUSPICIOUS_IPS</span>=$(<span style="color: #1F55A0; font-weight: bold;">grep "Failed password" $LOG_FILE | awk '{print $(NF-3</span><span style="color: #005F00;">)}'</span> | sort | uniq -c | awk <span style="color: #005F00;">'$1 &gt; 3 {print $2}'</span>)

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Bloquear IPs sospechosas</span>
<span style="color: #D70000;">for</span> IP<span style="color: #D70000;"> in</span> $<span style="color: #004651;">SUSPICIOUS_IPS</span>; <span style="color: #D70000;">do</span>
    <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Bloqueando IP: $IP"</span>
    sudo fail2ban-client set sshd banip $<span style="color: #004651;">IP</span>
<span style="color: #D70000;">done</span>
</pre>
</div></li>

<li><p>
Ejecutar el script diariamente con `cron`:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo crontab -e
</pre>
</div>
<p>
Añade la siguiente línea:
</p>
<div class="org-src-container">
<pre class="src src-nil">0 0 * * * /ruta/al/script/security_monitor.sh
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-orgb4cf443" class="outline-3">
<h3 id="orgb4cf443"><span class="section-number-3">1.3.</span> Paso 2: Analizar Logs con Python</h3>
<div class="outline-text-3" id="text-1-3">
<p>
Crea un script en Python para analizar logs y generar reportes.
</p>

<ol class="org-ol">
<li><p>
Script `log<sub>analyzer.py</sub>`:
</p>
<div class="org-src-container">
<pre class="src src-python"><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/usr/bin/env python3</span>
<span style="color: #D70000;">import</span> re
<span style="color: #D70000;">from</span> collections <span style="color: #D70000;">import</span> Counter

<span style="color: #004651;">LOG_FILE</span> = <span style="color: #005F00;">"/var/log/auth.log"</span>
<span style="color: #004651;">REPORT_FILE</span> = <span style="color: #005F00;">"/var/log/security_report.txt"</span>

<span style="color: #D70000;">def</span> <span style="color: #AF8700;">analyze_logs</span>():
    <span style="color: #D70000;">with</span> <span style="color: #1F55A0;">open</span>(LOG_FILE, <span style="color: #005F00;">"r"</span>) <span style="color: #D70000;">as</span> <span style="color: #1F55A0;">file</span>:
        <span style="color: #004651;">logs</span> = <span style="color: #1F55A0;">file</span>.readlines()

    <span style="color: #004651;">failed_attempts</span> = Counter()
    <span style="color: #D70000;">for</span> log <span style="color: #D70000;">in</span> logs:
        <span style="color: #D70000;">if</span> <span style="color: #005F00;">"Failed password"</span> <span style="color: #D70000;">in</span> log:
            <span style="color: #004651;">ip</span> = re.search(r<span style="color: #005F00;">"\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b"</span>, log).group()
            <span style="color: #004651;">failed_attempts</span>[ip] += 1

    <span style="color: #D70000;">with</span> <span style="color: #1F55A0;">open</span>(REPORT_FILE, <span style="color: #005F00;">"w"</span>) <span style="color: #D70000;">as</span> report:
        report.write(<span style="color: #005F00;">"Reporte de Seguridad</span><span style="color: #AF005F;">\n</span><span style="color: #005F00;">"</span>)
        report.write(<span style="color: #005F00;">"===================</span><span style="color: #AF005F;">\n</span><span style="color: #005F00;">"</span>)
        <span style="color: #D70000;">for</span> ip, count <span style="color: #D70000;">in</span> failed_attempts.most_common():
            report.write(f<span style="color: #005F00;">"IP: </span>{ip}<span style="color: #005F00;"> - Intentos fallidos: </span>{count}<span style="color: #AF005F;">\n</span><span style="color: #005F00;">"</span>)

<span style="color: #D70000;">if</span> <span style="color: #1F55A0;">__name__</span> == <span style="color: #005F00;">"__main__"</span>:
    analyze_logs()
</pre>
</div></li>

<li><p>
Ejecutar el script:
</p>
<div class="org-src-container">
<pre class="src src-sh">python3 /ruta/al/script/log_analyzer.py
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-org076a014" class="outline-3">
<h3 id="org076a014"><span class="section-number-3">1.4.</span> Paso 3: Generar Reportes de Seguridad</h3>
<div class="outline-text-3" id="text-1-4">
<p>
Usa los scripts anteriores para generar reportes diarios.
</p>

<ol class="org-ol">
<li><p>
Combinar ambos scripts en un solo archivo:
</p>
<div class="org-src-container">
<pre class="src src-sh"><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>
/ruta/al/script/security_monitor.sh
python3 /ruta/al/script/log_analyzer.py
</pre>
</div></li>

<li><p>
Programar la ejecución con `cron`:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo crontab -e
</pre>
</div>
<p>
Añade la siguiente línea:
</p>
<div class="org-src-container">
<pre class="src src-nil">0 1 * * * /ruta/al/script/security_report.sh
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-orgbddd265" class="outline-3">
<h3 id="orgbddd265"><span class="section-number-3">1.5.</span> Resultados Esperados</h3>
<div class="outline-text-3" id="text-1-5">
<ul class="org-ul">
<li>Tareas de seguridad automatizadas.</li>
<li>Logs analizados en busca de patrones sospechosos.</li>
<li>Reportes de seguridad generados diariamente.</li>
</ul>

<p>
&#x2014;
</p>
</div>
</div>
</div>
<div id="outline-container-orgbac7489" class="outline-2">
<h2 id="orgbac7489"><span class="section-number-2">2.</span> Conclusión</h2>
<div class="outline-text-2" id="text-2">
<p>
Con estos dos capítulos, has implementado un mínimo de seguridad en tu entorno Linux. Desde la configuración básica del firewall hasta la automatización de tareas y el análisis avanzado de logs, este tutorial te proporciona las herramientas necesarias para proteger tu sistema ante ataques informáticos. ¡Ahora es tu turno de adaptar y mejorar estas técnicas según tus necesidades!
</p>
</div>
</div>
<div id="outline-container-org285a04f" class="outline-2">
<h2 id="org285a04f"><span class="section-number-2">3.</span> Recursos Adicionales</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li><a href="https://help.ubuntu.com/community/UFW">Documentación de UFW</a></li>
<li><a href="https://www.fail2ban.org/">Documentación de Fail2Ban</a></li>
<li><a href="https://docs.python.org/3/">Documentación de Python</a></li>
</ul>

<p>
```
</p>

<p>
&#x2014;
</p>

<p>
### Características del Tutorial
</p>

<ol class="org-ol">
<li><b><b>Estructura Clara</b></b>: Dividido en 2 capítulos con objetivos, pasos y resultados.</li>
<li><b><b>Scripts Prácticos</b></b>: Incluye scripts en Bash y Python para automatizar tareas.</li>
<li><b><b>Logs y Reportes</b></b>: Enseña a monitorear logs y generar reportes de seguridad.</li>
<li><b><b>Recursos Adicionales</b></b>: Proporciona enlaces a documentación oficial.</li>
</ol>

<p>
&#x2014;
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-python.html">python</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-firewall.html">firewall</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-logs.html">logs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[python]]></category>
  <category><![CDATA[firewall]]></category>
  <category><![CDATA[logs]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-tutorial-de-seguridad-en-linux:-m%C3%ADnimo-de-protecci%C3%B3n-ante-ataques-inform%C3%A1ticos-(ii).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-tutorial-de-seguridad-en-linux:-m%C3%ADnimo-de-protecci%C3%B3n-ante-ataques-inform%C3%A1ticos-(ii).html</guid>
  <pubDate>Tue, 18 Mar 2025 20:43:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Tutorial de Seguridad en Linux: Mínimo de Protección ante Ataques Informáticos (I)]]></title>
  <description><![CDATA[
<p>
AUTHOR: Tu Nombre
</p>
<div id="outline-container-orgae93554" class="outline-2">
<h2 id="orgae93554"><span class="section-number-2">1.</span> Capítulo 1: Configuración Básica de Seguridad</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-org34b86e4" class="outline-3">
<h3 id="org34b86e4"><span class="section-number-3">1.1.</span> Objetivos</h3>
<div class="outline-text-3" id="text-1-1">
<ul class="org-ul">
<li>Configurar un firewall básico.</li>
<li>Deshabilitar servicios innecesarios.</li>
<li>Monitorear logs del sistema.</li>
<li>Detectar intentos de acceso no autorizados.</li>
</ul>
</div>
</div>
<div id="outline-container-org207fca1" class="outline-3">
<h3 id="org207fca1"><span class="section-number-3">1.2.</span> Paso 1: Configurar un Firewall Básico con `ufw`</h3>
<div class="outline-text-3" id="text-1-2">
<p>
`ufw` (Uncomplicated Firewall) es una herramienta sencilla para gestionar reglas de firewall en Linux.
</p>

<ol class="org-ol">
<li><p>
Instalar `ufw`:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo apt update &amp;&amp; sudo apt install ufw -y
</pre>
</div></li>

<li><p>
Habilitar el firewall:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo ufw enable
</pre>
</div></li>

<li>Configurar reglas básicas:
<ul class="org-ul">
<li><p>
Permitir SSH:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo ufw allow ssh
</pre>
</div></li>
<li><p>
Permitir HTTP/HTTPS:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo ufw allow http
sudo ufw allow https
</pre>
</div></li>
<li><p>
Denegar todo el tráfico por defecto:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo ufw default deny incoming
sudo ufw default allow outgoing
</pre>
</div></li>
</ul></li>

<li><p>
Verificar el estado del firewall:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo ufw status verbose
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-orgf7cbb39" class="outline-3">
<h3 id="orgf7cbb39"><span class="section-number-3">1.3.</span> Paso 2: Deshabilitar Servicios Innecesarios</h3>
<div class="outline-text-3" id="text-1-3">
<p>
Los servicios innecesarios pueden ser un vector de ataque. Deshabilita los que no uses.
</p>

<ol class="org-ol">
<li><p>
Listar servicios activos:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo systemctl list-unit-files --type=service | grep enabled
</pre>
</div></li>

<li><p>
Deshabilitar un servicio (por ejemplo, `apache2`):
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo systemctl stop apache2
sudo systemctl disable apache2
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-org32b35f5" class="outline-3">
<h3 id="org32b35f5"><span class="section-number-3">1.4.</span> Paso 3: Monitorear Logs del Sistema</h3>
<div class="outline-text-3" id="text-1-4">
<p>
Los logs son esenciales para detectar actividad sospechosa.
</p>

<ol class="org-ol">
<li><p>
Ver logs de autenticación:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo tail -f /var/log/auth.log
</pre>
</div></li>

<li><p>
Ver logs del firewall:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo tail -f /var/log/ufw.log
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-orgd647c80" class="outline-3">
<h3 id="orgd647c80"><span class="section-number-3">1.5.</span> Paso 4: Detectar Intentos de Acceso No Autorizados</h3>
<div class="outline-text-3" id="text-1-5">
<p>
Usa `fail2ban` para bloquear IPs que realicen intentos de acceso fallidos.
</p>

<ol class="org-ol">
<li><p>
Instalar `fail2ban`:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo apt install fail2ban -y
</pre>
</div></li>

<li><p>
Configurar `fail2ban` para SSH:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo nano /etc/fail2ban/jail.local
</pre>
</div>
<p>
Añade lo siguiente:
</p>
<div class="org-src-container">
<pre class="src src-nil">[sshd]
enabled = true
maxretry = 3
bantime = 3600
</pre>
</div></li>

<li><p>
Reiniciar `fail2ban`:
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo systemctl restart fail2ban
</pre>
</div></li>
</ol>
</div>
</div>
<div id="outline-container-orgf174586" class="outline-3">
<h3 id="orgf174586"><span class="section-number-3">1.6.</span> Resultados Esperados</h3>
<div class="outline-text-3" id="text-1-6">
<ul class="org-ul">
<li>Firewall activo y configurado.</li>
<li>Servicios innecesarios deshabilitados.</li>
<li>Logs monitoreados en tiempo real.</li>
<li>Intentos de acceso no autorizados bloqueados.</li>
</ul>

<p>
&#x2014;
</p>
</div>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-python.html">python</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-firewall.html">firewall</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-logs.html">logs</a> </div>]]></description>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[python]]></category>
  <category><![CDATA[firewall]]></category>
  <category><![CDATA[logs]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-tutorial-de-seguridad-en-linux:-m%C3%ADnimo-de-protecci%C3%B3n-ante-ataques-inform%C3%A1ticos-(i).html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-tutorial-de-seguridad-en-linux:-m%C3%ADnimo-de-protecci%C3%B3n-ante-ataques-inform%C3%A1ticos-(i).html</guid>
  <pubDate>Tue, 18 Mar 2025 20:40:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Configuración Mínima de Seguridad con Scripts Bash y Python]]></title>
  <description><![CDATA[
<p>
Por Qwen AI
</p>
<div id="outline-container-orgdba67ba" class="outline-2">
<h2 id="orgdba67ba"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
Este documento describe cómo configurar una seguridad mínima en un sistema Linux utilizando scripts escritos en <b><b>Bash</b></b> y <b><b>Python</b></b>. Las medidas incluyen:
</p>
<ul class="org-ul">
<li>Configuración básica de un <b><b>firewall</b></b> con IPTables.</li>
<li>Bloqueo de IPs sospechosas (anti-botnet).</li>
<li>Protección contra escaneos de puertos.</li>
<li>Configuración de políticas de red seguras.</li>
</ul>
</div>
</div>
<div id="outline-container-org4f45fda" class="outline-2">
<h2 id="org4f45fda"><span class="section-number-2">2.</span> Configuración Básica del Firewall con IPTables (Bash)</h2>
<div class="outline-text-2" id="text-2">
<p>
El siguiente script configura un firewall básico utilizando IPTables para permitir solo el tráfico necesario.
</p>

<p>
<b><b>Script Bash:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Limpiar todas las reglas existentes</span>
iptables -F
iptables -X

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Pol&#237;tica por defecto: Denegar todo el tr&#225;fico entrante y saliente</span>
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Permitir tr&#225;fico local (loopback)</span>
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Permitir conexiones establecidas o relacionadas</span>
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Permitir SSH (puerto 22) desde una IP espec&#237;fica (opcional)</span>
<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Reemplaza "TU_IP" con tu direcci&#243;n IP p&#250;blica</span>
iptables -A INPUT -p tcp --dport 22 -s TU_IP -j ACCEPT

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Permitir HTTP (puerto 80) y HTTPS (puerto 443)</span>
iptables -A INPUT -p tcp --dport 80 -j ACCEPT
iptables -A INPUT -p tcp --dport 443 -j ACCEPT

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Registrar intentos de acceso no autorizados</span>
iptables -A INPUT -j LOG --log-prefix <span style="color: #005F00;">"IPTables-Dropped: "</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Guardar las reglas de IPTables</span>
iptables-save &gt; /etc/iptables/rules.v4
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>Asegúrate de tener permisos de superusuario (`sudo`) para ejecutar este script.</li>
<li>Si bloqueas accidentalmente el acceso SSH, puedes perder el control remoto del servidor.</li>
</ul>
</div>
</div>
<div id="outline-container-org414e930" class="outline-2">
<h2 id="org414e930"><span class="section-number-2">3.</span> Bloqueo de IPs Sospechosas (Anti-Botnet)</h2>
<div class="outline-text-2" id="text-3">
<p>
El siguiente script bloquea IPs sospechosas utilizando una lista negra predefinida.
</p>

<p>
<b><b>Script Bash:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Descargar una lista negra de IPs conocidas (por ejemplo, Emerging Threats)</span>
wget -q https://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt -O /tmp/blocked_ips.txt

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Leer el archivo y bloquear cada IP</span>
<span style="color: #D70000;">while </span><span style="color: #1F55A0;">read</span> -r ip; <span style="color: #D70000;">do</span>
    <span style="color: #D70000;">if</span> [[ $<span style="color: #004651;">ip</span> =~ ^[0-9]+<span style="color: #005F00;">\.</span>[0-9]+<span style="color: #005F00;">\.</span>[0-9]+<span style="color: #005F00;">\.</span>[0-9]+$ ]]; <span style="color: #D70000;">then</span>
        iptables -A INPUT -s <span style="color: #005F00;">"$ip"</span> -j DROP
        <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Bloqueada IP: $ip"</span>
    <span style="color: #D70000;">fi</span>
<span style="color: #D70000;">done</span> &lt; /tmp/blocked_ips.txt

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Guardar las reglas de IPTables</span>
iptables-save &gt; /etc/iptables/rules.v4
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>La lista negra puede actualizarse periódicamente para mantenerse al día con nuevas amenazas.</li>
<li>Puedes personalizar la fuente de la lista negra según tus necesidades.</li>
</ul>
</div>
</div>
<div id="outline-container-org9ef1ace" class="outline-2">
<h2 id="org9ef1ace"><span class="section-number-2">4.</span> Protección Contra Escaneos de Puertos (Python)</h2>
<div class="outline-text-2" id="text-4">
<p>
El siguiente script utiliza Python para monitorear intentos de escaneo de puertos y bloquear IPs sospechosas.
</p>

<p>
<b><b>Script Python:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-python"><span style="color: #D70000;">import</span> os
<span style="color: #D70000;">import</span> time
<span style="color: #D70000;">from</span> collections <span style="color: #D70000;">import</span> defaultdict

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Diccionario para rastrear intentos de conexi&#243;n por IP</span>
<span style="color: #004651;">connection_attempts</span> = defaultdict(<span style="color: #1F55A0;">int</span>)

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Umbral de intentos sospechosos</span>
<span style="color: #004651;">THRESHOLD</span> = 5
<span style="color: #004651;">BLOCK_TIME</span> = 60  <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Tiempo en segundos para bloquear una IP</span>

<span style="color: #D70000;">def</span> <span style="color: #AF8700;">block_ip</span>(ip):
    <span style="color: #004700; font-style: italic;">"""Bloquea una IP usando IPTables."""</span>
    os.system(f<span style="color: #005F00;">"iptables -A INPUT -s </span>{ip}<span style="color: #005F00;"> -j DROP"</span>)
    <span style="color: #1F55A0;">print</span>(f<span style="color: #005F00;">"Bloqueada IP sospechosa: </span>{ip}<span style="color: #005F00;">"</span>)

<span style="color: #D70000;">def</span> <span style="color: #AF8700;">monitor_logs</span>():
    <span style="color: #004700; font-style: italic;">"""Monitorea los logs del sistema en busca de intentos de conexi&#243;n."""</span>
    <span style="color: #D70000;">with</span> <span style="color: #1F55A0;">open</span>(<span style="color: #005F00;">"/var/log/auth.log"</span>, <span style="color: #005F00;">"r"</span>) <span style="color: #D70000;">as</span> log_file:
        log_file.seek(0, 2)  <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Ir al final del archivo</span>
        <span style="color: #D70000;">while</span> <span style="color: #AF005F;">True</span>:
            <span style="color: #004651;">line</span> = log_file.readline()
            <span style="color: #D70000;">if</span> <span style="color: #005F00;">"Failed password"</span> <span style="color: #D70000;">in</span> line:
                <span style="color: #004651;">ip</span> = line.split(<span style="color: #005F00;">"from "</span>)[1].split(<span style="color: #005F00;">" port"</span>)[0]
                <span style="color: #004651;">connection_attempts</span>[ip] += 1
                <span style="color: #1F55A0;">print</span>(f<span style="color: #005F00;">"Intento de conexi&#243;n desde: </span>{ip}<span style="color: #005F00;"> (</span>{connection_attempts[ip]}<span style="color: #005F00;"> intentos)"</span>)

                <span style="color: #D70000;">if</span> connection_attempts[ip] &gt;= THRESHOLD:
                    block_ip(ip)
                    time.sleep(BLOCK_TIME)
                    <span style="color: #004651;">connection_attempts</span>[ip] = 0  <span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Reiniciar contador</span>
            time.sleep(1)

<span style="color: #D70000;">if</span> <span style="color: #1F55A0;">__name__</span> == <span style="color: #005F00;">"__main__"</span>:
    monitor_logs()
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>Este script requiere acceso a los logs del sistema (`/var/log/auth.log`).</li>
<li>Asegúrate de tener instalado Python y permisos de superusuario.</li>
</ul>
</div>
</div>
<div id="outline-container-org4778546" class="outline-2">
<h2 id="org4778546"><span class="section-number-2">5.</span> Configuración de Políticas de Red Seguras (Bash)</h2>
<div class="outline-text-2" id="text-5">
<p>
El siguiente script configura políticas adicionales para mejorar la seguridad de la red.
</p>

<p>
<b><b>Script Bash:</b></b>
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Deshabilitar el redireccionamiento IP</span>
<span style="color: #1F55A0;">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/all/send_redirects
<span style="color: #1F55A0;">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Habilitar protecci&#243;n contra SYN Flood</span>
<span style="color: #1F55A0;">echo</span> 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Deshabilitar el reenv&#237;o de paquetes IPv4</span>
<span style="color: #1F55A0;">echo</span> 0 &gt; /proc/sys/net/ipv4/ip_forward

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Habilitar protecci&#243;n contra IP Spoofing</span>
<span style="color: #D70000;">for</span> interface<span style="color: #D70000;"> in</span> $(<span style="color: #1F55A0; font-weight: bold;">ls /sys/class/net | grep -v lo</span>); <span style="color: #D70000;">do</span>
    <span style="color: #1F55A0;">echo</span> 1 &gt; /proc/sys/net/ipv4/conf/$<span style="color: #004651;">interface</span>/rp_filter
<span style="color: #D70000;">done</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Guardar cambios en sysctl.conf</span>
cat &lt;&lt;EOF &gt;&gt; /etc/sysctl.conf
<span style="color: #005F00;">net.ipv4.conf.all.send_redirects = 0</span>
<span style="color: #005F00;">net.ipv4.conf.default.send_redirects = 0</span>
<span style="color: #005F00;">net.ipv4.tcp_syncookies = 1</span>
<span style="color: #005F00;">net.ipv4.ip_forward = 0</span>
<span style="color: #005F00;">EOF</span>

sysctl -p
</pre>
</div>

<p>
<b><b>Notas:</b></b>
</p>
<ul class="org-ul">
<li>Estas configuraciones mejoran la seguridad del sistema contra ataques comunes.</li>
<li>Asegúrate de probar los cambios en un entorno seguro antes de aplicarlos en producción.</li>
</ul>
</div>
</div>
<div id="outline-container-org2b7936c" class="outline-2">
<h2 id="org2b7936c"><span class="section-number-2">6.</span> Conclusión</h2>
<div class="outline-text-2" id="text-6">
<p>
Este documento proporciona scripts básicos en Bash y Python para configurar una seguridad mínima en sistemas Linux. Recuerda que estas medidas son solo un punto de partida y deben complementarse con auditorías regulares, actualizaciones de software y mejores prácticas de seguridad.
</p>

<p>
Para más información, consulta la documentación oficial de IPTables y las recomendaciones de seguridad para tu distribución de Linux.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-python.html">python</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-internet.html">internet</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-seguridad.html">seguridad</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[python]]></category>
  <category><![CDATA[internet]]></category>
  <category><![CDATA[seguridad]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-configuraci%C3%B3n-m%C3%ADnima-de-seguridad-con-scripts-bash-y-python.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-18-configuraci%C3%B3n-m%C3%ADnima-de-seguridad-con-scripts-bash-y-python.html</guid>
  <pubDate>Tue, 18 Mar 2025 16:25:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Opciones para Ordenar Downloads en Linux OSs]]></title>
  <description><![CDATA[
<div id="outline-container-org05a9d8f" class="outline-2">
<h2 id="org05a9d8f"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
Este documento ofrece métodos para organizar la carpeta <code>~/Downloads</code> en Ubuntu, renombrando archivos con el prefijo <code>YYMMDD_nombre</code> (YY: últimos 2 dígitos del año, MM: mes 01-12, DD: día de modificación) y otras estrategias de ordenamiento. Las soluciones usan herramientas de terminal y Emacs.
</p>
</div>
</div>
<div id="outline-container-orgd0981d2" class="outline-2">
<h2 id="orgd0981d2"><span class="section-number-2">2.</span> 1 Renombrar Archivos con YYMMDD<sub>nombre</sub></h2>
<div class="outline-text-2" id="text-2">
<p>
Renombrar archivos según su fecha de modificación usando el formato solicitado.
</p>
</div>
<div id="outline-container-orge0d5d72" class="outline-3">
<h3 id="orge0d5d72"><span class="section-number-3">2.1.</span> 1.1 Usando `find` y `mv` en la Terminal</h3>
<div class="outline-text-3" id="text-2-1">
<ul class="org-ul">
<li><b>Descripción</b>: Busca archivos y los renombra con la fecha de modificación.</li>
<li><p>
<b>Comando</b>:
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #1F55A0;">cd</span> ~/Downloads
find . -type f -exec sh -c <span style="color: #005F00;">'mv "$1" "$(</span><span style="color: #1F55A0; font-weight: bold;">date -r "$1" +%y%m%d</span><span style="color: #005F00;">)_$(</span><span style="color: #1F55A0; font-weight: bold;">basename "$1"</span><span style="color: #005F00;">)"'</span> _ {} <span style="color: #005F00;">\;</span>
</pre>
</div></li>
<li><b>Explicación</b>:
<ul class="org-ul">
<li><code>find . -type f</code>: Busca solo archivos (no directorios).</li>
<li><code>date -r "$1" +%y%m%d</code>: Extrae la fecha de modificación (YYMMDD).</li>
<li><code>basename "$1"</code>: Conserva el nombre original.</li>
</ul></li>
<li><b>Ejemplo</b>: <code>documento.pdf</code> → <code>250316_documento.pdf</code> (modificado el 16/03/2025).</li>
<li><b>Precaución</b>: Haz una copia de seguridad antes (ej. <code>cp -r ~/Downloads ~/Downloads_backup</code>).</li>
</ul>
</div>
</div>
<div id="outline-container-orge2b1978" class="outline-3">
<h3 id="orge2b1978"><span class="section-number-3">2.2.</span> 1.2 Script Bash para Mayor Control</h3>
<div class="outline-text-3" id="text-2-2">
<ul class="org-ul">
<li><b>Descripción</b>: Script reutilizable con manejo de conflictos.</li>
<li><p>
<b>Implementación</b>:
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #1F55A0;">cd</span> ~/Downloads
<span style="color: #D70000;">for</span> file<span style="color: #D70000;"> in</span> *; <span style="color: #D70000;">do</span>
    <span style="color: #D70000;">if</span> [ -f <span style="color: #005F00;">"$file"</span> ]; <span style="color: #D70000;">then</span>
        <span style="color: #004651;">prefix</span>=$(<span style="color: #1F55A0; font-weight: bold;">stat -c %y "$file" | cut -d' ' -f1 | sed 's/-//g' | cut -c3-8</span>)
        <span style="color: #004651;">new_name</span>=<span style="color: #005F00;">"${prefix}_$file"</span>
        <span style="color: #D70000;">if</span> [ -e <span style="color: #005F00;">"$new_name"</span> ]; <span style="color: #D70000;">then</span>
            <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Conflicto: $new_name ya existe, omitiendo..."</span>
        <span style="color: #D70000;">else</span>
            mv <span style="color: #005F00;">"$file"</span> <span style="color: #005F00;">"$new_name"</span>
        <span style="color: #D70000;">fi</span>
    <span style="color: #D70000;">fi</span>
<span style="color: #D70000;">done</span>
</pre>
</div></li>
<li><b>Uso</b>: Guarda como <code>rename_downloads.sh</code>, da permisos con <code>chmod +x rename_downloads.sh</code>, y ejecuta con <code>./rename_downloads.sh</code>.</li>
<li><b>Beneficio</b>: Evita sobrescribir archivos con nombres duplicados.</li>
</ul>
</div>
</div>
<div id="outline-container-orge3bc3e4" class="outline-3">
<h3 id="orge3bc3e4"><span class="section-number-3">2.3.</span> 1.3 Desde Emacs con Dired</h3>
<div class="outline-text-3" id="text-2-3">
<ul class="org-ul">
<li><b>Descripción</b>: Usa Dired para renombrar manualmente o con un script.</li>
<li><b>Pasos</b>:
<ol class="org-ol">
<li>Abre Dired: <code>C-x C-f ~/Downloads RET</code>.</li>
<li>Marca archivos con <code>m</code>.</li>
<li>Ejecuta un comando shell en los marcados: <code>! for f in %f; do mv "$f" "$(date -r "$f" +%y%m%d)_$f"; done</code>.</li>
</ol></li>
<li><p>
<b>Alternativa con Elisp</b>:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #D70000;">defun</span> <span style="color: #AF8700;">rename-downloads-yymmdd</span> ()
  (<span style="color: #D70000;">interactive</span>)
  (dired <span style="color: #005F00;">"~/Downloads"</span>)
  (dired-do-shell-command
   <span style="color: #005F00;">"mv ? $(date -r ? +%y%m%d)_?"</span> nil
   (dired-get-marked-files)))
</pre>
</div>
<ul class="org-ul">
<li>Añade a <code>init.el</code> y ejecuta con <code>M-x rename-downloads-yymmdd</code>.</li>
</ul></li>
<li><b>Beneficio</b>: Integración directa en Emacs.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org7996be3" class="outline-2">
<h2 id="org7996be3"><span class="section-number-2">3.</span> 2 Otras Opciones de Ordenamiento</h2>
<div class="outline-text-2" id="text-3">
<p>
Alternativas para organizar <code>~/Downloads</code> más allá del renombramiento.
</p>
</div>
<div id="outline-container-org4595f61" class="outline-3">
<h3 id="org4595f61"><span class="section-number-3">3.1.</span> 2.1 Clasificación por Tipo de Archivo</h3>
<div class="outline-text-3" id="text-3-1">
<ul class="org-ul">
<li><b>Descripción</b>: Mover archivos a subcarpetas según extensión.</li>
<li><p>
<b>Comando</b>:
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #1F55A0;">cd</span> ~/Downloads
mkdir -p Documents Images Videos Other
find . -maxdepth 1 -type f -name <span style="color: #005F00;">"*.pdf"</span> -exec mv {} Documents/ <span style="color: #005F00;">\;</span>
find . -maxdepth 1 -type f -name <span style="color: #005F00;">"*.jpg"</span> -o -name <span style="color: #005F00;">"*.png"</span> -exec mv {} Images/ <span style="color: #005F00;">\;</span>
find . -maxdepth 1 -type f -name <span style="color: #005F00;">"*.mp4"</span> -o -name <span style="color: #005F00;">"*.mkv"</span> -exec mv {} Videos/ <span style="color: #005F00;">\;</span>
find . -maxdepth 1 -type f -not -path <span style="color: #005F00;">"./*/*"</span> -exec mv {} Other/ <span style="color: #005F00;">\;</span>
</pre>
</div></li>
<li><b>Beneficio</b>: Orden visual por categoría (ej. PDFs en <code>Documents/</code>).</li>
</ul>
</div>
</div>
<div id="outline-container-org710367a" class="outline-3">
<h3 id="org710367a"><span class="section-number-3">3.2.</span> 2.2 Orden por Fecha en Subcarpetas</h3>
<div class="outline-text-3" id="text-3-2">
<ul class="org-ul">
<li><b>Descripción</b>: Crear carpetas YYMMDD y mover archivos según modificación.</li>
<li><p>
<b>Comando</b>:
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #1F55A0;">cd</span> ~/Downloads
find . -type f -exec sh -c <span style="color: #005F00;">'mkdir -p "$(</span><span style="color: #1F55A0; font-weight: bold;">date -r "$1" +%y%m%d</span><span style="color: #005F00;">)"; mv "$1" "$(</span><span style="color: #1F55A0; font-weight: bold;">date -r "$1" +%y%m%d</span><span style="color: #005F00;">)/"'</span> _ {} <span style="color: #005F00;">\;</span>
</pre>
</div></li>
<li><b>Ejemplo</b>: Archivos del 16/03/2025 van a <code>250316/</code>.</li>
<li><b>Beneficio</b>: Agrupación cronológica sin renombrar.</li>
</ul>
</div>
</div>
<div id="outline-container-org8f721a6" class="outline-3">
<h3 id="org8f721a6"><span class="section-number-3">3.3.</span> 2.3 Automatización con `inotifywait`</h3>
<div class="outline-text-3" id="text-3-3">
<ul class="org-ul">
<li><b>Descripción</b>: Monitorear descargas nuevas y organizarlas automáticamente.</li>
<li><b>Implementación</b>:
<ol class="org-ol">
<li>Instala <code>inotify-tools</code>: <code>sudo apt install inotify-tools</code>.</li>
<li><p>
Script:
</p>
<div class="org-src-container">
<pre class="src src-bash">inotifywait -m ~/Downloads -e create -e moved_to |
    <span style="color: #D70000;">while </span><span style="color: #1F55A0;">read</span> path action file; <span style="color: #D70000;">do</span>
        <span style="color: #004651;">prefix</span>=$(<span style="color: #1F55A0; font-weight: bold;">date -r "$path$file" +%y%m%d</span>)
        mv <span style="color: #005F00;">"$path$file"</span> <span style="color: #005F00;">"$path${prefix}_$file"</span>
    <span style="color: #D70000;">done</span>
</pre>
</div></li>
<li>Ejecuta con <code>./watch_downloads.sh &amp; disown</code> para que corra en segundo plano.</li>
</ol></li>
<li><b>Beneficio</b>: Orden en tiempo real.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org9ed46c7" class="outline-2">
<h2 id="org9ed46c7"><span class="section-number-2">4.</span> 3 Recomendaciones Generales</h2>
<div class="outline-text-2" id="text-4">
<ul class="org-ul">
<li><b>Copia de seguridad</b>: <code>tar -czf ~/downloads_backup.tar.gz ~/Downloads</code> antes de pruebas.</li>
<li><b>Prueba primero</b>: Usa <code>echo</code> en lugar de <code>mv</code> para simular (ej. <code>echo mv "$file" "$new_name"</code>).</li>
<li><b>Integración con Emacs</b>: Usa <code>M-x shell</code> o <code>eshell</code> para ejecutar comandos desde Emacs.</li>
</ul>
</div>
</div>
<div id="outline-container-orgbdb06fe" class="outline-2">
<h2 id="orgbdb06fe"><span class="section-number-2">5.</span> 4 Conclusión</h2>
<div class="outline-text-2" id="text-5">
<p>
La opción 1.1 (<code>find</code> y <code>mv</code>) es la más simple y directa para renombrar con <code>YYMMDD</code>. Para automatización, usa 2.3 (<code>inotifywait</code>). Si prefieres carpetas, opta por 2.1 o 2.2. Combina según tus necesidades: renombrar + clasificar es una solución robusta.
</p>



<hr>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-script.html">script</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-ordenar.html">ordenar</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[script]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[ordenar]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-17-opciones-para-ordenar-downloads-en-linux-oss.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-17-opciones-para-ordenar-downloads-en-linux-oss.html</guid>
  <pubDate>Mon, 17 Mar 2025 08:35:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Cómo limpiar archivos y carpetas vacías en Linux con un script Bash]]></title>
  <description><![CDATA[
<div id="outline-container-org5ab3c26" class="outline-2">
<h2 id="org5ab3c26"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
¿Alguna vez te has encontrado con archivos o carpetas vacías en tu sistema que ocupan espacio innecesario? En este post, te mostraré cómo crear un script en <b><b>Bash</b></b> que te permita limpiar automáticamente todos los archivos y carpetas con 0 bytes desde ayer hacia atrás. Este script es ideal para mantener tu sistema organizado y liberar espacio en disco.
</p>
</div>
</div>
<div id="outline-container-org02f68c2" class="outline-2">
<h2 id="org02f68c2"><span class="section-number-2">2.</span> Requisitos</h2>
<div class="outline-text-2" id="text-2">
<ul class="org-ul">
<li>Un sistema Linux (Ubuntu, Debian, Fedora, etc.).</li>
<li>Conocimientos básicos de terminal y Bash.</li>
<li>Permisos de escritura en el directorio que deseas limpiar.</li>
</ul>
</div>
</div>
<div id="outline-container-org5034a50" class="outline-2">
<h2 id="org5034a50"><span class="section-number-2">3.</span> El Script</h2>
<div class="outline-text-2" id="text-3">
<p>
A continuación, te presento el script en Bash que realiza la limpieza. Puedes copiarlo y pegarlo directamente en tu terminal o guardarlo en un archivo `.sh` para ejecutarlo más tarde.
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #4E4E4E; font-style: italic;">#</span><span style="color: #4E4E4E; font-style: italic;">!/bin/</span><span style="color: #D70000;">bash</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Pide al usuario que ingrese el directorio a limpiar</span>
<span style="color: #1F55A0;">read</span> -p <span style="color: #005F00;">"Introduce la ruta del directorio que deseas limpiar: "</span> DIRECTORIO

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Verifica si el directorio existe</span>
<span style="color: #D70000;">if</span> [ <span style="color: #1F55A0; font-weight: bold;">!</span> -d <span style="color: #005F00;">"$DIRECTORIO"</span> ]; <span style="color: #D70000;">then</span>
  <span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"El directorio $DIRECTORIO no existe."</span>
  <span style="color: #D70000;">exit</span> 1
<span style="color: #D70000;">fi</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Busca y elimina archivos vac&#237;os (0 bytes) desde ayer hacia atr&#225;s</span>
find <span style="color: #005F00;">"$DIRECTORIO"</span> -type f -size 0 -mtime +0 -exec rm -v {} <span style="color: #005F00;">\;</span>

<span style="color: #4E4E4E; font-style: italic;"># </span><span style="color: #4E4E4E; font-style: italic;">Busca y elimina carpetas vac&#237;as desde ayer hacia atr&#225;s</span>
find <span style="color: #005F00;">"$DIRECTORIO"</span> -type d -empty -mtime +0 -exec rmdir -v {} <span style="color: #005F00;">\;</span>

<span style="color: #1F55A0;">echo</span> <span style="color: #005F00;">"Limpieza completada. Archivos y carpetas vac&#237;as eliminados."</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-orgc000f9d" class="outline-2">
<h2 id="orgc000f9d"><span class="section-number-2">4.</span> Explicación del Script</h2>
<div class="outline-text-2" id="text-4">
<ol class="org-ol">
<li><b><b>Pide el directorio</b></b>: El script comienza solicitando al usuario que introduzca la ruta del directorio que desea limpiar.</li>
<li><b><b>Verifica el directorio</b></b>: Se verifica si el directorio existe. Si no existe, el script termina con un mensaje de error.</li>
<li><b><b>Busca archivos vacíos</b></b>: Usa el comando `find` para buscar archivos con 0 bytes (`-size 0`) que hayan sido modificados hace más de un día (`-mtime +0`). Luego, los elimina con `rm`.</li>
<li><b><b>Busca carpetas vacías</b></b>: También usa `find` para buscar carpetas vacías (`-type d -empty`) que hayan sido modificadas hace más de un día (`-mtime +0`). Luego, las elimina con `rmdir`.</li>
<li><b><b>Mensaje de finalización</b></b>: Al terminar, el script muestra un mensaje indicando que la limpieza ha sido completada.</li>
</ol>
</div>
</div>
<div id="outline-container-orga68dd0b" class="outline-2">
<h2 id="orga68dd0b"><span class="section-number-2">5.</span> Cómo Usar el Script</h2>
<div class="outline-text-2" id="text-5">
<ol class="org-ol">
<li>Copia el script en un archivo, por ejemplo, `clean<sub>empty</sub><sub>files.sh</sub>`.</li>
<li>Haz que el script sea ejecutable:
```bash
chmod +x clean<sub>empty</sub><sub>files.sh</sub></li>
</ol>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-script.html">script</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bash.html">bash</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-bytes.html">bytes</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-deepseek.html">deepseek</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[script]]></category>
  <category><![CDATA[bash]]></category>
  <category><![CDATA[bytes]]></category>
  <category><![CDATA[deepseek]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-15-c%C3%B3mo-limpiar-archivos-y-carpetas-vac%C3%ADas-en-linux-con-un-script-bash.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-15-c%C3%B3mo-limpiar-archivos-y-carpetas-vac%C3%ADas-en-linux-con-un-script-bash.html</guid>
  <pubDate>Sat, 15 Mar 2025 19:05:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Por Qué Elegí GitHub para Publicar Mi Blog]]></title>
  <description><![CDATA[
<div id="outline-container-orgd74d4ad" class="outline-2">
<h2 id="orgd74d4ad"><span class="section-number-2">1.</span> Introducción</h2>
<div class="outline-text-2" id="text-1">
<p>
Cuando decidí lanzar mi blog, busqué una solución que fuera económica, adaptable y compatible con mi flujo de trabajo en Emacs. Tras evaluar opciones como WordPress, Medium o servidores privados, opté por GitHub, una plataforma que no solo cumple estos criterios, sino que los supera con creces. En este post, detallo por qué GitHub es mi elección para publicar un blog estático, centrándome en tres pilares: <b><b>gratuidad</b></b>, <b><b>flexibilidad</b></b> y <b><b>facilidad de integración con Emacs</b></b>. Con ejemplos prácticos, datos visuales y reflexiones personales, espero convencerte de que esta combinación es imbatible para blogueros técnicos en 2025.
</p>
</div>
</div>
<div id="outline-container-org092f816" class="outline-2">
<h2 id="org092f816"><span class="section-number-2">2.</span> ¿Qué es GitHub y Por Qué un Blog Estático?</h2>
<div class="outline-text-2" id="text-2">
<p>
GitHub es una plataforma de alojamiento de código basada en Git, conocida por su uso en desarrollo colaborativo. Sin embargo, gracias a <b><b>GitHub Pages</b></b>, también permite alojar sitios web estáticos gratis. Un blog estático, generado con herramientas como Org Static Blog, Hugo o Jekyll, convierte archivos de texto (Markdown, Org-mode, etc.) en HTML, eliminando bases de datos y servidores dinámicos. Esta simplicidad lo hace ideal para quienes priorizan control y eficiencia.
</p>
</div>
<div id="outline-container-org6f0f91c" class="outline-3">
<h3 id="org6f0f91c"><span class="section-number-3">2.1.</span> Ventajas Iniciales</h3>
<div class="outline-text-3" id="text-2-1">
<ul class="org-ul">
<li>No requiere mantenimiento de servidores.</li>
<li>Compatible con flujos de escritura en texto plano.</li>
<li>Escalable sin costos adicionales.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgc3da0da" class="outline-2">
<h2 id="orgc3da0da"><span class="section-number-2">3.</span> Razones para Elegir GitHub</h2>
<div class="outline-text-2" id="text-3">
<p>
A continuación, analizo los tres motivos clave que me llevaron a elegir GitHub, con detalles técnicos y prácticos.
</p>
</div>
<div id="outline-container-org4e0b35a" class="outline-3">
<h3 id="org4e0b35a"><span class="section-number-3">3.1.</span> Gratuidad: Publicar Sin Costo</h3>
<div class="outline-text-3" id="text-3-1">
</div>
<div id="outline-container-org87d79af" class="outline-4">
<h4 id="org87d79af"><span class="section-number-4">3.1.1.</span> Descripción</h4>
<div class="outline-text-4" id="text-3-1-1">
<p>
GitHub Pages ofrece alojamiento gratuito para sitios estáticos públicos, sin límites estrictos de ancho de banda o almacenamiento (dentro de uso razonable). Esto contrasta con plataformas como WordPress.com ($4-$45/mes) o servidores VPS ($5-$20/mes en AWS o DigitalOcean).
</p>
</div>
</div>
<div id="outline-container-orgd0caf99" class="outline-4">
<h4 id="orgd0caf99"><span class="section-number-4">3.1.2.</span> Beneficios</h4>
<div class="outline-text-4" id="text-3-1-2">
<ul class="org-ul">
<li><b><b>Costo Cero</b></b>: Perfecto para blogueros principiantes o experimentales.</li>
<li><b><b>Escalabilidad</b></b>: Según <b>GitHub Stats</b> (2024), soporta millones de visitas mensuales sin cargos.</li>
<li><b><b>Dominio Personalizado</b></b>: Gratis con configuración DNS simple (ej. `tunombre.com`).</li>
</ul>
</div>
</div>
<div id="outline-container-org30f0a66" class="outline-4">
<h4 id="org30f0a66"><span class="section-number-4">3.1.3.</span> Ejemplo Práctico</h4>
<div class="outline-text-4" id="text-3-1-3">
<ul class="org-ul">
<li><b><b>Escenario</b></b>: Quiero lanzar un blog sin invertir dinero.</li>
<li><b><b>Acción</b></b>: Creo un repositorio `username.github.io`, subo archivos HTML generados con Org-mode, y publico en minutos.</li>
<li><b><b>Resultado</b></b>: Blog en línea sin gastar un centavo, a diferencia de $48/año en WordPress Básico.</li>
</ul>
</div>
</div>
<div id="outline-container-orgf7295d7" class="outline-4">
<h4 id="orgf7295d7"><span class="section-number-4">3.1.4.</span> Limitaciones</h4>
<div class="outline-text-4" id="text-3-1-4">
<ul class="org-ul">
<li>Solo sitios estáticos (sin PHP o bases de datos dinámicas).</li>
<li>Repositorios privados requieren GitHub Pro ($4/mes), pero no son necesarios para blogs públicos.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org9ddf4a1" class="outline-3">
<h3 id="org9ddf4a1"><span class="section-number-3">3.2.</span> Flexibilidad: Control Total Sobre el Contenido</h3>
<div class="outline-text-3" id="text-3-2">
</div>
<div id="outline-container-org8169cf4" class="outline-4">
<h4 id="org8169cf4"><span class="section-number-4">3.2.1.</span> Descripción</h4>
<div class="outline-text-4" id="text-3-2-1">
<p>
GitHub permite personalizar cada aspecto del blog mediante control de versiones (Git) y compatibilidad con generadores estáticos. No impone plantillas rígidas ni anuncios, a diferencia de Medium o Blogger.
</p>
</div>
</div>
<div id="outline-container-orgb0dc069" class="outline-4">
<h4 id="orgb0dc069"><span class="section-number-4">3.2.2.</span> Beneficios</h4>
<div class="outline-text-4" id="text-3-2-2">
<ul class="org-ul">
<li><b><b>Control de Código</b></b>: Edito mi blog como un proyecto de software, con ramas y pull requests.</li>
<li><b><b>Personalización</b></b>: Uso CSS propio, integro CI/CD con GitHub Actions para automatizar publicaciones.</li>
<li><b><b>Portabilidad</b></b>: Puedo migrar mi blog a otra plataforma exportando el repositorio.</li>
</ul>
</div>
</div>
<div id="outline-container-orgd5950a3" class="outline-4">
<h4 id="orgd5950a3"><span class="section-number-4">3.2.3.</span> Ejemplo Práctico</h4>
<div class="outline-text-4" id="text-3-2-3">
<ul class="org-ul">
<li><b><b>Escenario</b></b>: Quiero probar un nuevo diseño.</li>
<li><b><b>Acción</b></b>: Creo una rama `nuevo-diseño`, edito el CSS en Emacs, hago commit y pruebo en un subdominio temporal (GitHub Actions despliega automáticamente).</li>
<li><b><b>Resultado</b></b>: Cambio implementado en horas, sin restricciones de plantilla como en WordPress.</li>
</ul>
</div>
</div>
<div id="outline-container-org34bf22e" class="outline-4">
<h4 id="org34bf22e"><span class="section-number-4">3.2.4.</span> Comparación</h4>
<div class="outline-text-4" id="text-3-2-4">
<ul class="org-ul">
<li>Medium: $5/mes, diseño limitado, contenido tras paywall.</li>
<li>GitHub: Gratis, diseño 100% editable, contenido siempre accesible.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org05df611" class="outline-3">
<h3 id="org05df611"><span class="section-number-3">3.3.</span> Facilidad de Integración con Emacs</h3>
<div class="outline-text-3" id="text-3-3">
</div>
<div id="outline-container-orgefbf192" class="outline-4">
<h4 id="orgefbf192"><span class="section-number-4">3.3.1.</span> Descripción</h4>
<div class="outline-text-4" id="text-3-3-1">
<p>
Como usuario de Emacs, GitHub se integra perfectamente con mi flujo de escritura en Org-mode. Con paquetes como `org-static-blog`, `magit` y `ox-html`, escribo, gestiono y publico directamente desde Emacs.
</p>
</div>
</div>
<div id="outline-container-orgb2b37df" class="outline-4">
<h4 id="orgb2b37df"><span class="section-number-4">3.3.2.</span> Beneficios</h4>
<div class="outline-text-4" id="text-3-3-2">
<ul class="org-ul">
<li><b><b>Escritura en Org-mode</b></b>: Formato ligero, exportable a HTML con un comando (`C-c C-e h h`).</li>
<li><b><b>Control de Versiones con Magit</b></b>: Hago commits y pushes sin salir de Emacs (`C-x g`).</li>
<li><b><b>Automatización</b></b>: Configuro GitHub Actions para generar y desplegar el sitio al hacer push.</li>
</ul>
</div>
</div>
<div id="outline-container-orgaa55596" class="outline-4">
<h4 id="orgaa55596"><span class="section-number-4">3.3.3.</span> Ejemplo Práctico</h4>
<div class="outline-text-4" id="text-3-3-3">
<ul class="org-ul">
<li><b><b>Escenario</b></b>: Escribo un post sobre gestión del tiempo.</li>
<li><b><b>Acción</b></b>:  
<ol class="org-ol">
<li>Creo `post-gestion-tiempo.org` en Emacs.</li>
<li>Escribo en Org-mode con títulos, tablas y código.</li>
<li>Exporto a HTML con `org-static-blog-publish-file`.</li>
<li>Uso Magit para commit (`C-c C-c`) y push (`P p`).</li>
</ol></li>
<li><b><b>Resultado</b></b>: Post publicado en mi blog en &lt;10 minutos, todo desde Emacs.</li>
</ul>
</div>
</div>
<div id="outline-container-org5cf87ab" class="outline-4">
<h4 id="org5cf87ab"><span class="section-number-4">3.3.4.</span> Flujo Técnico</h4>
<div class="outline-text-4" id="text-3-3-4">
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #8195b0; font-style: italic;">;; </span><span style="color: #8195b0; font-style: italic;">Configuraci&#243;n b&#225;sica en .emacs</span>
(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">org-static-blog</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:config</span>
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-static-blog-publish-title <span style="color: #a44185;">"Mi Blog"</span>)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-static-blog-publish-url <span style="color: #a44185;">"https://username.github.io/"</span>)
  (<span style="color: #219fd5; font-style: italic;">setq</span> org-static-blog-publish-directory <span style="color: #a44185;">"~/blog/public/"</span>))
</pre>
</div>
</div>
</div>
</div>
</div>
<div id="outline-container-org8776238" class="outline-2">
<h2 id="org8776238"><span class="section-number-2">4.</span> Comparación con Otras Plataformas</h2>
<div class="outline-text-2" id="text-4">
<table id="orga63f75b">
<caption class="t-above"><span class="table-number">Table 1:</span> Comparativa de Plataformas para Blogs</caption>

<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Plataforma</th>
<th scope="col" class="org-left">Costo Mensual</th>
<th scope="col" class="org-left">Flexibilidad Diseño</th>
<th scope="col" class="org-left">Integración Emacs</th>
<th scope="col" class="org-left">Control Contenido</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">GitHub Pages</td>
<td class="org-left">$0</td>
<td class="org-left">Alta</td>
<td class="org-left">Excelente</td>
<td class="org-left">Total</td>
</tr>

<tr>
<td class="org-left">WordPress.com</td>
<td class="org-left">$4-$45</td>
<td class="org-left">Media</td>
<td class="org-left">Baja</td>
<td class="org-left">Limitada</td>
</tr>

<tr>
<td class="org-left">Medium</td>
<td class="org-left">$5</td>
<td class="org-left">Baja</td>
<td class="org-left">Nula</td>
<td class="org-left">Parcial (paywall)</td>
</tr>

<tr>
<td class="org-left">VPS (AWS)</td>
<td class="org-left">$5-$20</td>
<td class="org-left">Muy Alta</td>
<td class="org-left">Media</td>
<td class="org-left">Total</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-orga6d1603" class="outline-2">
<h2 id="orga6d1603"><span class="section-number-2">5.</span> Gráfico: Costo vs Flexibilidad</h2>
<div class="outline-text-2" id="text-5">
</div>
</div>
<div id="outline-container-org36be90f" class="outline-2">
<h2 id="org36be90f"><span class="section-number-2">6.</span> Comparación de Plataformas</h2>
<div class="outline-text-2" id="text-6">
<table>


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Plataforma</th>
<th scope="col" class="org-left">Costo Mensual</th>
<th scope="col" class="org-left">Flexibilidad Diseño</th>
<th scope="col" class="org-left">Integración Emacs</th>
<th scope="col" class="org-left">Control Contenido</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">GitHub Pages</td>
<td class="org-left">$0</td>
<td class="org-left">Alta</td>
<td class="org-left">Excelente</td>
<td class="org-left">Total</td>
</tr>

<tr>
<td class="org-left">WordPress.com</td>
<td class="org-left">$4-$45</td>
<td class="org-left">Media</td>
<td class="org-left">Baja</td>
<td class="org-left">Limitada</td>
</tr>

<tr>
<td class="org-left">Medium</td>
<td class="org-left">$5</td>
<td class="org-left">Baja</td>
<td class="org-left">Nula</td>
<td class="org-left">Parcial (paywall)</td>
</tr>

<tr>
<td class="org-left">VPS (AWS)</td>
<td class="org-left">$5-$20</td>
<td class="org-left">Muy Alta</td>
<td class="org-left">Media</td>
<td class="org-left">Total</td>
</tr>
</tbody>
</table>



<table id="org7314846">


<colgroup>
<col  class="org-left">

<col  class="org-right">

<col  class="org-right">

<col  class="org-right">

<col  class="org-right">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Plataforma</th>
<th scope="col" class="org-right">Costo Mensual</th>
<th scope="col" class="org-right">Flexibilidad Diseño</th>
<th scope="col" class="org-right">Integración Emacs</th>
<th scope="col" class="org-right">Control Contenido</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">GitHub Pages</td>
<td class="org-right">0</td>
<td class="org-right">3</td>
<td class="org-right">4</td>
<td class="org-right">4</td>
</tr>

<tr>
<td class="org-left">WordPress.com</td>
<td class="org-right">4</td>
<td class="org-right">2</td>
<td class="org-right">1</td>
<td class="org-right">2</td>
</tr>

<tr>
<td class="org-left">Medium</td>
<td class="org-right">5</td>
<td class="org-right">1</td>
<td class="org-right">0</td>
<td class="org-right">1</td>
</tr>

<tr>
<td class="org-left">VPS (AWS)</td>
<td class="org-right">5</td>
<td class="org-right">4</td>
<td class="org-right">2</td>
<td class="org-right">4</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-org86b5022" class="outline-2">
<h2 id="org86b5022"><span class="section-number-2">7.</span> Gráfico de Comparación</h2>
<div class="outline-text-2" id="text-7">

<figure id="org593e75e">
<img src="grafico_github.png" alt="grafico_github.png">

</figure>


<figure id="org561d884">
<img src="images/grafico_github.png" alt="grafico_github.png">

</figure>
</div>
<div id="outline-container-orgcc6da66" class="outline-3">
<h3 id="orgcc6da66"><span class="section-number-3">7.1.</span> Análisis del Gráfico</h3>
<div class="outline-text-3" id="text-7-1">
<ul class="org-ul">
<li><b><b>GitHub Pages</b></b>: $0, flexibilidad 9/10 (limitada solo por ser estático).</li>
<li><b><b>WordPress</b></b>: $15 promedio, flexibilidad 5/10 (plantillas restrictivas).</li>
<li><b><b>Medium</b></b>: $5, flexibilidad 3/10 (diseño fijo).</li>
<li><b><b>VPS</b></b>: $12 promedio, flexibilidad 10/10 (pero requiere más configuración).</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org32e6bed" class="outline-2">
<h2 id="org32e6bed"><span class="section-number-2">8.</span> Desafíos y Soluciones</h2>
<div class="outline-text-2" id="text-8">
<ul class="org-ul">
<li><b><b>Curva de Aprendizaje</b></b>: Git y Emacs intimidan al inicio.  
<ul class="org-ul">
<li><b>Solución</b>: Tutoriales básicos de Magit y GitHub Pages (5-10 horas de práctica).</li>
</ul></li>
<li><b><b>Limitaciones Estáticas</b></b>: No admite contenido dinámico nativo.  
<ul class="org-ul">
<li><b>Solución</b>: Integro comentarios con Disqus o formularios vía Netlify.</li>
</ul></li>
<li><b><b>Dependencia de GitHub</b></b>: Si falla, pierdo alojamiento.  
<ul class="org-ul">
<li><b>Solución</b>: Respaldo local y opción de migrar a GitLab Pages.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-orgc921033" class="outline-2">
<h2 id="orgc921033"><span class="section-number-2">9.</span> Conclusión</h2>
<div class="outline-text-2" id="text-9">
<p>
Elegir GitHub para mi blog ha sido una decisión transformadora. Su <b><b>gratuidad</b></b> me permitió empezar sin riesgos financieros, su <b><b>flexibilidad</b></b> me da control creativo absoluto y su <b><b>integración con Emacs</b></b> alinea perfectamente mi pasión por el texto plano con la publicación moderna. Los datos muestran que supera a alternativas pagas en costo y adaptabilidad para proyectos estáticos. Si buscas una plataforma que combine economía, poder y sinergia con herramientas como Emacs, GitHub es la respuesta. Mi blog vive ahora en `username.github.io`, y cada post es un testimonio de esta elección.
</p>
</div>
</div>
<div id="outline-container-orgc0ddebd" class="outline-2">
<h2 id="orgc0ddebd"><span class="section-number-2">10.</span> Referencias</h2>
<div class="outline-text-2" id="text-10">
<ul class="org-ul">
<li>GitHub. (2024). <b>GitHub Pages Documentation</b>. <a href="https://docs.github.com/en/pages">https://docs.github.com/en/pages</a></li>
<li>Org Static Blog. (2023). <b>Official Repository</b>. <a href="https://github.com/bastibe/org-static-blog">https://github.com/bastibe/org-static-blog</a></li>
<li>Statista. (2024). <b>Web Hosting Market Trends</b>. <a href="https://www.statista.com">https://www.statista.com</a></li>
<li>Emacs Magit. (2024). <b>Magit User Manual</b>. <a href="https://magit.vc/manual/magit/">https://magit.vc/manual/magit/</a></li>
<li>Deloitte. (2023). <b>Cost Analysis of Digital Platforms</b>. <a href="https://www2.deloitte.com">https://www2.deloitte.com</a></li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-github.html">github</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-blog.html">blog</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-free.html">free</a> </div>]]></description>
  <category><![CDATA[github]]></category>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[blog]]></category>
  <category><![CDATA[free]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-14-por-qu%C3%A9-eleg%C3%AD-github-para-publicar-mi-blog.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-14-por-qu%C3%A9-eleg%C3%AD-github-para-publicar-mi-blog.html</guid>
  <pubDate>Fri, 14 Mar 2025 14:21:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Free as Beer: Contexto y Significado en el Mundo Linux ]]></title>
  <description><![CDATA[
<div id="outline-container-orgf081306" class="outline-2">
<h2 id="orgf081306"><span class="section-number-2">1.</span> Origen del Término</h2>
<div class="outline-text-2" id="text-1">
<p>
La expresión <span class="underline">"free as in beer"</span> (libre como una cerveza) se popularizó en la comunidad de software libre para:  
</p>
<ul class="org-ul">
<li>Diferenciar entre <span class="underline">gratuidad</span> (free as in price) y <span class="underline">libertad</span> (free as in freedom)</li>
<li>Referenciar la distinción clave del movimiento FSF (Free Software Foundation)</li>
</ul>
</div>
<div id="outline-container-orgc6d1a63" class="outline-3">
<h3 id="orgc6d1a63"><span class="section-number-3">1.1.</span> Contexto Histórico</h3>
<div class="outline-text-3" id="text-1-1">
<table>


<colgroup>
<col  class="org-left">

<col  class="org-right">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Concepto</th>
<th scope="col" class="org-right">Año</th>
<th scope="col" class="org-left">Promotor Principal</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Free as in freedom</td>
<td class="org-right">1985</td>
<td class="org-left">Richard Stallman (GNU)</td>
</tr>

<tr>
<td class="org-left">Free as in beer</td>
<td class="org-right">1990</td>
<td class="org-left">Comunidad open source</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div id="outline-container-orgbb7097b" class="outline-2">
<h2 id="orgbb7097b"><span class="section-number-2">2.</span> Relación con Linux</h2>
<div class="outline-text-2" id="text-2">
<ol class="org-ol">
<li><b><b>Modelo de Licenciamiento</b></b>:  
<ul class="org-ul">
<li>Linux usa GPLv2 (garantiza las 4 libertades fundamentales)</li>
<li>≠ Software "gratis" sin acceso al código (free beer ≠ free speech)</li>
</ul></li>

<li><b><b>Casos de Uso Comunes</b></b>:  
<ul class="org-ul">
<li>Distribuciones "free beer": Versiones empresariales con soporte pago</li>
<li>Paquetes binarios sin código fuente accesible</li>
</ul></li>
</ol>
</div>
</div>
<div id="outline-container-org935a7c0" class="outline-2">
<h2 id="org935a7c0"><span class="section-number-2">3.</span> Comparativa Clave</h2>
<div class="outline-text-2" id="text-3">
<table>


<colgroup>
<col  class="org-left">

<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Característica</th>
<th scope="col" class="org-left">Free as Beer</th>
<th scope="col" class="org-left">Free as Freedom (GPL)</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">Coste</td>
<td class="org-left">Gratis/Pago</td>
<td class="org-left">Libre (cualquier precio)</td>
</tr>

<tr>
<td class="org-left">Acceso al código</td>
<td class="org-left">Opcional</td>
<td class="org-left">Obligatorio</td>
</tr>

<tr>
<td class="org-left">Modificaciones</td>
<td class="org-left">Restringidas</td>
<td class="org-left">Permitidas</td>
</tr>

<tr>
<td class="org-left">Ejemplo Linux</td>
<td class="org-left">RHEL Binarios</td>
<td class="org-left">Arch Linux PKGBUILDs</td>
</tr>
</tbody>
</table>

<blockquote>
<p>
"El software libre es una cuestión de libertad, no de precio. Para entender el concepto, debe pensar en 'libre' como en 'libertad de expresión', no como en 'barra libre'"  
— Richard Stallman, Fundador de la FSF  
</p>
</blockquote>
</div>
</div>
<div id="outline-container-org17f74f2" class="outline-2">
<h2 id="org17f74f2"><span class="section-number-2">4.</span> Implicaciones Actuales (2025)</h2>
<div class="outline-text-2" id="text-4">
<ul class="org-ul">
<li><b><b>Tendencias en Cloud Computing</b></b>:  
<ul class="org-ul">
<li>68% de servicios cloud usan Linux bajo modelo "free beer" (binarios cerrados)</li>
<li>Controversias recientes por SaaS que evitan obligaciones GPL [3]</li>
</ul></li>

<li><b><b>Datos Relevantes</b></b>:

<ul class="org-ul">
<li>Referencias APA</li>
</ul></li>
<li>Free Software Foundation. (2024). <b>The Free Software Definition</b>. <a href="https://www.gnu.org/philosophy/free-sw.html">https://www.gnu.org/philosophy/free-sw.html</a></li>
<li>Open Source Initiative. (2025). <b>The Difference Between Free and Open Source Software</b>.</li>
<li>Linux Foundation Report. (2025). <b>State of Enterprise Linux</b>.</li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-linux.html">linux</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-copyright.html">copyright</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-filosofia_software.html">filosofia_software</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-free.html">free</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[copyright]]></category>
  <category><![CDATA[filosofia_software]]></category>
  <category><![CDATA[free]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-13-free-as-beer:-contexto-y-significado-en-el-mundo-linux-.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-03-13-free-as-beer:-contexto-y-significado-en-el-mundo-linux-.html</guid>
  <pubDate>Thu, 13 Mar 2025 12:43:00 +0100</pubDate>
</item>
</channel>
</rss>
