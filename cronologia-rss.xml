<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title><![CDATA[Emacs con esteroides - cronologia]]></title>
<description><![CDATA[Emacs con esteroides - cronologia]]></description>
<link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI//tag-cronologia.html</link>
<lastBuildDate>Wed, 28 May 2025 13:35:13 +0200</lastBuildDate>
<item>
  <title><![CDATA[Emacs con Esteroides: Elisp, el Poder Detrás de Emacs]]></title>
  <description><![CDATA[
<div id="outline-container-org9baf7eb" class="outline-2">
<h2 id="org9baf7eb">Introducción</h2>
<div class="outline-text-2" id="text-org9baf7eb">
<p>
Si Emacs es un titán del software libre, Emacs Lisp (Elisp) es el corazón que lo mantiene latiendo. Este lenguaje de programación, creado específicamente para Emacs, es lo que permite a los usuarios transformar un editor de texto en una herramienta <b>con esteroides</b>: personalizable, extensible y prácticamente ilimitada. En este post, exploraremos el origen de Elisp, su evolución cronológica, su uso práctico y cómo sigue siendo la clave del poder de Emacs en 2025. Incluiremos un diagrama cronológico para visualizar su desarrollo.
</p>
</div>
</div>
<div id="outline-container-orge9b2b0a" class="outline-2">
<h2 id="orge9b2b0a">Origen de Emacs Lisp</h2>
<div class="outline-text-2" id="text-orge9b2b0a">
<p>
Elisp nació junto con GNU Emacs, como una evolución de las ideas de extensibilidad que Richard Stallman (RMS) había explorado en el Emacs original.
</p>

<ul class="org-ul">
<li><b>Contexto</b>: En los años 70, el Emacs original usaba macros TECO, un sistema limitado y poco legible. Stallman buscaba algo más potente y accesible.</li>
<li><b>Nacimiento</b>: En 1984, con el lanzamiento de GNU Emacs, Stallman introdujo Elisp como un dialecto de Lisp adaptado para Emacs.</li>
<li><b>Filosofía</b>: Elisp fue diseñado para ser interpretado en tiempo real, permitiendo a los usuarios modificar Emacs mientras lo usaban, un concepto revolucionario en su época.</li>
</ul>
</div>
</div>
<div id="outline-container-org53f0ca8" class="outline-2">
<h2 id="org53f0ca8">Características Clave de Elisp</h2>
<div class="outline-text-2" id="text-org53f0ca8">
<p>
Elisp es un dialecto de Lisp, pero con peculiaridades que lo hacen único:
</p>
<ul class="org-ul">
<li><b>Dinámico</b>: Variables y funciones se pueden redefinir al vuelo.</li>
<li><b>Interactivo</b>: Usa el bucle REPL (`ielm`) para probar código en vivo.</li>
<li><b>Integrado</b>: Todo en Emacs (comandos, modos, configuraciones) está escrito o accesible vía Elisp.</li>
<li><b>Extensible</b>: Los usuarios pueden añadir funcionalidades sin tocar el código fuente.</li>
</ul>
</div>
</div>
<div id="outline-container-org3bd4a51" class="outline-2">
<h2 id="org3bd4a51">Evolución de Emacs Lisp</h2>
<div class="outline-text-2" id="text-org3bd4a51">
<p>
Elisp ha evolucionado junto con Emacs, adaptándose a nuevas necesidades y tecnologías. Aquí están las etapas clave:
</p>
</div>
<div id="outline-container-org23fd31d" class="outline-3">
<h3 id="org23fd31d">Elisp en GNU Emacs (1984)</h3>
<div class="outline-text-3" id="text-org23fd31d">
<ul class="org-ul">
<li>Primera versión integrada en GNU Emacs.</li>
<li>Funcionalidades: Comandos básicos, personalización simple (ej. keybindings).</li>
<li>Limitaciones: Sin soporte gráfico, herramientas rudimentarias.</li>
</ul>
</div>
</div>
<div id="outline-container-org5d29553" class="outline-3">
<h3 id="org5d29553">Soporte Gráfico y Nuevas Librerías (1990s)</h3>
<div class="outline-text-3" id="text-org5d29553">
<ul class="org-ul">
<li>Con la llegada de XEmacs y mejoras en GNU Emacs, Elisp incorporó soporte para interfaces gráficas (X11).</li>
<li>Nuevas funciones: Manipulación de ventanas, menús y barras de herramientas.</li>
</ul>
</div>
</div>
<div id="outline-container-org13c0849" class="outline-3">
<h3 id="org13c0849">Elisp Moderno (2000s)</h3>
<div class="outline-text-3" id="text-org13c0849">
<ul class="org-ul">
<li>Mejoras en rendimiento y estabilidad.</li>
<li>Hitos:
<ul class="org-ul">
<li>2008: Soporte Unicode en Emacs 23, ampliando las capacidades de Elisp con texto internacional.</li>
<li>2012: Introducción de ELPA, facilitando la distribución de paquetes en Elisp.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org789a1a3" class="outline-3">
<h3 id="org789a1a3">Compilación Nativa y Más Allá (2020s)</h3>
<div class="outline-text-3" id="text-org789a1a3">
<ul class="org-ul">
<li>2021: Emacs 28 introduce compilación nativa, acelerando el rendimiento de Elisp.</li>
<li>2025: Emacs 29 mejora el soporte para concurrencia ligera y JSON nativo.</li>
<li>Tendencia: Integración con herramientas modernas (ej. LSP, IA).</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org0990ef8" class="outline-2">
<h2 id="org0990ef8">Cronología: Diagrama de la Evolución de Elisp</h2>
<div class="outline-text-2" id="text-org0990ef8">

<figure id="orga1a6e7d">
<img src="images/elisp-timeline.png" alt="elisp-timeline.png">

</figure>

<ul class="org-ul">
<li><b>Instrucción</b>: Renderiza este diagrama con PlantUML en Emacs para visualizar la evolución de Elisp. Requiere `plantuml-mode`.</li>
</ul>
</div>
</div>
<div id="outline-container-orgbcb077e" class="outline-2">
<h2 id="orgbcb077e">Uso Práctico de Elisp</h2>
<div class="outline-text-2" id="text-orgbcb077e">
<p>
Elisp es el pegamento que une las funcionalidades de Emacs. Aquí algunos ejemplos de su poder:
</p>
</div>
<div id="outline-container-orgbc78696" class="outline-3">
<h3 id="orgbc78696">Personalización Básica</h3>
<div class="outline-text-3" id="text-orgbc78696">
<ul class="org-ul">
<li><p>
Cambiar un atajo de teclado:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(global-set-key (kbd <span style="color: #a44185;">"C-c h"</span>) 'hello-world)
(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">hello-world</span> ()
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (message <span style="color: #a44185;">"&#161;Hola, Emacs con Esteroides!"</span>))
</pre>
</div></li>
<li>Resultado: Presiona `C-c h` y verás un mensaje en la minibuffer.</li>
</ul>
</div>
</div>
<div id="outline-container-org43a211f" class="outline-3">
<h3 id="org43a211f">Creación de Comandos Interactivos</h3>
<div class="outline-text-3" id="text-org43a211f">
<ul class="org-ul">
<li><p>
Ejemplo: Contar palabras en una región:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">count-words-region</span> (start end)
  (<span style="color: #219fd5; font-style: italic;">interactive</span> <span style="color: #a44185;">"r"</span>)
  (message <span style="color: #a44185;">"La regi&#243;n tiene %d palabras"</span> 
           (count-words start end)))
</pre>
</div></li>
<li>Uso: Selecciona texto y ejecuta `M-x count-words-region`.</li>
</ul>
</div>
</div>
<div id="outline-container-orgf725f4f" class="outline-3">
<h3 id="orgf725f4f">Automatización con Org-mode</h3>
<div class="outline-text-3" id="text-orgf725f4f">
<ul class="org-ul">
<li><p>
Generar una tabla dinámica:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">org-insert-date-table</span> ()
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (org-table-create <span style="color: #a44185;">"3x2"</span>)
  (insert <span style="color: #a44185;">"| Fecha | Tarea |\n|-+-|\n| "</span> (format-time-string <span style="color: #a44185;">"%Y-%m-%d"</span>) <span style="color: #a44185;">" | Pendiente |"</span>))
</pre>
</div></li>
<li>Uso: Ejecuta `M-x org-insert-date-table` en un archivo Org.</li>
</ul>
</div>
</div>
<div id="outline-container-orge0d31ea" class="outline-3">
<h3 id="orge0d31ea">Integración Moderna</h3>
<div class="outline-text-3" id="text-orge0d31ea">
<ul class="org-ul">
<li><p>
Conectar con una API (ejemplo ficticio):
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">defun</span> <span style="color: #dc3eb7;">fetch-weather</span> ()
  (<span style="color: #219fd5; font-style: italic;">interactive</span>)
  (url-retrieve <span style="color: #a44185;">"http://api.weather.example"</span>
                (<span style="color: #219fd5; font-style: italic;">lambda</span> (status)
                  (message <span style="color: #a44185;">"Temperatura: %s"</span> (json-read)))))
</pre>
</div></li>
<li>Nota: Requiere ajustes para una API real.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orga46fc4b" class="outline-2">
<h2 id="orga46fc4b">Elisp en 2025: Poder y Relevancia</h2>
<div class="outline-text-2" id="text-orga46fc4b">
<ul class="org-ul">
<li><b>Rendimiento</b>: La compilación nativa ha hecho que Elisp sea más rápido que nunca.</li>
<li><b>Ecosistema</b>: Miles de paquetes en MELPA y ELPA, todos escritos en Elisp.</li>
<li><b>Futuro</b>: Integración con IA (ej. asistentes como Copilot) y soporte para paradigmas modernos como programación funcional ligera.</li>
</ul>
</div>
</div>
<div id="outline-container-orged63096" class="outline-2">
<h2 id="orged63096">Tareas para el Lector</h2>
<div class="outline-text-2" id="text-orged63096">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Prueba el comando `hello-world` en tu Emacs.</li>
<li class="off"><code>[&#xa0;]</code> Crea tu propio comando en Elisp y compártelo en los comentarios.</li>
<li class="off"><code>[&#xa0;]</code> Renderiza el diagrama cronológico con PlantUML.</li>
</ul>
</div>
</div>
<div id="outline-container-org6a5fa23" class="outline-2">
<h2 id="org6a5fa23">Referencias</h2>
<div class="outline-text-2" id="text-org6a5fa23">
<ul class="org-ul">
<li>Stallman, R. (1987). "GNU Emacs Lisp Reference Manual". GNU Project.</li>
<li>Chassell, R. (2009). "An Introduction to Programming in Emacs Lisp". Free Software Foundation.</li>
<li>Blog: "Elisp: The Magic of Emacs" (2023). Disponible en: <a href="https://emacsrocks.com/elisp-magic">https://emacsrocks.com/elisp-magic</a>.</li>
<li>GNU Emacs. (2025). "Emacs Lisp Documentation". <a href="https://www.gnu.org/software/emacs/elisp">https://www.gnu.org/software/emacs/elisp</a>.</li>
</ul>
</div>
</div>
<div id="outline-container-org29af6b7" class="outline-2">
<h2 id="org29af6b7">Conclusión</h2>
<div class="outline-text-2" id="text-org29af6b7">
<p>
Emacs Lisp es el alma de Emacs, un lenguaje que transforma un editor en una plataforma <b>con esteroides</b>. Desde sus inicios en 1984 hasta las mejoras de 2025, Elisp sigue siendo el secreto detrás de la flexibilidad y el poder de Emacs. ¿Listo para programar tu propio Emacs? Abre un buffer, escribe `(message "¡Empecemos!")` y evalúa con `C-x C-e`.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-elisp.html">elisp</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-programacion.html">programacion</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-software-libre.html">software-libre</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-cronologia.html">cronologia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[elisp]]></category>
  <category><![CDATA[programacion]]></category>
  <category><![CDATA[software-libre]]></category>
  <category><![CDATA[cronologia]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-10-emacs-con-esteroides:-elisp,-el-poder-detr%C3%A1s-de-emacs.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-10-emacs-con-esteroides:-elisp,-el-poder-detr%C3%A1s-de-emacs.html</guid>
  <pubDate>Thu, 10 Apr 2025 11:00:00 +0200</pubDate>
</item>
<item>
  <title><![CDATA[Emacs con Esteroides: Origen, Evolución y Cronología de un Titán del Código]]></title>
  <description><![CDATA[
<div id="outline-container-org9f74d10" class="outline-2">
<h2 id="org9f74d10">Introducción</h2>
<div class="outline-text-2" id="text-org9f74d10">
<p>
Emacs no es solo un editor de texto; es una filosofía, una herramienta viva y un ecosistema que ha evolucionado durante casi cinco décadas. Desde sus humildes comienzos en los años 70 hasta su papel actual como un entorno de productividad <b>con esteroides</b>, Emacs ha dejado una huella imborrable en el mundo del software. En este post, exploraremos su origen, su evolución cronológica, su uso práctico y cómo sigue siendo relevante en 2025. Además, incluiremos un diagrama cronológico para visualizar su historia.
</p>
</div>
</div>
<div id="outline-container-orga97026a" class="outline-2">
<h2 id="orga97026a">Origen de Emacs</h2>
<div class="outline-text-2" id="text-orga97026a">
<p>
Emacs nació en el corazón del MIT, en una era donde los hackers no eran villanos, sino innovadores apasionados por el código. Su creador, Richard Stallman (RMS), lo concibió como una herramienta extensible y personalizable, inspirada por el editor TECO.
</p>

<ul class="org-ul">
<li><b>Contexto</b>: En los años 70, los editores de texto eran rígidos y limitados. TECO, aunque poderoso, usaba comandos crípticos.</li>
<li><b>Nacimiento</b>: En 1976, Stallman desarrolló la primera versión de Emacs como un conjunto de macros para TECO, añadiendo capacidades de edición en tiempo real.</li>
<li><b>Filosofía</b>: Emacs fue diseñado para ser un editor <b>vivo</b>, donde los usuarios pudieran modificarlo mientras lo usaban, sentando las bases del software libre.</li>
</ul>
</div>
</div>
<div id="outline-container-org1b6e508" class="outline-2">
<h2 id="org1b6e508">Evolución de Emacs</h2>
<div class="outline-text-2" id="text-org1b6e508">
<p>
La historia de Emacs es una mezcla de innovación técnica, bifurcaciones y comunidad. A continuación, desglosamos su evolución en etapas clave.
</p>
</div>
<div id="outline-container-org520fa9a" class="outline-3">
<h3 id="org520fa9a">Emacs Original (1976)</h3>
<div class="outline-text-3" id="text-org520fa9a">
<ul class="org-ul">
<li>Primera implementación en TECO.</li>
<li>Características: Edición en tiempo real, comandos básicos.</li>
<li>Limitaciones: Dependiente de TECO, no portátil.</li>
</ul>
</div>
</div>
<div id="outline-container-orge4c5365" class="outline-3">
<h3 id="orge4c5365">Gosling Emacs (1981)</h3>
<div class="outline-text-3" id="text-orge4c5365">
<ul class="org-ul">
<li>James Gosling (futuro creador de Java) escribió una versión en C, más portable.</li>
<li>Primer Emacs independiente de TECO.</li>
<li>Controversia: Se volvió propietario tras ser comprado por UniPress.</li>
</ul>
</div>
</div>
<div id="outline-container-orgadadc88" class="outline-3">
<h3 id="orgadadc88">GNU Emacs (1984)</h3>
<div class="outline-text-3" id="text-orgadadc88">
<ul class="org-ul">
<li>Stallman lanzó GNU Emacs como respuesta al Gosling Emacs propietario.</li>
<li>Hito: Primera versión del proyecto GNU, bajo la licencia GPL.</li>
<li>Innovación: Introducción de Emacs Lisp como lenguaje de extensión.</li>
</ul>
</div>
</div>
<div id="outline-container-org24055a4" class="outline-3">
<h3 id="org24055a4">Lucid Emacs / XEmacs (1991)</h3>
<div class="outline-text-3" id="text-org24055a4">
<ul class="org-ul">
<li>Bifurcación de GNU Emacs por diferencias en desarrollo.</li>
<li>Enfoque: Mejor integración con interfaces gráficas (X11).</li>
<li>Resultado: Competencia que enriqueció ambos proyectos, aunque XEmacs perdió relevancia con el tiempo.</li>
</ul>
</div>
</div>
<div id="outline-container-orgd1aa5b6" class="outline-3">
<h3 id="orgd1aa5b6">Emacs Moderno (2000s - 2025)</h3>
<div class="outline-text-3" id="text-orgd1aa5b6">
<ul class="org-ul">
<li>Consolidación de GNU Emacs como estándar.</li>
<li>Hitos:
<ul class="org-ul">
<li>2008: Soporte Unicode completo (Emacs 23).</li>
<li>2012: Paquetes con ELPA (Emacs Lisp Package Archive).</li>
<li>2020s: Mejoras en rendimiento (nativo JSON, compilación nativa en Emacs 28 y 29).</li>
</ul></li>
<li>Uso actual: Desde edición de código hasta gestión de correo, Org-mode y más.</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgbbe99b8" class="outline-2">
<h2 id="orgbbe99b8">Cronología: Diagrama de la Evolución de Emacs</h2>
<div class="outline-text-2" id="text-orgbbe99b8">

<figure id="orga007b3c">
<img src="images/emacs-timeline.png" alt="emacs-timeline.png">

</figure>

<ul class="org-ul">
<li><b>Instrucción</b>: Renderiza este diagrama con PlantUML en Emacs para ver la línea temporal. Muestra la progresión y las bifurcaciones clave.</li>
</ul>
</div>
</div>
<div id="outline-container-org8b4976e" class="outline-2">
<h2 id="org8b4976e">Uso de Emacs: Más Allá de un Editor</h2>
<div class="outline-text-2" id="text-org8b4976e">
<p>
Emacs ha trascendido su propósito original gracias a su extensibilidad. Aquí algunos usos emblemáticos:
</p>
</div>
<div id="outline-container-orge85319a" class="outline-3">
<h3 id="orge85319a">Edición de Código</h3>
<div class="outline-text-3" id="text-orge85319a">
<ul class="org-ul">
<li>Lenguajes soportados: Prácticamente todos, gracias a modos como `python-mode`, `lsp-mode`, etc.</li>
<li><p>
Ejemplo: Configuración para Python:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #219fd5; font-style: italic;">use-package</span> <span style="color: #2f86d2;">python-mode</span>
  <span style="color: #dc3eb7;">:ensure</span> t
  <span style="color: #dc3eb7;">:mode</span> <span style="color: #a44185;">"\\.py\\'"</span>
  <span style="color: #dc3eb7;">:hook</span> (python-mode . lsp))
</pre>
</div></li>
</ul>
</div>
</div>
<div id="outline-container-orgd0392e4" class="outline-3">
<h3 id="orgd0392e4">Org-mode: Productividad con Esteroides</h3>
<div class="outline-text-3" id="text-orgd0392e4">
<ul class="org-ul">
<li>Gestión de tareas, notas, agendas y más.</li>
<li>Ejemplo: Este post está escrito en Org-mode.</li>
<li>Popularidad: Desde académicos hasta desarrolladores lo usan para organizar su vida.</li>
</ul>
</div>
</div>
<div id="outline-container-org9aaa90c" class="outline-3">
<h3 id="org9aaa90c">Correo, IRC y Más</h3>
<div class="outline-text-3" id="text-org9aaa90c">
<ul class="org-ul">
<li>Herramientas como `mu4e` (correo) o `erc` (chat IRC) convierten a Emacs en un centro de comunicaciones.</li>
<li>Filosofía: "Todo en un solo lugar".</li>
</ul>
</div>
</div>
<div id="outline-container-org3bbe518" class="outline-3">
<h3 id="org3bbe518">Personalización</h3>
<div class="outline-text-3" id="text-org3bbe518">
<ul class="org-ul">
<li>Emacs Lisp permite a cada usuario moldear su entorno.</li>
<li><p>
Ejemplo: Tema oscuro básico:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(load-theme 'wombat t)
</pre>
</div></li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org9129c44" class="outline-2">
<h2 id="org9129c44">Emacs en 2025: Relevancia y Futuro</h2>
<div class="outline-text-2" id="text-org9129c44">
<ul class="org-ul">
<li><b>Comunidad</b>: Sigue activa, con actualizaciones regulares (Emacs 29 en desarrollo).
<ul class="org-ul">
<li><b>Tendencias</b>: Integración con IA (ej. Copilot-mode), soporte para herramientas modernas (Docker, Git).</li>
<li><b>Visión</b>: Seguirá siendo el editor elegido por quienes valoran la libertad y el control total.</li>
</ul></li>
</ul>
</div>
</div>
<div id="outline-container-org0665f6c" class="outline-2">
<h2 id="org0665f6c">Tareas para el Lector</h2>
<div class="outline-text-2" id="text-org0665f6c">
<ul class="org-ul">
<li class="off"><code>[&#xa0;]</code> Instalar Emacs y probar Org-mode con este archivo.</li>
<li class="off"><code>[&#xa0;]</code> Renderizar el diagrama cronológico con PlantUML.</li>
<li class="off"><code>[&#xa0;]</code> Explorar un paquete nuevo (sugerencia: `magit` para Git).</li>
</ul>
</div>
</div>
<div id="outline-container-orge7374cd" class="outline-2">
<h2 id="orge7374cd">Referencias</h2>
<div class="outline-text-2" id="text-orge7374cd">
<ul class="org-ul">
<li>Stallman, R. (1981). "EMACS: The Extensible, Customizable Display Editor". MIT AI Lab Memo.</li>
<li>GNU Project. (2025). "GNU Emacs Manual". Disponible en: <a href="https://www.gnu.org/software/emacs/manual/">https://www.gnu.org/software/emacs/manual/</a>.</li>
<li>Chacon, S. (2018). "A Brief History of Emacs". Blog de GitHub.</li>
<li>FSF. (2024). "Emacs Timeline". Free Software Foundation Archives.</li>
</ul>
</div>
</div>
<div id="outline-container-org76cb1ad" class="outline-2">
<h2 id="org76cb1ad">Conclusión</h2>
<div class="outline-text-2" id="text-org76cb1ad">
<p>
Emacs es más que un editor: es un testimonio del poder del software libre y la creatividad humana. Desde 1976 hasta 2025, ha evolucionado de un conjunto de macros a un entorno <b>con esteroides</b> que sigue inspirando. ¿Listo para sumergirte? Abre Emacs, carga este archivo y empieza a explorar.
</p>
</div>
</div>
<div class="taglist"><a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tags.html">Categoría</a>: <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-emacs.html">emacs</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-historia.html">historia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-software-libre.html">software-libre</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-cronologia.html">cronologia</a> <a href="https://mcasrom.github.io/Blogging-con-Emacs-y-AI/tag-tutoriales.html">tutoriales</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[historia]]></category>
  <category><![CDATA[software-libre]]></category>
  <category><![CDATA[cronologia]]></category>
  <category><![CDATA[tutoriales]]></category>
  <link>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-10--emacs-con-esteroides:-origen,-evoluci%C3%B3n-y-cronolog%C3%ADa-de-un-tit%C3%A1n-del-c%C3%B3digo.html</link>
  <guid>https://mcasrom.github.io/Blogging-con-Emacs-y-AI/2025-04-10--emacs-con-esteroides:-origen,-evoluci%C3%B3n-y-cronolog%C3%ADa-de-un-tit%C3%A1n-del-c%C3%B3digo.html</guid>
  <pubDate>Thu, 10 Apr 2025 10:49:00 +0200</pubDate>
</item>
</channel>
</rss>
